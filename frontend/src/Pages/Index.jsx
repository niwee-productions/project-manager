import HeroHeroShapeImg from '../Assets/img/hero/hero-shape.svg'
import HeroTextShapeImg from '../Assets/img/hero/text-shape.svg'
import LogoLogoWhiteImg from '../Assets/img/logo/logo-white.svg'
import LeadLead_1Img from '../Assets/img/dashboard/lead/lead-1.png'
import LeadLead_2Img from '../Assets/img/dashboard/lead/lead-2.png'
import LeadLead_3Img from '../Assets/img/dashboard/lead/lead-3.png'
import LeadLead_4Img from '../Assets/img/dashboard/lead/lead-4.png'
import LeadLead_5Img from '../Assets/img/dashboard/lead/lead-5.png'
import LeadLead_6Img from '../Assets/img/dashboard/lead/lead-6.png'
import '../Assets/css/bootstrap.min.css'
import '../Assets/css/LineIcons.3.0.css'
import '../Assets/css/animate.css'
import '../Assets/css/tiny-slider.css'
import '../Assets/css/glightbox.min.css'
import '../Assets/scss/main.scss'
import '../Assets/css/bootstrap.min.css'
import '../Assets/css/lineicons.css'
import '../Assets/css/materialdesignicons.min.css'
import '../Assets/css/fullcalendar.css'
import 'bootstrap'
import { tns } from '../../node_modules/tiny-slider/src/tiny-slider'
import GLightbox from 'glightbox'
import 'bootstrap'
import ReactWOW from 'react-wow'
import { Link } from 'react-router-dom'
import React from 'react'
export default class Index extends React.Component {
  constructor(props) {
    super(props)
    this.props = props
  }

  componentDidMount() {
    document.title = 'Home - Outil de gestion de projet'
    new GLightbox({ selector: '.glightbox' })
    function counterUp(t) {
      'use strict'
      this.defaults = {
        duration: 3e3,
        prepend: '',
        append: '%',
        selector: '.countup',
        start: 0,
        end: 100,
        intvalues: !1,
        interval: 100,
      }
      var e = this
      ;(this.upating = !1), (this.intervalID = null), (this.props = {})
      for (var r in this.defaults)
        'undefined' != typeof r &&
          ((e.props[r] = e.defaults[r]),
          t.hasOwnProperty(r) &&
            e.props.hasOwnProperty(r) &&
            (e.props[r] = t[r]))
      ;(this.domelems = document.querySelectorAll(this.props.selector)),
        (this.elems = [])
      var n = {}
      this.domelems.forEach(function (t) {
        n.obj = t
        var r = parseInt(t.getAttribute('cup-start'))
        isNaN(r) ? (n.start = e.props.start) : (n.start = r)
        var p = parseInt(t.getAttribute('cup-end'))
        isNaN(p) ? (n.end = e.props.end) : (n.end = p)
        var a = parseInt(t.getAttribute('cup-duration'))
        isNaN(a) ? (n.duration = e.props.duration) : (n.duration = a)
        var s = t.getAttribute('cup-prepend')
        null == s ? (n.prepend = e.props.prepend) : (n.prepend = s)
        var i = t.getAttribute('cup-append')
        null == i ? (n.append = e.props.append) : (n.append = i)
        var o = t.getAttribute('cup-intval')
        null == o ? (n.intvalues = e.props.intvalues) : (n.intvalues = o),
          (n.step = (n.end - n.start) / (n.duration / e.props.interval)),
          (n.val = n.start),
          e.elems.push(n),
          (n = {})
      })
    }
    ;(counterUp.prototype.start = function () {
      'use strict'
      var t = this
      this.intervalID = setInterval(function () {
        t.updating || t.update()
      }, t.props.interval)
    }),
      (counterUp.prototype.update = function () {
        'use strict'
        this.updating = !0
        var t = !0
        this.elems.forEach(function (e) {
          ;(e.val += e.step),
            e.val < e.end
              ? (1 == e.intvalues
                  ? (e.obj.innerHTML =
                      e.prepend + Math.floor(e.val).toString() + e.append)
                  : (e.obj.innerHTML =
                      e.prepend +
                      (Math.round(100 * e.val) / 100).toString() +
                      e.append),
                (t = !1))
              : (e.obj.innerHTML = e.prepend + e.end.toString() + e.append)
        }),
          1 == t && clearInterval(this.intervalID),
          (this.updating = !1)
      })
    /*
Template Name: CryptoLand - Crypto Currency Landing Page Template.
Author: GrayGrids
*/

    ;(function () {
      //===== Prealoder

      window.onload = function () {
        window.setTimeout(fadeout, 500)
      }

      function fadeout() {
        document.querySelector('.preloader').style.opacity = '0'
        document.querySelector('.preloader').style.display = 'none'
      }

      /*=====================================
    Sticky
    ======================================= */
      window.onscroll = function () {
        var header_navbar = document.querySelector('#accueil.navbar-area')
        var sticky = header_navbar.offsetTop

        var logo = document.querySelector('.navbar-brand img')
        if (window.pageYOffset > sticky) {
          header_navbar.classList.add('sticky')
          logo.src = 'assets/images/logo/logo-alone.svg'
        } else {
          header_navbar.classList.remove('sticky')
          logo.src = 'assets/images/logo/logo-white.svg'
        }

        // show or hide the back-top-top button
        var backToTo = document.querySelector('.scroll-top')
        if (
          document.body.scrollTop > 50 ||
          document.documentElement.scrollTop > 50
        ) {
          backToTo.style.display = 'flex'
        } else {
          backToTo.style.display = 'none'
        }
      }

      // WOW active

      //===== mobile-menu-btn
      let navbarToggler = document.querySelector('.mobile-menu-btn')
      navbarToggler.addEventListener('click', function () {
        navbarToggler.classList.toggle('active')
      })
    })()
    /*!
     * Chart.js v2.9.3
     * https://www.chartjs.org
     * (c) 2019 Chart.js Contributors
     * Released under the MIT License
     */
    !(function (t, e) {
      'object' == typeof exports && 'undefined' != typeof module
        ? (module.exports = e(
            (function () {
              try {
                return require('moment')
              } catch (t) {}
            })()
          ))
        : 'function' == typeof define && define.amd
        ? define(['require'], function (t) {
            return e(
              (function () {
                try {
                  return t('moment')
                } catch (t) {}
              })()
            )
          })
        : ((t = t || self).Chart = e(t.moment))
    })(this, function (t) {
      'use strict'
      t = t && t.hasOwnProperty('default') ? t.default : t
      var e = {
          aliceblue: [240, 248, 255],
          antiquewhite: [250, 235, 215],
          aqua: [0, 255, 255],
          aquamarine: [127, 255, 212],
          azure: [240, 255, 255],
          beige: [245, 245, 220],
          bisque: [255, 228, 196],
          black: [0, 0, 0],
          blanchedalmond: [255, 235, 205],
          blue: [0, 0, 255],
          blueviolet: [138, 43, 226],
          brown: [165, 42, 42],
          burlywood: [222, 184, 135],
          cadetblue: [95, 158, 160],
          chartreuse: [127, 255, 0],
          chocolate: [210, 105, 30],
          coral: [255, 127, 80],
          cornflowerblue: [100, 149, 237],
          cornsilk: [255, 248, 220],
          crimson: [220, 20, 60],
          cyan: [0, 255, 255],
          darkblue: [0, 0, 139],
          darkcyan: [0, 139, 139],
          darkgoldenrod: [184, 134, 11],
          darkgray: [169, 169, 169],
          darkgreen: [0, 100, 0],
          darkgrey: [169, 169, 169],
          darkkhaki: [189, 183, 107],
          darkmagenta: [139, 0, 139],
          darkolivegreen: [85, 107, 47],
          darkorange: [255, 140, 0],
          darkorchid: [153, 50, 204],
          darkred: [139, 0, 0],
          darksalmon: [233, 150, 122],
          darkseagreen: [143, 188, 143],
          darkslateblue: [72, 61, 139],
          darkslategray: [47, 79, 79],
          darkslategrey: [47, 79, 79],
          darkturquoise: [0, 206, 209],
          darkviolet: [148, 0, 211],
          deeppink: [255, 20, 147],
          deepskyblue: [0, 191, 255],
          dimgray: [105, 105, 105],
          dimgrey: [105, 105, 105],
          dodgerblue: [30, 144, 255],
          firebrick: [178, 34, 34],
          floralwhite: [255, 250, 240],
          forestgreen: [34, 139, 34],
          fuchsia: [255, 0, 255],
          gainsboro: [220, 220, 220],
          ghostwhite: [248, 248, 255],
          gold: [255, 215, 0],
          goldenrod: [218, 165, 32],
          gray: [128, 128, 128],
          green: [0, 128, 0],
          greenyellow: [173, 255, 47],
          grey: [128, 128, 128],
          honeydew: [240, 255, 240],
          hotpink: [255, 105, 180],
          indianred: [205, 92, 92],
          indigo: [75, 0, 130],
          ivory: [255, 255, 240],
          khaki: [240, 230, 140],
          lavender: [230, 230, 250],
          lavenderblush: [255, 240, 245],
          lawngreen: [124, 252, 0],
          lemonchiffon: [255, 250, 205],
          lightblue: [173, 216, 230],
          lightcoral: [240, 128, 128],
          lightcyan: [224, 255, 255],
          lightgoldenrodyellow: [250, 250, 210],
          lightgray: [211, 211, 211],
          lightgreen: [144, 238, 144],
          lightgrey: [211, 211, 211],
          lightpink: [255, 182, 193],
          lightsalmon: [255, 160, 122],
          lightseagreen: [32, 178, 170],
          lightskyblue: [135, 206, 250],
          lightslategray: [119, 136, 153],
          lightslategrey: [119, 136, 153],
          lightsteelblue: [176, 196, 222],
          lightyellow: [255, 255, 224],
          lime: [0, 255, 0],
          limegreen: [50, 205, 50],
          linen: [250, 240, 230],
          magenta: [255, 0, 255],
          maroon: [128, 0, 0],
          mediumaquamarine: [102, 205, 170],
          mediumblue: [0, 0, 205],
          mediumorchid: [186, 85, 211],
          mediumpurple: [147, 112, 219],
          mediumseagreen: [60, 179, 113],
          mediumslateblue: [123, 104, 238],
          mediumspringgreen: [0, 250, 154],
          mediumturquoise: [72, 209, 204],
          mediumvioletred: [199, 21, 133],
          midnightblue: [25, 25, 112],
          mintcream: [245, 255, 250],
          mistyrose: [255, 228, 225],
          moccasin: [255, 228, 181],
          navajowhite: [255, 222, 173],
          navy: [0, 0, 128],
          oldlace: [253, 245, 230],
          olive: [128, 128, 0],
          olivedrab: [107, 142, 35],
          orange: [255, 165, 0],
          orangered: [255, 69, 0],
          orchid: [218, 112, 214],
          palegoldenrod: [238, 232, 170],
          palegreen: [152, 251, 152],
          paleturquoise: [175, 238, 238],
          palevioletred: [219, 112, 147],
          papayawhip: [255, 239, 213],
          peachpuff: [255, 218, 185],
          peru: [205, 133, 63],
          pink: [255, 192, 203],
          plum: [221, 160, 221],
          powderblue: [176, 224, 230],
          purple: [128, 0, 128],
          rebeccapurple: [102, 51, 153],
          red: [255, 0, 0],
          rosybrown: [188, 143, 143],
          royalblue: [65, 105, 225],
          saddlebrown: [139, 69, 19],
          salmon: [250, 128, 114],
          sandybrown: [244, 164, 96],
          seagreen: [46, 139, 87],
          seashell: [255, 245, 238],
          sienna: [160, 82, 45],
          silver: [192, 192, 192],
          skyblue: [135, 206, 235],
          slateblue: [106, 90, 205],
          slategray: [112, 128, 144],
          slategrey: [112, 128, 144],
          snow: [255, 250, 250],
          springgreen: [0, 255, 127],
          steelblue: [70, 130, 180],
          tan: [210, 180, 140],
          teal: [0, 128, 128],
          thistle: [216, 191, 216],
          tomato: [255, 99, 71],
          turquoise: [64, 224, 208],
          violet: [238, 130, 238],
          wheat: [245, 222, 179],
          white: [255, 255, 255],
          whitesmoke: [245, 245, 245],
          yellow: [255, 255, 0],
          yellowgreen: [154, 205, 50],
        },
        n = (function (t, e) {
          return t((e = { exports: {} }), e.exports), e.exports
        })(function (t) {
          var n = {}
          for (var i in e) e.hasOwnProperty(i) && (n[e[i]] = i)
          var a = (t.exports = {
            rgb: { channels: 3, labels: 'rgb' },
            hsl: { channels: 3, labels: 'hsl' },
            hsv: { channels: 3, labels: 'hsv' },
            hwb: { channels: 3, labels: 'hwb' },
            cmyk: { channels: 4, labels: 'cmyk' },
            xyz: { channels: 3, labels: 'xyz' },
            lab: { channels: 3, labels: 'lab' },
            lch: { channels: 3, labels: 'lch' },
            hex: { channels: 1, labels: ['hex'] },
            keyword: { channels: 1, labels: ['keyword'] },
            ansi16: { channels: 1, labels: ['ansi16'] },
            ansi256: { channels: 1, labels: ['ansi256'] },
            hcg: { channels: 3, labels: ['h', 'c', 'g'] },
            apple: { channels: 3, labels: ['r16', 'g16', 'b16'] },
            gray: { channels: 1, labels: ['gray'] },
          })
          for (var r in a)
            if (a.hasOwnProperty(r)) {
              if (!('channels' in a[r]))
                throw new Error('missing channels property: ' + r)
              if (!('labels' in a[r]))
                throw new Error('missing channel labels property: ' + r)
              if (a[r].labels.length !== a[r].channels)
                throw new Error('channel and label counts mismatch: ' + r)
              var o = a[r].channels,
                s = a[r].labels
              delete a[r].channels,
                delete a[r].labels,
                Object.defineProperty(a[r], 'channels', { value: o }),
                Object.defineProperty(a[r], 'labels', { value: s })
            }
          ;(a.rgb.hsl = function (t) {
            var e,
              n,
              i = t[0] / 255,
              a = t[1] / 255,
              r = t[2] / 255,
              o = Math.min(i, a, r),
              s = Math.max(i, a, r),
              l = s - o
            return (
              s === o
                ? (e = 0)
                : i === s
                ? (e = (a - r) / l)
                : a === s
                ? (e = 2 + (r - i) / l)
                : r === s && (e = 4 + (i - a) / l),
              (e = Math.min(60 * e, 360)) < 0 && (e += 360),
              (n = (o + s) / 2),
              [
                e,
                100 * (s === o ? 0 : n <= 0.5 ? l / (s + o) : l / (2 - s - o)),
                100 * n,
              ]
            )
          }),
            (a.rgb.hsv = function (t) {
              var e,
                n,
                i,
                a,
                r,
                o = t[0] / 255,
                s = t[1] / 255,
                l = t[2] / 255,
                u = Math.max(o, s, l),
                d = u - Math.min(o, s, l),
                h = function (t) {
                  return (u - t) / 6 / d + 0.5
                }
              return (
                0 === d
                  ? (a = r = 0)
                  : ((r = d / u),
                    (e = h(o)),
                    (n = h(s)),
                    (i = h(l)),
                    o === u
                      ? (a = i - n)
                      : s === u
                      ? (a = 1 / 3 + e - i)
                      : l === u && (a = 2 / 3 + n - e),
                    a < 0 ? (a += 1) : a > 1 && (a -= 1)),
                [360 * a, 100 * r, 100 * u]
              )
            }),
            (a.rgb.hwb = function (t) {
              var e = t[0],
                n = t[1],
                i = t[2]
              return [
                a.rgb.hsl(t)[0],
                100 * ((1 / 255) * Math.min(e, Math.min(n, i))),
                100 * (i = 1 - (1 / 255) * Math.max(e, Math.max(n, i))),
              ]
            }),
            (a.rgb.cmyk = function (t) {
              var e,
                n = t[0] / 255,
                i = t[1] / 255,
                a = t[2] / 255
              return [
                100 *
                  ((1 - n - (e = Math.min(1 - n, 1 - i, 1 - a))) / (1 - e) ||
                    0),
                100 * ((1 - i - e) / (1 - e) || 0),
                100 * ((1 - a - e) / (1 - e) || 0),
                100 * e,
              ]
            }),
            (a.rgb.keyword = function (t) {
              var i = n[t]
              if (i) return i
              var a,
                r,
                o,
                s = 1 / 0
              for (var l in e)
                if (e.hasOwnProperty(l)) {
                  var u = e[l],
                    d =
                      ((r = t),
                      (o = u),
                      Math.pow(r[0] - o[0], 2) +
                        Math.pow(r[1] - o[1], 2) +
                        Math.pow(r[2] - o[2], 2))
                  d < s && ((s = d), (a = l))
                }
              return a
            }),
            (a.keyword.rgb = function (t) {
              return e[t]
            }),
            (a.rgb.xyz = function (t) {
              var e = t[0] / 255,
                n = t[1] / 255,
                i = t[2] / 255
              return [
                100 *
                  (0.4124 *
                    (e =
                      e > 0.04045
                        ? Math.pow((e + 0.055) / 1.055, 2.4)
                        : e / 12.92) +
                    0.3576 *
                      (n =
                        n > 0.04045
                          ? Math.pow((n + 0.055) / 1.055, 2.4)
                          : n / 12.92) +
                    0.1805 *
                      (i =
                        i > 0.04045
                          ? Math.pow((i + 0.055) / 1.055, 2.4)
                          : i / 12.92)),
                100 * (0.2126 * e + 0.7152 * n + 0.0722 * i),
                100 * (0.0193 * e + 0.1192 * n + 0.9505 * i),
              ]
            }),
            (a.rgb.lab = function (t) {
              var e = a.rgb.xyz(t),
                n = e[0],
                i = e[1],
                r = e[2]
              return (
                (i /= 100),
                (r /= 108.883),
                (n =
                  (n /= 95.047) > 0.008856
                    ? Math.pow(n, 1 / 3)
                    : 7.787 * n + 16 / 116),
                [
                  116 *
                    (i =
                      i > 0.008856
                        ? Math.pow(i, 1 / 3)
                        : 7.787 * i + 16 / 116) -
                    16,
                  500 * (n - i),
                  200 *
                    (i -
                      (r =
                        r > 0.008856
                          ? Math.pow(r, 1 / 3)
                          : 7.787 * r + 16 / 116)),
                ]
              )
            }),
            (a.hsl.rgb = function (t) {
              var e,
                n,
                i,
                a,
                r,
                o = t[0] / 360,
                s = t[1] / 100,
                l = t[2] / 100
              if (0 === s) return [(r = 255 * l), r, r]
              ;(e = 2 * l - (n = l < 0.5 ? l * (1 + s) : l + s - l * s)),
                (a = [0, 0, 0])
              for (var u = 0; u < 3; u++)
                (i = o + (1 / 3) * -(u - 1)) < 0 && i++,
                  i > 1 && i--,
                  (r =
                    6 * i < 1
                      ? e + 6 * (n - e) * i
                      : 2 * i < 1
                      ? n
                      : 3 * i < 2
                      ? e + (n - e) * (2 / 3 - i) * 6
                      : e),
                  (a[u] = 255 * r)
              return a
            }),
            (a.hsl.hsv = function (t) {
              var e = t[0],
                n = t[1] / 100,
                i = t[2] / 100,
                a = n,
                r = Math.max(i, 0.01)
              return (
                (n *= (i *= 2) <= 1 ? i : 2 - i),
                (a *= r <= 1 ? r : 2 - r),
                [
                  e,
                  100 * (0 === i ? (2 * a) / (r + a) : (2 * n) / (i + n)),
                  100 * ((i + n) / 2),
                ]
              )
            }),
            (a.hsv.rgb = function (t) {
              var e = t[0] / 60,
                n = t[1] / 100,
                i = t[2] / 100,
                a = Math.floor(e) % 6,
                r = e - Math.floor(e),
                o = 255 * i * (1 - n),
                s = 255 * i * (1 - n * r),
                l = 255 * i * (1 - n * (1 - r))
              switch (((i *= 255), a)) {
                case 0:
                  return [i, l, o]
                case 1:
                  return [s, i, o]
                case 2:
                  return [o, i, l]
                case 3:
                  return [o, s, i]
                case 4:
                  return [l, o, i]
                case 5:
                  return [i, o, s]
              }
            }),
            (a.hsv.hsl = function (t) {
              var e,
                n,
                i,
                a = t[0],
                r = t[1] / 100,
                o = t[2] / 100,
                s = Math.max(o, 0.01)
              return (
                (i = (2 - r) * o),
                (n = r * s),
                [
                  a,
                  100 * (n = (n /= (e = (2 - r) * s) <= 1 ? e : 2 - e) || 0),
                  100 * (i /= 2),
                ]
              )
            }),
            (a.hwb.rgb = function (t) {
              var e,
                n,
                i,
                a,
                r,
                o,
                s,
                l = t[0] / 360,
                u = t[1] / 100,
                d = t[2] / 100,
                h = u + d
              switch (
                (h > 1 && ((u /= h), (d /= h)),
                (i = 6 * l - (e = Math.floor(6 * l))),
                0 != (1 & e) && (i = 1 - i),
                (a = u + i * ((n = 1 - d) - u)),
                e)
              ) {
                default:
                case 6:
                case 0:
                  ;(r = n), (o = a), (s = u)
                  break
                case 1:
                  ;(r = a), (o = n), (s = u)
                  break
                case 2:
                  ;(r = u), (o = n), (s = a)
                  break
                case 3:
                  ;(r = u), (o = a), (s = n)
                  break
                case 4:
                  ;(r = a), (o = u), (s = n)
                  break
                case 5:
                  ;(r = n), (o = u), (s = a)
              }
              return [255 * r, 255 * o, 255 * s]
            }),
            (a.cmyk.rgb = function (t) {
              var e = t[0] / 100,
                n = t[1] / 100,
                i = t[2] / 100,
                a = t[3] / 100
              return [
                255 * (1 - Math.min(1, e * (1 - a) + a)),
                255 * (1 - Math.min(1, n * (1 - a) + a)),
                255 * (1 - Math.min(1, i * (1 - a) + a)),
              ]
            }),
            (a.xyz.rgb = function (t) {
              var e,
                n,
                i,
                a = t[0] / 100,
                r = t[1] / 100,
                o = t[2] / 100
              return (
                (n = -0.9689 * a + 1.8758 * r + 0.0415 * o),
                (i = 0.0557 * a + -0.204 * r + 1.057 * o),
                (e =
                  (e = 3.2406 * a + -1.5372 * r + -0.4986 * o) > 0.0031308
                    ? 1.055 * Math.pow(e, 1 / 2.4) - 0.055
                    : 12.92 * e),
                (n =
                  n > 0.0031308
                    ? 1.055 * Math.pow(n, 1 / 2.4) - 0.055
                    : 12.92 * n),
                (i =
                  i > 0.0031308
                    ? 1.055 * Math.pow(i, 1 / 2.4) - 0.055
                    : 12.92 * i),
                [
                  255 * (e = Math.min(Math.max(0, e), 1)),
                  255 * (n = Math.min(Math.max(0, n), 1)),
                  255 * (i = Math.min(Math.max(0, i), 1)),
                ]
              )
            }),
            (a.xyz.lab = function (t) {
              var e = t[0],
                n = t[1],
                i = t[2]
              return (
                (n /= 100),
                (i /= 108.883),
                (e =
                  (e /= 95.047) > 0.008856
                    ? Math.pow(e, 1 / 3)
                    : 7.787 * e + 16 / 116),
                [
                  116 *
                    (n =
                      n > 0.008856
                        ? Math.pow(n, 1 / 3)
                        : 7.787 * n + 16 / 116) -
                    16,
                  500 * (e - n),
                  200 *
                    (n -
                      (i =
                        i > 0.008856
                          ? Math.pow(i, 1 / 3)
                          : 7.787 * i + 16 / 116)),
                ]
              )
            }),
            (a.lab.xyz = function (t) {
              var e,
                n,
                i,
                a = t[0]
              ;(e = t[1] / 500 + (n = (a + 16) / 116)), (i = n - t[2] / 200)
              var r = Math.pow(n, 3),
                o = Math.pow(e, 3),
                s = Math.pow(i, 3)
              return (
                (n = r > 0.008856 ? r : (n - 16 / 116) / 7.787),
                (e = o > 0.008856 ? o : (e - 16 / 116) / 7.787),
                (i = s > 0.008856 ? s : (i - 16 / 116) / 7.787),
                [(e *= 95.047), (n *= 100), (i *= 108.883)]
              )
            }),
            (a.lab.lch = function (t) {
              var e,
                n = t[0],
                i = t[1],
                a = t[2]
              return (
                (e = (360 * Math.atan2(a, i)) / 2 / Math.PI) < 0 && (e += 360),
                [n, Math.sqrt(i * i + a * a), e]
              )
            }),
            (a.lch.lab = function (t) {
              var e,
                n = t[0],
                i = t[1]
              return (
                (e = (t[2] / 360) * 2 * Math.PI),
                [n, i * Math.cos(e), i * Math.sin(e)]
              )
            }),
            (a.rgb.ansi16 = function (t) {
              var e = t[0],
                n = t[1],
                i = t[2],
                r = 1 in arguments ? arguments[1] : a.rgb.hsv(t)[2]
              if (0 === (r = Math.round(r / 50))) return 30
              var o =
                30 +
                ((Math.round(i / 255) << 2) |
                  (Math.round(n / 255) << 1) |
                  Math.round(e / 255))
              return 2 === r && (o += 60), o
            }),
            (a.hsv.ansi16 = function (t) {
              return a.rgb.ansi16(a.hsv.rgb(t), t[2])
            }),
            (a.rgb.ansi256 = function (t) {
              var e = t[0],
                n = t[1],
                i = t[2]
              return e === n && n === i
                ? e < 8
                  ? 16
                  : e > 248
                  ? 231
                  : Math.round(((e - 8) / 247) * 24) + 232
                : 16 +
                    36 * Math.round((e / 255) * 5) +
                    6 * Math.round((n / 255) * 5) +
                    Math.round((i / 255) * 5)
            }),
            (a.ansi16.rgb = function (t) {
              var e = t % 10
              if (0 === e || 7 === e)
                return t > 50 && (e += 3.5), [(e = (e / 10.5) * 255), e, e]
              var n = 0.5 * (1 + ~~(t > 50))
              return [
                (1 & e) * n * 255,
                ((e >> 1) & 1) * n * 255,
                ((e >> 2) & 1) * n * 255,
              ]
            }),
            (a.ansi256.rgb = function (t) {
              if (t >= 232) {
                var e = 10 * (t - 232) + 8
                return [e, e, e]
              }
              var n
              return (
                (t -= 16),
                [
                  (Math.floor(t / 36) / 5) * 255,
                  (Math.floor((n = t % 36) / 6) / 5) * 255,
                  ((n % 6) / 5) * 255,
                ]
              )
            }),
            (a.rgb.hex = function (t) {
              var e = (
                ((255 & Math.round(t[0])) << 16) +
                ((255 & Math.round(t[1])) << 8) +
                (255 & Math.round(t[2]))
              )
                .toString(16)
                .toUpperCase()
              return '000000'.substring(e.length) + e
            }),
            (a.hex.rgb = function (t) {
              var e = t.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i)
              if (!e) return [0, 0, 0]
              var n = e[0]
              3 === e[0].length &&
                (n = n
                  .split('')
                  .map(function (t) {
                    return t + t
                  })
                  .join(''))
              var i = parseInt(n, 16)
              return [(i >> 16) & 255, (i >> 8) & 255, 255 & i]
            }),
            (a.rgb.hcg = function (t) {
              var e,
                n = t[0] / 255,
                i = t[1] / 255,
                a = t[2] / 255,
                r = Math.max(Math.max(n, i), a),
                o = Math.min(Math.min(n, i), a),
                s = r - o
              return (
                (e =
                  s <= 0
                    ? 0
                    : r === n
                    ? ((i - a) / s) % 6
                    : r === i
                    ? 2 + (a - n) / s
                    : 4 + (n - i) / s + 4),
                (e /= 6),
                [360 * (e %= 1), 100 * s, 100 * (s < 1 ? o / (1 - s) : 0)]
              )
            }),
            (a.hsl.hcg = function (t) {
              var e = t[1] / 100,
                n = t[2] / 100,
                i = 1,
                a = 0
              return (
                (i = n < 0.5 ? 2 * e * n : 2 * e * (1 - n)) < 1 &&
                  (a = (n - 0.5 * i) / (1 - i)),
                [t[0], 100 * i, 100 * a]
              )
            }),
            (a.hsv.hcg = function (t) {
              var e = t[1] / 100,
                n = t[2] / 100,
                i = e * n,
                a = 0
              return i < 1 && (a = (n - i) / (1 - i)), [t[0], 100 * i, 100 * a]
            }),
            (a.hcg.rgb = function (t) {
              var e = t[0] / 360,
                n = t[1] / 100,
                i = t[2] / 100
              if (0 === n) return [255 * i, 255 * i, 255 * i]
              var a,
                r = [0, 0, 0],
                o = (e % 1) * 6,
                s = o % 1,
                l = 1 - s
              switch (Math.floor(o)) {
                case 0:
                  ;(r[0] = 1), (r[1] = s), (r[2] = 0)
                  break
                case 1:
                  ;(r[0] = l), (r[1] = 1), (r[2] = 0)
                  break
                case 2:
                  ;(r[0] = 0), (r[1] = 1), (r[2] = s)
                  break
                case 3:
                  ;(r[0] = 0), (r[1] = l), (r[2] = 1)
                  break
                case 4:
                  ;(r[0] = s), (r[1] = 0), (r[2] = 1)
                  break
                default:
                  ;(r[0] = 1), (r[1] = 0), (r[2] = l)
              }
              return (
                (a = (1 - n) * i),
                [
                  255 * (n * r[0] + a),
                  255 * (n * r[1] + a),
                  255 * (n * r[2] + a),
                ]
              )
            }),
            (a.hcg.hsv = function (t) {
              var e = t[1] / 100,
                n = e + (t[2] / 100) * (1 - e),
                i = 0
              return n > 0 && (i = e / n), [t[0], 100 * i, 100 * n]
            }),
            (a.hcg.hsl = function (t) {
              var e = t[1] / 100,
                n = (t[2] / 100) * (1 - e) + 0.5 * e,
                i = 0
              return (
                n > 0 && n < 0.5
                  ? (i = e / (2 * n))
                  : n >= 0.5 && n < 1 && (i = e / (2 * (1 - n))),
                [t[0], 100 * i, 100 * n]
              )
            }),
            (a.hcg.hwb = function (t) {
              var e = t[1] / 100,
                n = e + (t[2] / 100) * (1 - e)
              return [t[0], 100 * (n - e), 100 * (1 - n)]
            }),
            (a.hwb.hcg = function (t) {
              var e = t[1] / 100,
                n = 1 - t[2] / 100,
                i = n - e,
                a = 0
              return i < 1 && (a = (n - i) / (1 - i)), [t[0], 100 * i, 100 * a]
            }),
            (a.apple.rgb = function (t) {
              return [
                (t[0] / 65535) * 255,
                (t[1] / 65535) * 255,
                (t[2] / 65535) * 255,
              ]
            }),
            (a.rgb.apple = function (t) {
              return [
                (t[0] / 255) * 65535,
                (t[1] / 255) * 65535,
                (t[2] / 255) * 65535,
              ]
            }),
            (a.gray.rgb = function (t) {
              return [
                (t[0] / 100) * 255,
                (t[0] / 100) * 255,
                (t[0] / 100) * 255,
              ]
            }),
            (a.gray.hsl = a.gray.hsv =
              function (t) {
                return [0, 0, t[0]]
              }),
            (a.gray.hwb = function (t) {
              return [0, 100, t[0]]
            }),
            (a.gray.cmyk = function (t) {
              return [0, 0, 0, t[0]]
            }),
            (a.gray.lab = function (t) {
              return [t[0], 0, 0]
            }),
            (a.gray.hex = function (t) {
              var e = 255 & Math.round((t[0] / 100) * 255),
                n = ((e << 16) + (e << 8) + e).toString(16).toUpperCase()
              return '000000'.substring(n.length) + n
            }),
            (a.rgb.gray = function (t) {
              return [((t[0] + t[1] + t[2]) / 3 / 255) * 100]
            })
        })
      n.rgb,
        n.hsl,
        n.hsv,
        n.hwb,
        n.cmyk,
        n.xyz,
        n.lab,
        n.lch,
        n.hex,
        n.keyword,
        n.ansi16,
        n.ansi256,
        n.hcg,
        n.apple,
        n.gray
      function i(t) {
        var e = (function () {
            for (
              var t = {}, e = Object.keys(n), i = e.length, a = 0;
              a < i;
              a++
            )
              t[e[a]] = { distance: -1, parent: null }
            return t
          })(),
          i = [t]
        for (e[t].distance = 0; i.length; )
          for (
            var a = i.pop(), r = Object.keys(n[a]), o = r.length, s = 0;
            s < o;
            s++
          ) {
            var l = r[s],
              u = e[l]
            ;-1 === u.distance &&
              ((u.distance = e[a].distance + 1), (u.parent = a), i.unshift(l))
          }
        return e
      }
      function a(t, e) {
        return function (n) {
          return e(t(n))
        }
      }
      function r(t, e) {
        for (
          var i = [e[t].parent, t], r = n[e[t].parent][t], o = e[t].parent;
          e[o].parent;

        )
          i.unshift(e[o].parent),
            (r = a(n[e[o].parent][o], r)),
            (o = e[o].parent)
        return (r.conversion = i), r
      }
      var o = {}
      Object.keys(n).forEach(function (t) {
        ;(o[t] = {}),
          Object.defineProperty(o[t], 'channels', { value: n[t].channels }),
          Object.defineProperty(o[t], 'labels', { value: n[t].labels })
        var e = (function (t) {
          for (
            var e = i(t), n = {}, a = Object.keys(e), o = a.length, s = 0;
            s < o;
            s++
          ) {
            var l = a[s]
            null !== e[l].parent && (n[l] = r(l, e))
          }
          return n
        })(t)
        Object.keys(e).forEach(function (n) {
          var i = e[n]
          ;(o[t][n] = (function (t) {
            var e = function (e) {
              if (null == e) return e
              arguments.length > 1 &&
                (e = Array.prototype.slice.call(arguments))
              var n = t(e)
              if ('object' == typeof n)
                for (var i = n.length, a = 0; a < i; a++)
                  n[a] = Math.round(n[a])
              return n
            }
            return 'conversion' in t && (e.conversion = t.conversion), e
          })(i)),
            (o[t][n].raw = (function (t) {
              var e = function (e) {
                return null == e
                  ? e
                  : (arguments.length > 1 &&
                      (e = Array.prototype.slice.call(arguments)),
                    t(e))
              }
              return 'conversion' in t && (e.conversion = t.conversion), e
            })(i))
        })
      })
      var s = o,
        l = {
          aliceblue: [240, 248, 255],
          antiquewhite: [250, 235, 215],
          aqua: [0, 255, 255],
          aquamarine: [127, 255, 212],
          azure: [240, 255, 255],
          beige: [245, 245, 220],
          bisque: [255, 228, 196],
          black: [0, 0, 0],
          blanchedalmond: [255, 235, 205],
          blue: [0, 0, 255],
          blueviolet: [138, 43, 226],
          brown: [165, 42, 42],
          burlywood: [222, 184, 135],
          cadetblue: [95, 158, 160],
          chartreuse: [127, 255, 0],
          chocolate: [210, 105, 30],
          coral: [255, 127, 80],
          cornflowerblue: [100, 149, 237],
          cornsilk: [255, 248, 220],
          crimson: [220, 20, 60],
          cyan: [0, 255, 255],
          darkblue: [0, 0, 139],
          darkcyan: [0, 139, 139],
          darkgoldenrod: [184, 134, 11],
          darkgray: [169, 169, 169],
          darkgreen: [0, 100, 0],
          darkgrey: [169, 169, 169],
          darkkhaki: [189, 183, 107],
          darkmagenta: [139, 0, 139],
          darkolivegreen: [85, 107, 47],
          darkorange: [255, 140, 0],
          darkorchid: [153, 50, 204],
          darkred: [139, 0, 0],
          darksalmon: [233, 150, 122],
          darkseagreen: [143, 188, 143],
          darkslateblue: [72, 61, 139],
          darkslategray: [47, 79, 79],
          darkslategrey: [47, 79, 79],
          darkturquoise: [0, 206, 209],
          darkviolet: [148, 0, 211],
          deeppink: [255, 20, 147],
          deepskyblue: [0, 191, 255],
          dimgray: [105, 105, 105],
          dimgrey: [105, 105, 105],
          dodgerblue: [30, 144, 255],
          firebrick: [178, 34, 34],
          floralwhite: [255, 250, 240],
          forestgreen: [34, 139, 34],
          fuchsia: [255, 0, 255],
          gainsboro: [220, 220, 220],
          ghostwhite: [248, 248, 255],
          gold: [255, 215, 0],
          goldenrod: [218, 165, 32],
          gray: [128, 128, 128],
          green: [0, 128, 0],
          greenyellow: [173, 255, 47],
          grey: [128, 128, 128],
          honeydew: [240, 255, 240],
          hotpink: [255, 105, 180],
          indianred: [205, 92, 92],
          indigo: [75, 0, 130],
          ivory: [255, 255, 240],
          khaki: [240, 230, 140],
          lavender: [230, 230, 250],
          lavenderblush: [255, 240, 245],
          lawngreen: [124, 252, 0],
          lemonchiffon: [255, 250, 205],
          lightblue: [173, 216, 230],
          lightcoral: [240, 128, 128],
          lightcyan: [224, 255, 255],
          lightgoldenrodyellow: [250, 250, 210],
          lightgray: [211, 211, 211],
          lightgreen: [144, 238, 144],
          lightgrey: [211, 211, 211],
          lightpink: [255, 182, 193],
          lightsalmon: [255, 160, 122],
          lightseagreen: [32, 178, 170],
          lightskyblue: [135, 206, 250],
          lightslategray: [119, 136, 153],
          lightslategrey: [119, 136, 153],
          lightsteelblue: [176, 196, 222],
          lightyellow: [255, 255, 224],
          lime: [0, 255, 0],
          limegreen: [50, 205, 50],
          linen: [250, 240, 230],
          magenta: [255, 0, 255],
          maroon: [128, 0, 0],
          mediumaquamarine: [102, 205, 170],
          mediumblue: [0, 0, 205],
          mediumorchid: [186, 85, 211],
          mediumpurple: [147, 112, 219],
          mediumseagreen: [60, 179, 113],
          mediumslateblue: [123, 104, 238],
          mediumspringgreen: [0, 250, 154],
          mediumturquoise: [72, 209, 204],
          mediumvioletred: [199, 21, 133],
          midnightblue: [25, 25, 112],
          mintcream: [245, 255, 250],
          mistyrose: [255, 228, 225],
          moccasin: [255, 228, 181],
          navajowhite: [255, 222, 173],
          navy: [0, 0, 128],
          oldlace: [253, 245, 230],
          olive: [128, 128, 0],
          olivedrab: [107, 142, 35],
          orange: [255, 165, 0],
          orangered: [255, 69, 0],
          orchid: [218, 112, 214],
          palegoldenrod: [238, 232, 170],
          palegreen: [152, 251, 152],
          paleturquoise: [175, 238, 238],
          palevioletred: [219, 112, 147],
          papayawhip: [255, 239, 213],
          peachpuff: [255, 218, 185],
          peru: [205, 133, 63],
          pink: [255, 192, 203],
          plum: [221, 160, 221],
          powderblue: [176, 224, 230],
          purple: [128, 0, 128],
          rebeccapurple: [102, 51, 153],
          red: [255, 0, 0],
          rosybrown: [188, 143, 143],
          royalblue: [65, 105, 225],
          saddlebrown: [139, 69, 19],
          salmon: [250, 128, 114],
          sandybrown: [244, 164, 96],
          seagreen: [46, 139, 87],
          seashell: [255, 245, 238],
          sienna: [160, 82, 45],
          silver: [192, 192, 192],
          skyblue: [135, 206, 235],
          slateblue: [106, 90, 205],
          slategray: [112, 128, 144],
          slategrey: [112, 128, 144],
          snow: [255, 250, 250],
          springgreen: [0, 255, 127],
          steelblue: [70, 130, 180],
          tan: [210, 180, 140],
          teal: [0, 128, 128],
          thistle: [216, 191, 216],
          tomato: [255, 99, 71],
          turquoise: [64, 224, 208],
          violet: [238, 130, 238],
          wheat: [245, 222, 179],
          white: [255, 255, 255],
          whitesmoke: [245, 245, 245],
          yellow: [255, 255, 0],
          yellowgreen: [154, 205, 50],
        },
        u = {
          getRgba: d,
          getHsla: h,
          getRgb: function (t) {
            var e = d(t)
            return e && e.slice(0, 3)
          },
          getHsl: function (t) {
            var e = h(t)
            return e && e.slice(0, 3)
          },
          getHwb: c,
          getAlpha: function (t) {
            var e = d(t)
            if (e) return e[3]
            if ((e = h(t))) return e[3]
            if ((e = c(t))) return e[3]
          },
          hexString: function (t, e) {
            e = void 0 !== e && 3 === t.length ? e : t[3]
            return (
              '#' +
              v(t[0]) +
              v(t[1]) +
              v(t[2]) +
              (e >= 0 && e < 1 ? v(Math.round(255 * e)) : '')
            )
          },
          rgbString: function (t, e) {
            if (e < 1 || (t[3] && t[3] < 1)) return f(t, e)
            return 'rgb(' + t[0] + ', ' + t[1] + ', ' + t[2] + ')'
          },
          rgbaString: f,
          percentString: function (t, e) {
            if (e < 1 || (t[3] && t[3] < 1)) return g(t, e)
            var n = Math.round((t[0] / 255) * 100),
              i = Math.round((t[1] / 255) * 100),
              a = Math.round((t[2] / 255) * 100)
            return 'rgb(' + n + '%, ' + i + '%, ' + a + '%)'
          },
          percentaString: g,
          hslString: function (t, e) {
            if (e < 1 || (t[3] && t[3] < 1)) return p(t, e)
            return 'hsl(' + t[0] + ', ' + t[1] + '%, ' + t[2] + '%)'
          },
          hslaString: p,
          hwbString: function (t, e) {
            void 0 === e && (e = void 0 !== t[3] ? t[3] : 1)
            return (
              'hwb(' +
              t[0] +
              ', ' +
              t[1] +
              '%, ' +
              t[2] +
              '%' +
              (void 0 !== e && 1 !== e ? ', ' + e : '') +
              ')'
            )
          },
          keyword: function (t) {
            return b[t.slice(0, 3)]
          },
        }
      function d(t) {
        if (t) {
          var e = [0, 0, 0],
            n = 1,
            i = t.match(/^#([a-fA-F0-9]{3,4})$/i),
            a = ''
          if (i) {
            a = (i = i[1])[3]
            for (var r = 0; r < e.length; r++) e[r] = parseInt(i[r] + i[r], 16)
            a && (n = Math.round((parseInt(a + a, 16) / 255) * 100) / 100)
          } else if ((i = t.match(/^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i))) {
            ;(a = i[2]), (i = i[1])
            for (r = 0; r < e.length; r++)
              e[r] = parseInt(i.slice(2 * r, 2 * r + 2), 16)
            a && (n = Math.round((parseInt(a, 16) / 255) * 100) / 100)
          } else if (
            (i = t.match(
              /^rgba?\(\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/i
            ))
          ) {
            for (r = 0; r < e.length; r++) e[r] = parseInt(i[r + 1])
            n = parseFloat(i[4])
          } else if (
            (i = t.match(
              /^rgba?\(\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/i
            ))
          ) {
            for (r = 0; r < e.length; r++)
              e[r] = Math.round(2.55 * parseFloat(i[r + 1]))
            n = parseFloat(i[4])
          } else if ((i = t.match(/(\w+)/))) {
            if ('transparent' == i[1]) return [0, 0, 0, 0]
            if (!(e = l[i[1]])) return
          }
          for (r = 0; r < e.length; r++) e[r] = m(e[r], 0, 255)
          return (n = n || 0 == n ? m(n, 0, 1) : 1), (e[3] = n), e
        }
      }
      function h(t) {
        if (t) {
          var e = t.match(
            /^hsla?\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/
          )
          if (e) {
            var n = parseFloat(e[4])
            return [
              m(parseInt(e[1]), 0, 360),
              m(parseFloat(e[2]), 0, 100),
              m(parseFloat(e[3]), 0, 100),
              m(isNaN(n) ? 1 : n, 0, 1),
            ]
          }
        }
      }
      function c(t) {
        if (t) {
          var e = t.match(
            /^hwb\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/
          )
          if (e) {
            var n = parseFloat(e[4])
            return [
              m(parseInt(e[1]), 0, 360),
              m(parseFloat(e[2]), 0, 100),
              m(parseFloat(e[3]), 0, 100),
              m(isNaN(n) ? 1 : n, 0, 1),
            ]
          }
        }
      }
      function f(t, e) {
        return (
          void 0 === e && (e = void 0 !== t[3] ? t[3] : 1),
          'rgba(' + t[0] + ', ' + t[1] + ', ' + t[2] + ', ' + e + ')'
        )
      }
      function g(t, e) {
        return (
          'rgba(' +
          Math.round((t[0] / 255) * 100) +
          '%, ' +
          Math.round((t[1] / 255) * 100) +
          '%, ' +
          Math.round((t[2] / 255) * 100) +
          '%, ' +
          (e || t[3] || 1) +
          ')'
        )
      }
      function p(t, e) {
        return (
          void 0 === e && (e = void 0 !== t[3] ? t[3] : 1),
          'hsla(' + t[0] + ', ' + t[1] + '%, ' + t[2] + '%, ' + e + ')'
        )
      }
      function m(t, e, n) {
        return Math.min(Math.max(e, t), n)
      }
      function v(t) {
        var e = t.toString(16).toUpperCase()
        return e.length < 2 ? '0' + e : e
      }
      var b = {}
      for (var x in l) b[l[x]] = x
      var y = function (t) {
        return t instanceof y
          ? t
          : this instanceof y
          ? ((this.valid = !1),
            (this.values = {
              rgb: [0, 0, 0],
              hsl: [0, 0, 0],
              hsv: [0, 0, 0],
              hwb: [0, 0, 0],
              cmyk: [0, 0, 0, 0],
              alpha: 1,
            }),
            void ('string' == typeof t
              ? (e = u.getRgba(t))
                ? this.setValues('rgb', e)
                : (e = u.getHsla(t))
                ? this.setValues('hsl', e)
                : (e = u.getHwb(t)) && this.setValues('hwb', e)
              : 'object' == typeof t &&
                (void 0 !== (e = t).r || void 0 !== e.red
                  ? this.setValues('rgb', e)
                  : void 0 !== e.l || void 0 !== e.lightness
                  ? this.setValues('hsl', e)
                  : void 0 !== e.v || void 0 !== e.value
                  ? this.setValues('hsv', e)
                  : void 0 !== e.w || void 0 !== e.whiteness
                  ? this.setValues('hwb', e)
                  : (void 0 === e.c && void 0 === e.cyan) ||
                    this.setValues('cmyk', e))))
          : new y(t)
        var e
      }
      ;(y.prototype = {
        isValid: function () {
          return this.valid
        },
        rgb: function () {
          return this.setSpace('rgb', arguments)
        },
        hsl: function () {
          return this.setSpace('hsl', arguments)
        },
        hsv: function () {
          return this.setSpace('hsv', arguments)
        },
        hwb: function () {
          return this.setSpace('hwb', arguments)
        },
        cmyk: function () {
          return this.setSpace('cmyk', arguments)
        },
        rgbArray: function () {
          return this.values.rgb
        },
        hslArray: function () {
          return this.values.hsl
        },
        hsvArray: function () {
          return this.values.hsv
        },
        hwbArray: function () {
          var t = this.values
          return 1 !== t.alpha ? t.hwb.concat([t.alpha]) : t.hwb
        },
        cmykArray: function () {
          return this.values.cmyk
        },
        rgbaArray: function () {
          var t = this.values
          return t.rgb.concat([t.alpha])
        },
        hslaArray: function () {
          var t = this.values
          return t.hsl.concat([t.alpha])
        },
        alpha: function (t) {
          return void 0 === t
            ? this.values.alpha
            : (this.setValues('alpha', t), this)
        },
        red: function (t) {
          return this.setChannel('rgb', 0, t)
        },
        green: function (t) {
          return this.setChannel('rgb', 1, t)
        },
        blue: function (t) {
          return this.setChannel('rgb', 2, t)
        },
        hue: function (t) {
          return (
            t && (t = (t %= 360) < 0 ? 360 + t : t),
            this.setChannel('hsl', 0, t)
          )
        },
        saturation: function (t) {
          return this.setChannel('hsl', 1, t)
        },
        lightness: function (t) {
          return this.setChannel('hsl', 2, t)
        },
        saturationv: function (t) {
          return this.setChannel('hsv', 1, t)
        },
        whiteness: function (t) {
          return this.setChannel('hwb', 1, t)
        },
        blackness: function (t) {
          return this.setChannel('hwb', 2, t)
        },
        value: function (t) {
          return this.setChannel('hsv', 2, t)
        },
        cyan: function (t) {
          return this.setChannel('cmyk', 0, t)
        },
        magenta: function (t) {
          return this.setChannel('cmyk', 1, t)
        },
        yellow: function (t) {
          return this.setChannel('cmyk', 2, t)
        },
        black: function (t) {
          return this.setChannel('cmyk', 3, t)
        },
        hexString: function () {
          return u.hexString(this.values.rgb)
        },
        rgbString: function () {
          return u.rgbString(this.values.rgb, this.values.alpha)
        },
        rgbaString: function () {
          return u.rgbaString(this.values.rgb, this.values.alpha)
        },
        percentString: function () {
          return u.percentString(this.values.rgb, this.values.alpha)
        },
        hslString: function () {
          return u.hslString(this.values.hsl, this.values.alpha)
        },
        hslaString: function () {
          return u.hslaString(this.values.hsl, this.values.alpha)
        },
        hwbString: function () {
          return u.hwbString(this.values.hwb, this.values.alpha)
        },
        keyword: function () {
          return u.keyword(this.values.rgb, this.values.alpha)
        },
        rgbNumber: function () {
          var t = this.values.rgb
          return (t[0] << 16) | (t[1] << 8) | t[2]
        },
        luminosity: function () {
          for (var t = this.values.rgb, e = [], n = 0; n < t.length; n++) {
            var i = t[n] / 255
            e[n] = i <= 0.03928 ? i / 12.92 : Math.pow((i + 0.055) / 1.055, 2.4)
          }
          return 0.2126 * e[0] + 0.7152 * e[1] + 0.0722 * e[2]
        },
        contrast: function (t) {
          var e = this.luminosity(),
            n = t.luminosity()
          return e > n ? (e + 0.05) / (n + 0.05) : (n + 0.05) / (e + 0.05)
        },
        level: function (t) {
          var e = this.contrast(t)
          return e >= 7.1 ? 'AAA' : e >= 4.5 ? 'AA' : ''
        },
        dark: function () {
          var t = this.values.rgb
          return (299 * t[0] + 587 * t[1] + 114 * t[2]) / 1e3 < 128
        },
        light: function () {
          return !this.dark()
        },
        negate: function () {
          for (var t = [], e = 0; e < 3; e++) t[e] = 255 - this.values.rgb[e]
          return this.setValues('rgb', t), this
        },
        lighten: function (t) {
          var e = this.values.hsl
          return (e[2] += e[2] * t), this.setValues('hsl', e), this
        },
        darken: function (t) {
          var e = this.values.hsl
          return (e[2] -= e[2] * t), this.setValues('hsl', e), this
        },
        saturate: function (t) {
          var e = this.values.hsl
          return (e[1] += e[1] * t), this.setValues('hsl', e), this
        },
        desaturate: function (t) {
          var e = this.values.hsl
          return (e[1] -= e[1] * t), this.setValues('hsl', e), this
        },
        whiten: function (t) {
          var e = this.values.hwb
          return (e[1] += e[1] * t), this.setValues('hwb', e), this
        },
        blacken: function (t) {
          var e = this.values.hwb
          return (e[2] += e[2] * t), this.setValues('hwb', e), this
        },
        greyscale: function () {
          var t = this.values.rgb,
            e = 0.3 * t[0] + 0.59 * t[1] + 0.11 * t[2]
          return this.setValues('rgb', [e, e, e]), this
        },
        clearer: function (t) {
          var e = this.values.alpha
          return this.setValues('alpha', e - e * t), this
        },
        opaquer: function (t) {
          var e = this.values.alpha
          return this.setValues('alpha', e + e * t), this
        },
        rotate: function (t) {
          var e = this.values.hsl,
            n = (e[0] + t) % 360
          return (e[0] = n < 0 ? 360 + n : n), this.setValues('hsl', e), this
        },
        mix: function (t, e) {
          var n = t,
            i = void 0 === e ? 0.5 : e,
            a = 2 * i - 1,
            r = this.alpha() - n.alpha(),
            o = ((a * r == -1 ? a : (a + r) / (1 + a * r)) + 1) / 2,
            s = 1 - o
          return this.rgb(
            o * this.red() + s * n.red(),
            o * this.green() + s * n.green(),
            o * this.blue() + s * n.blue()
          ).alpha(this.alpha() * i + n.alpha() * (1 - i))
        },
        toJSON: function () {
          return this.rgb()
        },
        clone: function () {
          var t,
            e,
            n = new y(),
            i = this.values,
            a = n.values
          for (var r in i)
            i.hasOwnProperty(r) &&
              ((t = i[r]),
              '[object Array]' === (e = {}.toString.call(t))
                ? (a[r] = t.slice(0))
                : '[object Number]' === e
                ? (a[r] = t)
                : console.error('unexpected color value:', t))
          return n
        },
      }),
        (y.prototype.spaces = {
          rgb: ['red', 'green', 'blue'],
          hsl: ['hue', 'saturation', 'lightness'],
          hsv: ['hue', 'saturation', 'value'],
          hwb: ['hue', 'whiteness', 'blackness'],
          cmyk: ['cyan', 'magenta', 'yellow', 'black'],
        }),
        (y.prototype.maxes = {
          rgb: [255, 255, 255],
          hsl: [360, 100, 100],
          hsv: [360, 100, 100],
          hwb: [360, 100, 100],
          cmyk: [100, 100, 100, 100],
        }),
        (y.prototype.getValues = function (t) {
          for (var e = this.values, n = {}, i = 0; i < t.length; i++)
            n[t.charAt(i)] = e[t][i]
          return 1 !== e.alpha && (n.a = e.alpha), n
        }),
        (y.prototype.setValues = function (t, e) {
          var n,
            i,
            a = this.values,
            r = this.spaces,
            o = this.maxes,
            l = 1
          if (((this.valid = !0), 'alpha' === t)) l = e
          else if (e.length) (a[t] = e.slice(0, t.length)), (l = e[t.length])
          else if (void 0 !== e[t.charAt(0)]) {
            for (n = 0; n < t.length; n++) a[t][n] = e[t.charAt(n)]
            l = e.a
          } else if (void 0 !== e[r[t][0]]) {
            var u = r[t]
            for (n = 0; n < t.length; n++) a[t][n] = e[u[n]]
            l = e.alpha
          }
          if (
            ((a.alpha = Math.max(0, Math.min(1, void 0 === l ? a.alpha : l))),
            'alpha' === t)
          )
            return !1
          for (n = 0; n < t.length; n++)
            (i = Math.max(0, Math.min(o[t][n], a[t][n]))),
              (a[t][n] = Math.round(i))
          for (var d in r) d !== t && (a[d] = s[t][d](a[t]))
          return !0
        }),
        (y.prototype.setSpace = function (t, e) {
          var n = e[0]
          return void 0 === n
            ? this.getValues(t)
            : ('number' == typeof n && (n = Array.prototype.slice.call(e)),
              this.setValues(t, n),
              this)
        }),
        (y.prototype.setChannel = function (t, e, n) {
          var i = this.values[t]
          return void 0 === n
            ? i[e]
            : n === i[e]
            ? this
            : ((i[e] = n), this.setValues(t, i), this)
        }),
        'undefined' != typeof window && (window.Color = y)
      var _,
        k = y,
        w = {
          noop: function () {},
          uid:
            ((_ = 0),
            function () {
              return _++
            }),
          isNullOrUndef: function (t) {
            return null == t
          },
          isArray: function (t) {
            if (Array.isArray && Array.isArray(t)) return !0
            var e = Object.prototype.toString.call(t)
            return '[object' === e.substr(0, 7) && 'Array]' === e.substr(-6)
          },
          isObject: function (t) {
            return (
              null !== t &&
              '[object Object]' === Object.prototype.toString.call(t)
            )
          },
          isFinite: function (t) {
            return ('number' == typeof t || t instanceof Number) && isFinite(t)
          },
          valueOrDefault: function (t, e) {
            return void 0 === t ? e : t
          },
          valueAtIndexOrDefault: function (t, e, n) {
            return w.valueOrDefault(w.isArray(t) ? t[e] : t, n)
          },
          callback: function (t, e, n) {
            if (t && 'function' == typeof t.call) return t.apply(n, e)
          },
          each: function (t, e, n, i) {
            var a, r, o
            if (w.isArray(t))
              if (((r = t.length), i))
                for (a = r - 1; a >= 0; a--) e.call(n, t[a], a)
              else for (a = 0; a < r; a++) e.call(n, t[a], a)
            else if (w.isObject(t))
              for (r = (o = Object.keys(t)).length, a = 0; a < r; a++)
                e.call(n, t[o[a]], o[a])
          },
          arrayEquals: function (t, e) {
            var n, i, a, r
            if (!t || !e || t.length !== e.length) return !1
            for (n = 0, i = t.length; n < i; ++n)
              if (
                ((a = t[n]),
                (r = e[n]),
                a instanceof Array && r instanceof Array)
              ) {
                if (!w.arrayEquals(a, r)) return !1
              } else if (a !== r) return !1
            return !0
          },
          clone: function (t) {
            if (w.isArray(t)) return t.map(w.clone)
            if (w.isObject(t)) {
              for (
                var e = {}, n = Object.keys(t), i = n.length, a = 0;
                a < i;
                ++a
              )
                e[n[a]] = w.clone(t[n[a]])
              return e
            }
            return t
          },
          _merger: function (t, e, n, i) {
            var a = e[t],
              r = n[t]
            w.isObject(a) && w.isObject(r)
              ? w.merge(a, r, i)
              : (e[t] = w.clone(r))
          },
          _mergerIf: function (t, e, n) {
            var i = e[t],
              a = n[t]
            w.isObject(i) && w.isObject(a)
              ? w.mergeIf(i, a)
              : e.hasOwnProperty(t) || (e[t] = w.clone(a))
          },
          merge: function (t, e, n) {
            var i,
              a,
              r,
              o,
              s,
              l = w.isArray(e) ? e : [e],
              u = l.length
            if (!w.isObject(t)) return t
            for (i = (n = n || {}).merger || w._merger, a = 0; a < u; ++a)
              if (((e = l[a]), w.isObject(e)))
                for (s = 0, o = (r = Object.keys(e)).length; s < o; ++s)
                  i(r[s], t, e, n)
            return t
          },
          mergeIf: function (t, e) {
            return w.merge(t, e, { merger: w._mergerIf })
          },
          extend:
            Object.assign ||
            function (t) {
              return w.merge(t, [].slice.call(arguments, 1), {
                merger: function (t, e, n) {
                  e[t] = n[t]
                },
              })
            },
          inherits: function (t) {
            var e = this,
              n =
                t && t.hasOwnProperty('constructor')
                  ? t.constructor
                  : function () {
                      return e.apply(this, arguments)
                    },
              i = function () {
                this.constructor = n
              }
            return (
              (i.prototype = e.prototype),
              (n.prototype = new i()),
              (n.extend = w.inherits),
              t && w.extend(n.prototype, t),
              (n.__super__ = e.prototype),
              n
            )
          },
          _deprecated: function (t, e, n, i) {
            void 0 !== e &&
              console.warn(
                t +
                  ': "' +
                  n +
                  '" is deprecated. Please use "' +
                  i +
                  '" instead'
              )
          },
        },
        M = w
      ;(w.callCallback = w.callback),
        (w.indexOf = function (t, e, n) {
          return Array.prototype.indexOf.call(t, e, n)
        }),
        (w.getValueOrDefault = w.valueOrDefault),
        (w.getValueAtIndexOrDefault = w.valueAtIndexOrDefault)
      var S = {
          linear: function (t) {
            return t
          },
          easeInQuad: function (t) {
            return t * t
          },
          easeOutQuad: function (t) {
            return -t * (t - 2)
          },
          easeInOutQuad: function (t) {
            return (t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1)
          },
          easeInCubic: function (t) {
            return t * t * t
          },
          easeOutCubic: function (t) {
            return (t -= 1) * t * t + 1
          },
          easeInOutCubic: function (t) {
            return (t /= 0.5) < 1
              ? 0.5 * t * t * t
              : 0.5 * ((t -= 2) * t * t + 2)
          },
          easeInQuart: function (t) {
            return t * t * t * t
          },
          easeOutQuart: function (t) {
            return -((t -= 1) * t * t * t - 1)
          },
          easeInOutQuart: function (t) {
            return (t /= 0.5) < 1
              ? 0.5 * t * t * t * t
              : -0.5 * ((t -= 2) * t * t * t - 2)
          },
          easeInQuint: function (t) {
            return t * t * t * t * t
          },
          easeOutQuint: function (t) {
            return (t -= 1) * t * t * t * t + 1
          },
          easeInOutQuint: function (t) {
            return (t /= 0.5) < 1
              ? 0.5 * t * t * t * t * t
              : 0.5 * ((t -= 2) * t * t * t * t + 2)
          },
          easeInSine: function (t) {
            return 1 - Math.cos(t * (Math.PI / 2))
          },
          easeOutSine: function (t) {
            return Math.sin(t * (Math.PI / 2))
          },
          easeInOutSine: function (t) {
            return -0.5 * (Math.cos(Math.PI * t) - 1)
          },
          easeInExpo: function (t) {
            return 0 === t ? 0 : Math.pow(2, 10 * (t - 1))
          },
          easeOutExpo: function (t) {
            return 1 === t ? 1 : 1 - Math.pow(2, -10 * t)
          },
          easeInOutExpo: function (t) {
            return 0 === t
              ? 0
              : 1 === t
              ? 1
              : (t /= 0.5) < 1
              ? 0.5 * Math.pow(2, 10 * (t - 1))
              : 0.5 * (2 - Math.pow(2, -10 * --t))
          },
          easeInCirc: function (t) {
            return t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1)
          },
          easeOutCirc: function (t) {
            return Math.sqrt(1 - (t -= 1) * t)
          },
          easeInOutCirc: function (t) {
            return (t /= 0.5) < 1
              ? -0.5 * (Math.sqrt(1 - t * t) - 1)
              : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1)
          },
          easeInElastic: function (t) {
            var e = 1.70158,
              n = 0,
              i = 1
            return 0 === t
              ? 0
              : 1 === t
              ? 1
              : (n || (n = 0.3),
                i < 1
                  ? ((i = 1), (e = n / 4))
                  : (e = (n / (2 * Math.PI)) * Math.asin(1 / i)),
                -i *
                  Math.pow(2, 10 * (t -= 1)) *
                  Math.sin(((t - e) * (2 * Math.PI)) / n))
          },
          easeOutElastic: function (t) {
            var e = 1.70158,
              n = 0,
              i = 1
            return 0 === t
              ? 0
              : 1 === t
              ? 1
              : (n || (n = 0.3),
                i < 1
                  ? ((i = 1), (e = n / 4))
                  : (e = (n / (2 * Math.PI)) * Math.asin(1 / i)),
                i *
                  Math.pow(2, -10 * t) *
                  Math.sin(((t - e) * (2 * Math.PI)) / n) +
                  1)
          },
          easeInOutElastic: function (t) {
            var e = 1.70158,
              n = 0,
              i = 1
            return 0 === t
              ? 0
              : 2 == (t /= 0.5)
              ? 1
              : (n || (n = 0.45),
                i < 1
                  ? ((i = 1), (e = n / 4))
                  : (e = (n / (2 * Math.PI)) * Math.asin(1 / i)),
                t < 1
                  ? i *
                    Math.pow(2, 10 * (t -= 1)) *
                    Math.sin(((t - e) * (2 * Math.PI)) / n) *
                    -0.5
                  : i *
                      Math.pow(2, -10 * (t -= 1)) *
                      Math.sin(((t - e) * (2 * Math.PI)) / n) *
                      0.5 +
                    1)
          },
          easeInBack: function (t) {
            var e = 1.70158
            return t * t * ((e + 1) * t - e)
          },
          easeOutBack: function (t) {
            var e = 1.70158
            return (t -= 1) * t * ((e + 1) * t + e) + 1
          },
          easeInOutBack: function (t) {
            var e = 1.70158
            return (t /= 0.5) < 1
              ? t * t * ((1 + (e *= 1.525)) * t - e) * 0.5
              : 0.5 * ((t -= 2) * t * ((1 + (e *= 1.525)) * t + e) + 2)
          },
          easeInBounce: function (t) {
            return 1 - S.easeOutBounce(1 - t)
          },
          easeOutBounce: function (t) {
            return t < 1 / 2.75
              ? 7.5625 * t * t
              : t < 2 / 2.75
              ? 7.5625 * (t -= 1.5 / 2.75) * t + 0.75
              : t < 2.5 / 2.75
              ? 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375
              : 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375
          },
          easeInOutBounce: function (t) {
            return t < 0.5
              ? 0.5 * S.easeInBounce(2 * t)
              : 0.5 * S.easeOutBounce(2 * t - 1) + 0.5
          },
        },
        C = { effects: S }
      M.easingEffects = S
      var P = Math.PI,
        A = P / 180,
        D = 2 * P,
        T = P / 2,
        I = P / 4,
        F = (2 * P) / 3,
        L = {
          clear: function (t) {
            t.ctx.clearRect(0, 0, t.width, t.height)
          },
          roundedRect: function (t, e, n, i, a, r) {
            if (r) {
              var o = Math.min(r, a / 2, i / 2),
                s = e + o,
                l = n + o,
                u = e + i - o,
                d = n + a - o
              t.moveTo(e, l),
                s < u && l < d
                  ? (t.arc(s, l, o, -P, -T),
                    t.arc(u, l, o, -T, 0),
                    t.arc(u, d, o, 0, T),
                    t.arc(s, d, o, T, P))
                  : s < u
                  ? (t.moveTo(s, n),
                    t.arc(u, l, o, -T, T),
                    t.arc(s, l, o, T, P + T))
                  : l < d
                  ? (t.arc(s, l, o, -P, 0), t.arc(s, d, o, 0, P))
                  : t.arc(s, l, o, -P, P),
                t.closePath(),
                t.moveTo(e, n)
            } else t.rect(e, n, i, a)
          },
          drawPoint: function (t, e, n, i, a, r) {
            var o,
              s,
              l,
              u,
              d,
              h = (r || 0) * A
            if (
              e &&
              'object' == typeof e &&
              ('[object HTMLImageElement]' === (o = e.toString()) ||
                '[object HTMLCanvasElement]' === o)
            )
              return (
                t.save(),
                t.translate(i, a),
                t.rotate(h),
                t.drawImage(e, -e.width / 2, -e.height / 2, e.width, e.height),
                void t.restore()
              )
            if (!(isNaN(n) || n <= 0)) {
              switch ((t.beginPath(), e)) {
                default:
                  t.arc(i, a, n, 0, D), t.closePath()
                  break
                case 'triangle':
                  t.moveTo(i + Math.sin(h) * n, a - Math.cos(h) * n),
                    (h += F),
                    t.lineTo(i + Math.sin(h) * n, a - Math.cos(h) * n),
                    (h += F),
                    t.lineTo(i + Math.sin(h) * n, a - Math.cos(h) * n),
                    t.closePath()
                  break
                case 'rectRounded':
                  ;(u = n - (d = 0.516 * n)),
                    (s = Math.cos(h + I) * u),
                    (l = Math.sin(h + I) * u),
                    t.arc(i - s, a - l, d, h - P, h - T),
                    t.arc(i + l, a - s, d, h - T, h),
                    t.arc(i + s, a + l, d, h, h + T),
                    t.arc(i - l, a + s, d, h + T, h + P),
                    t.closePath()
                  break
                case 'rect':
                  if (!r) {
                    ;(u = Math.SQRT1_2 * n), t.rect(i - u, a - u, 2 * u, 2 * u)
                    break
                  }
                  h += I
                case 'rectRot':
                  ;(s = Math.cos(h) * n),
                    (l = Math.sin(h) * n),
                    t.moveTo(i - s, a - l),
                    t.lineTo(i + l, a - s),
                    t.lineTo(i + s, a + l),
                    t.lineTo(i - l, a + s),
                    t.closePath()
                  break
                case 'crossRot':
                  h += I
                case 'cross':
                  ;(s = Math.cos(h) * n),
                    (l = Math.sin(h) * n),
                    t.moveTo(i - s, a - l),
                    t.lineTo(i + s, a + l),
                    t.moveTo(i + l, a - s),
                    t.lineTo(i - l, a + s)
                  break
                case 'star':
                  ;(s = Math.cos(h) * n),
                    (l = Math.sin(h) * n),
                    t.moveTo(i - s, a - l),
                    t.lineTo(i + s, a + l),
                    t.moveTo(i + l, a - s),
                    t.lineTo(i - l, a + s),
                    (h += I),
                    (s = Math.cos(h) * n),
                    (l = Math.sin(h) * n),
                    t.moveTo(i - s, a - l),
                    t.lineTo(i + s, a + l),
                    t.moveTo(i + l, a - s),
                    t.lineTo(i - l, a + s)
                  break
                case 'line':
                  ;(s = Math.cos(h) * n),
                    (l = Math.sin(h) * n),
                    t.moveTo(i - s, a - l),
                    t.lineTo(i + s, a + l)
                  break
                case 'dash':
                  t.moveTo(i, a),
                    t.lineTo(i + Math.cos(h) * n, a + Math.sin(h) * n)
              }
              t.fill(), t.stroke()
            }
          },
          _isPointInArea: function (t, e) {
            return (
              t.x > e.left - 1e-6 &&
              t.x < e.right + 1e-6 &&
              t.y > e.top - 1e-6 &&
              t.y < e.bottom + 1e-6
            )
          },
          clipArea: function (t, e) {
            t.save(),
              t.beginPath(),
              t.rect(e.left, e.top, e.right - e.left, e.bottom - e.top),
              t.clip()
          },
          unclipArea: function (t) {
            t.restore()
          },
          lineTo: function (t, e, n, i) {
            var a = n.steppedLine
            if (a) {
              if ('middle' === a) {
                var r = (e.x + n.x) / 2
                t.lineTo(r, i ? n.y : e.y), t.lineTo(r, i ? e.y : n.y)
              } else
                ('after' === a && !i) || ('after' !== a && i)
                  ? t.lineTo(e.x, n.y)
                  : t.lineTo(n.x, e.y)
              t.lineTo(n.x, n.y)
            } else
              n.tension
                ? t.bezierCurveTo(
                    i ? e.controlPointPreviousX : e.controlPointNextX,
                    i ? e.controlPointPreviousY : e.controlPointNextY,
                    i ? n.controlPointNextX : n.controlPointPreviousX,
                    i ? n.controlPointNextY : n.controlPointPreviousY,
                    n.x,
                    n.y
                  )
                : t.lineTo(n.x, n.y)
          },
        },
        O = L
      ;(M.clear = L.clear),
        (M.drawRoundedRectangle = function (t) {
          t.beginPath(), L.roundedRect.apply(L, arguments)
        })
      var R = {
        _set: function (t, e) {
          return M.merge(this[t] || (this[t] = {}), e)
        },
      }
      R._set('global', {
        defaultColor: 'rgba(0,0,0,0.1)',
        defaultFontColor: '#666',
        defaultFontFamily: "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",
        defaultFontSize: 12,
        defaultFontStyle: 'normal',
        defaultLineHeight: 1.2,
        showLines: !0,
      })
      var z = R,
        N = M.valueOrDefault
      var B = {
          toLineHeight: function (t, e) {
            var n = ('' + t).match(/^(normal|(\d+(?:\.\d+)?)(px|em|%)?)$/)
            if (!n || 'normal' === n[1]) return 1.2 * e
            switch (((t = +n[2]), n[3])) {
              case 'px':
                return t
              case '%':
                t /= 100
            }
            return e * t
          },
          toPadding: function (t) {
            var e, n, i, a
            return (
              M.isObject(t)
                ? ((e = +t.top || 0),
                  (n = +t.right || 0),
                  (i = +t.bottom || 0),
                  (a = +t.left || 0))
                : (e = n = i = a = +t || 0),
              {
                top: e,
                right: n,
                bottom: i,
                left: a,
                height: e + i,
                width: a + n,
              }
            )
          },
          _parseFont: function (t) {
            var e = z.global,
              n = N(t.fontSize, e.defaultFontSize),
              i = {
                family: N(t.fontFamily, e.defaultFontFamily),
                lineHeight: M.options.toLineHeight(
                  N(t.lineHeight, e.defaultLineHeight),
                  n
                ),
                size: n,
                style: N(t.fontStyle, e.defaultFontStyle),
                weight: null,
                string: '',
              }
            return (
              (i.string = (function (t) {
                return !t ||
                  M.isNullOrUndef(t.size) ||
                  M.isNullOrUndef(t.family)
                  ? null
                  : (t.style ? t.style + ' ' : '') +
                      (t.weight ? t.weight + ' ' : '') +
                      t.size +
                      'px ' +
                      t.family
              })(i)),
              i
            )
          },
          resolve: function (t, e, n, i) {
            var a,
              r,
              o,
              s = !0
            for (a = 0, r = t.length; a < r; ++a)
              if (
                void 0 !== (o = t[a]) &&
                (void 0 !== e &&
                  'function' == typeof o &&
                  ((o = o(e)), (s = !1)),
                void 0 !== n && M.isArray(o) && ((o = o[n]), (s = !1)),
                void 0 !== o)
              )
                return i && !s && (i.cacheable = !1), o
          },
        },
        E = {
          _factorize: function (t) {
            var e,
              n = [],
              i = Math.sqrt(t)
            for (e = 1; e < i; e++) t % e == 0 && (n.push(e), n.push(t / e))
            return (
              i === (0 | i) && n.push(i),
              n
                .sort(function (t, e) {
                  return t - e
                })
                .pop(),
              n
            )
          },
          log10:
            Math.log10 ||
            function (t) {
              var e = Math.log(t) * Math.LOG10E,
                n = Math.round(e)
              return t === Math.pow(10, n) ? n : e
            },
        },
        W = E
      M.log10 = E.log10
      var V = M,
        H = C,
        j = O,
        q = B,
        U = W,
        Y = {
          getRtlAdapter: function (t, e, n) {
            return t
              ? (function (t, e) {
                  return {
                    x: function (n) {
                      return t + t + e - n
                    },
                    setWidth: function (t) {
                      e = t
                    },
                    textAlign: function (t) {
                      return 'center' === t
                        ? t
                        : 'right' === t
                        ? 'left'
                        : 'right'
                    },
                    xPlus: function (t, e) {
                      return t - e
                    },
                    leftForLtr: function (t, e) {
                      return t - e
                    },
                  }
                })(e, n)
              : {
                  x: function (t) {
                    return t
                  },
                  setWidth: function (t) {},
                  textAlign: function (t) {
                    return t
                  },
                  xPlus: function (t, e) {
                    return t + e
                  },
                  leftForLtr: function (t, e) {
                    return t
                  },
                }
          },
          overrideTextDirection: function (t, e) {
            var n, i
            ;('ltr' !== e && 'rtl' !== e) ||
              ((i = [
                (n = t.canvas.style).getPropertyValue('direction'),
                n.getPropertyPriority('direction'),
              ]),
              n.setProperty('direction', e, 'important'),
              (t.prevTextDirection = i))
          },
          restoreTextDirection: function (t) {
            var e = t.prevTextDirection
            void 0 !== e &&
              (delete t.prevTextDirection,
              t.canvas.style.setProperty('direction', e[0], e[1]))
          },
        }
      ;(V.easing = H),
        (V.canvas = j),
        (V.options = q),
        (V.math = U),
        (V.rtl = Y)
      var G = function (t) {
        V.extend(this, t), this.initialize.apply(this, arguments)
      }
      V.extend(G.prototype, {
        _type: void 0,
        initialize: function () {
          this.hidden = !1
        },
        pivot: function () {
          var t = this
          return (
            t._view || (t._view = V.extend({}, t._model)), (t._start = {}), t
          )
        },
        transition: function (t) {
          var e = this,
            n = e._model,
            i = e._start,
            a = e._view
          return n && 1 !== t
            ? (a || (a = e._view = {}),
              i || (i = e._start = {}),
              (function (t, e, n, i) {
                var a,
                  r,
                  o,
                  s,
                  l,
                  u,
                  d,
                  h,
                  c,
                  f = Object.keys(n)
                for (a = 0, r = f.length; a < r; ++a)
                  if (
                    ((u = n[(o = f[a])]),
                    e.hasOwnProperty(o) || (e[o] = u),
                    (s = e[o]) !== u && '_' !== o[0])
                  ) {
                    if (
                      (t.hasOwnProperty(o) || (t[o] = s),
                      (d = typeof u) === typeof (l = t[o]))
                    )
                      if ('string' === d) {
                        if ((h = k(l)).valid && (c = k(u)).valid) {
                          e[o] = c.mix(h, i).rgbString()
                          continue
                        }
                      } else if (V.isFinite(l) && V.isFinite(u)) {
                        e[o] = l + (u - l) * i
                        continue
                      }
                    e[o] = u
                  }
              })(i, a, n, t),
              e)
            : ((e._view = V.extend({}, n)), (e._start = null), e)
        },
        tooltipPosition: function () {
          return { x: this._model.x, y: this._model.y }
        },
        hasValue: function () {
          return V.isNumber(this._model.x) && V.isNumber(this._model.y)
        },
      }),
        (G.extend = V.inherits)
      var X = G,
        K = X.extend({
          chart: null,
          currentStep: 0,
          numSteps: 60,
          easing: '',
          render: null,
          onAnimationProgress: null,
          onAnimationComplete: null,
        }),
        Z = K
      Object.defineProperty(K.prototype, 'animationObject', {
        get: function () {
          return this
        },
      }),
        Object.defineProperty(K.prototype, 'chartInstance', {
          get: function () {
            return this.chart
          },
          set: function (t) {
            this.chart = t
          },
        }),
        z._set('global', {
          animation: {
            duration: 1e3,
            easing: 'easeOutQuart',
            onProgress: V.noop,
            onComplete: V.noop,
          },
        })
      var $ = {
          animations: [],
          request: null,
          addAnimation: function (t, e, n, i) {
            var a,
              r,
              o = this.animations
            for (
              e.chart = t,
                e.startTime = Date.now(),
                e.duration = n,
                i || (t.animating = !0),
                a = 0,
                r = o.length;
              a < r;
              ++a
            )
              if (o[a].chart === t) return void (o[a] = e)
            o.push(e), 1 === o.length && this.requestAnimationFrame()
          },
          cancelAnimation: function (t) {
            var e = V.findIndex(this.animations, function (e) {
              return e.chart === t
            })
            ;-1 !== e && (this.animations.splice(e, 1), (t.animating = !1))
          },
          requestAnimationFrame: function () {
            var t = this
            null === t.request &&
              (t.request = V.requestAnimFrame.call(window, function () {
                ;(t.request = null), t.startDigest()
              }))
          },
          startDigest: function () {
            this.advance(),
              this.animations.length > 0 && this.requestAnimationFrame()
          },
          advance: function () {
            for (var t, e, n, i, a = this.animations, r = 0; r < a.length; )
              (e = (t = a[r]).chart),
                (n = t.numSteps),
                (i =
                  Math.floor(((Date.now() - t.startTime) / t.duration) * n) +
                  1),
                (t.currentStep = Math.min(i, n)),
                V.callback(t.render, [e, t], e),
                V.callback(t.onAnimationProgress, [t], e),
                t.currentStep >= n
                  ? (V.callback(t.onAnimationComplete, [t], e),
                    (e.animating = !1),
                    a.splice(r, 1))
                  : ++r
          },
        },
        J = V.options.resolve,
        Q = ['push', 'pop', 'shift', 'splice', 'unshift']
      function tt(t, e) {
        var n = t._chartjs
        if (n) {
          var i = n.listeners,
            a = i.indexOf(e)
          ;-1 !== a && i.splice(a, 1),
            i.length > 0 ||
              (Q.forEach(function (e) {
                delete t[e]
              }),
              delete t._chartjs)
        }
      }
      var et = function (t, e) {
        this.initialize(t, e)
      }
      V.extend(et.prototype, {
        datasetElementType: null,
        dataElementType: null,
        _datasetElementOptions: [
          'backgroundColor',
          'borderCapStyle',
          'borderColor',
          'borderDash',
          'borderDashOffset',
          'borderJoinStyle',
          'borderWidth',
        ],
        _dataElementOptions: [
          'backgroundColor',
          'borderColor',
          'borderWidth',
          'pointStyle',
        ],
        initialize: function (t, e) {
          var n = this
          ;(n.chart = t),
            (n.index = e),
            n.linkScales(),
            n.addElements(),
            (n._type = n.getMeta().type)
        },
        updateIndex: function (t) {
          this.index = t
        },
        linkScales: function () {
          var t = this.getMeta(),
            e = this.chart,
            n = e.scales,
            i = this.getDataset(),
            a = e.options.scales
          ;(null !== t.xAxisID && t.xAxisID in n && !i.xAxisID) ||
            (t.xAxisID = i.xAxisID || a.xAxes[0].id),
            (null !== t.yAxisID && t.yAxisID in n && !i.yAxisID) ||
              (t.yAxisID = i.yAxisID || a.yAxes[0].id)
        },
        getDataset: function () {
          return this.chart.data.datasets[this.index]
        },
        getMeta: function () {
          return this.chart.getDatasetMeta(this.index)
        },
        getScaleForId: function (t) {
          return this.chart.scales[t]
        },
        _getValueScaleId: function () {
          return this.getMeta().yAxisID
        },
        _getIndexScaleId: function () {
          return this.getMeta().xAxisID
        },
        _getValueScale: function () {
          return this.getScaleForId(this._getValueScaleId())
        },
        _getIndexScale: function () {
          return this.getScaleForId(this._getIndexScaleId())
        },
        reset: function () {
          this._update(!0)
        },
        destroy: function () {
          this._data && tt(this._data, this)
        },
        createMetaDataset: function () {
          var t = this.datasetElementType
          return t && new t({ _chart: this.chart, _datasetIndex: this.index })
        },
        createMetaData: function (t) {
          var e = this.dataElementType
          return (
            e &&
            new e({ _chart: this.chart, _datasetIndex: this.index, _index: t })
          )
        },
        addElements: function () {
          var t,
            e,
            n = this.getMeta(),
            i = this.getDataset().data || [],
            a = n.data
          for (t = 0, e = i.length; t < e; ++t)
            a[t] = a[t] || this.createMetaData(t)
          n.dataset = n.dataset || this.createMetaDataset()
        },
        addElementAndReset: function (t) {
          var e = this.createMetaData(t)
          this.getMeta().data.splice(t, 0, e), this.updateElement(e, t, !0)
        },
        buildOrUpdateElements: function () {
          var t,
            e,
            n = this,
            i = n.getDataset(),
            a = i.data || (i.data = [])
          n._data !== a &&
            (n._data && tt(n._data, n),
            a &&
              Object.isExtensible(a) &&
              ((e = n),
              (t = a)._chartjs
                ? t._chartjs.listeners.push(e)
                : (Object.defineProperty(t, '_chartjs', {
                    configurable: !0,
                    enumerable: !1,
                    value: { listeners: [e] },
                  }),
                  Q.forEach(function (e) {
                    var n = 'onData' + e.charAt(0).toUpperCase() + e.slice(1),
                      i = t[e]
                    Object.defineProperty(t, e, {
                      configurable: !0,
                      enumerable: !1,
                      value: function () {
                        var e = Array.prototype.slice.call(arguments),
                          a = i.apply(this, e)
                        return (
                          V.each(t._chartjs.listeners, function (t) {
                            'function' == typeof t[n] && t[n].apply(t, e)
                          }),
                          a
                        )
                      },
                    })
                  }))),
            (n._data = a)),
            n.resyncElements()
        },
        _configure: function () {
          this._config = V.merge(
            {},
            [this.chart.options.datasets[this._type], this.getDataset()],
            {
              merger: function (t, e, n) {
                '_meta' !== t && 'data' !== t && V._merger(t, e, n)
              },
            }
          )
        },
        _update: function (t) {
          this._configure(), (this._cachedDataOpts = null), this.update(t)
        },
        update: V.noop,
        transition: function (t) {
          for (
            var e = this.getMeta(), n = e.data || [], i = n.length, a = 0;
            a < i;
            ++a
          )
            n[a].transition(t)
          e.dataset && e.dataset.transition(t)
        },
        draw: function () {
          var t = this.getMeta(),
            e = t.data || [],
            n = e.length,
            i = 0
          for (t.dataset && t.dataset.draw(); i < n; ++i) e[i].draw()
        },
        getStyle: function (t) {
          var e,
            n = this.getMeta(),
            i = n.dataset
          return (
            this._configure(),
            i && void 0 === t
              ? (e = this._resolveDatasetElementOptions(i || {}))
              : ((t = t || 0),
                (e = this._resolveDataElementOptions(n.data[t] || {}, t))),
            (!1 !== e.fill && null !== e.fill) ||
              (e.backgroundColor = e.borderColor),
            e
          )
        },
        _resolveDatasetElementOptions: function (t, e) {
          var n,
            i,
            a,
            r,
            o = this,
            s = o.chart,
            l = o._config,
            u = t.custom || {},
            d = s.options.elements[o.datasetElementType.prototype._type] || {},
            h = o._datasetElementOptions,
            c = {},
            f = {
              chart: s,
              dataset: o.getDataset(),
              datasetIndex: o.index,
              hover: e,
            }
          for (n = 0, i = h.length; n < i; ++n)
            (a = h[n]),
              (r = e ? 'hover' + a.charAt(0).toUpperCase() + a.slice(1) : a),
              (c[a] = J([u[r], l[r], d[r]], f))
          return c
        },
        _resolveDataElementOptions: function (t, e) {
          var n = this,
            i = t && t.custom,
            a = n._cachedDataOpts
          if (a && !i) return a
          var r,
            o,
            s,
            l,
            u = n.chart,
            d = n._config,
            h = u.options.elements[n.dataElementType.prototype._type] || {},
            c = n._dataElementOptions,
            f = {},
            g = {
              chart: u,
              dataIndex: e,
              dataset: n.getDataset(),
              datasetIndex: n.index,
            },
            p = { cacheable: !i }
          if (((i = i || {}), V.isArray(c)))
            for (o = 0, s = c.length; o < s; ++o)
              f[(l = c[o])] = J([i[l], d[l], h[l]], g, e, p)
          else
            for (o = 0, s = (r = Object.keys(c)).length; o < s; ++o)
              f[(l = r[o])] = J([i[l], d[c[l]], d[l], h[l]], g, e, p)
          return p.cacheable && (n._cachedDataOpts = Object.freeze(f)), f
        },
        removeHoverStyle: function (t) {
          V.merge(t._model, t.$previousStyle || {}), delete t.$previousStyle
        },
        setHoverStyle: function (t) {
          var e = this.chart.data.datasets[t._datasetIndex],
            n = t._index,
            i = t.custom || {},
            a = t._model,
            r = V.getHoverColor
          ;(t.$previousStyle = {
            backgroundColor: a.backgroundColor,
            borderColor: a.borderColor,
            borderWidth: a.borderWidth,
          }),
            (a.backgroundColor = J(
              [
                i.hoverBackgroundColor,
                e.hoverBackgroundColor,
                r(a.backgroundColor),
              ],
              void 0,
              n
            )),
            (a.borderColor = J(
              [i.hoverBorderColor, e.hoverBorderColor, r(a.borderColor)],
              void 0,
              n
            )),
            (a.borderWidth = J(
              [i.hoverBorderWidth, e.hoverBorderWidth, a.borderWidth],
              void 0,
              n
            ))
        },
        _removeDatasetHoverStyle: function () {
          var t = this.getMeta().dataset
          t && this.removeHoverStyle(t)
        },
        _setDatasetHoverStyle: function () {
          var t,
            e,
            n,
            i,
            a,
            r,
            o = this.getMeta().dataset,
            s = {}
          if (o) {
            for (
              r = o._model,
                a = this._resolveDatasetElementOptions(o, !0),
                t = 0,
                e = (i = Object.keys(a)).length;
              t < e;
              ++t
            )
              (s[(n = i[t])] = r[n]), (r[n] = a[n])
            o.$previousStyle = s
          }
        },
        resyncElements: function () {
          var t = this.getMeta(),
            e = this.getDataset().data,
            n = t.data.length,
            i = e.length
          i < n
            ? t.data.splice(i, n - i)
            : i > n && this.insertElements(n, i - n)
        },
        insertElements: function (t, e) {
          for (var n = 0; n < e; ++n) this.addElementAndReset(t + n)
        },
        onDataPush: function () {
          var t = arguments.length
          this.insertElements(this.getDataset().data.length - t, t)
        },
        onDataPop: function () {
          this.getMeta().data.pop()
        },
        onDataShift: function () {
          this.getMeta().data.shift()
        },
        onDataSplice: function (t, e) {
          this.getMeta().data.splice(t, e),
            this.insertElements(t, arguments.length - 2)
        },
        onDataUnshift: function () {
          this.insertElements(0, arguments.length)
        },
      }),
        (et.extend = V.inherits)
      var nt = et,
        it = 2 * Math.PI
      function at(t, e) {
        var n = e.startAngle,
          i = e.endAngle,
          a = e.pixelMargin,
          r = a / e.outerRadius,
          o = e.x,
          s = e.y
        t.beginPath(),
          t.arc(o, s, e.outerRadius, n - r, i + r),
          e.innerRadius > a
            ? ((r = a / e.innerRadius),
              t.arc(o, s, e.innerRadius - a, i + r, n - r, !0))
            : t.arc(o, s, a, i + Math.PI / 2, n - Math.PI / 2),
          t.closePath(),
          t.clip()
      }
      function rt(t, e, n) {
        var i = 'inner' === e.borderAlign
        i
          ? ((t.lineWidth = 2 * e.borderWidth), (t.lineJoin = 'round'))
          : ((t.lineWidth = e.borderWidth), (t.lineJoin = 'bevel')),
          n.fullCircles &&
            (function (t, e, n, i) {
              var a,
                r = n.endAngle
              for (
                i &&
                  ((n.endAngle = n.startAngle + it),
                  at(t, n),
                  (n.endAngle = r),
                  n.endAngle === n.startAngle &&
                    n.fullCircles &&
                    ((n.endAngle += it), n.fullCircles--)),
                  t.beginPath(),
                  t.arc(
                    n.x,
                    n.y,
                    n.innerRadius,
                    n.startAngle + it,
                    n.startAngle,
                    !0
                  ),
                  a = 0;
                a < n.fullCircles;
                ++a
              )
                t.stroke()
              for (
                t.beginPath(),
                  t.arc(
                    n.x,
                    n.y,
                    e.outerRadius,
                    n.startAngle,
                    n.startAngle + it
                  ),
                  a = 0;
                a < n.fullCircles;
                ++a
              )
                t.stroke()
            })(t, e, n, i),
          i && at(t, n),
          t.beginPath(),
          t.arc(n.x, n.y, e.outerRadius, n.startAngle, n.endAngle),
          t.arc(n.x, n.y, n.innerRadius, n.endAngle, n.startAngle, !0),
          t.closePath(),
          t.stroke()
      }
      z._set('global', {
        elements: {
          arc: {
            backgroundColor: z.global.defaultColor,
            borderColor: '#fff',
            borderWidth: 2,
            borderAlign: 'center',
          },
        },
      })
      var ot = X.extend({
          _type: 'arc',
          inLabelRange: function (t) {
            var e = this._view
            return (
              !!e &&
              Math.pow(t - e.x, 2) < Math.pow(e.radius + e.hoverRadius, 2)
            )
          },
          inRange: function (t, e) {
            var n = this._view
            if (n) {
              for (
                var i = V.getAngleFromPoint(n, { x: t, y: e }),
                  a = i.angle,
                  r = i.distance,
                  o = n.startAngle,
                  s = n.endAngle;
                s < o;

              )
                s += it
              for (; a > s; ) a -= it
              for (; a < o; ) a += it
              var l = a >= o && a <= s,
                u = r >= n.innerRadius && r <= n.outerRadius
              return l && u
            }
            return !1
          },
          getCenterPoint: function () {
            var t = this._view,
              e = (t.startAngle + t.endAngle) / 2,
              n = (t.innerRadius + t.outerRadius) / 2
            return { x: t.x + Math.cos(e) * n, y: t.y + Math.sin(e) * n }
          },
          getArea: function () {
            var t = this._view
            return (
              Math.PI *
              ((t.endAngle - t.startAngle) / (2 * Math.PI)) *
              (Math.pow(t.outerRadius, 2) - Math.pow(t.innerRadius, 2))
            )
          },
          tooltipPosition: function () {
            var t = this._view,
              e = t.startAngle + (t.endAngle - t.startAngle) / 2,
              n = (t.outerRadius - t.innerRadius) / 2 + t.innerRadius
            return { x: t.x + Math.cos(e) * n, y: t.y + Math.sin(e) * n }
          },
          draw: function () {
            var t,
              e = this._chart.ctx,
              n = this._view,
              i = 'inner' === n.borderAlign ? 0.33 : 0,
              a = {
                x: n.x,
                y: n.y,
                innerRadius: n.innerRadius,
                outerRadius: Math.max(n.outerRadius - i, 0),
                pixelMargin: i,
                startAngle: n.startAngle,
                endAngle: n.endAngle,
                fullCircles: Math.floor(n.circumference / it),
              }
            if (
              (e.save(),
              (e.fillStyle = n.backgroundColor),
              (e.strokeStyle = n.borderColor),
              a.fullCircles)
            ) {
              for (
                a.endAngle = a.startAngle + it,
                  e.beginPath(),
                  e.arc(a.x, a.y, a.outerRadius, a.startAngle, a.endAngle),
                  e.arc(a.x, a.y, a.innerRadius, a.endAngle, a.startAngle, !0),
                  e.closePath(),
                  t = 0;
                t < a.fullCircles;
                ++t
              )
                e.fill()
              a.endAngle = a.startAngle + (n.circumference % it)
            }
            e.beginPath(),
              e.arc(a.x, a.y, a.outerRadius, a.startAngle, a.endAngle),
              e.arc(a.x, a.y, a.innerRadius, a.endAngle, a.startAngle, !0),
              e.closePath(),
              e.fill(),
              n.borderWidth && rt(e, n, a),
              e.restore()
          },
        }),
        st = V.valueOrDefault,
        lt = z.global.defaultColor
      z._set('global', {
        elements: {
          line: {
            tension: 0.4,
            backgroundColor: lt,
            borderWidth: 3,
            borderColor: lt,
            borderCapStyle: 'butt',
            borderDash: [],
            borderDashOffset: 0,
            borderJoinStyle: 'miter',
            capBezierPoints: !0,
            fill: !0,
          },
        },
      })
      var ut = X.extend({
          _type: 'line',
          draw: function () {
            var t,
              e,
              n,
              i = this,
              a = i._view,
              r = i._chart.ctx,
              o = a.spanGaps,
              s = i._children.slice(),
              l = z.global,
              u = l.elements.line,
              d = -1,
              h = i._loop
            if (s.length) {
              if (i._loop) {
                for (t = 0; t < s.length; ++t)
                  if (
                    ((e = V.previousItem(s, t)),
                    !s[t]._view.skip && e._view.skip)
                  ) {
                    ;(s = s.slice(t).concat(s.slice(0, t))), (h = o)
                    break
                  }
                h && s.push(s[0])
              }
              for (
                r.save(),
                  r.lineCap = a.borderCapStyle || u.borderCapStyle,
                  r.setLineDash && r.setLineDash(a.borderDash || u.borderDash),
                  r.lineDashOffset = st(a.borderDashOffset, u.borderDashOffset),
                  r.lineJoin = a.borderJoinStyle || u.borderJoinStyle,
                  r.lineWidth = st(a.borderWidth, u.borderWidth),
                  r.strokeStyle = a.borderColor || l.defaultColor,
                  r.beginPath(),
                  (n = s[0]._view).skip || (r.moveTo(n.x, n.y), (d = 0)),
                  t = 1;
                t < s.length;
                ++t
              )
                (n = s[t]._view),
                  (e = -1 === d ? V.previousItem(s, t) : s[d]),
                  n.skip ||
                    ((d !== t - 1 && !o) || -1 === d
                      ? r.moveTo(n.x, n.y)
                      : V.canvas.lineTo(r, e._view, n),
                    (d = t))
              h && r.closePath(), r.stroke(), r.restore()
            }
          },
        }),
        dt = V.valueOrDefault,
        ht = z.global.defaultColor
      function ct(t) {
        var e = this._view
        return !!e && Math.abs(t - e.x) < e.radius + e.hitRadius
      }
      z._set('global', {
        elements: {
          point: {
            radius: 3,
            pointStyle: 'circle',
            backgroundColor: ht,
            borderColor: ht,
            borderWidth: 1,
            hitRadius: 1,
            hoverRadius: 4,
            hoverBorderWidth: 1,
          },
        },
      })
      var ft = X.extend({
          _type: 'point',
          inRange: function (t, e) {
            var n = this._view
            return (
              !!n &&
              Math.pow(t - n.x, 2) + Math.pow(e - n.y, 2) <
                Math.pow(n.hitRadius + n.radius, 2)
            )
          },
          inLabelRange: ct,
          inXRange: ct,
          inYRange: function (t) {
            var e = this._view
            return !!e && Math.abs(t - e.y) < e.radius + e.hitRadius
          },
          getCenterPoint: function () {
            var t = this._view
            return { x: t.x, y: t.y }
          },
          getArea: function () {
            return Math.PI * Math.pow(this._view.radius, 2)
          },
          tooltipPosition: function () {
            var t = this._view
            return { x: t.x, y: t.y, padding: t.radius + t.borderWidth }
          },
          draw: function (t) {
            var e = this._view,
              n = this._chart.ctx,
              i = e.pointStyle,
              a = e.rotation,
              r = e.radius,
              o = e.x,
              s = e.y,
              l = z.global,
              u = l.defaultColor
            e.skip ||
              ((void 0 === t || V.canvas._isPointInArea(e, t)) &&
                ((n.strokeStyle = e.borderColor || u),
                (n.lineWidth = dt(e.borderWidth, l.elements.point.borderWidth)),
                (n.fillStyle = e.backgroundColor || u),
                V.canvas.drawPoint(n, i, r, o, s, a)))
          },
        }),
        gt = z.global.defaultColor
      function pt(t) {
        return t && void 0 !== t.width
      }
      function mt(t) {
        var e, n, i, a, r
        return (
          pt(t)
            ? ((r = t.width / 2),
              (e = t.x - r),
              (n = t.x + r),
              (i = Math.min(t.y, t.base)),
              (a = Math.max(t.y, t.base)))
            : ((r = t.height / 2),
              (e = Math.min(t.x, t.base)),
              (n = Math.max(t.x, t.base)),
              (i = t.y - r),
              (a = t.y + r)),
          { left: e, top: i, right: n, bottom: a }
        )
      }
      function vt(t, e, n) {
        return t === e ? n : t === n ? e : t
      }
      function bt(t, e, n) {
        var i,
          a,
          r,
          o,
          s = t.borderWidth,
          l = (function (t) {
            var e = t.borderSkipped,
              n = {}
            return e
              ? (t.horizontal
                  ? t.base > t.x && (e = vt(e, 'left', 'right'))
                  : t.base < t.y && (e = vt(e, 'bottom', 'top')),
                (n[e] = !0),
                n)
              : n
          })(t)
        return (
          V.isObject(s)
            ? ((i = +s.top || 0),
              (a = +s.right || 0),
              (r = +s.bottom || 0),
              (o = +s.left || 0))
            : (i = a = r = o = +s || 0),
          {
            t: l.top || i < 0 ? 0 : i > n ? n : i,
            r: l.right || a < 0 ? 0 : a > e ? e : a,
            b: l.bottom || r < 0 ? 0 : r > n ? n : r,
            l: l.left || o < 0 ? 0 : o > e ? e : o,
          }
        )
      }
      function xt(t, e, n) {
        var i = null === e,
          a = null === n,
          r = !(!t || (i && a)) && mt(t)
        return (
          r &&
          (i || (e >= r.left && e <= r.right)) &&
          (a || (n >= r.top && n <= r.bottom))
        )
      }
      z._set('global', {
        elements: {
          rectangle: {
            backgroundColor: gt,
            borderColor: gt,
            borderSkipped: 'bottom',
            borderWidth: 0,
          },
        },
      })
      var yt = X.extend({
          _type: 'rectangle',
          draw: function () {
            var t = this._chart.ctx,
              e = this._view,
              n = (function (t) {
                var e = mt(t),
                  n = e.right - e.left,
                  i = e.bottom - e.top,
                  a = bt(t, n / 2, i / 2)
                return {
                  outer: { x: e.left, y: e.top, w: n, h: i },
                  inner: {
                    x: e.left + a.l,
                    y: e.top + a.t,
                    w: n - a.l - a.r,
                    h: i - a.t - a.b,
                  },
                }
              })(e),
              i = n.outer,
              a = n.inner
            ;(t.fillStyle = e.backgroundColor),
              t.fillRect(i.x, i.y, i.w, i.h),
              (i.w === a.w && i.h === a.h) ||
                (t.save(),
                t.beginPath(),
                t.rect(i.x, i.y, i.w, i.h),
                t.clip(),
                (t.fillStyle = e.borderColor),
                t.rect(a.x, a.y, a.w, a.h),
                t.fill('evenodd'),
                t.restore())
          },
          height: function () {
            var t = this._view
            return t.base - t.y
          },
          inRange: function (t, e) {
            return xt(this._view, t, e)
          },
          inLabelRange: function (t, e) {
            var n = this._view
            return pt(n) ? xt(n, t, null) : xt(n, null, e)
          },
          inXRange: function (t) {
            return xt(this._view, t, null)
          },
          inYRange: function (t) {
            return xt(this._view, null, t)
          },
          getCenterPoint: function () {
            var t,
              e,
              n = this._view
            return (
              pt(n)
                ? ((t = n.x), (e = (n.y + n.base) / 2))
                : ((t = (n.x + n.base) / 2), (e = n.y)),
              { x: t, y: e }
            )
          },
          getArea: function () {
            var t = this._view
            return pt(t)
              ? t.width * Math.abs(t.y - t.base)
              : t.height * Math.abs(t.x - t.base)
          },
          tooltipPosition: function () {
            var t = this._view
            return { x: t.x, y: t.y }
          },
        }),
        _t = {},
        kt = ot,
        wt = ut,
        Mt = ft,
        St = yt
      ;(_t.Arc = kt), (_t.Line = wt), (_t.Point = Mt), (_t.Rectangle = St)
      var Ct = V._deprecated,
        Pt = V.valueOrDefault
      function At(t, e, n) {
        var i,
          a,
          r = n.barThickness,
          o = e.stackCount,
          s = e.pixels[t],
          l = V.isNullOrUndef(r)
            ? (function (t, e) {
                var n,
                  i,
                  a,
                  r,
                  o = t._length
                for (a = 1, r = e.length; a < r; ++a)
                  o = Math.min(o, Math.abs(e[a] - e[a - 1]))
                for (a = 0, r = t.getTicks().length; a < r; ++a)
                  (i = t.getPixelForTick(a)),
                    (o = a > 0 ? Math.min(o, Math.abs(i - n)) : o),
                    (n = i)
                return o
              })(e.scale, e.pixels)
            : -1
        return (
          V.isNullOrUndef(r)
            ? ((i = l * n.categoryPercentage), (a = n.barPercentage))
            : ((i = r * o), (a = 1)),
          { chunk: i / o, ratio: a, start: s - i / 2 }
        )
      }
      z._set('bar', {
        hover: { mode: 'label' },
        scales: {
          xAxes: [
            {
              type: 'category',
              offset: !0,
              gridLines: { offsetGridLines: !0 },
            },
          ],
          yAxes: [{ type: 'linear' }],
        },
      }),
        z._set('global', {
          datasets: { bar: { categoryPercentage: 0.8, barPercentage: 0.9 } },
        })
      var Dt = nt.extend({
          dataElementType: _t.Rectangle,
          _dataElementOptions: [
            'backgroundColor',
            'borderColor',
            'borderSkipped',
            'borderWidth',
            'barPercentage',
            'barThickness',
            'categoryPercentage',
            'maxBarThickness',
            'minBarLength',
          ],
          initialize: function () {
            var t,
              e,
              n = this
            nt.prototype.initialize.apply(n, arguments),
              ((t = n.getMeta()).stack = n.getDataset().stack),
              (t.bar = !0),
              (e = n._getIndexScale().options),
              Ct(
                'bar chart',
                e.barPercentage,
                'scales.[x/y]Axes.barPercentage',
                'dataset.barPercentage'
              ),
              Ct(
                'bar chart',
                e.barThickness,
                'scales.[x/y]Axes.barThickness',
                'dataset.barThickness'
              ),
              Ct(
                'bar chart',
                e.categoryPercentage,
                'scales.[x/y]Axes.categoryPercentage',
                'dataset.categoryPercentage'
              ),
              Ct(
                'bar chart',
                n._getValueScale().options.minBarLength,
                'scales.[x/y]Axes.minBarLength',
                'dataset.minBarLength'
              ),
              Ct(
                'bar chart',
                e.maxBarThickness,
                'scales.[x/y]Axes.maxBarThickness',
                'dataset.maxBarThickness'
              )
          },
          update: function (t) {
            var e,
              n,
              i = this.getMeta().data
            for (this._ruler = this.getRuler(), e = 0, n = i.length; e < n; ++e)
              this.updateElement(i[e], e, t)
          },
          updateElement: function (t, e, n) {
            var i = this,
              a = i.getMeta(),
              r = i.getDataset(),
              o = i._resolveDataElementOptions(t, e)
            ;(t._xScale = i.getScaleForId(a.xAxisID)),
              (t._yScale = i.getScaleForId(a.yAxisID)),
              (t._datasetIndex = i.index),
              (t._index = e),
              (t._model = {
                backgroundColor: o.backgroundColor,
                borderColor: o.borderColor,
                borderSkipped: o.borderSkipped,
                borderWidth: o.borderWidth,
                datasetLabel: r.label,
                label: i.chart.data.labels[e],
              }),
              V.isArray(r.data[e]) && (t._model.borderSkipped = null),
              i._updateElementGeometry(t, e, n, o),
              t.pivot()
          },
          _updateElementGeometry: function (t, e, n, i) {
            var a = this,
              r = t._model,
              o = a._getValueScale(),
              s = o.getBasePixel(),
              l = o.isHorizontal(),
              u = a._ruler || a.getRuler(),
              d = a.calculateBarValuePixels(a.index, e, i),
              h = a.calculateBarIndexPixels(a.index, e, u, i)
            ;(r.horizontal = l),
              (r.base = n ? s : d.base),
              (r.x = l ? (n ? s : d.head) : h.center),
              (r.y = l ? h.center : n ? s : d.head),
              (r.height = l ? h.size : void 0),
              (r.width = l ? void 0 : h.size)
          },
          _getStacks: function (t) {
            var e,
              n,
              i = this._getIndexScale(),
              a = i._getMatchingVisibleMetas(this._type),
              r = i.options.stacked,
              o = a.length,
              s = []
            for (
              e = 0;
              e < o &&
              ((n = a[e]),
              (!1 === r ||
                -1 === s.indexOf(n.stack) ||
                (void 0 === r && void 0 === n.stack)) &&
                s.push(n.stack),
              n.index !== t);
              ++e
            );
            return s
          },
          getStackCount: function () {
            return this._getStacks().length
          },
          getStackIndex: function (t, e) {
            var n = this._getStacks(t),
              i = void 0 !== e ? n.indexOf(e) : -1
            return -1 === i ? n.length - 1 : i
          },
          getRuler: function () {
            var t,
              e,
              n = this._getIndexScale(),
              i = []
            for (t = 0, e = this.getMeta().data.length; t < e; ++t)
              i.push(n.getPixelForValue(null, t, this.index))
            return {
              pixels: i,
              start: n._startPixel,
              end: n._endPixel,
              stackCount: this.getStackCount(),
              scale: n,
            }
          },
          calculateBarValuePixels: function (t, e, n) {
            var i,
              a,
              r,
              o,
              s,
              l,
              u,
              d = this.chart,
              h = this._getValueScale(),
              c = h.isHorizontal(),
              f = d.data.datasets,
              g = h._getMatchingVisibleMetas(this._type),
              p = h._parseValue(f[t].data[e]),
              m = n.minBarLength,
              v = h.options.stacked,
              b = this.getMeta().stack,
              x =
                void 0 === p.start
                  ? 0
                  : p.max >= 0 && p.min >= 0
                  ? p.min
                  : p.max,
              y =
                void 0 === p.start
                  ? p.end
                  : p.max >= 0 && p.min >= 0
                  ? p.max - p.min
                  : p.min - p.max,
              _ = g.length
            if (v || (void 0 === v && void 0 !== b))
              for (i = 0; i < _ && (a = g[i]).index !== t; ++i)
                a.stack === b &&
                  ((r =
                    void 0 === (u = h._parseValue(f[a.index].data[e])).start
                      ? u.end
                      : u.min >= 0 && u.max >= 0
                      ? u.max
                      : u.min),
                  ((p.min < 0 && r < 0) || (p.max >= 0 && r > 0)) && (x += r))
            return (
              (o = h.getPixelForValue(x)),
              (l = (s = h.getPixelForValue(x + y)) - o),
              void 0 !== m &&
                Math.abs(l) < m &&
                ((l = m), (s = (y >= 0 && !c) || (y < 0 && c) ? o - m : o + m)),
              { size: l, base: o, head: s, center: s + l / 2 }
            )
          },
          calculateBarIndexPixels: function (t, e, n, i) {
            var a =
                'flex' === i.barThickness
                  ? (function (t, e, n) {
                      var i,
                        a = e.pixels,
                        r = a[t],
                        o = t > 0 ? a[t - 1] : null,
                        s = t < a.length - 1 ? a[t + 1] : null,
                        l = n.categoryPercentage
                      return (
                        null === o &&
                          (o = r - (null === s ? e.end - e.start : s - r)),
                        null === s && (s = r + r - o),
                        (i = r - ((r - Math.min(o, s)) / 2) * l),
                        {
                          chunk: ((Math.abs(s - o) / 2) * l) / e.stackCount,
                          ratio: n.barPercentage,
                          start: i,
                        }
                      )
                    })(e, n, i)
                  : At(e, n, i),
              r = this.getStackIndex(t, this.getMeta().stack),
              o = a.start + a.chunk * r + a.chunk / 2,
              s = Math.min(Pt(i.maxBarThickness, 1 / 0), a.chunk * a.ratio)
            return { base: o - s / 2, head: o + s / 2, center: o, size: s }
          },
          draw: function () {
            var t = this.chart,
              e = this._getValueScale(),
              n = this.getMeta().data,
              i = this.getDataset(),
              a = n.length,
              r = 0
            for (V.canvas.clipArea(t.ctx, t.chartArea); r < a; ++r) {
              var o = e._parseValue(i.data[r])
              isNaN(o.min) || isNaN(o.max) || n[r].draw()
            }
            V.canvas.unclipArea(t.ctx)
          },
          _resolveDataElementOptions: function () {
            var t = this,
              e = V.extend(
                {},
                nt.prototype._resolveDataElementOptions.apply(t, arguments)
              ),
              n = t._getIndexScale().options,
              i = t._getValueScale().options
            return (
              (e.barPercentage = Pt(n.barPercentage, e.barPercentage)),
              (e.barThickness = Pt(n.barThickness, e.barThickness)),
              (e.categoryPercentage = Pt(
                n.categoryPercentage,
                e.categoryPercentage
              )),
              (e.maxBarThickness = Pt(n.maxBarThickness, e.maxBarThickness)),
              (e.minBarLength = Pt(i.minBarLength, e.minBarLength)),
              e
            )
          },
        }),
        Tt = V.valueOrDefault,
        It = V.options.resolve
      z._set('bubble', {
        hover: { mode: 'single' },
        scales: {
          xAxes: [{ type: 'linear', position: 'bottom', id: 'x-axis-0' }],
          yAxes: [{ type: 'linear', position: 'left', id: 'y-axis-0' }],
        },
        tooltips: {
          callbacks: {
            title: function () {
              return ''
            },
            label: function (t, e) {
              var n = e.datasets[t.datasetIndex].label || '',
                i = e.datasets[t.datasetIndex].data[t.index]
              return n + ': (' + t.xLabel + ', ' + t.yLabel + ', ' + i.r + ')'
            },
          },
        },
      })
      var Ft = nt.extend({
          dataElementType: _t.Point,
          _dataElementOptions: [
            'backgroundColor',
            'borderColor',
            'borderWidth',
            'hoverBackgroundColor',
            'hoverBorderColor',
            'hoverBorderWidth',
            'hoverRadius',
            'hitRadius',
            'pointStyle',
            'rotation',
          ],
          update: function (t) {
            var e = this,
              n = e.getMeta().data
            V.each(n, function (n, i) {
              e.updateElement(n, i, t)
            })
          },
          updateElement: function (t, e, n) {
            var i = this,
              a = i.getMeta(),
              r = t.custom || {},
              o = i.getScaleForId(a.xAxisID),
              s = i.getScaleForId(a.yAxisID),
              l = i._resolveDataElementOptions(t, e),
              u = i.getDataset().data[e],
              d = i.index,
              h = n
                ? o.getPixelForDecimal(0.5)
                : o.getPixelForValue('object' == typeof u ? u : NaN, e, d),
              c = n ? s.getBasePixel() : s.getPixelForValue(u, e, d)
            ;(t._xScale = o),
              (t._yScale = s),
              (t._options = l),
              (t._datasetIndex = d),
              (t._index = e),
              (t._model = {
                backgroundColor: l.backgroundColor,
                borderColor: l.borderColor,
                borderWidth: l.borderWidth,
                hitRadius: l.hitRadius,
                pointStyle: l.pointStyle,
                rotation: l.rotation,
                radius: n ? 0 : l.radius,
                skip: r.skip || isNaN(h) || isNaN(c),
                x: h,
                y: c,
              }),
              t.pivot()
          },
          setHoverStyle: function (t) {
            var e = t._model,
              n = t._options,
              i = V.getHoverColor
            ;(t.$previousStyle = {
              backgroundColor: e.backgroundColor,
              borderColor: e.borderColor,
              borderWidth: e.borderWidth,
              radius: e.radius,
            }),
              (e.backgroundColor = Tt(
                n.hoverBackgroundColor,
                i(n.backgroundColor)
              )),
              (e.borderColor = Tt(n.hoverBorderColor, i(n.borderColor))),
              (e.borderWidth = Tt(n.hoverBorderWidth, n.borderWidth)),
              (e.radius = n.radius + n.hoverRadius)
          },
          _resolveDataElementOptions: function (t, e) {
            var n = this,
              i = n.chart,
              a = n.getDataset(),
              r = t.custom || {},
              o = a.data[e] || {},
              s = nt.prototype._resolveDataElementOptions.apply(n, arguments),
              l = { chart: i, dataIndex: e, dataset: a, datasetIndex: n.index }
            return (
              n._cachedDataOpts === s && (s = V.extend({}, s)),
              (s.radius = It(
                [
                  r.radius,
                  o.r,
                  n._config.radius,
                  i.options.elements.point.radius,
                ],
                l,
                e
              )),
              s
            )
          },
        }),
        Lt = V.valueOrDefault,
        Ot = Math.PI,
        Rt = 2 * Ot,
        zt = Ot / 2
      z._set('doughnut', {
        animation: { animateRotate: !0, animateScale: !1 },
        hover: { mode: 'single' },
        legendCallback: function (t) {
          var e,
            n,
            i,
            a = document.createElement('ul'),
            r = t.data,
            o = r.datasets,
            s = r.labels
          if ((a.setAttribute('class', t.id + '-legend'), o.length))
            for (e = 0, n = o[0].data.length; e < n; ++e)
              ((i = a.appendChild(document.createElement('li'))).appendChild(
                document.createElement('span')
              ).style.backgroundColor = o[0].backgroundColor[e]),
                s[e] && i.appendChild(document.createTextNode(s[e]))
          return a.outerHTML
        },
        legend: {
          labels: {
            generateLabels: function (t) {
              var e = t.data
              return e.labels.length && e.datasets.length
                ? e.labels.map(function (n, i) {
                    var a = t.getDatasetMeta(0),
                      r = a.controller.getStyle(i)
                    return {
                      text: n,
                      fillStyle: r.backgroundColor,
                      strokeStyle: r.borderColor,
                      lineWidth: r.borderWidth,
                      hidden: isNaN(e.datasets[0].data[i]) || a.data[i].hidden,
                      index: i,
                    }
                  })
                : []
            },
          },
          onClick: function (t, e) {
            var n,
              i,
              a,
              r = e.index,
              o = this.chart
            for (n = 0, i = (o.data.datasets || []).length; n < i; ++n)
              (a = o.getDatasetMeta(n)).data[r] &&
                (a.data[r].hidden = !a.data[r].hidden)
            o.update()
          },
        },
        cutoutPercentage: 50,
        rotation: -zt,
        circumference: Rt,
        tooltips: {
          callbacks: {
            title: function () {
              return ''
            },
            label: function (t, e) {
              var n = e.labels[t.index],
                i = ': ' + e.datasets[t.datasetIndex].data[t.index]
              return V.isArray(n) ? ((n = n.slice())[0] += i) : (n += i), n
            },
          },
        },
      })
      var Nt = nt.extend({
        dataElementType: _t.Arc,
        linkScales: V.noop,
        _dataElementOptions: [
          'backgroundColor',
          'borderColor',
          'borderWidth',
          'borderAlign',
          'hoverBackgroundColor',
          'hoverBorderColor',
          'hoverBorderWidth',
        ],
        getRingIndex: function (t) {
          for (var e = 0, n = 0; n < t; ++n)
            this.chart.isDatasetVisible(n) && ++e
          return e
        },
        update: function (t) {
          var e,
            n,
            i,
            a,
            r = this,
            o = r.chart,
            s = o.chartArea,
            l = o.options,
            u = 1,
            d = 1,
            h = 0,
            c = 0,
            f = r.getMeta(),
            g = f.data,
            p = l.cutoutPercentage / 100 || 0,
            m = l.circumference,
            v = r._getRingWeight(r.index)
          if (m < Rt) {
            var b = l.rotation % Rt,
              x = (b += b >= Ot ? -Rt : b < -Ot ? Rt : 0) + m,
              y = Math.cos(b),
              _ = Math.sin(b),
              k = Math.cos(x),
              w = Math.sin(x),
              M = (b <= 0 && x >= 0) || x >= Rt,
              S = (b <= zt && x >= zt) || x >= Rt + zt,
              C = (b <= -zt && x >= -zt) || x >= Ot + zt,
              P = b === -Ot || x >= Ot ? -1 : Math.min(y, y * p, k, k * p),
              A = C ? -1 : Math.min(_, _ * p, w, w * p),
              D = M ? 1 : Math.max(y, y * p, k, k * p),
              T = S ? 1 : Math.max(_, _ * p, w, w * p)
            ;(u = (D - P) / 2),
              (d = (T - A) / 2),
              (h = -(D + P) / 2),
              (c = -(T + A) / 2)
          }
          for (i = 0, a = g.length; i < a; ++i)
            g[i]._options = r._resolveDataElementOptions(g[i], i)
          for (
            o.borderWidth = r.getMaxBorderWidth(),
              e = (s.right - s.left - o.borderWidth) / u,
              n = (s.bottom - s.top - o.borderWidth) / d,
              o.outerRadius = Math.max(Math.min(e, n) / 2, 0),
              o.innerRadius = Math.max(o.outerRadius * p, 0),
              o.radiusLength =
                (o.outerRadius - o.innerRadius) /
                (r._getVisibleDatasetWeightTotal() || 1),
              o.offsetX = h * o.outerRadius,
              o.offsetY = c * o.outerRadius,
              f.total = r.calculateTotal(),
              r.outerRadius =
                o.outerRadius -
                o.radiusLength * r._getRingWeightOffset(r.index),
              r.innerRadius = Math.max(r.outerRadius - o.radiusLength * v, 0),
              i = 0,
              a = g.length;
            i < a;
            ++i
          )
            r.updateElement(g[i], i, t)
        },
        updateElement: function (t, e, n) {
          var i = this,
            a = i.chart,
            r = a.chartArea,
            o = a.options,
            s = o.animation,
            l = (r.left + r.right) / 2,
            u = (r.top + r.bottom) / 2,
            d = o.rotation,
            h = o.rotation,
            c = i.getDataset(),
            f =
              n && s.animateRotate
                ? 0
                : t.hidden
                ? 0
                : i.calculateCircumference(c.data[e]) * (o.circumference / Rt),
            g = n && s.animateScale ? 0 : i.innerRadius,
            p = n && s.animateScale ? 0 : i.outerRadius,
            m = t._options || {}
          V.extend(t, {
            _datasetIndex: i.index,
            _index: e,
            _model: {
              backgroundColor: m.backgroundColor,
              borderColor: m.borderColor,
              borderWidth: m.borderWidth,
              borderAlign: m.borderAlign,
              x: l + a.offsetX,
              y: u + a.offsetY,
              startAngle: d,
              endAngle: h,
              circumference: f,
              outerRadius: p,
              innerRadius: g,
              label: V.valueAtIndexOrDefault(c.label, e, a.data.labels[e]),
            },
          })
          var v = t._model
          ;(n && s.animateRotate) ||
            ((v.startAngle =
              0 === e ? o.rotation : i.getMeta().data[e - 1]._model.endAngle),
            (v.endAngle = v.startAngle + v.circumference)),
            t.pivot()
        },
        calculateTotal: function () {
          var t,
            e = this.getDataset(),
            n = this.getMeta(),
            i = 0
          return (
            V.each(n.data, function (n, a) {
              ;(t = e.data[a]), isNaN(t) || n.hidden || (i += Math.abs(t))
            }),
            i
          )
        },
        calculateCircumference: function (t) {
          var e = this.getMeta().total
          return e > 0 && !isNaN(t) ? Rt * (Math.abs(t) / e) : 0
        },
        getMaxBorderWidth: function (t) {
          var e,
            n,
            i,
            a,
            r,
            o,
            s,
            l,
            u = 0,
            d = this.chart
          if (!t)
            for (e = 0, n = d.data.datasets.length; e < n; ++e)
              if (d.isDatasetVisible(e)) {
                ;(t = (i = d.getDatasetMeta(e)).data),
                  e !== this.index && (r = i.controller)
                break
              }
          if (!t) return 0
          for (e = 0, n = t.length; e < n; ++e)
            (a = t[e]),
              r
                ? (r._configure(), (o = r._resolveDataElementOptions(a, e)))
                : (o = a._options),
              'inner' !== o.borderAlign &&
                ((s = o.borderWidth),
                (u = (l = o.hoverBorderWidth) > (u = s > u ? s : u) ? l : u))
          return u
        },
        setHoverStyle: function (t) {
          var e = t._model,
            n = t._options,
            i = V.getHoverColor
          ;(t.$previousStyle = {
            backgroundColor: e.backgroundColor,
            borderColor: e.borderColor,
            borderWidth: e.borderWidth,
          }),
            (e.backgroundColor = Lt(
              n.hoverBackgroundColor,
              i(n.backgroundColor)
            )),
            (e.borderColor = Lt(n.hoverBorderColor, i(n.borderColor))),
            (e.borderWidth = Lt(n.hoverBorderWidth, n.borderWidth))
        },
        _getRingWeightOffset: function (t) {
          for (var e = 0, n = 0; n < t; ++n)
            this.chart.isDatasetVisible(n) && (e += this._getRingWeight(n))
          return e
        },
        _getRingWeight: function (t) {
          return Math.max(Lt(this.chart.data.datasets[t].weight, 1), 0)
        },
        _getVisibleDatasetWeightTotal: function () {
          return this._getRingWeightOffset(this.chart.data.datasets.length)
        },
      })
      z._set('horizontalBar', {
        hover: { mode: 'index', axis: 'y' },
        scales: {
          xAxes: [{ type: 'linear', position: 'bottom' }],
          yAxes: [
            {
              type: 'category',
              position: 'left',
              offset: !0,
              gridLines: { offsetGridLines: !0 },
            },
          ],
        },
        elements: { rectangle: { borderSkipped: 'left' } },
        tooltips: { mode: 'index', axis: 'y' },
      }),
        z._set('global', {
          datasets: {
            horizontalBar: { categoryPercentage: 0.8, barPercentage: 0.9 },
          },
        })
      var Bt = Dt.extend({
          _getValueScaleId: function () {
            return this.getMeta().xAxisID
          },
          _getIndexScaleId: function () {
            return this.getMeta().yAxisID
          },
        }),
        Et = V.valueOrDefault,
        Wt = V.options.resolve,
        Vt = V.canvas._isPointInArea
      function Ht(t, e) {
        var n = (t && t.options.ticks) || {},
          i = n.reverse,
          a = void 0 === n.min ? e : 0,
          r = void 0 === n.max ? e : 0
        return { start: i ? r : a, end: i ? a : r }
      }
      function jt(t, e, n) {
        var i = n / 2,
          a = Ht(t, i),
          r = Ht(e, i)
        return { top: r.end, right: a.end, bottom: r.start, left: a.start }
      }
      function qt(t) {
        var e, n, i, a
        return (
          V.isObject(t)
            ? ((e = t.top), (n = t.right), (i = t.bottom), (a = t.left))
            : (e = n = i = a = t),
          { top: e, right: n, bottom: i, left: a }
        )
      }
      z._set('line', {
        showLines: !0,
        spanGaps: !1,
        hover: { mode: 'label' },
        scales: {
          xAxes: [{ type: 'category', id: 'x-axis-0' }],
          yAxes: [{ type: 'linear', id: 'y-axis-0' }],
        },
      })
      var Ut = nt.extend({
          datasetElementType: _t.Line,
          dataElementType: _t.Point,
          _datasetElementOptions: [
            'backgroundColor',
            'borderCapStyle',
            'borderColor',
            'borderDash',
            'borderDashOffset',
            'borderJoinStyle',
            'borderWidth',
            'cubicInterpolationMode',
            'fill',
          ],
          _dataElementOptions: {
            backgroundColor: 'pointBackgroundColor',
            borderColor: 'pointBorderColor',
            borderWidth: 'pointBorderWidth',
            hitRadius: 'pointHitRadius',
            hoverBackgroundColor: 'pointHoverBackgroundColor',
            hoverBorderColor: 'pointHoverBorderColor',
            hoverBorderWidth: 'pointHoverBorderWidth',
            hoverRadius: 'pointHoverRadius',
            pointStyle: 'pointStyle',
            radius: 'pointRadius',
            rotation: 'pointRotation',
          },
          update: function (t) {
            var e,
              n,
              i = this,
              a = i.getMeta(),
              r = a.dataset,
              o = a.data || [],
              s = i.chart.options,
              l = i._config,
              u = (i._showLine = Et(l.showLine, s.showLines))
            for (
              i._xScale = i.getScaleForId(a.xAxisID),
                i._yScale = i.getScaleForId(a.yAxisID),
                u &&
                  (void 0 !== l.tension &&
                    void 0 === l.lineTension &&
                    (l.lineTension = l.tension),
                  (r._scale = i._yScale),
                  (r._datasetIndex = i.index),
                  (r._children = o),
                  (r._model = i._resolveDatasetElementOptions(r)),
                  r.pivot()),
                e = 0,
                n = o.length;
              e < n;
              ++e
            )
              i.updateElement(o[e], e, t)
            for (
              u && 0 !== r._model.tension && i.updateBezierControlPoints(),
                e = 0,
                n = o.length;
              e < n;
              ++e
            )
              o[e].pivot()
          },
          updateElement: function (t, e, n) {
            var i,
              a,
              r = this,
              o = r.getMeta(),
              s = t.custom || {},
              l = r.getDataset(),
              u = r.index,
              d = l.data[e],
              h = r._xScale,
              c = r._yScale,
              f = o.dataset._model,
              g = r._resolveDataElementOptions(t, e)
            ;(i = h.getPixelForValue('object' == typeof d ? d : NaN, e, u)),
              (a = n ? c.getBasePixel() : r.calculatePointY(d, e, u)),
              (t._xScale = h),
              (t._yScale = c),
              (t._options = g),
              (t._datasetIndex = u),
              (t._index = e),
              (t._model = {
                x: i,
                y: a,
                skip: s.skip || isNaN(i) || isNaN(a),
                radius: g.radius,
                pointStyle: g.pointStyle,
                rotation: g.rotation,
                backgroundColor: g.backgroundColor,
                borderColor: g.borderColor,
                borderWidth: g.borderWidth,
                tension: Et(s.tension, f ? f.tension : 0),
                steppedLine: !!f && f.steppedLine,
                hitRadius: g.hitRadius,
              })
          },
          _resolveDatasetElementOptions: function (t) {
            var e = this,
              n = e._config,
              i = t.custom || {},
              a = e.chart.options,
              r = a.elements.line,
              o = nt.prototype._resolveDatasetElementOptions.apply(e, arguments)
            return (
              (o.spanGaps = Et(n.spanGaps, a.spanGaps)),
              (o.tension = Et(n.lineTension, r.tension)),
              (o.steppedLine = Wt([i.steppedLine, n.steppedLine, r.stepped])),
              (o.clip = qt(
                Et(n.clip, jt(e._xScale, e._yScale, o.borderWidth))
              )),
              o
            )
          },
          calculatePointY: function (t, e, n) {
            var i,
              a,
              r,
              o,
              s,
              l,
              u,
              d = this.chart,
              h = this._yScale,
              c = 0,
              f = 0
            if (h.options.stacked) {
              for (
                s = +h.getRightValue(t),
                  u = (l = d._getSortedVisibleDatasetMetas()).length,
                  i = 0;
                i < u && (r = l[i]).index !== n;
                ++i
              )
                (a = d.data.datasets[r.index]),
                  'line' === r.type &&
                    r.yAxisID === h.id &&
                    ((o = +h.getRightValue(a.data[e])) < 0
                      ? (f += o || 0)
                      : (c += o || 0))
              return s < 0
                ? h.getPixelForValue(f + s)
                : h.getPixelForValue(c + s)
            }
            return h.getPixelForValue(t)
          },
          updateBezierControlPoints: function () {
            var t,
              e,
              n,
              i,
              a = this.chart,
              r = this.getMeta(),
              o = r.dataset._model,
              s = a.chartArea,
              l = r.data || []
            function u(t, e, n) {
              return Math.max(Math.min(t, n), e)
            }
            if (
              (o.spanGaps &&
                (l = l.filter(function (t) {
                  return !t._model.skip
                })),
              'monotone' === o.cubicInterpolationMode)
            )
              V.splineCurveMonotone(l)
            else
              for (t = 0, e = l.length; t < e; ++t)
                (n = l[t]._model),
                  (i = V.splineCurve(
                    V.previousItem(l, t)._model,
                    n,
                    V.nextItem(l, t)._model,
                    o.tension
                  )),
                  (n.controlPointPreviousX = i.previous.x),
                  (n.controlPointPreviousY = i.previous.y),
                  (n.controlPointNextX = i.next.x),
                  (n.controlPointNextY = i.next.y)
            if (a.options.elements.line.capBezierPoints)
              for (t = 0, e = l.length; t < e; ++t)
                (n = l[t]._model),
                  Vt(n, s) &&
                    (t > 0 &&
                      Vt(l[t - 1]._model, s) &&
                      ((n.controlPointPreviousX = u(
                        n.controlPointPreviousX,
                        s.left,
                        s.right
                      )),
                      (n.controlPointPreviousY = u(
                        n.controlPointPreviousY,
                        s.top,
                        s.bottom
                      ))),
                    t < l.length - 1 &&
                      Vt(l[t + 1]._model, s) &&
                      ((n.controlPointNextX = u(
                        n.controlPointNextX,
                        s.left,
                        s.right
                      )),
                      (n.controlPointNextY = u(
                        n.controlPointNextY,
                        s.top,
                        s.bottom
                      ))))
          },
          draw: function () {
            var t,
              e = this.chart,
              n = this.getMeta(),
              i = n.data || [],
              a = e.chartArea,
              r = e.canvas,
              o = 0,
              s = i.length
            for (
              this._showLine &&
              ((t = n.dataset._model.clip),
              V.canvas.clipArea(e.ctx, {
                left: !1 === t.left ? 0 : a.left - t.left,
                right: !1 === t.right ? r.width : a.right + t.right,
                top: !1 === t.top ? 0 : a.top - t.top,
                bottom: !1 === t.bottom ? r.height : a.bottom + t.bottom,
              }),
              n.dataset.draw(),
              V.canvas.unclipArea(e.ctx));
              o < s;
              ++o
            )
              i[o].draw(a)
          },
          setHoverStyle: function (t) {
            var e = t._model,
              n = t._options,
              i = V.getHoverColor
            ;(t.$previousStyle = {
              backgroundColor: e.backgroundColor,
              borderColor: e.borderColor,
              borderWidth: e.borderWidth,
              radius: e.radius,
            }),
              (e.backgroundColor = Et(
                n.hoverBackgroundColor,
                i(n.backgroundColor)
              )),
              (e.borderColor = Et(n.hoverBorderColor, i(n.borderColor))),
              (e.borderWidth = Et(n.hoverBorderWidth, n.borderWidth)),
              (e.radius = Et(n.hoverRadius, n.radius))
          },
        }),
        Yt = V.options.resolve
      z._set('polarArea', {
        scale: {
          type: 'radialLinear',
          angleLines: { display: !1 },
          gridLines: { circular: !0 },
          pointLabels: { display: !1 },
          ticks: { beginAtZero: !0 },
        },
        animation: { animateRotate: !0, animateScale: !0 },
        startAngle: -0.5 * Math.PI,
        legendCallback: function (t) {
          var e,
            n,
            i,
            a = document.createElement('ul'),
            r = t.data,
            o = r.datasets,
            s = r.labels
          if ((a.setAttribute('class', t.id + '-legend'), o.length))
            for (e = 0, n = o[0].data.length; e < n; ++e)
              ((i = a.appendChild(document.createElement('li'))).appendChild(
                document.createElement('span')
              ).style.backgroundColor = o[0].backgroundColor[e]),
                s[e] && i.appendChild(document.createTextNode(s[e]))
          return a.outerHTML
        },
        legend: {
          labels: {
            generateLabels: function (t) {
              var e = t.data
              return e.labels.length && e.datasets.length
                ? e.labels.map(function (n, i) {
                    var a = t.getDatasetMeta(0),
                      r = a.controller.getStyle(i)
                    return {
                      text: n,
                      fillStyle: r.backgroundColor,
                      strokeStyle: r.borderColor,
                      lineWidth: r.borderWidth,
                      hidden: isNaN(e.datasets[0].data[i]) || a.data[i].hidden,
                      index: i,
                    }
                  })
                : []
            },
          },
          onClick: function (t, e) {
            var n,
              i,
              a,
              r = e.index,
              o = this.chart
            for (n = 0, i = (o.data.datasets || []).length; n < i; ++n)
              (a = o.getDatasetMeta(n)).data[r].hidden = !a.data[r].hidden
            o.update()
          },
        },
        tooltips: {
          callbacks: {
            title: function () {
              return ''
            },
            label: function (t, e) {
              return e.labels[t.index] + ': ' + t.yLabel
            },
          },
        },
      })
      var Gt = nt.extend({
        dataElementType: _t.Arc,
        linkScales: V.noop,
        _dataElementOptions: [
          'backgroundColor',
          'borderColor',
          'borderWidth',
          'borderAlign',
          'hoverBackgroundColor',
          'hoverBorderColor',
          'hoverBorderWidth',
        ],
        _getIndexScaleId: function () {
          return this.chart.scale.id
        },
        _getValueScaleId: function () {
          return this.chart.scale.id
        },
        update: function (t) {
          var e,
            n,
            i,
            a = this,
            r = a.getDataset(),
            o = a.getMeta(),
            s = a.chart.options.startAngle || 0,
            l = (a._starts = []),
            u = (a._angles = []),
            d = o.data
          for (
            a._updateRadius(),
              o.count = a.countVisibleElements(),
              e = 0,
              n = r.data.length;
            e < n;
            e++
          )
            (l[e] = s), (i = a._computeAngle(e)), (u[e] = i), (s += i)
          for (e = 0, n = d.length; e < n; ++e)
            (d[e]._options = a._resolveDataElementOptions(d[e], e)),
              a.updateElement(d[e], e, t)
        },
        _updateRadius: function () {
          var t = this,
            e = t.chart,
            n = e.chartArea,
            i = e.options,
            a = Math.min(n.right - n.left, n.bottom - n.top)
          ;(e.outerRadius = Math.max(a / 2, 0)),
            (e.innerRadius = Math.max(
              i.cutoutPercentage
                ? (e.outerRadius / 100) * i.cutoutPercentage
                : 1,
              0
            )),
            (e.radiusLength =
              (e.outerRadius - e.innerRadius) / e.getVisibleDatasetCount()),
            (t.outerRadius = e.outerRadius - e.radiusLength * t.index),
            (t.innerRadius = t.outerRadius - e.radiusLength)
        },
        updateElement: function (t, e, n) {
          var i = this,
            a = i.chart,
            r = i.getDataset(),
            o = a.options,
            s = o.animation,
            l = a.scale,
            u = a.data.labels,
            d = l.xCenter,
            h = l.yCenter,
            c = o.startAngle,
            f = t.hidden ? 0 : l.getDistanceFromCenterForValue(r.data[e]),
            g = i._starts[e],
            p = g + (t.hidden ? 0 : i._angles[e]),
            m = s.animateScale ? 0 : l.getDistanceFromCenterForValue(r.data[e]),
            v = t._options || {}
          V.extend(t, {
            _datasetIndex: i.index,
            _index: e,
            _scale: l,
            _model: {
              backgroundColor: v.backgroundColor,
              borderColor: v.borderColor,
              borderWidth: v.borderWidth,
              borderAlign: v.borderAlign,
              x: d,
              y: h,
              innerRadius: 0,
              outerRadius: n ? m : f,
              startAngle: n && s.animateRotate ? c : g,
              endAngle: n && s.animateRotate ? c : p,
              label: V.valueAtIndexOrDefault(u, e, u[e]),
            },
          }),
            t.pivot()
        },
        countVisibleElements: function () {
          var t = this.getDataset(),
            e = this.getMeta(),
            n = 0
          return (
            V.each(e.data, function (e, i) {
              isNaN(t.data[i]) || e.hidden || n++
            }),
            n
          )
        },
        setHoverStyle: function (t) {
          var e = t._model,
            n = t._options,
            i = V.getHoverColor,
            a = V.valueOrDefault
          ;(t.$previousStyle = {
            backgroundColor: e.backgroundColor,
            borderColor: e.borderColor,
            borderWidth: e.borderWidth,
          }),
            (e.backgroundColor = a(
              n.hoverBackgroundColor,
              i(n.backgroundColor)
            )),
            (e.borderColor = a(n.hoverBorderColor, i(n.borderColor))),
            (e.borderWidth = a(n.hoverBorderWidth, n.borderWidth))
        },
        _computeAngle: function (t) {
          var e = this,
            n = this.getMeta().count,
            i = e.getDataset(),
            a = e.getMeta()
          if (isNaN(i.data[t]) || a.data[t].hidden) return 0
          var r = {
            chart: e.chart,
            dataIndex: t,
            dataset: i,
            datasetIndex: e.index,
          }
          return Yt(
            [e.chart.options.elements.arc.angle, (2 * Math.PI) / n],
            r,
            t
          )
        },
      })
      z._set('pie', V.clone(z.doughnut)), z._set('pie', { cutoutPercentage: 0 })
      var Xt = Nt,
        Kt = V.valueOrDefault
      z._set('radar', {
        spanGaps: !1,
        scale: { type: 'radialLinear' },
        elements: { line: { fill: 'start', tension: 0 } },
      })
      var Zt = nt.extend({
        datasetElementType: _t.Line,
        dataElementType: _t.Point,
        linkScales: V.noop,
        _datasetElementOptions: [
          'backgroundColor',
          'borderWidth',
          'borderColor',
          'borderCapStyle',
          'borderDash',
          'borderDashOffset',
          'borderJoinStyle',
          'fill',
        ],
        _dataElementOptions: {
          backgroundColor: 'pointBackgroundColor',
          borderColor: 'pointBorderColor',
          borderWidth: 'pointBorderWidth',
          hitRadius: 'pointHitRadius',
          hoverBackgroundColor: 'pointHoverBackgroundColor',
          hoverBorderColor: 'pointHoverBorderColor',
          hoverBorderWidth: 'pointHoverBorderWidth',
          hoverRadius: 'pointHoverRadius',
          pointStyle: 'pointStyle',
          radius: 'pointRadius',
          rotation: 'pointRotation',
        },
        _getIndexScaleId: function () {
          return this.chart.scale.id
        },
        _getValueScaleId: function () {
          return this.chart.scale.id
        },
        update: function (t) {
          var e,
            n,
            i = this,
            a = i.getMeta(),
            r = a.dataset,
            o = a.data || [],
            s = i.chart.scale,
            l = i._config
          for (
            void 0 !== l.tension &&
              void 0 === l.lineTension &&
              (l.lineTension = l.tension),
              r._scale = s,
              r._datasetIndex = i.index,
              r._children = o,
              r._loop = !0,
              r._model = i._resolveDatasetElementOptions(r),
              r.pivot(),
              e = 0,
              n = o.length;
            e < n;
            ++e
          )
            i.updateElement(o[e], e, t)
          for (i.updateBezierControlPoints(), e = 0, n = o.length; e < n; ++e)
            o[e].pivot()
        },
        updateElement: function (t, e, n) {
          var i = this,
            a = t.custom || {},
            r = i.getDataset(),
            o = i.chart.scale,
            s = o.getPointPositionForValue(e, r.data[e]),
            l = i._resolveDataElementOptions(t, e),
            u = i.getMeta().dataset._model,
            d = n ? o.xCenter : s.x,
            h = n ? o.yCenter : s.y
          ;(t._scale = o),
            (t._options = l),
            (t._datasetIndex = i.index),
            (t._index = e),
            (t._model = {
              x: d,
              y: h,
              skip: a.skip || isNaN(d) || isNaN(h),
              radius: l.radius,
              pointStyle: l.pointStyle,
              rotation: l.rotation,
              backgroundColor: l.backgroundColor,
              borderColor: l.borderColor,
              borderWidth: l.borderWidth,
              tension: Kt(a.tension, u ? u.tension : 0),
              hitRadius: l.hitRadius,
            })
        },
        _resolveDatasetElementOptions: function () {
          var t = this,
            e = t._config,
            n = t.chart.options,
            i = nt.prototype._resolveDatasetElementOptions.apply(t, arguments)
          return (
            (i.spanGaps = Kt(e.spanGaps, n.spanGaps)),
            (i.tension = Kt(e.lineTension, n.elements.line.tension)),
            i
          )
        },
        updateBezierControlPoints: function () {
          var t,
            e,
            n,
            i,
            a = this.getMeta(),
            r = this.chart.chartArea,
            o = a.data || []
          function s(t, e, n) {
            return Math.max(Math.min(t, n), e)
          }
          for (
            a.dataset._model.spanGaps &&
              (o = o.filter(function (t) {
                return !t._model.skip
              })),
              t = 0,
              e = o.length;
            t < e;
            ++t
          )
            (n = o[t]._model),
              (i = V.splineCurve(
                V.previousItem(o, t, !0)._model,
                n,
                V.nextItem(o, t, !0)._model,
                n.tension
              )),
              (n.controlPointPreviousX = s(i.previous.x, r.left, r.right)),
              (n.controlPointPreviousY = s(i.previous.y, r.top, r.bottom)),
              (n.controlPointNextX = s(i.next.x, r.left, r.right)),
              (n.controlPointNextY = s(i.next.y, r.top, r.bottom))
        },
        setHoverStyle: function (t) {
          var e = t._model,
            n = t._options,
            i = V.getHoverColor
          ;(t.$previousStyle = {
            backgroundColor: e.backgroundColor,
            borderColor: e.borderColor,
            borderWidth: e.borderWidth,
            radius: e.radius,
          }),
            (e.backgroundColor = Kt(
              n.hoverBackgroundColor,
              i(n.backgroundColor)
            )),
            (e.borderColor = Kt(n.hoverBorderColor, i(n.borderColor))),
            (e.borderWidth = Kt(n.hoverBorderWidth, n.borderWidth)),
            (e.radius = Kt(n.hoverRadius, n.radius))
        },
      })
      z._set('scatter', {
        hover: { mode: 'single' },
        scales: {
          xAxes: [{ id: 'x-axis-1', type: 'linear', position: 'bottom' }],
          yAxes: [{ id: 'y-axis-1', type: 'linear', position: 'left' }],
        },
        tooltips: {
          callbacks: {
            title: function () {
              return ''
            },
            label: function (t) {
              return '(' + t.xLabel + ', ' + t.yLabel + ')'
            },
          },
        },
      }),
        z._set('global', { datasets: { scatter: { showLine: !1 } } })
      var $t = {
        bar: Dt,
        bubble: Ft,
        doughnut: Nt,
        horizontalBar: Bt,
        line: Ut,
        polarArea: Gt,
        pie: Xt,
        radar: Zt,
        scatter: Ut,
      }
      function Jt(t, e) {
        return t.native ? { x: t.x, y: t.y } : V.getRelativePosition(t, e)
      }
      function Qt(t, e) {
        var n,
          i,
          a,
          r,
          o,
          s,
          l = t._getSortedVisibleDatasetMetas()
        for (i = 0, r = l.length; i < r; ++i)
          for (a = 0, o = (n = l[i].data).length; a < o; ++a)
            (s = n[a])._view.skip || e(s)
      }
      function te(t, e) {
        var n = []
        return (
          Qt(t, function (t) {
            t.inRange(e.x, e.y) && n.push(t)
          }),
          n
        )
      }
      function ee(t, e, n, i) {
        var a = Number.POSITIVE_INFINITY,
          r = []
        return (
          Qt(t, function (t) {
            if (!n || t.inRange(e.x, e.y)) {
              var o = t.getCenterPoint(),
                s = i(e, o)
              s < a ? ((r = [t]), (a = s)) : s === a && r.push(t)
            }
          }),
          r
        )
      }
      function ne(t) {
        var e = -1 !== t.indexOf('x'),
          n = -1 !== t.indexOf('y')
        return function (t, i) {
          var a = e ? Math.abs(t.x - i.x) : 0,
            r = n ? Math.abs(t.y - i.y) : 0
          return Math.sqrt(Math.pow(a, 2) + Math.pow(r, 2))
        }
      }
      function ie(t, e, n) {
        var i = Jt(e, t)
        n.axis = n.axis || 'x'
        var a = ne(n.axis),
          r = n.intersect ? te(t, i) : ee(t, i, !1, a),
          o = []
        return r.length
          ? (t._getSortedVisibleDatasetMetas().forEach(function (t) {
              var e = t.data[r[0]._index]
              e && !e._view.skip && o.push(e)
            }),
            o)
          : []
      }
      var ae = {
          modes: {
            single: function (t, e) {
              var n = Jt(e, t),
                i = []
              return (
                Qt(t, function (t) {
                  if (t.inRange(n.x, n.y)) return i.push(t), i
                }),
                i.slice(0, 1)
              )
            },
            label: ie,
            index: ie,
            dataset: function (t, e, n) {
              var i = Jt(e, t)
              n.axis = n.axis || 'xy'
              var a = ne(n.axis),
                r = n.intersect ? te(t, i) : ee(t, i, !1, a)
              return (
                r.length > 0 && (r = t.getDatasetMeta(r[0]._datasetIndex).data),
                r
              )
            },
            'x-axis': function (t, e) {
              return ie(t, e, { intersect: !1 })
            },
            point: function (t, e) {
              return te(t, Jt(e, t))
            },
            nearest: function (t, e, n) {
              var i = Jt(e, t)
              n.axis = n.axis || 'xy'
              var a = ne(n.axis)
              return ee(t, i, n.intersect, a)
            },
            x: function (t, e, n) {
              var i = Jt(e, t),
                a = [],
                r = !1
              return (
                Qt(t, function (t) {
                  t.inXRange(i.x) && a.push(t), t.inRange(i.x, i.y) && (r = !0)
                }),
                n.intersect && !r && (a = []),
                a
              )
            },
            y: function (t, e, n) {
              var i = Jt(e, t),
                a = [],
                r = !1
              return (
                Qt(t, function (t) {
                  t.inYRange(i.y) && a.push(t), t.inRange(i.x, i.y) && (r = !0)
                }),
                n.intersect && !r && (a = []),
                a
              )
            },
          },
        },
        re = V.extend
      function oe(t, e) {
        return V.where(t, function (t) {
          return t.pos === e
        })
      }
      function se(t, e) {
        return t.sort(function (t, n) {
          var i = e ? n : t,
            a = e ? t : n
          return i.weight === a.weight ? i.index - a.index : i.weight - a.weight
        })
      }
      function le(t, e, n, i) {
        return Math.max(t[n], e[n]) + Math.max(t[i], e[i])
      }
      function ue(t, e, n) {
        var i,
          a,
          r = n.box,
          o = t.maxPadding
        if (
          (n.size && (t[n.pos] -= n.size),
          (n.size = n.horizontal ? r.height : r.width),
          (t[n.pos] += n.size),
          r.getPadding)
        ) {
          var s = r.getPadding()
          ;(o.top = Math.max(o.top, s.top)),
            (o.left = Math.max(o.left, s.left)),
            (o.bottom = Math.max(o.bottom, s.bottom)),
            (o.right = Math.max(o.right, s.right))
        }
        if (
          ((i = e.outerWidth - le(o, t, 'left', 'right')),
          (a = e.outerHeight - le(o, t, 'top', 'bottom')),
          i !== t.w || a !== t.h)
        )
          return (t.w = i), (t.h = a), n.horizontal ? i !== t.w : a !== t.h
      }
      function de(t, e) {
        var n = e.maxPadding
        function i(t) {
          var i = { left: 0, top: 0, right: 0, bottom: 0 }
          return (
            t.forEach(function (t) {
              i[t] = Math.max(e[t], n[t])
            }),
            i
          )
        }
        return i(t ? ['left', 'right'] : ['top', 'bottom'])
      }
      function he(t, e, n) {
        var i,
          a,
          r,
          o,
          s,
          l,
          u = []
        for (i = 0, a = t.length; i < a; ++i)
          (o = (r = t[i]).box).update(
            r.width || e.w,
            r.height || e.h,
            de(r.horizontal, e)
          ),
            ue(e, n, r) && ((l = !0), u.length && (s = !0)),
            o.fullWidth || u.push(r)
        return (s && he(u, e, n)) || l
      }
      function ce(t, e, n) {
        var i,
          a,
          r,
          o,
          s = n.padding,
          l = e.x,
          u = e.y
        for (i = 0, a = t.length; i < a; ++i)
          (o = (r = t[i]).box),
            r.horizontal
              ? ((o.left = o.fullWidth ? s.left : e.left),
                (o.right = o.fullWidth ? n.outerWidth - s.right : e.left + e.w),
                (o.top = u),
                (o.bottom = u + o.height),
                (o.width = o.right - o.left),
                (u = o.bottom))
              : ((o.left = l),
                (o.right = l + o.width),
                (o.top = e.top),
                (o.bottom = e.top + e.h),
                (o.height = o.bottom - o.top),
                (l = o.right))
        ;(e.x = l), (e.y = u)
      }
      z._set('global', {
        layout: { padding: { top: 0, right: 0, bottom: 0, left: 0 } },
      })
      var fe,
        ge = {
          defaults: {},
          addBox: function (t, e) {
            t.boxes || (t.boxes = []),
              (e.fullWidth = e.fullWidth || !1),
              (e.position = e.position || 'top'),
              (e.weight = e.weight || 0),
              (e._layers =
                e._layers ||
                function () {
                  return [
                    {
                      z: 0,
                      draw: function () {
                        e.draw.apply(e, arguments)
                      },
                    },
                  ]
                }),
              t.boxes.push(e)
          },
          removeBox: function (t, e) {
            var n = t.boxes ? t.boxes.indexOf(e) : -1
            ;-1 !== n && t.boxes.splice(n, 1)
          },
          configure: function (t, e, n) {
            for (
              var i,
                a = ['fullWidth', 'position', 'weight'],
                r = a.length,
                o = 0;
              o < r;
              ++o
            )
              (i = a[o]), n.hasOwnProperty(i) && (e[i] = n[i])
          },
          update: function (t, e, n) {
            if (t) {
              var i = t.options.layout || {},
                a = V.options.toPadding(i.padding),
                r = e - a.width,
                o = n - a.height,
                s = (function (t) {
                  var e = (function (t) {
                      var e,
                        n,
                        i,
                        a = []
                      for (e = 0, n = (t || []).length; e < n; ++e)
                        (i = t[e]),
                          a.push({
                            index: e,
                            box: i,
                            pos: i.position,
                            horizontal: i.isHorizontal(),
                            weight: i.weight,
                          })
                      return a
                    })(t),
                    n = se(oe(e, 'left'), !0),
                    i = se(oe(e, 'right')),
                    a = se(oe(e, 'top'), !0),
                    r = se(oe(e, 'bottom'))
                  return {
                    leftAndTop: n.concat(a),
                    rightAndBottom: i.concat(r),
                    chartArea: oe(e, 'chartArea'),
                    vertical: n.concat(i),
                    horizontal: a.concat(r),
                  }
                })(t.boxes),
                l = s.vertical,
                u = s.horizontal,
                d = Object.freeze({
                  outerWidth: e,
                  outerHeight: n,
                  padding: a,
                  availableWidth: r,
                  vBoxMaxWidth: r / 2 / l.length,
                  hBoxMaxHeight: o / 2,
                }),
                h = re(
                  { maxPadding: re({}, a), w: r, h: o, x: a.left, y: a.top },
                  a
                )
              !(function (t, e) {
                var n, i, a
                for (n = 0, i = t.length; n < i; ++n)
                  ((a = t[n]).width = a.horizontal
                    ? a.box.fullWidth && e.availableWidth
                    : e.vBoxMaxWidth),
                    (a.height = a.horizontal && e.hBoxMaxHeight)
              })(l.concat(u), d),
                he(l, h, d),
                he(u, h, d) && he(l, h, d),
                (function (t) {
                  var e = t.maxPadding
                  function n(n) {
                    var i = Math.max(e[n] - t[n], 0)
                    return (t[n] += i), i
                  }
                  ;(t.y += n('top')),
                    (t.x += n('left')),
                    n('right'),
                    n('bottom')
                })(h),
                ce(s.leftAndTop, h, d),
                (h.x += h.w),
                (h.y += h.h),
                ce(s.rightAndBottom, h, d),
                (t.chartArea = {
                  left: h.left,
                  top: h.top,
                  right: h.left + h.w,
                  bottom: h.top + h.h,
                }),
                V.each(s.chartArea, function (e) {
                  var n = e.box
                  re(n, t.chartArea), n.update(h.w, h.h)
                })
            }
          },
        },
        pe =
          ((fe = Object.freeze({
            __proto__: null,
            default:
              '@keyframes chartjs-render-animation{from{opacity:.99}to{opacity:1}}.chartjs-render-monitor{animation:chartjs-render-animation 1ms}.chartjs-size-monitor,.chartjs-size-monitor-expand,.chartjs-size-monitor-shrink{position:absolute;direction:ltr;left:0;top:0;right:0;bottom:0;overflow:hidden;pointer-events:none;visibility:hidden;z-index:-1}.chartjs-size-monitor-expand>div{position:absolute;width:1000000px;height:1000000px;left:0;top:0}.chartjs-size-monitor-shrink>div{position:absolute;width:200%;height:200%;left:0;top:0}',
          })) &&
            fe.default) ||
          fe,
        me = '$chartjs',
        ve = 'chartjs-size-monitor',
        be = 'chartjs-render-monitor',
        xe = 'chartjs-render-animation',
        ye = ['animationstart', 'webkitAnimationStart'],
        _e = {
          touchstart: 'mousedown',
          touchmove: 'mousemove',
          touchend: 'mouseup',
          pointerenter: 'mouseenter',
          pointerdown: 'mousedown',
          pointermove: 'mousemove',
          pointerup: 'mouseup',
          pointerleave: 'mouseout',
          pointerout: 'mouseout',
        }
      function ke(t, e) {
        var n = V.getStyle(t, e),
          i = n && n.match(/^(\d+)(\.\d+)?px$/)
        return i ? Number(i[1]) : void 0
      }
      var we = !!(function () {
        var t = !1
        try {
          var e = Object.defineProperty({}, 'passive', {
            get: function () {
              t = !0
            },
          })
          window.addEventListener('e', null, e)
        } catch (t) {}
        return t
      })() && { passive: !0 }
      function Me(t, e, n) {
        t.addEventListener(e, n, we)
      }
      function Se(t, e, n) {
        t.removeEventListener(e, n, we)
      }
      function Ce(t, e, n, i, a) {
        return {
          type: t,
          chart: e,
          native: a || null,
          x: void 0 !== n ? n : null,
          y: void 0 !== i ? i : null,
        }
      }
      function Pe(t) {
        var e = document.createElement('div')
        return (e.className = t || ''), e
      }
      function Ae(t, e, n) {
        var i,
          a,
          r,
          o,
          s = t[me] || (t[me] = {}),
          l = (s.resizer = (function (t) {
            var e = Pe(ve),
              n = Pe(ve + '-expand'),
              i = Pe(ve + '-shrink')
            n.appendChild(Pe()),
              i.appendChild(Pe()),
              e.appendChild(n),
              e.appendChild(i),
              (e._reset = function () {
                ;(n.scrollLeft = 1e6),
                  (n.scrollTop = 1e6),
                  (i.scrollLeft = 1e6),
                  (i.scrollTop = 1e6)
              })
            var a = function () {
              e._reset(), t()
            }
            return (
              Me(n, 'scroll', a.bind(n, 'expand')),
              Me(i, 'scroll', a.bind(i, 'shrink')),
              e
            )
          })(
            ((i = function () {
              if (s.resizer) {
                var i = n.options.maintainAspectRatio && t.parentNode,
                  a = i ? i.clientWidth : 0
                e(Ce('resize', n)),
                  i && i.clientWidth < a && n.canvas && e(Ce('resize', n))
              }
            }),
            (r = !1),
            (o = []),
            function () {
              ;(o = Array.prototype.slice.call(arguments)),
                (a = a || this),
                r ||
                  ((r = !0),
                  V.requestAnimFrame.call(window, function () {
                    ;(r = !1), i.apply(a, o)
                  }))
            })
          ))
        !(function (t, e) {
          var n = t[me] || (t[me] = {}),
            i = (n.renderProxy = function (t) {
              t.animationName === xe && e()
            })
          V.each(ye, function (e) {
            Me(t, e, i)
          }),
            (n.reflow = !!t.offsetParent),
            t.classList.add(be)
        })(t, function () {
          if (s.resizer) {
            var e = t.parentNode
            e && e !== l.parentNode && e.insertBefore(l, e.firstChild),
              l._reset()
          }
        })
      }
      function De(t) {
        var e = t[me] || {},
          n = e.resizer
        delete e.resizer,
          (function (t) {
            var e = t[me] || {},
              n = e.renderProxy
            n &&
              (V.each(ye, function (e) {
                Se(t, e, n)
              }),
              delete e.renderProxy),
              t.classList.remove(be)
          })(t),
          n && n.parentNode && n.parentNode.removeChild(n)
      }
      var Te = {
        disableCSSInjection: !1,
        _enabled:
          'undefined' != typeof window && 'undefined' != typeof document,
        _ensureLoaded: function (t) {
          if (!this.disableCSSInjection) {
            var e = t.getRootNode ? t.getRootNode() : document
            !(function (t, e) {
              var n = t[me] || (t[me] = {})
              if (!n.containsStyles) {
                ;(n.containsStyles = !0), (e = '/* Chart.js */\n' + e)
                var i = document.createElement('style')
                i.setAttribute('type', 'text/css'),
                  i.appendChild(document.createTextNode(e)),
                  t.appendChild(i)
              }
            })(e.host ? e : document.head, pe)
          }
        },
        acquireContext: function (t, e) {
          'string' == typeof t
            ? (t = document.getElementById(t))
            : t.length && (t = t[0]),
            t && t.canvas && (t = t.canvas)
          var n = t && t.getContext && t.getContext('2d')
          return n && n.canvas === t
            ? (this._ensureLoaded(t),
              (function (t, e) {
                var n = t.style,
                  i = t.getAttribute('height'),
                  a = t.getAttribute('width')
                if (
                  ((t[me] = {
                    initial: {
                      height: i,
                      width: a,
                      style: {
                        display: n.display,
                        height: n.height,
                        width: n.width,
                      },
                    },
                  }),
                  (n.display = n.display || 'block'),
                  null === a || '' === a)
                ) {
                  var r = ke(t, 'width')
                  void 0 !== r && (t.width = r)
                }
                if (null === i || '' === i)
                  if ('' === t.style.height)
                    t.height = t.width / (e.options.aspectRatio || 2)
                  else {
                    var o = ke(t, 'height')
                    void 0 !== r && (t.height = o)
                  }
              })(t, e),
              n)
            : null
        },
        releaseContext: function (t) {
          var e = t.canvas
          if (e[me]) {
            var n = e[me].initial
            ;['height', 'width'].forEach(function (t) {
              var i = n[t]
              V.isNullOrUndef(i) ? e.removeAttribute(t) : e.setAttribute(t, i)
            }),
              V.each(n.style || {}, function (t, n) {
                e.style[n] = t
              }),
              (e.width = e.width),
              delete e[me]
          }
        },
        addEventListener: function (t, e, n) {
          var i = t.canvas
          if ('resize' !== e) {
            var a = n[me] || (n[me] = {})
            Me(
              i,
              e,
              ((a.proxies || (a.proxies = {}))[t.id + '_' + e] = function (e) {
                n(
                  (function (t, e) {
                    var n = _e[t.type] || t.type,
                      i = V.getRelativePosition(t, e)
                    return Ce(n, e, i.x, i.y, t)
                  })(e, t)
                )
              })
            )
          } else Ae(i, n, t)
        },
        removeEventListener: function (t, e, n) {
          var i = t.canvas
          if ('resize' !== e) {
            var a = ((n[me] || {}).proxies || {})[t.id + '_' + e]
            a && Se(i, e, a)
          } else De(i)
        },
      }
      ;(V.addEvent = Me), (V.removeEvent = Se)
      var Ie = Te._enabled
          ? Te
          : {
              acquireContext: function (t) {
                return (
                  t && t.canvas && (t = t.canvas),
                  (t && t.getContext('2d')) || null
                )
              },
            },
        Fe = V.extend(
          {
            initialize: function () {},
            acquireContext: function () {},
            releaseContext: function () {},
            addEventListener: function () {},
            removeEventListener: function () {},
          },
          Ie
        )
      z._set('global', { plugins: {} })
      var Le = {
          _plugins: [],
          _cacheId: 0,
          register: function (t) {
            var e = this._plugins
            ;[].concat(t).forEach(function (t) {
              ;-1 === e.indexOf(t) && e.push(t)
            }),
              this._cacheId++
          },
          unregister: function (t) {
            var e = this._plugins
            ;[].concat(t).forEach(function (t) {
              var n = e.indexOf(t)
              ;-1 !== n && e.splice(n, 1)
            }),
              this._cacheId++
          },
          clear: function () {
            ;(this._plugins = []), this._cacheId++
          },
          count: function () {
            return this._plugins.length
          },
          getAll: function () {
            return this._plugins
          },
          notify: function (t, e, n) {
            var i,
              a,
              r,
              o,
              s,
              l = this.descriptors(t),
              u = l.length
            for (i = 0; i < u; ++i)
              if (
                'function' == typeof (s = (r = (a = l[i]).plugin)[e]) &&
                ((o = [t].concat(n || [])).push(a.options),
                !1 === s.apply(r, o))
              )
                return !1
            return !0
          },
          descriptors: function (t) {
            var e = t.$plugins || (t.$plugins = {})
            if (e.id === this._cacheId) return e.descriptors
            var n = [],
              i = [],
              a = (t && t.config) || {},
              r = (a.options && a.options.plugins) || {}
            return (
              this._plugins.concat(a.plugins || []).forEach(function (t) {
                if (-1 === n.indexOf(t)) {
                  var e = t.id,
                    a = r[e]
                  !1 !== a &&
                    (!0 === a && (a = V.clone(z.global.plugins[e])),
                    n.push(t),
                    i.push({ plugin: t, options: a || {} }))
                }
              }),
              (e.descriptors = i),
              (e.id = this._cacheId),
              i
            )
          },
          _invalidate: function (t) {
            delete t.$plugins
          },
        },
        Oe = {
          constructors: {},
          defaults: {},
          registerScaleType: function (t, e, n) {
            ;(this.constructors[t] = e), (this.defaults[t] = V.clone(n))
          },
          getScaleConstructor: function (t) {
            return this.constructors.hasOwnProperty(t)
              ? this.constructors[t]
              : void 0
          },
          getScaleDefaults: function (t) {
            return this.defaults.hasOwnProperty(t)
              ? V.merge({}, [z.scale, this.defaults[t]])
              : {}
          },
          updateScaleDefaults: function (t, e) {
            this.defaults.hasOwnProperty(t) &&
              (this.defaults[t] = V.extend(this.defaults[t], e))
          },
          addScalesToLayout: function (t) {
            V.each(t.scales, function (e) {
              ;(e.fullWidth = e.options.fullWidth),
                (e.position = e.options.position),
                (e.weight = e.options.weight),
                ge.addBox(t, e)
            })
          },
        },
        Re = V.valueOrDefault,
        ze = V.rtl.getRtlAdapter
      z._set('global', {
        tooltips: {
          enabled: !0,
          custom: null,
          mode: 'nearest',
          position: 'average',
          intersect: !0,
          backgroundColor: 'rgba(0,0,0,0.8)',
          titleFontStyle: 'bold',
          titleSpacing: 2,
          titleMarginBottom: 6,
          titleFontColor: '#fff',
          titleAlign: 'left',
          bodySpacing: 2,
          bodyFontColor: '#fff',
          bodyAlign: 'left',
          footerFontStyle: 'bold',
          footerSpacing: 2,
          footerMarginTop: 6,
          footerFontColor: '#fff',
          footerAlign: 'left',
          yPadding: 6,
          xPadding: 6,
          caretPadding: 2,
          caretSize: 5,
          cornerRadius: 6,
          multiKeyBackground: '#fff',
          displayColors: !0,
          borderColor: 'rgba(0,0,0,0)',
          borderWidth: 0,
          callbacks: {
            beforeTitle: V.noop,
            title: function (t, e) {
              var n = '',
                i = e.labels,
                a = i ? i.length : 0
              if (t.length > 0) {
                var r = t[0]
                r.label
                  ? (n = r.label)
                  : r.xLabel
                  ? (n = r.xLabel)
                  : a > 0 && r.index < a && (n = i[r.index])
              }
              return n
            },
            afterTitle: V.noop,
            beforeBody: V.noop,
            beforeLabel: V.noop,
            label: function (t, e) {
              var n = e.datasets[t.datasetIndex].label || ''
              return (
                n && (n += ': '),
                V.isNullOrUndef(t.value) ? (n += t.yLabel) : (n += t.value),
                n
              )
            },
            labelColor: function (t, e) {
              var n = e.getDatasetMeta(t.datasetIndex).data[t.index]._view
              return {
                borderColor: n.borderColor,
                backgroundColor: n.backgroundColor,
              }
            },
            labelTextColor: function () {
              return this._options.bodyFontColor
            },
            afterLabel: V.noop,
            afterBody: V.noop,
            beforeFooter: V.noop,
            footer: V.noop,
            afterFooter: V.noop,
          },
        },
      })
      var Ne = {
        average: function (t) {
          if (!t.length) return !1
          var e,
            n,
            i = 0,
            a = 0,
            r = 0
          for (e = 0, n = t.length; e < n; ++e) {
            var o = t[e]
            if (o && o.hasValue()) {
              var s = o.tooltipPosition()
              ;(i += s.x), (a += s.y), ++r
            }
          }
          return { x: i / r, y: a / r }
        },
        nearest: function (t, e) {
          var n,
            i,
            a,
            r = e.x,
            o = e.y,
            s = Number.POSITIVE_INFINITY
          for (n = 0, i = t.length; n < i; ++n) {
            var l = t[n]
            if (l && l.hasValue()) {
              var u = l.getCenterPoint(),
                d = V.distanceBetweenPoints(e, u)
              d < s && ((s = d), (a = l))
            }
          }
          if (a) {
            var h = a.tooltipPosition()
            ;(r = h.x), (o = h.y)
          }
          return { x: r, y: o }
        },
      }
      function Be(t, e) {
        return (
          e && (V.isArray(e) ? Array.prototype.push.apply(t, e) : t.push(e)), t
        )
      }
      function Ee(t) {
        return ('string' == typeof t || t instanceof String) &&
          t.indexOf('\n') > -1
          ? t.split('\n')
          : t
      }
      function We(t) {
        var e = z.global
        return {
          xPadding: t.xPadding,
          yPadding: t.yPadding,
          xAlign: t.xAlign,
          yAlign: t.yAlign,
          rtl: t.rtl,
          textDirection: t.textDirection,
          bodyFontColor: t.bodyFontColor,
          _bodyFontFamily: Re(t.bodyFontFamily, e.defaultFontFamily),
          _bodyFontStyle: Re(t.bodyFontStyle, e.defaultFontStyle),
          _bodyAlign: t.bodyAlign,
          bodyFontSize: Re(t.bodyFontSize, e.defaultFontSize),
          bodySpacing: t.bodySpacing,
          titleFontColor: t.titleFontColor,
          _titleFontFamily: Re(t.titleFontFamily, e.defaultFontFamily),
          _titleFontStyle: Re(t.titleFontStyle, e.defaultFontStyle),
          titleFontSize: Re(t.titleFontSize, e.defaultFontSize),
          _titleAlign: t.titleAlign,
          titleSpacing: t.titleSpacing,
          titleMarginBottom: t.titleMarginBottom,
          footerFontColor: t.footerFontColor,
          _footerFontFamily: Re(t.footerFontFamily, e.defaultFontFamily),
          _footerFontStyle: Re(t.footerFontStyle, e.defaultFontStyle),
          footerFontSize: Re(t.footerFontSize, e.defaultFontSize),
          _footerAlign: t.footerAlign,
          footerSpacing: t.footerSpacing,
          footerMarginTop: t.footerMarginTop,
          caretSize: t.caretSize,
          cornerRadius: t.cornerRadius,
          backgroundColor: t.backgroundColor,
          opacity: 0,
          legendColorBackground: t.multiKeyBackground,
          displayColors: t.displayColors,
          borderColor: t.borderColor,
          borderWidth: t.borderWidth,
        }
      }
      function Ve(t, e) {
        return 'center' === e
          ? t.x + t.width / 2
          : 'right' === e
          ? t.x + t.width - t.xPadding
          : t.x + t.xPadding
      }
      function He(t) {
        return Be([], Ee(t))
      }
      var je = X.extend({
          initialize: function () {
            ;(this._model = We(this._options)), (this._lastActive = [])
          },
          getTitle: function () {
            var t = this,
              e = t._options,
              n = e.callbacks,
              i = n.beforeTitle.apply(t, arguments),
              a = n.title.apply(t, arguments),
              r = n.afterTitle.apply(t, arguments),
              o = []
            return (o = Be(o, Ee(i))), (o = Be(o, Ee(a))), (o = Be(o, Ee(r)))
          },
          getBeforeBody: function () {
            return He(this._options.callbacks.beforeBody.apply(this, arguments))
          },
          getBody: function (t, e) {
            var n = this,
              i = n._options.callbacks,
              a = []
            return (
              V.each(t, function (t) {
                var r = { before: [], lines: [], after: [] }
                Be(r.before, Ee(i.beforeLabel.call(n, t, e))),
                  Be(r.lines, i.label.call(n, t, e)),
                  Be(r.after, Ee(i.afterLabel.call(n, t, e))),
                  a.push(r)
              }),
              a
            )
          },
          getAfterBody: function () {
            return He(this._options.callbacks.afterBody.apply(this, arguments))
          },
          getFooter: function () {
            var t = this,
              e = t._options.callbacks,
              n = e.beforeFooter.apply(t, arguments),
              i = e.footer.apply(t, arguments),
              a = e.afterFooter.apply(t, arguments),
              r = []
            return (r = Be(r, Ee(n))), (r = Be(r, Ee(i))), (r = Be(r, Ee(a)))
          },
          update: function (t) {
            var e,
              n,
              i,
              a,
              r,
              o,
              s,
              l,
              u,
              d,
              h = this,
              c = h._options,
              f = h._model,
              g = (h._model = We(c)),
              p = h._active,
              m = h._data,
              v = { xAlign: f.xAlign, yAlign: f.yAlign },
              b = { x: f.x, y: f.y },
              x = { width: f.width, height: f.height },
              y = { x: f.caretX, y: f.caretY }
            if (p.length) {
              g.opacity = 1
              var _ = [],
                k = []
              y = Ne[c.position].call(h, p, h._eventPosition)
              var w = []
              for (e = 0, n = p.length; e < n; ++e)
                w.push(
                  ((i = p[e]),
                  (a = void 0),
                  (r = void 0),
                  (o = void 0),
                  (s = void 0),
                  (l = void 0),
                  (u = void 0),
                  (d = void 0),
                  (a = i._xScale),
                  (r = i._yScale || i._scale),
                  (o = i._index),
                  (s = i._datasetIndex),
                  (l = i._chart.getDatasetMeta(s).controller),
                  (u = l._getIndexScale()),
                  (d = l._getValueScale()),
                  {
                    xLabel: a ? a.getLabelForIndex(o, s) : '',
                    yLabel: r ? r.getLabelForIndex(o, s) : '',
                    label: u ? '' + u.getLabelForIndex(o, s) : '',
                    value: d ? '' + d.getLabelForIndex(o, s) : '',
                    index: o,
                    datasetIndex: s,
                    x: i._model.x,
                    y: i._model.y,
                  })
                )
              c.filter &&
                (w = w.filter(function (t) {
                  return c.filter(t, m)
                })),
                c.itemSort &&
                  (w = w.sort(function (t, e) {
                    return c.itemSort(t, e, m)
                  })),
                V.each(w, function (t) {
                  _.push(c.callbacks.labelColor.call(h, t, h._chart)),
                    k.push(c.callbacks.labelTextColor.call(h, t, h._chart))
                }),
                (g.title = h.getTitle(w, m)),
                (g.beforeBody = h.getBeforeBody(w, m)),
                (g.body = h.getBody(w, m)),
                (g.afterBody = h.getAfterBody(w, m)),
                (g.footer = h.getFooter(w, m)),
                (g.x = y.x),
                (g.y = y.y),
                (g.caretPadding = c.caretPadding),
                (g.labelColors = _),
                (g.labelTextColors = k),
                (g.dataPoints = w),
                (x = (function (t, e) {
                  var n = t._chart.ctx,
                    i = 2 * e.yPadding,
                    a = 0,
                    r = e.body,
                    o = r.reduce(function (t, e) {
                      return (
                        t + e.before.length + e.lines.length + e.after.length
                      )
                    }, 0)
                  o += e.beforeBody.length + e.afterBody.length
                  var s = e.title.length,
                    l = e.footer.length,
                    u = e.titleFontSize,
                    d = e.bodyFontSize,
                    h = e.footerFontSize
                  ;(i += s * u),
                    (i += s ? (s - 1) * e.titleSpacing : 0),
                    (i += s ? e.titleMarginBottom : 0),
                    (i += o * d),
                    (i += o ? (o - 1) * e.bodySpacing : 0),
                    (i += l ? e.footerMarginTop : 0),
                    (i += l * h),
                    (i += l ? (l - 1) * e.footerSpacing : 0)
                  var c = 0,
                    f = function (t) {
                      a = Math.max(a, n.measureText(t).width + c)
                    }
                  return (
                    (n.font = V.fontString(
                      u,
                      e._titleFontStyle,
                      e._titleFontFamily
                    )),
                    V.each(e.title, f),
                    (n.font = V.fontString(
                      d,
                      e._bodyFontStyle,
                      e._bodyFontFamily
                    )),
                    V.each(e.beforeBody.concat(e.afterBody), f),
                    (c = e.displayColors ? d + 2 : 0),
                    V.each(r, function (t) {
                      V.each(t.before, f),
                        V.each(t.lines, f),
                        V.each(t.after, f)
                    }),
                    (c = 0),
                    (n.font = V.fontString(
                      h,
                      e._footerFontStyle,
                      e._footerFontFamily
                    )),
                    V.each(e.footer, f),
                    { width: (a += 2 * e.xPadding), height: i }
                  )
                })(this, g)),
                (b = (function (t, e, n, i) {
                  var a = t.x,
                    r = t.y,
                    o = t.caretSize,
                    s = t.caretPadding,
                    l = t.cornerRadius,
                    u = n.xAlign,
                    d = n.yAlign,
                    h = o + s,
                    c = l + s
                  return (
                    'right' === u
                      ? (a -= e.width)
                      : 'center' === u &&
                        ((a -= e.width / 2) + e.width > i.width &&
                          (a = i.width - e.width),
                        a < 0 && (a = 0)),
                    'top' === d
                      ? (r += h)
                      : (r -= 'bottom' === d ? e.height + h : e.height / 2),
                    'center' === d
                      ? 'left' === u
                        ? (a += h)
                        : 'right' === u && (a -= h)
                      : 'left' === u
                      ? (a -= c)
                      : 'right' === u && (a += c),
                    { x: a, y: r }
                  )
                })(
                  g,
                  x,
                  (v = (function (t, e) {
                    var n,
                      i,
                      a,
                      r,
                      o,
                      s = t._model,
                      l = t._chart,
                      u = t._chart.chartArea,
                      d = 'center',
                      h = 'center'
                    s.y < e.height
                      ? (h = 'top')
                      : s.y > l.height - e.height && (h = 'bottom')
                    var c = (u.left + u.right) / 2,
                      f = (u.top + u.bottom) / 2
                    'center' === h
                      ? ((n = function (t) {
                          return t <= c
                        }),
                        (i = function (t) {
                          return t > c
                        }))
                      : ((n = function (t) {
                          return t <= e.width / 2
                        }),
                        (i = function (t) {
                          return t >= l.width - e.width / 2
                        })),
                      (a = function (t) {
                        return (
                          t + e.width + s.caretSize + s.caretPadding > l.width
                        )
                      }),
                      (r = function (t) {
                        return t - e.width - s.caretSize - s.caretPadding < 0
                      }),
                      (o = function (t) {
                        return t <= f ? 'top' : 'bottom'
                      }),
                      n(s.x)
                        ? ((d = 'left'),
                          a(s.x) && ((d = 'center'), (h = o(s.y))))
                        : i(s.x) &&
                          ((d = 'right'),
                          r(s.x) && ((d = 'center'), (h = o(s.y))))
                    var g = t._options
                    return {
                      xAlign: g.xAlign ? g.xAlign : d,
                      yAlign: g.yAlign ? g.yAlign : h,
                    }
                  })(this, x)),
                  h._chart
                ))
            } else g.opacity = 0
            return (
              (g.xAlign = v.xAlign),
              (g.yAlign = v.yAlign),
              (g.x = b.x),
              (g.y = b.y),
              (g.width = x.width),
              (g.height = x.height),
              (g.caretX = y.x),
              (g.caretY = y.y),
              (h._model = g),
              t && c.custom && c.custom.call(h, g),
              h
            )
          },
          drawCaret: function (t, e) {
            var n = this._chart.ctx,
              i = this._view,
              a = this.getCaretPosition(t, e, i)
            n.lineTo(a.x1, a.y1), n.lineTo(a.x2, a.y2), n.lineTo(a.x3, a.y3)
          },
          getCaretPosition: function (t, e, n) {
            var i,
              a,
              r,
              o,
              s,
              l,
              u = n.caretSize,
              d = n.cornerRadius,
              h = n.xAlign,
              c = n.yAlign,
              f = t.x,
              g = t.y,
              p = e.width,
              m = e.height
            if ('center' === c)
              (s = g + m / 2),
                'left' === h
                  ? ((a = (i = f) - u), (r = i), (o = s + u), (l = s - u))
                  : ((a = (i = f + p) + u), (r = i), (o = s - u), (l = s + u))
            else if (
              ('left' === h
                ? ((i = (a = f + d + u) - u), (r = a + u))
                : 'right' === h
                ? ((i = (a = f + p - d - u) - u), (r = a + u))
                : ((i = (a = n.caretX) - u), (r = a + u)),
              'top' === c)
            )
              (s = (o = g) - u), (l = o)
            else {
              ;(s = (o = g + m) + u), (l = o)
              var v = r
              ;(r = i), (i = v)
            }
            return { x1: i, x2: a, x3: r, y1: o, y2: s, y3: l }
          },
          drawTitle: function (t, e, n) {
            var i,
              a,
              r,
              o = e.title,
              s = o.length
            if (s) {
              var l = ze(e.rtl, e.x, e.width)
              for (
                t.x = Ve(e, e._titleAlign),
                  n.textAlign = l.textAlign(e._titleAlign),
                  n.textBaseline = 'middle',
                  i = e.titleFontSize,
                  a = e.titleSpacing,
                  n.fillStyle = e.titleFontColor,
                  n.font = V.fontString(
                    i,
                    e._titleFontStyle,
                    e._titleFontFamily
                  ),
                  r = 0;
                r < s;
                ++r
              )
                n.fillText(o[r], l.x(t.x), t.y + i / 2),
                  (t.y += i + a),
                  r + 1 === s && (t.y += e.titleMarginBottom - a)
            }
          },
          drawBody: function (t, e, n) {
            var i,
              a,
              r,
              o,
              s,
              l,
              u,
              d,
              h = e.bodyFontSize,
              c = e.bodySpacing,
              f = e._bodyAlign,
              g = e.body,
              p = e.displayColors,
              m = 0,
              v = p ? Ve(e, 'left') : 0,
              b = ze(e.rtl, e.x, e.width),
              x = function (e) {
                n.fillText(e, b.x(t.x + m), t.y + h / 2), (t.y += h + c)
              },
              y = b.textAlign(f)
            for (
              n.textAlign = f,
                n.textBaseline = 'middle',
                n.font = V.fontString(h, e._bodyFontStyle, e._bodyFontFamily),
                t.x = Ve(e, y),
                n.fillStyle = e.bodyFontColor,
                V.each(e.beforeBody, x),
                m =
                  p && 'right' !== y ? ('center' === f ? h / 2 + 1 : h + 2) : 0,
                s = 0,
                u = g.length;
              s < u;
              ++s
            ) {
              for (
                i = g[s],
                  a = e.labelTextColors[s],
                  r = e.labelColors[s],
                  n.fillStyle = a,
                  V.each(i.before, x),
                  l = 0,
                  d = (o = i.lines).length;
                l < d;
                ++l
              ) {
                if (p) {
                  var _ = b.x(v)
                  ;(n.fillStyle = e.legendColorBackground),
                    n.fillRect(b.leftForLtr(_, h), t.y, h, h),
                    (n.lineWidth = 1),
                    (n.strokeStyle = r.borderColor),
                    n.strokeRect(b.leftForLtr(_, h), t.y, h, h),
                    (n.fillStyle = r.backgroundColor),
                    n.fillRect(
                      b.leftForLtr(b.xPlus(_, 1), h - 2),
                      t.y + 1,
                      h - 2,
                      h - 2
                    ),
                    (n.fillStyle = a)
                }
                x(o[l])
              }
              V.each(i.after, x)
            }
            ;(m = 0), V.each(e.afterBody, x), (t.y -= c)
          },
          drawFooter: function (t, e, n) {
            var i,
              a,
              r = e.footer,
              o = r.length
            if (o) {
              var s = ze(e.rtl, e.x, e.width)
              for (
                t.x = Ve(e, e._footerAlign),
                  t.y += e.footerMarginTop,
                  n.textAlign = s.textAlign(e._footerAlign),
                  n.textBaseline = 'middle',
                  i = e.footerFontSize,
                  n.fillStyle = e.footerFontColor,
                  n.font = V.fontString(
                    i,
                    e._footerFontStyle,
                    e._footerFontFamily
                  ),
                  a = 0;
                a < o;
                ++a
              )
                n.fillText(r[a], s.x(t.x), t.y + i / 2),
                  (t.y += i + e.footerSpacing)
            }
          },
          drawBackground: function (t, e, n, i) {
            ;(n.fillStyle = e.backgroundColor),
              (n.strokeStyle = e.borderColor),
              (n.lineWidth = e.borderWidth)
            var a = e.xAlign,
              r = e.yAlign,
              o = t.x,
              s = t.y,
              l = i.width,
              u = i.height,
              d = e.cornerRadius
            n.beginPath(),
              n.moveTo(o + d, s),
              'top' === r && this.drawCaret(t, i),
              n.lineTo(o + l - d, s),
              n.quadraticCurveTo(o + l, s, o + l, s + d),
              'center' === r && 'right' === a && this.drawCaret(t, i),
              n.lineTo(o + l, s + u - d),
              n.quadraticCurveTo(o + l, s + u, o + l - d, s + u),
              'bottom' === r && this.drawCaret(t, i),
              n.lineTo(o + d, s + u),
              n.quadraticCurveTo(o, s + u, o, s + u - d),
              'center' === r && 'left' === a && this.drawCaret(t, i),
              n.lineTo(o, s + d),
              n.quadraticCurveTo(o, s, o + d, s),
              n.closePath(),
              n.fill(),
              e.borderWidth > 0 && n.stroke()
          },
          draw: function () {
            var t = this._chart.ctx,
              e = this._view
            if (0 !== e.opacity) {
              var n = { width: e.width, height: e.height },
                i = { x: e.x, y: e.y },
                a = Math.abs(e.opacity < 0.001) ? 0 : e.opacity,
                r =
                  e.title.length ||
                  e.beforeBody.length ||
                  e.body.length ||
                  e.afterBody.length ||
                  e.footer.length
              this._options.enabled &&
                r &&
                (t.save(),
                (t.globalAlpha = a),
                this.drawBackground(i, e, t, n),
                (i.y += e.yPadding),
                V.rtl.overrideTextDirection(t, e.textDirection),
                this.drawTitle(i, e, t),
                this.drawBody(i, e, t),
                this.drawFooter(i, e, t),
                V.rtl.restoreTextDirection(t, e.textDirection),
                t.restore())
            }
          },
          handleEvent: function (t) {
            var e,
              n = this,
              i = n._options
            return (
              (n._lastActive = n._lastActive || []),
              'mouseout' === t.type
                ? (n._active = [])
                : ((n._active = n._chart.getElementsAtEventForMode(
                    t,
                    i.mode,
                    i
                  )),
                  i.reverse && n._active.reverse()),
              (e = !V.arrayEquals(n._active, n._lastActive)) &&
                ((n._lastActive = n._active),
                (i.enabled || i.custom) &&
                  ((n._eventPosition = { x: t.x, y: t.y }),
                  n.update(!0),
                  n.pivot())),
              e
            )
          },
        }),
        qe = Ne,
        Ue = je
      Ue.positioners = qe
      var Ye = V.valueOrDefault
      function Ge() {
        return V.merge({}, [].slice.call(arguments), {
          merger: function (t, e, n, i) {
            if ('xAxes' === t || 'yAxes' === t) {
              var a,
                r,
                o,
                s = n[t].length
              for (e[t] || (e[t] = []), a = 0; a < s; ++a)
                (o = n[t][a]),
                  (r = Ye(o.type, 'xAxes' === t ? 'category' : 'linear')),
                  a >= e[t].length && e[t].push({}),
                  !e[t][a].type || (o.type && o.type !== e[t][a].type)
                    ? V.merge(e[t][a], [Oe.getScaleDefaults(r), o])
                    : V.merge(e[t][a], o)
            } else V._merger(t, e, n, i)
          },
        })
      }
      function Xe() {
        return V.merge({}, [].slice.call(arguments), {
          merger: function (t, e, n, i) {
            var a = e[t] || {},
              r = n[t]
            'scales' === t
              ? (e[t] = Ge(a, r))
              : 'scale' === t
              ? (e[t] = V.merge(a, [Oe.getScaleDefaults(r.type), r]))
              : V._merger(t, e, n, i)
          },
        })
      }
      function Ke(t) {
        var e = t.options
        V.each(t.scales, function (e) {
          ge.removeBox(t, e)
        }),
          (e = Xe(z.global, z[t.config.type], e)),
          (t.options = t.config.options = e),
          t.ensureScalesHaveIDs(),
          t.buildOrUpdateScales(),
          (t.tooltip._options = e.tooltips),
          t.tooltip.initialize()
      }
      function Ze(t, e, n) {
        var i,
          a = function (t) {
            return t.id === i
          }
        do {
          i = e + n++
        } while (V.findIndex(t, a) >= 0)
        return i
      }
      function $e(t) {
        return 'top' === t || 'bottom' === t
      }
      function Je(t, e) {
        return function (n, i) {
          return n[t] === i[t] ? n[e] - i[e] : n[t] - i[t]
        }
      }
      z._set('global', {
        elements: {},
        events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],
        hover: {
          onHover: null,
          mode: 'nearest',
          intersect: !0,
          animationDuration: 400,
        },
        onClick: null,
        maintainAspectRatio: !0,
        responsive: !0,
        responsiveAnimationDuration: 0,
      })
      var Qe = function (t, e) {
        return this.construct(t, e), this
      }
      V.extend(Qe.prototype, {
        construct: function (t, e) {
          var n = this
          e = (function (t) {
            var e = ((t = t || {}).data = t.data || {})
            return (
              (e.datasets = e.datasets || []),
              (e.labels = e.labels || []),
              (t.options = Xe(z.global, z[t.type], t.options || {})),
              t
            )
          })(e)
          var i = Fe.acquireContext(t, e),
            a = i && i.canvas,
            r = a && a.height,
            o = a && a.width
          ;(n.id = V.uid()),
            (n.ctx = i),
            (n.canvas = a),
            (n.config = e),
            (n.width = o),
            (n.height = r),
            (n.aspectRatio = r ? o / r : null),
            (n.options = e.options),
            (n._bufferedRender = !1),
            (n._layers = []),
            (n.chart = n),
            (n.controller = n),
            (Qe.instances[n.id] = n),
            Object.defineProperty(n, 'data', {
              get: function () {
                return n.config.data
              },
              set: function (t) {
                n.config.data = t
              },
            }),
            i && a
              ? (n.initialize(), n.update())
              : console.error(
                  "Failed to create chart: can't acquire context from the given item"
                )
        },
        initialize: function () {
          var t = this
          return (
            Le.notify(t, 'beforeInit'),
            V.retinaScale(t, t.options.devicePixelRatio),
            t.bindEvents(),
            t.options.responsive && t.resize(!0),
            t.initToolTip(),
            Le.notify(t, 'afterInit'),
            t
          )
        },
        clear: function () {
          return V.canvas.clear(this), this
        },
        stop: function () {
          return $.cancelAnimation(this), this
        },
        resize: function (t) {
          var e = this,
            n = e.options,
            i = e.canvas,
            a = (n.maintainAspectRatio && e.aspectRatio) || null,
            r = Math.max(0, Math.floor(V.getMaximumWidth(i))),
            o = Math.max(0, Math.floor(a ? r / a : V.getMaximumHeight(i)))
          if (
            (e.width !== r || e.height !== o) &&
            ((i.width = e.width = r),
            (i.height = e.height = o),
            (i.style.width = r + 'px'),
            (i.style.height = o + 'px'),
            V.retinaScale(e, n.devicePixelRatio),
            !t)
          ) {
            var s = { width: r, height: o }
            Le.notify(e, 'resize', [s]),
              n.onResize && n.onResize(e, s),
              e.stop(),
              e.update({ duration: n.responsiveAnimationDuration })
          }
        },
        ensureScalesHaveIDs: function () {
          var t = this.options,
            e = t.scales || {},
            n = t.scale
          V.each(e.xAxes, function (t, n) {
            t.id || (t.id = Ze(e.xAxes, 'x-axis-', n))
          }),
            V.each(e.yAxes, function (t, n) {
              t.id || (t.id = Ze(e.yAxes, 'y-axis-', n))
            }),
            n && (n.id = n.id || 'scale')
        },
        buildOrUpdateScales: function () {
          var t = this,
            e = t.options,
            n = t.scales || {},
            i = [],
            a = Object.keys(n).reduce(function (t, e) {
              return (t[e] = !1), t
            }, {})
          e.scales &&
            (i = i.concat(
              (e.scales.xAxes || []).map(function (t) {
                return { options: t, dtype: 'category', dposition: 'bottom' }
              }),
              (e.scales.yAxes || []).map(function (t) {
                return { options: t, dtype: 'linear', dposition: 'left' }
              })
            )),
            e.scale &&
              i.push({
                options: e.scale,
                dtype: 'radialLinear',
                isDefault: !0,
                dposition: 'chartArea',
              }),
            V.each(i, function (e) {
              var i = e.options,
                r = i.id,
                o = Ye(i.type, e.dtype)
              $e(i.position) !== $e(e.dposition) && (i.position = e.dposition),
                (a[r] = !0)
              var s = null
              if (r in n && n[r].type === o)
                ((s = n[r]).options = i), (s.ctx = t.ctx), (s.chart = t)
              else {
                var l = Oe.getScaleConstructor(o)
                if (!l) return
                ;(s = new l({
                  id: r,
                  type: o,
                  options: i,
                  ctx: t.ctx,
                  chart: t,
                })),
                  (n[s.id] = s)
              }
              s.mergeTicksOptions(), e.isDefault && (t.scale = s)
            }),
            V.each(a, function (t, e) {
              t || delete n[e]
            }),
            (t.scales = n),
            Oe.addScalesToLayout(this)
        },
        buildOrUpdateControllers: function () {
          var t,
            e,
            n = this,
            i = [],
            a = n.data.datasets
          for (t = 0, e = a.length; t < e; t++) {
            var r = a[t],
              o = n.getDatasetMeta(t),
              s = r.type || n.config.type
            if (
              (o.type &&
                o.type !== s &&
                (n.destroyDatasetMeta(t), (o = n.getDatasetMeta(t))),
              (o.type = s),
              (o.order = r.order || 0),
              (o.index = t),
              o.controller)
            )
              o.controller.updateIndex(t), o.controller.linkScales()
            else {
              var l = $t[o.type]
              if (void 0 === l)
                throw new Error('"' + o.type + '" is not a chart type.')
              ;(o.controller = new l(n, t)), i.push(o.controller)
            }
          }
          return i
        },
        resetElements: function () {
          var t = this
          V.each(
            t.data.datasets,
            function (e, n) {
              t.getDatasetMeta(n).controller.reset()
            },
            t
          )
        },
        reset: function () {
          this.resetElements(), this.tooltip.initialize()
        },
        update: function (t) {
          var e,
            n,
            i = this
          if (
            ((t && 'object' == typeof t) ||
              (t = { duration: t, lazy: arguments[1] }),
            Ke(i),
            Le._invalidate(i),
            !1 !== Le.notify(i, 'beforeUpdate'))
          ) {
            i.tooltip._data = i.data
            var a = i.buildOrUpdateControllers()
            for (e = 0, n = i.data.datasets.length; e < n; e++)
              i.getDatasetMeta(e).controller.buildOrUpdateElements()
            i.updateLayout(),
              i.options.animation &&
                i.options.animation.duration &&
                V.each(a, function (t) {
                  t.reset()
                }),
              i.updateDatasets(),
              i.tooltip.initialize(),
              (i.lastActive = []),
              Le.notify(i, 'afterUpdate'),
              i._layers.sort(Je('z', '_idx')),
              i._bufferedRender
                ? (i._bufferedRequest = {
                    duration: t.duration,
                    easing: t.easing,
                    lazy: t.lazy,
                  })
                : i.render(t)
          }
        },
        updateLayout: function () {
          var t = this
          !1 !== Le.notify(t, 'beforeLayout') &&
            (ge.update(this, this.width, this.height),
            (t._layers = []),
            V.each(
              t.boxes,
              function (e) {
                e._configure && e._configure(),
                  t._layers.push.apply(t._layers, e._layers())
              },
              t
            ),
            t._layers.forEach(function (t, e) {
              t._idx = e
            }),
            Le.notify(t, 'afterScaleUpdate'),
            Le.notify(t, 'afterLayout'))
        },
        updateDatasets: function () {
          if (!1 !== Le.notify(this, 'beforeDatasetsUpdate')) {
            for (var t = 0, e = this.data.datasets.length; t < e; ++t)
              this.updateDataset(t)
            Le.notify(this, 'afterDatasetsUpdate')
          }
        },
        updateDataset: function (t) {
          var e = this.getDatasetMeta(t),
            n = { meta: e, index: t }
          !1 !== Le.notify(this, 'beforeDatasetUpdate', [n]) &&
            (e.controller._update(), Le.notify(this, 'afterDatasetUpdate', [n]))
        },
        render: function (t) {
          var e = this
          ;(t && 'object' == typeof t) ||
            (t = { duration: t, lazy: arguments[1] })
          var n = e.options.animation,
            i = Ye(t.duration, n && n.duration),
            a = t.lazy
          if (!1 !== Le.notify(e, 'beforeRender')) {
            var r = function (t) {
              Le.notify(e, 'afterRender'), V.callback(n && n.onComplete, [t], e)
            }
            if (n && i) {
              var o = new Z({
                numSteps: i / 16.66,
                easing: t.easing || n.easing,
                render: function (t, e) {
                  var n = V.easing.effects[e.easing],
                    i = e.currentStep,
                    a = i / e.numSteps
                  t.draw(n(a), a, i)
                },
                onAnimationProgress: n.onProgress,
                onAnimationComplete: r,
              })
              $.addAnimation(e, o, i, a)
            } else e.draw(), r(new Z({ numSteps: 0, chart: e }))
            return e
          }
        },
        draw: function (t) {
          var e,
            n,
            i = this
          if (
            (i.clear(),
            V.isNullOrUndef(t) && (t = 1),
            i.transition(t),
            !(i.width <= 0 || i.height <= 0) &&
              !1 !== Le.notify(i, 'beforeDraw', [t]))
          ) {
            for (n = i._layers, e = 0; e < n.length && n[e].z <= 0; ++e)
              n[e].draw(i.chartArea)
            for (i.drawDatasets(t); e < n.length; ++e) n[e].draw(i.chartArea)
            i._drawTooltip(t), Le.notify(i, 'afterDraw', [t])
          }
        },
        transition: function (t) {
          for (var e = 0, n = (this.data.datasets || []).length; e < n; ++e)
            this.isDatasetVisible(e) &&
              this.getDatasetMeta(e).controller.transition(t)
          this.tooltip.transition(t)
        },
        _getSortedDatasetMetas: function (t) {
          var e,
            n,
            i = []
          for (e = 0, n = (this.data.datasets || []).length; e < n; ++e)
            (t && !this.isDatasetVisible(e)) || i.push(this.getDatasetMeta(e))
          return i.sort(Je('order', 'index')), i
        },
        _getSortedVisibleDatasetMetas: function () {
          return this._getSortedDatasetMetas(!0)
        },
        drawDatasets: function (t) {
          var e, n
          if (!1 !== Le.notify(this, 'beforeDatasetsDraw', [t])) {
            for (
              n = (e = this._getSortedVisibleDatasetMetas()).length - 1;
              n >= 0;
              --n
            )
              this.drawDataset(e[n], t)
            Le.notify(this, 'afterDatasetsDraw', [t])
          }
        },
        drawDataset: function (t, e) {
          var n = { meta: t, index: t.index, easingValue: e }
          !1 !== Le.notify(this, 'beforeDatasetDraw', [n]) &&
            (t.controller.draw(e), Le.notify(this, 'afterDatasetDraw', [n]))
        },
        _drawTooltip: function (t) {
          var e = this.tooltip,
            n = { tooltip: e, easingValue: t }
          !1 !== Le.notify(this, 'beforeTooltipDraw', [n]) &&
            (e.draw(), Le.notify(this, 'afterTooltipDraw', [n]))
        },
        getElementAtEvent: function (t) {
          return ae.modes.single(this, t)
        },
        getElementsAtEvent: function (t) {
          return ae.modes.label(this, t, { intersect: !0 })
        },
        getElementsAtXAxis: function (t) {
          return ae.modes['x-axis'](this, t, { intersect: !0 })
        },
        getElementsAtEventForMode: function (t, e, n) {
          var i = ae.modes[e]
          return 'function' == typeof i ? i(this, t, n) : []
        },
        getDatasetAtEvent: function (t) {
          return ae.modes.dataset(this, t, { intersect: !0 })
        },
        getDatasetMeta: function (t) {
          var e = this.data.datasets[t]
          e._meta || (e._meta = {})
          var n = e._meta[this.id]
          return (
            n ||
              (n = e._meta[this.id] =
                {
                  type: null,
                  data: [],
                  dataset: null,
                  controller: null,
                  hidden: null,
                  xAxisID: null,
                  yAxisID: null,
                  order: e.order || 0,
                  index: t,
                }),
            n
          )
        },
        getVisibleDatasetCount: function () {
          for (var t = 0, e = 0, n = this.data.datasets.length; e < n; ++e)
            this.isDatasetVisible(e) && t++
          return t
        },
        isDatasetVisible: function (t) {
          var e = this.getDatasetMeta(t)
          return 'boolean' == typeof e.hidden
            ? !e.hidden
            : !this.data.datasets[t].hidden
        },
        generateLegend: function () {
          return this.options.legendCallback(this)
        },
        destroyDatasetMeta: function (t) {
          var e = this.id,
            n = this.data.datasets[t],
            i = n._meta && n._meta[e]
          i && (i.controller.destroy(), delete n._meta[e])
        },
        destroy: function () {
          var t,
            e,
            n = this,
            i = n.canvas
          for (n.stop(), t = 0, e = n.data.datasets.length; t < e; ++t)
            n.destroyDatasetMeta(t)
          i &&
            (n.unbindEvents(),
            V.canvas.clear(n),
            Fe.releaseContext(n.ctx),
            (n.canvas = null),
            (n.ctx = null)),
            Le.notify(n, 'destroy'),
            delete Qe.instances[n.id]
        },
        toBase64Image: function () {
          return this.canvas.toDataURL.apply(this.canvas, arguments)
        },
        initToolTip: function () {
          var t = this
          t.tooltip = new Ue(
            {
              _chart: t,
              _chartInstance: t,
              _data: t.data,
              _options: t.options.tooltips,
            },
            t
          )
        },
        bindEvents: function () {
          var t = this,
            e = (t._listeners = {}),
            n = function () {
              t.eventHandler.apply(t, arguments)
            }
          V.each(t.options.events, function (i) {
            Fe.addEventListener(t, i, n), (e[i] = n)
          }),
            t.options.responsive &&
              ((n = function () {
                t.resize()
              }),
              Fe.addEventListener(t, 'resize', n),
              (e.resize = n))
        },
        unbindEvents: function () {
          var t = this,
            e = t._listeners
          e &&
            (delete t._listeners,
            V.each(e, function (e, n) {
              Fe.removeEventListener(t, n, e)
            }))
        },
        updateHoverStyle: function (t, e, n) {
          var i,
            a,
            r,
            o = n ? 'set' : 'remove'
          for (a = 0, r = t.length; a < r; ++a)
            (i = t[a]) &&
              this.getDatasetMeta(i._datasetIndex).controller[o + 'HoverStyle'](
                i
              )
          'dataset' === e &&
            this.getDatasetMeta(t[0]._datasetIndex).controller[
              '_' + o + 'DatasetHoverStyle'
            ]()
        },
        eventHandler: function (t) {
          var e = this,
            n = e.tooltip
          if (!1 !== Le.notify(e, 'beforeEvent', [t])) {
            ;(e._bufferedRender = !0), (e._bufferedRequest = null)
            var i = e.handleEvent(t)
            n && (i = n._start ? n.handleEvent(t) : i | n.handleEvent(t)),
              Le.notify(e, 'afterEvent', [t])
            var a = e._bufferedRequest
            return (
              a
                ? e.render(a)
                : i &&
                  !e.animating &&
                  (e.stop(),
                  e.render({
                    duration: e.options.hover.animationDuration,
                    lazy: !0,
                  })),
              (e._bufferedRender = !1),
              (e._bufferedRequest = null),
              e
            )
          }
        },
        handleEvent: function (t) {
          var e,
            n = this,
            i = n.options || {},
            a = i.hover
          return (
            (n.lastActive = n.lastActive || []),
            'mouseout' === t.type
              ? (n.active = [])
              : (n.active = n.getElementsAtEventForMode(t, a.mode, a)),
            V.callback(i.onHover || i.hover.onHover, [t.native, n.active], n),
            ('mouseup' !== t.type && 'click' !== t.type) ||
              (i.onClick && i.onClick.call(n, t.native, n.active)),
            n.lastActive.length && n.updateHoverStyle(n.lastActive, a.mode, !1),
            n.active.length &&
              a.mode &&
              n.updateHoverStyle(n.active, a.mode, !0),
            (e = !V.arrayEquals(n.active, n.lastActive)),
            (n.lastActive = n.active),
            e
          )
        },
      }),
        (Qe.instances = {})
      var tn = Qe
      ;(Qe.Controller = Qe),
        (Qe.types = {}),
        (V.configMerge = Xe),
        (V.scaleMerge = Ge)
      function en() {
        throw new Error(
          'This method is not implemented: either no adapter can be found or an incomplete integration was provided.'
        )
      }
      function nn(t) {
        this.options = t || {}
      }
      V.extend(nn.prototype, {
        formats: en,
        parse: en,
        format: en,
        add: en,
        diff: en,
        startOf: en,
        endOf: en,
        _create: function (t) {
          return t
        },
      }),
        (nn.override = function (t) {
          V.extend(nn.prototype, t)
        })
      var an = { _date: nn },
        rn = {
          formatters: {
            values: function (t) {
              return V.isArray(t) ? t : '' + t
            },
            linear: function (t, e, n) {
              var i = n.length > 3 ? n[2] - n[1] : n[1] - n[0]
              Math.abs(i) > 1 && t !== Math.floor(t) && (i = t - Math.floor(t))
              var a = V.log10(Math.abs(i)),
                r = ''
              if (0 !== t)
                if (
                  Math.max(Math.abs(n[0]), Math.abs(n[n.length - 1])) < 1e-4
                ) {
                  var o = V.log10(Math.abs(t)),
                    s = Math.floor(o) - Math.floor(a)
                  ;(s = Math.max(Math.min(s, 20), 0)), (r = t.toExponential(s))
                } else {
                  var l = -1 * Math.floor(a)
                  ;(l = Math.max(Math.min(l, 20), 0)), (r = t.toFixed(l))
                }
              else r = '0'
              return r
            },
            logarithmic: function (t, e, n) {
              var i = t / Math.pow(10, Math.floor(V.log10(t)))
              return 0 === t
                ? '0'
                : 1 === i || 2 === i || 5 === i || 0 === e || e === n.length - 1
                ? t.toExponential()
                : ''
            },
          },
        },
        on = V.isArray,
        sn = V.isNullOrUndef,
        ln = V.valueOrDefault,
        un = V.valueAtIndexOrDefault
      function dn(t, e, n) {
        var i,
          a = t.getTicks().length,
          r = Math.min(e, a - 1),
          o = t.getPixelForTick(r),
          s = t._startPixel,
          l = t._endPixel
        if (
          !(
            n &&
            ((i =
              1 === a
                ? Math.max(o - s, l - o)
                : 0 === e
                ? (t.getPixelForTick(1) - o) / 2
                : (o - t.getPixelForTick(r - 1)) / 2),
            (o += r < e ? i : -i) < s - 1e-6 || o > l + 1e-6)
          )
        )
          return o
      }
      function hn(t, e, n, i) {
        var a,
          r,
          o,
          s,
          l,
          u,
          d,
          h,
          c,
          f,
          g,
          p,
          m,
          v = n.length,
          b = [],
          x = [],
          y = []
        for (a = 0; a < v; ++a) {
          if (
            ((s = n[a].label),
            (l = n[a].major ? e.major : e.minor),
            (t.font = u = l.string),
            (d = i[u] = i[u] || { data: {}, gc: [] }),
            (h = l.lineHeight),
            (c = f = 0),
            sn(s) || on(s))
          ) {
            if (on(s))
              for (r = 0, o = s.length; r < o; ++r)
                (g = s[r]),
                  sn(g) ||
                    on(g) ||
                    ((c = V.measureText(t, d.data, d.gc, c, g)), (f += h))
          } else (c = V.measureText(t, d.data, d.gc, c, s)), (f = h)
          b.push(c), x.push(f), y.push(h / 2)
        }
        function _(t) {
          return { width: b[t] || 0, height: x[t] || 0, offset: y[t] || 0 }
        }
        return (
          (function (t, e) {
            V.each(t, function (t) {
              var n,
                i = t.gc,
                a = i.length / 2
              if (a > e) {
                for (n = 0; n < a; ++n) delete t.data[i[n]]
                i.splice(0, a)
              }
            })
          })(i, v),
          (p = b.indexOf(Math.max.apply(null, b))),
          (m = x.indexOf(Math.max.apply(null, x))),
          { first: _(0), last: _(v - 1), widest: _(p), highest: _(m) }
        )
      }
      function cn(t) {
        return t.drawTicks ? t.tickMarkLength : 0
      }
      function fn(t) {
        var e, n
        return t.display
          ? ((e = V.options._parseFont(t)),
            (n = V.options.toPadding(t.padding)),
            e.lineHeight + n.height)
          : 0
      }
      function gn(t, e) {
        return V.extend(
          V.options._parseFont({
            fontFamily: ln(e.fontFamily, t.fontFamily),
            fontSize: ln(e.fontSize, t.fontSize),
            fontStyle: ln(e.fontStyle, t.fontStyle),
            lineHeight: ln(e.lineHeight, t.lineHeight),
          }),
          {
            color: V.options.resolve([
              e.fontColor,
              t.fontColor,
              z.global.defaultFontColor,
            ]),
          }
        )
      }
      function pn(t) {
        var e = gn(t, t.minor)
        return { minor: e, major: t.major.enabled ? gn(t, t.major) : e }
      }
      function mn(t) {
        var e,
          n,
          i,
          a = []
        for (n = 0, i = t.length; n < i; ++n)
          void 0 !== (e = t[n])._index && a.push(e)
        return a
      }
      function vn(t, e, n, i) {
        var a,
          r,
          o,
          s,
          l = ln(n, 0),
          u = Math.min(ln(i, t.length), t.length),
          d = 0
        for (
          e = Math.ceil(e), i && (e = (a = i - n) / Math.floor(a / e)), s = l;
          s < 0;

        )
          d++, (s = Math.round(l + d * e))
        for (r = Math.max(l, 0); r < u; r++)
          (o = t[r]),
            r === s
              ? ((o._index = r), d++, (s = Math.round(l + d * e)))
              : delete o.label
      }
      z._set('scale', {
        display: !0,
        position: 'left',
        offset: !1,
        gridLines: {
          display: !0,
          color: 'rgba(0,0,0,0.1)',
          lineWidth: 1,
          drawBorder: !0,
          drawOnChartArea: !0,
          drawTicks: !0,
          tickMarkLength: 10,
          zeroLineWidth: 1,
          zeroLineColor: 'rgba(0,0,0,0.25)',
          zeroLineBorderDash: [],
          zeroLineBorderDashOffset: 0,
          offsetGridLines: !1,
          borderDash: [],
          borderDashOffset: 0,
        },
        scaleLabel: {
          display: !1,
          labelString: '',
          padding: { top: 4, bottom: 4 },
        },
        ticks: {
          beginAtZero: !1,
          minRotation: 0,
          maxRotation: 50,
          mirror: !1,
          padding: 0,
          reverse: !1,
          display: !0,
          autoSkip: !0,
          autoSkipPadding: 0,
          labelOffset: 0,
          callback: rn.formatters.values,
          minor: {},
          major: {},
        },
      })
      var bn = X.extend({
        zeroLineIndex: 0,
        getPadding: function () {
          return {
            left: this.paddingLeft || 0,
            top: this.paddingTop || 0,
            right: this.paddingRight || 0,
            bottom: this.paddingBottom || 0,
          }
        },
        getTicks: function () {
          return this._ticks
        },
        _getLabels: function () {
          var t = this.chart.data
          return (
            this.options.labels ||
            (this.isHorizontal() ? t.xLabels : t.yLabels) ||
            t.labels ||
            []
          )
        },
        mergeTicksOptions: function () {},
        beforeUpdate: function () {
          V.callback(this.options.beforeUpdate, [this])
        },
        update: function (t, e, n) {
          var i,
            a,
            r,
            o,
            s,
            l = this,
            u = l.options.ticks,
            d = u.sampleSize
          if (
            (l.beforeUpdate(),
            (l.maxWidth = t),
            (l.maxHeight = e),
            (l.margins = V.extend({ left: 0, right: 0, top: 0, bottom: 0 }, n)),
            (l._ticks = null),
            (l.ticks = null),
            (l._labelSizes = null),
            (l._maxLabelLines = 0),
            (l.longestLabelWidth = 0),
            (l.longestTextCache = l.longestTextCache || {}),
            (l._gridLineItems = null),
            (l._labelItems = null),
            l.beforeSetDimensions(),
            l.setDimensions(),
            l.afterSetDimensions(),
            l.beforeDataLimits(),
            l.determineDataLimits(),
            l.afterDataLimits(),
            l.beforeBuildTicks(),
            (o = l.buildTicks() || []),
            (!(o = l.afterBuildTicks(o) || o) || !o.length) && l.ticks)
          )
            for (o = [], i = 0, a = l.ticks.length; i < a; ++i)
              o.push({ value: l.ticks[i], major: !1 })
          return (
            (l._ticks = o),
            (s = d < o.length),
            (r = l._convertTicksToLabels(
              s
                ? (function (t, e) {
                    for (
                      var n = [], i = t.length / e, a = 0, r = t.length;
                      a < r;
                      a += i
                    )
                      n.push(t[Math.floor(a)])
                    return n
                  })(o, d)
                : o
            )),
            l._configure(),
            l.beforeCalculateTickRotation(),
            l.calculateTickRotation(),
            l.afterCalculateTickRotation(),
            l.beforeFit(),
            l.fit(),
            l.afterFit(),
            (l._ticksToDraw =
              u.display && (u.autoSkip || 'auto' === u.source)
                ? l._autoSkip(o)
                : o),
            s && (r = l._convertTicksToLabels(l._ticksToDraw)),
            (l.ticks = r),
            l.afterUpdate(),
            l.minSize
          )
        },
        _configure: function () {
          var t,
            e,
            n = this,
            i = n.options.ticks.reverse
          n.isHorizontal()
            ? ((t = n.left), (e = n.right))
            : ((t = n.top), (e = n.bottom), (i = !i)),
            (n._startPixel = t),
            (n._endPixel = e),
            (n._reversePixels = i),
            (n._length = e - t)
        },
        afterUpdate: function () {
          V.callback(this.options.afterUpdate, [this])
        },
        beforeSetDimensions: function () {
          V.callback(this.options.beforeSetDimensions, [this])
        },
        setDimensions: function () {
          var t = this
          t.isHorizontal()
            ? ((t.width = t.maxWidth), (t.left = 0), (t.right = t.width))
            : ((t.height = t.maxHeight), (t.top = 0), (t.bottom = t.height)),
            (t.paddingLeft = 0),
            (t.paddingTop = 0),
            (t.paddingRight = 0),
            (t.paddingBottom = 0)
        },
        afterSetDimensions: function () {
          V.callback(this.options.afterSetDimensions, [this])
        },
        beforeDataLimits: function () {
          V.callback(this.options.beforeDataLimits, [this])
        },
        determineDataLimits: V.noop,
        afterDataLimits: function () {
          V.callback(this.options.afterDataLimits, [this])
        },
        beforeBuildTicks: function () {
          V.callback(this.options.beforeBuildTicks, [this])
        },
        buildTicks: V.noop,
        afterBuildTicks: function (t) {
          var e = this
          return on(t) && t.length
            ? V.callback(e.options.afterBuildTicks, [e, t])
            : ((e.ticks =
                V.callback(e.options.afterBuildTicks, [e, e.ticks]) || e.ticks),
              t)
        },
        beforeTickToLabelConversion: function () {
          V.callback(this.options.beforeTickToLabelConversion, [this])
        },
        convertTicksToLabels: function () {
          var t = this.options.ticks
          this.ticks = this.ticks.map(t.userCallback || t.callback, this)
        },
        afterTickToLabelConversion: function () {
          V.callback(this.options.afterTickToLabelConversion, [this])
        },
        beforeCalculateTickRotation: function () {
          V.callback(this.options.beforeCalculateTickRotation, [this])
        },
        calculateTickRotation: function () {
          var t,
            e,
            n,
            i,
            a,
            r,
            o,
            s = this,
            l = s.options,
            u = l.ticks,
            d = s.getTicks().length,
            h = u.minRotation || 0,
            c = u.maxRotation,
            f = h
          !s._isVisible() || !u.display || h >= c || d <= 1 || !s.isHorizontal()
            ? (s.labelRotation = h)
            : ((e = (t = s._getLabelSizes()).widest.width),
              (n = t.highest.height - t.highest.offset),
              (i = Math.min(s.maxWidth, s.chart.width - e)),
              e + 6 > (a = l.offset ? s.maxWidth / d : i / (d - 1)) &&
                ((a = i / (d - (l.offset ? 0.5 : 1))),
                (r =
                  s.maxHeight - cn(l.gridLines) - u.padding - fn(l.scaleLabel)),
                (o = Math.sqrt(e * e + n * n)),
                (f = V.toDegrees(
                  Math.min(
                    Math.asin(Math.min((t.highest.height + 6) / a, 1)),
                    Math.asin(Math.min(r / o, 1)) - Math.asin(n / o)
                  )
                )),
                (f = Math.max(h, Math.min(c, f)))),
              (s.labelRotation = f))
        },
        afterCalculateTickRotation: function () {
          V.callback(this.options.afterCalculateTickRotation, [this])
        },
        beforeFit: function () {
          V.callback(this.options.beforeFit, [this])
        },
        fit: function () {
          var t = this,
            e = (t.minSize = { width: 0, height: 0 }),
            n = t.chart,
            i = t.options,
            a = i.ticks,
            r = i.scaleLabel,
            o = i.gridLines,
            s = t._isVisible(),
            l = 'bottom' === i.position,
            u = t.isHorizontal()
          if (
            (u ? (e.width = t.maxWidth) : s && (e.width = cn(o) + fn(r)),
            u ? s && (e.height = cn(o) + fn(r)) : (e.height = t.maxHeight),
            a.display && s)
          ) {
            var d = pn(a),
              h = t._getLabelSizes(),
              c = h.first,
              f = h.last,
              g = h.widest,
              p = h.highest,
              m = 0.4 * d.minor.lineHeight,
              v = a.padding
            if (u) {
              var b = 0 !== t.labelRotation,
                x = V.toRadians(t.labelRotation),
                y = Math.cos(x),
                _ = Math.sin(x),
                k =
                  _ * g.width +
                  y * (p.height - (b ? p.offset : 0)) +
                  (b ? 0 : m)
              e.height = Math.min(t.maxHeight, e.height + k + v)
              var w,
                M,
                S = t.getPixelForTick(0) - t.left,
                C = t.right - t.getPixelForTick(t.getTicks().length - 1)
              b
                ? ((w = l
                    ? y * c.width + _ * c.offset
                    : _ * (c.height - c.offset)),
                  (M = l
                    ? _ * (f.height - f.offset)
                    : y * f.width + _ * f.offset))
                : ((w = c.width / 2), (M = f.width / 2)),
                (t.paddingLeft =
                  Math.max(((w - S) * t.width) / (t.width - S), 0) + 3),
                (t.paddingRight =
                  Math.max(((M - C) * t.width) / (t.width - C), 0) + 3)
            } else {
              var P = a.mirror ? 0 : g.width + v + m
              ;(e.width = Math.min(t.maxWidth, e.width + P)),
                (t.paddingTop = c.height / 2),
                (t.paddingBottom = f.height / 2)
            }
          }
          t.handleMargins(),
            u
              ? ((t.width = t._length =
                  n.width - t.margins.left - t.margins.right),
                (t.height = e.height))
              : ((t.width = e.width),
                (t.height = t._length =
                  n.height - t.margins.top - t.margins.bottom))
        },
        handleMargins: function () {
          var t = this
          t.margins &&
            ((t.margins.left = Math.max(t.paddingLeft, t.margins.left)),
            (t.margins.top = Math.max(t.paddingTop, t.margins.top)),
            (t.margins.right = Math.max(t.paddingRight, t.margins.right)),
            (t.margins.bottom = Math.max(t.paddingBottom, t.margins.bottom)))
        },
        afterFit: function () {
          V.callback(this.options.afterFit, [this])
        },
        isHorizontal: function () {
          var t = this.options.position
          return 'top' === t || 'bottom' === t
        },
        isFullWidth: function () {
          return this.options.fullWidth
        },
        getRightValue: function (t) {
          if (sn(t)) return NaN
          if (('number' == typeof t || t instanceof Number) && !isFinite(t))
            return NaN
          if (t)
            if (this.isHorizontal()) {
              if (void 0 !== t.x) return this.getRightValue(t.x)
            } else if (void 0 !== t.y) return this.getRightValue(t.y)
          return t
        },
        _convertTicksToLabels: function (t) {
          var e,
            n,
            i,
            a = this
          for (
            a.ticks = t.map(function (t) {
              return t.value
            }),
              a.beforeTickToLabelConversion(),
              e = a.convertTicksToLabels(t) || a.ticks,
              a.afterTickToLabelConversion(),
              n = 0,
              i = t.length;
            n < i;
            ++n
          )
            t[n].label = e[n]
          return e
        },
        _getLabelSizes: function () {
          var t = this,
            e = t._labelSizes
          return (
            e ||
              ((t._labelSizes = e =
                hn(
                  t.ctx,
                  pn(t.options.ticks),
                  t.getTicks(),
                  t.longestTextCache
                )),
              (t.longestLabelWidth = e.widest.width)),
            e
          )
        },
        _parseValue: function (t) {
          var e, n, i, a
          return (
            on(t)
              ? ((e = +this.getRightValue(t[0])),
                (n = +this.getRightValue(t[1])),
                (i = Math.min(e, n)),
                (a = Math.max(e, n)))
              : ((e = void 0),
                (n = t = +this.getRightValue(t)),
                (i = t),
                (a = t)),
            { min: i, max: a, start: e, end: n }
          )
        },
        _getScaleLabel: function (t) {
          var e = this._parseValue(t)
          return void 0 !== e.start
            ? '[' + e.start + ', ' + e.end + ']'
            : +this.getRightValue(t)
        },
        getLabelForIndex: V.noop,
        getPixelForValue: V.noop,
        getValueForPixel: V.noop,
        getPixelForTick: function (t) {
          var e = this.options.offset,
            n = this._ticks.length,
            i = 1 / Math.max(n - (e ? 0 : 1), 1)
          return t < 0 || t > n - 1
            ? null
            : this.getPixelForDecimal(t * i + (e ? i / 2 : 0))
        },
        getPixelForDecimal: function (t) {
          return (
            this._reversePixels && (t = 1 - t),
            this._startPixel + t * this._length
          )
        },
        getDecimalForPixel: function (t) {
          var e = (t - this._startPixel) / this._length
          return this._reversePixels ? 1 - e : e
        },
        getBasePixel: function () {
          return this.getPixelForValue(this.getBaseValue())
        },
        getBaseValue: function () {
          var t = this.min,
            e = this.max
          return this.beginAtZero
            ? 0
            : t < 0 && e < 0
            ? e
            : t > 0 && e > 0
            ? t
            : 0
        },
        _autoSkip: function (t) {
          var e,
            n,
            i,
            a,
            r = this.options.ticks,
            o = this._length,
            s = r.maxTicksLimit || o / this._tickSize() + 1,
            l = r.major.enabled
              ? (function (t) {
                  var e,
                    n,
                    i = []
                  for (e = 0, n = t.length; e < n; e++) t[e].major && i.push(e)
                  return i
                })(t)
              : [],
            u = l.length,
            d = l[0],
            h = l[u - 1]
          if (u > s)
            return (
              (function (t, e, n) {
                var i,
                  a,
                  r = 0,
                  o = e[0]
                for (n = Math.ceil(n), i = 0; i < t.length; i++)
                  (a = t[i]),
                    i === o
                      ? ((a._index = i), (o = e[++r * n]))
                      : delete a.label
              })(t, l, u / s),
              mn(t)
            )
          if (
            ((i = (function (t, e, n, i) {
              var a,
                r,
                o,
                s,
                l = (function (t) {
                  var e,
                    n,
                    i = t.length
                  if (i < 2) return !1
                  for (n = t[0], e = 1; e < i; ++e)
                    if (t[e] - t[e - 1] !== n) return !1
                  return n
                })(t),
                u = (e.length - 1) / i
              if (!l) return Math.max(u, 1)
              for (o = 0, s = (a = V.math._factorize(l)).length - 1; o < s; o++)
                if ((r = a[o]) > u) return r
              return Math.max(u, 1)
            })(l, t, 0, s)),
            u > 0)
          ) {
            for (e = 0, n = u - 1; e < n; e++) vn(t, i, l[e], l[e + 1])
            return (
              (a = u > 1 ? (h - d) / (u - 1) : null),
              vn(t, i, V.isNullOrUndef(a) ? 0 : d - a, d),
              vn(t, i, h, V.isNullOrUndef(a) ? t.length : h + a),
              mn(t)
            )
          }
          return vn(t, i), mn(t)
        },
        _tickSize: function () {
          var t = this.options.ticks,
            e = V.toRadians(this.labelRotation),
            n = Math.abs(Math.cos(e)),
            i = Math.abs(Math.sin(e)),
            a = this._getLabelSizes(),
            r = t.autoSkipPadding || 0,
            o = a ? a.widest.width + r : 0,
            s = a ? a.highest.height + r : 0
          return this.isHorizontal()
            ? s * n > o * i
              ? o / n
              : s / i
            : s * i < o * n
            ? s / n
            : o / i
        },
        _isVisible: function () {
          var t,
            e,
            n,
            i = this.chart,
            a = this.options.display
          if ('auto' !== a) return !!a
          for (t = 0, e = i.data.datasets.length; t < e; ++t)
            if (
              i.isDatasetVisible(t) &&
              ((n = i.getDatasetMeta(t)).xAxisID === this.id ||
                n.yAxisID === this.id)
            )
              return !0
          return !1
        },
        _computeGridLineItems: function (t) {
          var e,
            n,
            i,
            a,
            r,
            o,
            s,
            l,
            u,
            d,
            h,
            c,
            f,
            g,
            p,
            m,
            v,
            b = this,
            x = b.chart,
            y = b.options,
            _ = y.gridLines,
            k = y.position,
            w = _.offsetGridLines,
            M = b.isHorizontal(),
            S = b._ticksToDraw,
            C = S.length + (w ? 1 : 0),
            P = cn(_),
            A = [],
            D = _.drawBorder ? un(_.lineWidth, 0, 0) : 0,
            T = D / 2,
            I = V._alignPixel,
            F = function (t) {
              return I(x, t, D)
            }
          for (
            'top' === k
              ? ((e = F(b.bottom)),
                (s = b.bottom - P),
                (u = e - T),
                (h = F(t.top) + T),
                (f = t.bottom))
              : 'bottom' === k
              ? ((e = F(b.top)),
                (h = t.top),
                (f = F(t.bottom) - T),
                (s = e + T),
                (u = b.top + P))
              : 'left' === k
              ? ((e = F(b.right)),
                (o = b.right - P),
                (l = e - T),
                (d = F(t.left) + T),
                (c = t.right))
              : ((e = F(b.left)),
                (d = t.left),
                (c = F(t.right) - T),
                (o = e + T),
                (l = b.left + P)),
              n = 0;
            n < C;
            ++n
          )
            (i = S[n] || {}),
              (sn(i.label) && n < S.length) ||
                (n === b.zeroLineIndex && y.offset === w
                  ? ((g = _.zeroLineWidth),
                    (p = _.zeroLineColor),
                    (m = _.zeroLineBorderDash || []),
                    (v = _.zeroLineBorderDashOffset || 0))
                  : ((g = un(_.lineWidth, n, 1)),
                    (p = un(_.color, n, 'rgba(0,0,0,0.1)')),
                    (m = _.borderDash || []),
                    (v = _.borderDashOffset || 0)),
                void 0 !== (a = dn(b, i._index || n, w)) &&
                  ((r = I(x, a, g)),
                  M ? (o = l = d = c = r) : (s = u = h = f = r),
                  A.push({
                    tx1: o,
                    ty1: s,
                    tx2: l,
                    ty2: u,
                    x1: d,
                    y1: h,
                    x2: c,
                    y2: f,
                    width: g,
                    color: p,
                    borderDash: m,
                    borderDashOffset: v,
                  })))
          return (A.ticksLength = C), (A.borderValue = e), A
        },
        _computeLabelItems: function () {
          var t,
            e,
            n,
            i,
            a,
            r,
            o,
            s,
            l,
            u,
            d,
            h,
            c = this,
            f = c.options,
            g = f.ticks,
            p = f.position,
            m = g.mirror,
            v = c.isHorizontal(),
            b = c._ticksToDraw,
            x = pn(g),
            y = g.padding,
            _ = cn(f.gridLines),
            k = -V.toRadians(c.labelRotation),
            w = []
          for (
            'top' === p
              ? ((r = c.bottom - _ - y), (o = k ? 'left' : 'center'))
              : 'bottom' === p
              ? ((r = c.top + _ + y), (o = k ? 'right' : 'center'))
              : 'left' === p
              ? ((a = c.right - (m ? 0 : _) - y), (o = m ? 'left' : 'right'))
              : ((a = c.left + (m ? 0 : _) + y), (o = m ? 'right' : 'left')),
              t = 0,
              e = b.length;
            t < e;
            ++t
          )
            (i = (n = b[t]).label),
              sn(i) ||
                ((s = c.getPixelForTick(n._index || t) + g.labelOffset),
                (u = (l = n.major ? x.major : x.minor).lineHeight),
                (d = on(i) ? i.length : 1),
                v
                  ? ((a = s),
                    (h =
                      'top' === p
                        ? ((k ? 1 : 0.5) - d) * u
                        : (k ? 0 : 0.5) * u))
                  : ((r = s), (h = ((1 - d) * u) / 2)),
                w.push({
                  x: a,
                  y: r,
                  rotation: k,
                  label: i,
                  font: l,
                  textOffset: h,
                  textAlign: o,
                }))
          return w
        },
        _drawGrid: function (t) {
          var e = this,
            n = e.options.gridLines
          if (n.display) {
            var i,
              a,
              r,
              o,
              s,
              l = e.ctx,
              u = e.chart,
              d = V._alignPixel,
              h = n.drawBorder ? un(n.lineWidth, 0, 0) : 0,
              c =
                e._gridLineItems ||
                (e._gridLineItems = e._computeGridLineItems(t))
            for (r = 0, o = c.length; r < o; ++r)
              (i = (s = c[r]).width),
                (a = s.color),
                i &&
                  a &&
                  (l.save(),
                  (l.lineWidth = i),
                  (l.strokeStyle = a),
                  l.setLineDash &&
                    (l.setLineDash(s.borderDash),
                    (l.lineDashOffset = s.borderDashOffset)),
                  l.beginPath(),
                  n.drawTicks &&
                    (l.moveTo(s.tx1, s.ty1), l.lineTo(s.tx2, s.ty2)),
                  n.drawOnChartArea &&
                    (l.moveTo(s.x1, s.y1), l.lineTo(s.x2, s.y2)),
                  l.stroke(),
                  l.restore())
            if (h) {
              var f,
                g,
                p,
                m,
                v = h,
                b = un(n.lineWidth, c.ticksLength - 1, 1),
                x = c.borderValue
              e.isHorizontal()
                ? ((f = d(u, e.left, v) - v / 2),
                  (g = d(u, e.right, b) + b / 2),
                  (p = m = x))
                : ((p = d(u, e.top, v) - v / 2),
                  (m = d(u, e.bottom, b) + b / 2),
                  (f = g = x)),
                (l.lineWidth = h),
                (l.strokeStyle = un(n.color, 0)),
                l.beginPath(),
                l.moveTo(f, p),
                l.lineTo(g, m),
                l.stroke()
            }
          }
        },
        _drawLabels: function () {
          var t = this
          if (t.options.ticks.display) {
            var e,
              n,
              i,
              a,
              r,
              o,
              s,
              l,
              u = t.ctx,
              d = t._labelItems || (t._labelItems = t._computeLabelItems())
            for (e = 0, i = d.length; e < i; ++e) {
              if (
                ((o = (r = d[e]).font),
                u.save(),
                u.translate(r.x, r.y),
                u.rotate(r.rotation),
                (u.font = o.string),
                (u.fillStyle = o.color),
                (u.textBaseline = 'middle'),
                (u.textAlign = r.textAlign),
                (s = r.label),
                (l = r.textOffset),
                on(s))
              )
                for (n = 0, a = s.length; n < a; ++n)
                  u.fillText('' + s[n], 0, l), (l += o.lineHeight)
              else u.fillText(s, 0, l)
              u.restore()
            }
          }
        },
        _drawTitle: function () {
          var t = this,
            e = t.ctx,
            n = t.options,
            i = n.scaleLabel
          if (i.display) {
            var a,
              r,
              o = ln(i.fontColor, z.global.defaultFontColor),
              s = V.options._parseFont(i),
              l = V.options.toPadding(i.padding),
              u = s.lineHeight / 2,
              d = n.position,
              h = 0
            if (t.isHorizontal())
              (a = t.left + t.width / 2),
                (r =
                  'bottom' === d ? t.bottom - u - l.bottom : t.top + u + l.top)
            else {
              var c = 'left' === d
              ;(a = c ? t.left + u + l.top : t.right - u - l.top),
                (r = t.top + t.height / 2),
                (h = c ? -0.5 * Math.PI : 0.5 * Math.PI)
            }
            e.save(),
              e.translate(a, r),
              e.rotate(h),
              (e.textAlign = 'center'),
              (e.textBaseline = 'middle'),
              (e.fillStyle = o),
              (e.font = s.string),
              e.fillText(i.labelString, 0, 0),
              e.restore()
          }
        },
        draw: function (t) {
          this._isVisible() &&
            (this._drawGrid(t), this._drawTitle(), this._drawLabels())
        },
        _layers: function () {
          var t = this,
            e = t.options,
            n = (e.ticks && e.ticks.z) || 0,
            i = (e.gridLines && e.gridLines.z) || 0
          return t._isVisible() && n !== i && t.draw === t._draw
            ? [
                {
                  z: i,
                  draw: function () {
                    t._drawGrid.apply(t, arguments),
                      t._drawTitle.apply(t, arguments)
                  },
                },
                {
                  z: n,
                  draw: function () {
                    t._drawLabels.apply(t, arguments)
                  },
                },
              ]
            : [
                {
                  z: n,
                  draw: function () {
                    t.draw.apply(t, arguments)
                  },
                },
              ]
        },
        _getMatchingVisibleMetas: function (t) {
          var e = this,
            n = e.isHorizontal()
          return e.chart._getSortedVisibleDatasetMetas().filter(function (i) {
            return (
              (!t || i.type === t) &&
              (n ? i.xAxisID === e.id : i.yAxisID === e.id)
            )
          })
        },
      })
      bn.prototype._draw = bn.prototype.draw
      var xn = bn,
        yn = V.isNullOrUndef,
        _n = xn.extend({
          determineDataLimits: function () {
            var t,
              e = this,
              n = e._getLabels(),
              i = e.options.ticks,
              a = i.min,
              r = i.max,
              o = 0,
              s = n.length - 1
            void 0 !== a && (t = n.indexOf(a)) >= 0 && (o = t),
              void 0 !== r && (t = n.indexOf(r)) >= 0 && (s = t),
              (e.minIndex = o),
              (e.maxIndex = s),
              (e.min = n[o]),
              (e.max = n[s])
          },
          buildTicks: function () {
            var t = this._getLabels(),
              e = this.minIndex,
              n = this.maxIndex
            this.ticks = 0 === e && n === t.length - 1 ? t : t.slice(e, n + 1)
          },
          getLabelForIndex: function (t, e) {
            var n = this.chart
            return n.getDatasetMeta(e).controller._getValueScaleId() === this.id
              ? this.getRightValue(n.data.datasets[e].data[t])
              : this._getLabels()[t]
          },
          _configure: function () {
            var t = this,
              e = t.options.offset,
              n = t.ticks
            xn.prototype._configure.call(t),
              t.isHorizontal() || (t._reversePixels = !t._reversePixels),
              n &&
                ((t._startValue = t.minIndex - (e ? 0.5 : 0)),
                (t._valueRange = Math.max(n.length - (e ? 0 : 1), 1)))
          },
          getPixelForValue: function (t, e, n) {
            var i,
              a,
              r,
              o = this
            return (
              yn(e) || yn(n) || (t = o.chart.data.datasets[n].data[e]),
              yn(t) || (i = o.isHorizontal() ? t.x : t.y),
              (void 0 !== i || (void 0 !== t && isNaN(e))) &&
                ((a = o._getLabels()),
                (t = V.valueOrDefault(i, t)),
                (e = -1 !== (r = a.indexOf(t)) ? r : e),
                isNaN(e) && (e = t)),
              o.getPixelForDecimal((e - o._startValue) / o._valueRange)
            )
          },
          getPixelForTick: function (t) {
            var e = this.ticks
            return t < 0 || t > e.length - 1
              ? null
              : this.getPixelForValue(e[t], t + this.minIndex)
          },
          getValueForPixel: function (t) {
            var e = Math.round(
              this._startValue + this.getDecimalForPixel(t) * this._valueRange
            )
            return Math.min(Math.max(e, 0), this.ticks.length - 1)
          },
          getBasePixel: function () {
            return this.bottom
          },
        }),
        kn = { position: 'bottom' }
      _n._defaults = kn
      var wn = V.noop,
        Mn = V.isNullOrUndef
      var Sn = xn.extend({
          getRightValue: function (t) {
            return 'string' == typeof t
              ? +t
              : xn.prototype.getRightValue.call(this, t)
          },
          handleTickRangeOptions: function () {
            var t = this,
              e = t.options.ticks
            if (e.beginAtZero) {
              var n = V.sign(t.min),
                i = V.sign(t.max)
              n < 0 && i < 0 ? (t.max = 0) : n > 0 && i > 0 && (t.min = 0)
            }
            var a = void 0 !== e.min || void 0 !== e.suggestedMin,
              r = void 0 !== e.max || void 0 !== e.suggestedMax
            void 0 !== e.min
              ? (t.min = e.min)
              : void 0 !== e.suggestedMin &&
                (null === t.min
                  ? (t.min = e.suggestedMin)
                  : (t.min = Math.min(t.min, e.suggestedMin))),
              void 0 !== e.max
                ? (t.max = e.max)
                : void 0 !== e.suggestedMax &&
                  (null === t.max
                    ? (t.max = e.suggestedMax)
                    : (t.max = Math.max(t.max, e.suggestedMax))),
              a !== r &&
                t.min >= t.max &&
                (a ? (t.max = t.min + 1) : (t.min = t.max - 1)),
              t.min === t.max && (t.max++, e.beginAtZero || t.min--)
          },
          getTickLimit: function () {
            var t,
              e = this.options.ticks,
              n = e.stepSize,
              i = e.maxTicksLimit
            return (
              n
                ? (t = Math.ceil(this.max / n) - Math.floor(this.min / n) + 1)
                : ((t = this._computeTickLimit()), (i = i || 11)),
              i && (t = Math.min(i, t)),
              t
            )
          },
          _computeTickLimit: function () {
            return Number.POSITIVE_INFINITY
          },
          handleDirectionalChanges: wn,
          buildTicks: function () {
            var t = this,
              e = t.options.ticks,
              n = t.getTickLimit(),
              i = {
                maxTicks: (n = Math.max(2, n)),
                min: e.min,
                max: e.max,
                precision: e.precision,
                stepSize: V.valueOrDefault(e.fixedStepSize, e.stepSize),
              },
              a = (t.ticks = (function (t, e) {
                var n,
                  i,
                  a,
                  r,
                  o = [],
                  s = t.stepSize,
                  l = s || 1,
                  u = t.maxTicks - 1,
                  d = t.min,
                  h = t.max,
                  c = t.precision,
                  f = e.min,
                  g = e.max,
                  p = V.niceNum((g - f) / u / l) * l
                if (p < 1e-14 && Mn(d) && Mn(h)) return [f, g]
                ;(r = Math.ceil(g / p) - Math.floor(f / p)) > u &&
                  (p = V.niceNum((r * p) / u / l) * l),
                  s || Mn(c)
                    ? (n = Math.pow(10, V._decimalPlaces(p)))
                    : ((n = Math.pow(10, c)), (p = Math.ceil(p * n) / n)),
                  (i = Math.floor(f / p) * p),
                  (a = Math.ceil(g / p) * p),
                  s &&
                    (!Mn(d) && V.almostWhole(d / p, p / 1e3) && (i = d),
                    !Mn(h) && V.almostWhole(h / p, p / 1e3) && (a = h)),
                  (r = (a - i) / p),
                  (r = V.almostEquals(r, Math.round(r), p / 1e3)
                    ? Math.round(r)
                    : Math.ceil(r)),
                  (i = Math.round(i * n) / n),
                  (a = Math.round(a * n) / n),
                  o.push(Mn(d) ? i : d)
                for (var m = 1; m < r; ++m)
                  o.push(Math.round((i + m * p) * n) / n)
                return o.push(Mn(h) ? a : h), o
              })(i, t))
            t.handleDirectionalChanges(),
              (t.max = V.max(a)),
              (t.min = V.min(a)),
              e.reverse
                ? (a.reverse(), (t.start = t.max), (t.end = t.min))
                : ((t.start = t.min), (t.end = t.max))
          },
          convertTicksToLabels: function () {
            var t = this
            ;(t.ticksAsNumbers = t.ticks.slice()),
              (t.zeroLineIndex = t.ticks.indexOf(0)),
              xn.prototype.convertTicksToLabels.call(t)
          },
          _configure: function () {
            var t,
              e = this,
              n = e.getTicks(),
              i = e.min,
              a = e.max
            xn.prototype._configure.call(e),
              e.options.offset &&
                n.length &&
                ((i -= t = (a - i) / Math.max(n.length - 1, 1) / 2), (a += t)),
              (e._startValue = i),
              (e._endValue = a),
              (e._valueRange = a - i)
          },
        }),
        Cn = { position: 'left', ticks: { callback: rn.formatters.linear } }
      function Pn(t, e, n, i) {
        var a,
          r,
          o = t.options,
          s = (function (t, e, n) {
            var i = [
              n.type,
              void 0 === e && void 0 === n.stack ? n.index : '',
              n.stack,
            ].join('.')
            return void 0 === t[i] && (t[i] = { pos: [], neg: [] }), t[i]
          })(e, o.stacked, n),
          l = s.pos,
          u = s.neg,
          d = i.length
        for (a = 0; a < d; ++a)
          (r = t._parseValue(i[a])),
            isNaN(r.min) ||
              isNaN(r.max) ||
              n.data[a].hidden ||
              ((l[a] = l[a] || 0),
              (u[a] = u[a] || 0),
              o.relativePoints
                ? (l[a] = 100)
                : r.min < 0 || r.max < 0
                ? (u[a] += r.min)
                : (l[a] += r.max))
      }
      function An(t, e, n) {
        var i,
          a,
          r = n.length
        for (i = 0; i < r; ++i)
          (a = t._parseValue(n[i])),
            isNaN(a.min) ||
              isNaN(a.max) ||
              e.data[i].hidden ||
              ((t.min = Math.min(t.min, a.min)),
              (t.max = Math.max(t.max, a.max)))
      }
      var Dn = Sn.extend({
          determineDataLimits: function () {
            var t,
              e,
              n,
              i,
              a = this,
              r = a.options,
              o = a.chart.data.datasets,
              s = a._getMatchingVisibleMetas(),
              l = r.stacked,
              u = {},
              d = s.length
            if (
              ((a.min = Number.POSITIVE_INFINITY),
              (a.max = Number.NEGATIVE_INFINITY),
              void 0 === l)
            )
              for (t = 0; !l && t < d; ++t) l = void 0 !== (e = s[t]).stack
            for (t = 0; t < d; ++t)
              (n = o[(e = s[t]).index].data), l ? Pn(a, u, e, n) : An(a, e, n)
            V.each(u, function (t) {
              ;(i = t.pos.concat(t.neg)),
                (a.min = Math.min(a.min, V.min(i))),
                (a.max = Math.max(a.max, V.max(i)))
            }),
              (a.min = V.isFinite(a.min) && !isNaN(a.min) ? a.min : 0),
              (a.max = V.isFinite(a.max) && !isNaN(a.max) ? a.max : 1),
              a.handleTickRangeOptions()
          },
          _computeTickLimit: function () {
            var t
            return this.isHorizontal()
              ? Math.ceil(this.width / 40)
              : ((t = V.options._parseFont(this.options.ticks)),
                Math.ceil(this.height / t.lineHeight))
          },
          handleDirectionalChanges: function () {
            this.isHorizontal() || this.ticks.reverse()
          },
          getLabelForIndex: function (t, e) {
            return this._getScaleLabel(this.chart.data.datasets[e].data[t])
          },
          getPixelForValue: function (t) {
            return this.getPixelForDecimal(
              (+this.getRightValue(t) - this._startValue) / this._valueRange
            )
          },
          getValueForPixel: function (t) {
            return (
              this._startValue + this.getDecimalForPixel(t) * this._valueRange
            )
          },
          getPixelForTick: function (t) {
            var e = this.ticksAsNumbers
            return t < 0 || t > e.length - 1
              ? null
              : this.getPixelForValue(e[t])
          },
        }),
        Tn = Cn
      Dn._defaults = Tn
      var In = V.valueOrDefault,
        Fn = V.math.log10
      var Ln = {
        position: 'left',
        ticks: { callback: rn.formatters.logarithmic },
      }
      function On(t, e) {
        return V.isFinite(t) && t >= 0 ? t : e
      }
      var Rn = xn.extend({
          determineDataLimits: function () {
            var t,
              e,
              n,
              i,
              a,
              r,
              o = this,
              s = o.options,
              l = o.chart,
              u = l.data.datasets,
              d = o.isHorizontal()
            function h(t) {
              return d ? t.xAxisID === o.id : t.yAxisID === o.id
            }
            ;(o.min = Number.POSITIVE_INFINITY),
              (o.max = Number.NEGATIVE_INFINITY),
              (o.minNotZero = Number.POSITIVE_INFINITY)
            var c = s.stacked
            if (void 0 === c)
              for (t = 0; t < u.length; t++)
                if (
                  ((e = l.getDatasetMeta(t)),
                  l.isDatasetVisible(t) && h(e) && void 0 !== e.stack)
                ) {
                  c = !0
                  break
                }
            if (s.stacked || c) {
              var f = {}
              for (t = 0; t < u.length; t++) {
                var g = [
                  (e = l.getDatasetMeta(t)).type,
                  void 0 === s.stacked && void 0 === e.stack ? t : '',
                  e.stack,
                ].join('.')
                if (l.isDatasetVisible(t) && h(e))
                  for (
                    void 0 === f[g] && (f[g] = []),
                      a = 0,
                      r = (i = u[t].data).length;
                    a < r;
                    a++
                  ) {
                    var p = f[g]
                    ;(n = o._parseValue(i[a])),
                      isNaN(n.min) ||
                        isNaN(n.max) ||
                        e.data[a].hidden ||
                        n.min < 0 ||
                        n.max < 0 ||
                        ((p[a] = p[a] || 0), (p[a] += n.max))
                  }
              }
              V.each(f, function (t) {
                if (t.length > 0) {
                  var e = V.min(t),
                    n = V.max(t)
                  ;(o.min = Math.min(o.min, e)), (o.max = Math.max(o.max, n))
                }
              })
            } else
              for (t = 0; t < u.length; t++)
                if (((e = l.getDatasetMeta(t)), l.isDatasetVisible(t) && h(e)))
                  for (a = 0, r = (i = u[t].data).length; a < r; a++)
                    (n = o._parseValue(i[a])),
                      isNaN(n.min) ||
                        isNaN(n.max) ||
                        e.data[a].hidden ||
                        n.min < 0 ||
                        n.max < 0 ||
                        ((o.min = Math.min(n.min, o.min)),
                        (o.max = Math.max(n.max, o.max)),
                        0 !== n.min &&
                          (o.minNotZero = Math.min(n.min, o.minNotZero)))
            ;(o.min = V.isFinite(o.min) ? o.min : null),
              (o.max = V.isFinite(o.max) ? o.max : null),
              (o.minNotZero = V.isFinite(o.minNotZero) ? o.minNotZero : null),
              this.handleTickRangeOptions()
          },
          handleTickRangeOptions: function () {
            var t = this,
              e = t.options.ticks
            ;(t.min = On(e.min, t.min)),
              (t.max = On(e.max, t.max)),
              t.min === t.max &&
                (0 !== t.min && null !== t.min
                  ? ((t.min = Math.pow(10, Math.floor(Fn(t.min)) - 1)),
                    (t.max = Math.pow(10, Math.floor(Fn(t.max)) + 1)))
                  : ((t.min = 1), (t.max = 10))),
              null === t.min &&
                (t.min = Math.pow(10, Math.floor(Fn(t.max)) - 1)),
              null === t.max &&
                (t.max =
                  0 !== t.min ? Math.pow(10, Math.floor(Fn(t.min)) + 1) : 10),
              null === t.minNotZero &&
                (t.min > 0
                  ? (t.minNotZero = t.min)
                  : t.max < 1
                  ? (t.minNotZero = Math.pow(10, Math.floor(Fn(t.max))))
                  : (t.minNotZero = 1))
          },
          buildTicks: function () {
            var t = this,
              e = t.options.ticks,
              n = !t.isHorizontal(),
              i = { min: On(e.min), max: On(e.max) },
              a = (t.ticks = (function (t, e) {
                var n,
                  i,
                  a = [],
                  r = In(t.min, Math.pow(10, Math.floor(Fn(e.min)))),
                  o = Math.floor(Fn(e.max)),
                  s = Math.ceil(e.max / Math.pow(10, o))
                0 === r
                  ? ((n = Math.floor(Fn(e.minNotZero))),
                    (i = Math.floor(e.minNotZero / Math.pow(10, n))),
                    a.push(r),
                    (r = i * Math.pow(10, n)))
                  : ((n = Math.floor(Fn(r))),
                    (i = Math.floor(r / Math.pow(10, n))))
                var l = n < 0 ? Math.pow(10, Math.abs(n)) : 1
                do {
                  a.push(r),
                    10 === ++i && ((i = 1), (l = ++n >= 0 ? 1 : l)),
                    (r = Math.round(i * Math.pow(10, n) * l) / l)
                } while (n < o || (n === o && i < s))
                var u = In(t.max, r)
                return a.push(u), a
              })(i, t))
            ;(t.max = V.max(a)),
              (t.min = V.min(a)),
              e.reverse
                ? ((n = !n), (t.start = t.max), (t.end = t.min))
                : ((t.start = t.min), (t.end = t.max)),
              n && a.reverse()
          },
          convertTicksToLabels: function () {
            ;(this.tickValues = this.ticks.slice()),
              xn.prototype.convertTicksToLabels.call(this)
          },
          getLabelForIndex: function (t, e) {
            return this._getScaleLabel(this.chart.data.datasets[e].data[t])
          },
          getPixelForTick: function (t) {
            var e = this.tickValues
            return t < 0 || t > e.length - 1
              ? null
              : this.getPixelForValue(e[t])
          },
          _getFirstTickValue: function (t) {
            var e = Math.floor(Fn(t))
            return Math.floor(t / Math.pow(10, e)) * Math.pow(10, e)
          },
          _configure: function () {
            var t = this,
              e = t.min,
              n = 0
            xn.prototype._configure.call(t),
              0 === e &&
                ((e = t._getFirstTickValue(t.minNotZero)),
                (n =
                  In(t.options.ticks.fontSize, z.global.defaultFontSize) /
                  t._length)),
              (t._startValue = Fn(e)),
              (t._valueOffset = n),
              (t._valueRange = (Fn(t.max) - Fn(e)) / (1 - n))
          },
          getPixelForValue: function (t) {
            var e = this,
              n = 0
            return (
              (t = +e.getRightValue(t)) > e.min &&
                t > 0 &&
                (n = (Fn(t) - e._startValue) / e._valueRange + e._valueOffset),
              e.getPixelForDecimal(n)
            )
          },
          getValueForPixel: function (t) {
            var e = this,
              n = e.getDecimalForPixel(t)
            return 0 === n && 0 === e.min
              ? 0
              : Math.pow(
                  10,
                  e._startValue + (n - e._valueOffset) * e._valueRange
                )
          },
        }),
        zn = Ln
      Rn._defaults = zn
      var Nn = V.valueOrDefault,
        Bn = V.valueAtIndexOrDefault,
        En = V.options.resolve,
        Wn = {
          display: !0,
          animate: !0,
          position: 'chartArea',
          angleLines: {
            display: !0,
            color: 'rgba(0,0,0,0.1)',
            lineWidth: 1,
            borderDash: [],
            borderDashOffset: 0,
          },
          gridLines: { circular: !1 },
          ticks: {
            showLabelBackdrop: !0,
            backdropColor: 'rgba(255,255,255,0.75)',
            backdropPaddingY: 2,
            backdropPaddingX: 2,
            callback: rn.formatters.linear,
          },
          pointLabels: {
            display: !0,
            fontSize: 10,
            callback: function (t) {
              return t
            },
          },
        }
      function Vn(t) {
        var e = t.ticks
        return e.display && t.display
          ? Nn(e.fontSize, z.global.defaultFontSize) + 2 * e.backdropPaddingY
          : 0
      }
      function Hn(t, e, n, i, a) {
        return t === i || t === a
          ? { start: e - n / 2, end: e + n / 2 }
          : t < i || t > a
          ? { start: e - n, end: e }
          : { start: e, end: e + n }
      }
      function jn(t) {
        return 0 === t || 180 === t ? 'center' : t < 180 ? 'left' : 'right'
      }
      function qn(t, e, n, i) {
        var a,
          r,
          o = n.y + i / 2
        if (V.isArray(e))
          for (a = 0, r = e.length; a < r; ++a)
            t.fillText(e[a], n.x, o), (o += i)
        else t.fillText(e, n.x, o)
      }
      function Un(t, e, n) {
        90 === t || 270 === t
          ? (n.y -= e.h / 2)
          : (t > 270 || t < 90) && (n.y -= e.h)
      }
      function Yn(t) {
        return V.isNumber(t) ? t : 0
      }
      var Gn = Sn.extend({
          setDimensions: function () {
            var t = this
            ;(t.width = t.maxWidth),
              (t.height = t.maxHeight),
              (t.paddingTop = Vn(t.options) / 2),
              (t.xCenter = Math.floor(t.width / 2)),
              (t.yCenter = Math.floor((t.height - t.paddingTop) / 2)),
              (t.drawingArea = Math.min(t.height - t.paddingTop, t.width) / 2)
          },
          determineDataLimits: function () {
            var t = this,
              e = t.chart,
              n = Number.POSITIVE_INFINITY,
              i = Number.NEGATIVE_INFINITY
            V.each(e.data.datasets, function (a, r) {
              if (e.isDatasetVisible(r)) {
                var o = e.getDatasetMeta(r)
                V.each(a.data, function (e, a) {
                  var r = +t.getRightValue(e)
                  isNaN(r) ||
                    o.data[a].hidden ||
                    ((n = Math.min(r, n)), (i = Math.max(r, i)))
                })
              }
            }),
              (t.min = n === Number.POSITIVE_INFINITY ? 0 : n),
              (t.max = i === Number.NEGATIVE_INFINITY ? 0 : i),
              t.handleTickRangeOptions()
          },
          _computeTickLimit: function () {
            return Math.ceil(this.drawingArea / Vn(this.options))
          },
          convertTicksToLabels: function () {
            var t = this
            Sn.prototype.convertTicksToLabels.call(t),
              (t.pointLabels = t.chart.data.labels.map(function () {
                var e = V.callback(t.options.pointLabels.callback, arguments, t)
                return e || 0 === e ? e : ''
              }))
          },
          getLabelForIndex: function (t, e) {
            return +this.getRightValue(this.chart.data.datasets[e].data[t])
          },
          fit: function () {
            var t = this.options
            t.display && t.pointLabels.display
              ? (function (t) {
                  var e,
                    n,
                    i,
                    a = V.options._parseFont(t.options.pointLabels),
                    r = { l: 0, r: t.width, t: 0, b: t.height - t.paddingTop },
                    o = {}
                  ;(t.ctx.font = a.string), (t._pointLabelSizes = [])
                  var s,
                    l,
                    u,
                    d = t.chart.data.labels.length
                  for (e = 0; e < d; e++) {
                    ;(i = t.getPointPosition(e, t.drawingArea + 5)),
                      (s = t.ctx),
                      (l = a.lineHeight),
                      (u = t.pointLabels[e]),
                      (n = V.isArray(u)
                        ? { w: V.longestText(s, s.font, u), h: u.length * l }
                        : { w: s.measureText(u).width, h: l }),
                      (t._pointLabelSizes[e] = n)
                    var h = t.getIndexAngle(e),
                      c = V.toDegrees(h) % 360,
                      f = Hn(c, i.x, n.w, 0, 180),
                      g = Hn(c, i.y, n.h, 90, 270)
                    f.start < r.l && ((r.l = f.start), (o.l = h)),
                      f.end > r.r && ((r.r = f.end), (o.r = h)),
                      g.start < r.t && ((r.t = g.start), (o.t = h)),
                      g.end > r.b && ((r.b = g.end), (o.b = h))
                  }
                  t.setReductions(t.drawingArea, r, o)
                })(this)
              : this.setCenterPoint(0, 0, 0, 0)
          },
          setReductions: function (t, e, n) {
            var i = this,
              a = e.l / Math.sin(n.l),
              r = Math.max(e.r - i.width, 0) / Math.sin(n.r),
              o = -e.t / Math.cos(n.t),
              s = -Math.max(e.b - (i.height - i.paddingTop), 0) / Math.cos(n.b)
            ;(a = Yn(a)),
              (r = Yn(r)),
              (o = Yn(o)),
              (s = Yn(s)),
              (i.drawingArea = Math.min(
                Math.floor(t - (a + r) / 2),
                Math.floor(t - (o + s) / 2)
              )),
              i.setCenterPoint(a, r, o, s)
          },
          setCenterPoint: function (t, e, n, i) {
            var a = this,
              r = a.width - e - a.drawingArea,
              o = t + a.drawingArea,
              s = n + a.drawingArea,
              l = a.height - a.paddingTop - i - a.drawingArea
            ;(a.xCenter = Math.floor((o + r) / 2 + a.left)),
              (a.yCenter = Math.floor((s + l) / 2 + a.top + a.paddingTop))
          },
          getIndexAngle: function (t) {
            var e = this.chart,
              n =
                (t * (360 / e.data.labels.length) +
                  ((e.options || {}).startAngle || 0)) %
                360
            return ((n < 0 ? n + 360 : n) * Math.PI * 2) / 360
          },
          getDistanceFromCenterForValue: function (t) {
            var e = this
            if (V.isNullOrUndef(t)) return NaN
            var n = e.drawingArea / (e.max - e.min)
            return e.options.ticks.reverse ? (e.max - t) * n : (t - e.min) * n
          },
          getPointPosition: function (t, e) {
            var n = this.getIndexAngle(t) - Math.PI / 2
            return {
              x: Math.cos(n) * e + this.xCenter,
              y: Math.sin(n) * e + this.yCenter,
            }
          },
          getPointPositionForValue: function (t, e) {
            return this.getPointPosition(
              t,
              this.getDistanceFromCenterForValue(e)
            )
          },
          getBasePosition: function (t) {
            var e = this.min,
              n = this.max
            return this.getPointPositionForValue(
              t || 0,
              this.beginAtZero ? 0 : e < 0 && n < 0 ? n : e > 0 && n > 0 ? e : 0
            )
          },
          _drawGrid: function () {
            var t,
              e,
              n,
              i = this,
              a = i.ctx,
              r = i.options,
              o = r.gridLines,
              s = r.angleLines,
              l = Nn(s.lineWidth, o.lineWidth),
              u = Nn(s.color, o.color)
            if (
              (r.pointLabels.display &&
                (function (t) {
                  var e = t.ctx,
                    n = t.options,
                    i = n.pointLabels,
                    a = Vn(n),
                    r = t.getDistanceFromCenterForValue(
                      n.ticks.reverse ? t.min : t.max
                    ),
                    o = V.options._parseFont(i)
                  e.save(), (e.font = o.string), (e.textBaseline = 'middle')
                  for (var s = t.chart.data.labels.length - 1; s >= 0; s--) {
                    var l = 0 === s ? a / 2 : 0,
                      u = t.getPointPosition(s, r + l + 5),
                      d = Bn(i.fontColor, s, z.global.defaultFontColor)
                    e.fillStyle = d
                    var h = t.getIndexAngle(s),
                      c = V.toDegrees(h)
                    ;(e.textAlign = jn(c)),
                      Un(c, t._pointLabelSizes[s], u),
                      qn(e, t.pointLabels[s], u, o.lineHeight)
                  }
                  e.restore()
                })(i),
              o.display &&
                V.each(i.ticks, function (t, n) {
                  0 !== n &&
                    ((e = i.getDistanceFromCenterForValue(i.ticksAsNumbers[n])),
                    (function (t, e, n, i) {
                      var a,
                        r = t.ctx,
                        o = e.circular,
                        s = t.chart.data.labels.length,
                        l = Bn(e.color, i - 1),
                        u = Bn(e.lineWidth, i - 1)
                      if ((o || s) && l && u) {
                        if (
                          (r.save(),
                          (r.strokeStyle = l),
                          (r.lineWidth = u),
                          r.setLineDash &&
                            (r.setLineDash(e.borderDash || []),
                            (r.lineDashOffset = e.borderDashOffset || 0)),
                          r.beginPath(),
                          o)
                        )
                          r.arc(t.xCenter, t.yCenter, n, 0, 2 * Math.PI)
                        else {
                          ;(a = t.getPointPosition(0, n)), r.moveTo(a.x, a.y)
                          for (var d = 1; d < s; d++)
                            (a = t.getPointPosition(d, n)), r.lineTo(a.x, a.y)
                        }
                        r.closePath(), r.stroke(), r.restore()
                      }
                    })(i, o, e, n))
                }),
              s.display && l && u)
            ) {
              for (
                a.save(),
                  a.lineWidth = l,
                  a.strokeStyle = u,
                  a.setLineDash &&
                    (a.setLineDash(En([s.borderDash, o.borderDash, []])),
                    (a.lineDashOffset = En([
                      s.borderDashOffset,
                      o.borderDashOffset,
                      0,
                    ]))),
                  t = i.chart.data.labels.length - 1;
                t >= 0;
                t--
              )
                (e = i.getDistanceFromCenterForValue(
                  r.ticks.reverse ? i.min : i.max
                )),
                  (n = i.getPointPosition(t, e)),
                  a.beginPath(),
                  a.moveTo(i.xCenter, i.yCenter),
                  a.lineTo(n.x, n.y),
                  a.stroke()
              a.restore()
            }
          },
          _drawLabels: function () {
            var t = this,
              e = t.ctx,
              n = t.options.ticks
            if (n.display) {
              var i,
                a,
                r = t.getIndexAngle(0),
                o = V.options._parseFont(n),
                s = Nn(n.fontColor, z.global.defaultFontColor)
              e.save(),
                (e.font = o.string),
                e.translate(t.xCenter, t.yCenter),
                e.rotate(r),
                (e.textAlign = 'center'),
                (e.textBaseline = 'middle'),
                V.each(t.ticks, function (r, l) {
                  ;(0 !== l || n.reverse) &&
                    ((i = t.getDistanceFromCenterForValue(t.ticksAsNumbers[l])),
                    n.showLabelBackdrop &&
                      ((a = e.measureText(r).width),
                      (e.fillStyle = n.backdropColor),
                      e.fillRect(
                        -a / 2 - n.backdropPaddingX,
                        -i - o.size / 2 - n.backdropPaddingY,
                        a + 2 * n.backdropPaddingX,
                        o.size + 2 * n.backdropPaddingY
                      )),
                    (e.fillStyle = s),
                    e.fillText(r, 0, -i))
                }),
                e.restore()
            }
          },
          _drawTitle: V.noop,
        }),
        Xn = Wn
      Gn._defaults = Xn
      var Kn = V._deprecated,
        Zn = V.options.resolve,
        $n = V.valueOrDefault,
        Jn = Number.MIN_SAFE_INTEGER || -9007199254740991,
        Qn = Number.MAX_SAFE_INTEGER || 9007199254740991,
        ti = {
          millisecond: { common: !0, size: 1, steps: 1e3 },
          second: { common: !0, size: 1e3, steps: 60 },
          minute: { common: !0, size: 6e4, steps: 60 },
          hour: { common: !0, size: 36e5, steps: 24 },
          day: { common: !0, size: 864e5, steps: 30 },
          week: { common: !1, size: 6048e5, steps: 4 },
          month: { common: !0, size: 2628e6, steps: 12 },
          quarter: { common: !1, size: 7884e6, steps: 4 },
          year: { common: !0, size: 3154e7 },
        },
        ei = Object.keys(ti)
      function ni(t, e) {
        return t - e
      }
      function ii(t) {
        return V.valueOrDefault(t.time.min, t.ticks.min)
      }
      function ai(t) {
        return V.valueOrDefault(t.time.max, t.ticks.max)
      }
      function ri(t, e, n, i) {
        var a = (function (t, e, n) {
            for (var i, a, r, o = 0, s = t.length - 1; o >= 0 && o <= s; ) {
              if (((a = t[(i = (o + s) >> 1) - 1] || null), (r = t[i]), !a))
                return { lo: null, hi: r }
              if (r[e] < n) o = i + 1
              else {
                if (!(a[e] > n)) return { lo: a, hi: r }
                s = i - 1
              }
            }
            return { lo: r, hi: null }
          })(t, e, n),
          r = a.lo ? (a.hi ? a.lo : t[t.length - 2]) : t[0],
          o = a.lo ? (a.hi ? a.hi : t[t.length - 1]) : t[1],
          s = o[e] - r[e],
          l = s ? (n - r[e]) / s : 0,
          u = (o[i] - r[i]) * l
        return r[i] + u
      }
      function oi(t, e) {
        var n = t._adapter,
          i = t.options.time,
          a = i.parser,
          r = a || i.format,
          o = e
        return (
          'function' == typeof a && (o = a(o)),
          V.isFinite(o) ||
            (o = 'string' == typeof r ? n.parse(o, r) : n.parse(o)),
          null !== o
            ? +o
            : (a ||
                'function' != typeof r ||
                ((o = r(e)), V.isFinite(o) || (o = n.parse(o))),
              o)
        )
      }
      function si(t, e) {
        if (V.isNullOrUndef(e)) return null
        var n = t.options.time,
          i = oi(t, t.getRightValue(e))
        return null === i
          ? i
          : (n.round && (i = +t._adapter.startOf(i, n.round)), i)
      }
      function li(t, e, n, i) {
        var a,
          r,
          o,
          s = ei.length
        for (a = ei.indexOf(t); a < s - 1; ++a)
          if (
            ((o = (r = ti[ei[a]]).steps ? r.steps : Qn),
            r.common && Math.ceil((n - e) / (o * r.size)) <= i)
          )
            return ei[a]
        return ei[s - 1]
      }
      function ui(t, e, n) {
        var i,
          a,
          r = [],
          o = {},
          s = e.length
        for (i = 0; i < s; ++i)
          (o[(a = e[i])] = i), r.push({ value: a, major: !1 })
        return 0 !== s && n
          ? (function (t, e, n, i) {
              var a,
                r,
                o = t._adapter,
                s = +o.startOf(e[0].value, i),
                l = e[e.length - 1].value
              for (a = s; a <= l; a = +o.add(a, 1, i))
                (r = n[a]) >= 0 && (e[r].major = !0)
              return e
            })(t, r, o, n)
          : r
      }
      var di = xn.extend({
          initialize: function () {
            this.mergeTicksOptions(), xn.prototype.initialize.call(this)
          },
          update: function () {
            var t = this,
              e = t.options,
              n = e.time || (e.time = {}),
              i = (t._adapter = new an._date(e.adapters.date))
            return (
              Kn('time scale', n.format, 'time.format', 'time.parser'),
              Kn('time scale', n.min, 'time.min', 'ticks.min'),
              Kn('time scale', n.max, 'time.max', 'ticks.max'),
              V.mergeIf(n.displayFormats, i.formats()),
              xn.prototype.update.apply(t, arguments)
            )
          },
          getRightValue: function (t) {
            return (
              t && void 0 !== t.t && (t = t.t),
              xn.prototype.getRightValue.call(this, t)
            )
          },
          determineDataLimits: function () {
            var t,
              e,
              n,
              i,
              a,
              r,
              o,
              s = this,
              l = s.chart,
              u = s._adapter,
              d = s.options,
              h = d.time.unit || 'day',
              c = Qn,
              f = Jn,
              g = [],
              p = [],
              m = [],
              v = s._getLabels()
            for (t = 0, n = v.length; t < n; ++t) m.push(si(s, v[t]))
            for (t = 0, n = (l.data.datasets || []).length; t < n; ++t)
              if (l.isDatasetVisible(t))
                if (((a = l.data.datasets[t].data), V.isObject(a[0])))
                  for (p[t] = [], e = 0, i = a.length; e < i; ++e)
                    (r = si(s, a[e])), g.push(r), (p[t][e] = r)
                else (p[t] = m.slice(0)), o || ((g = g.concat(m)), (o = !0))
              else p[t] = []
            m.length &&
              ((c = Math.min(c, m[0])), (f = Math.max(f, m[m.length - 1]))),
              g.length &&
                ((g =
                  n > 1
                    ? (function (t) {
                        var e,
                          n,
                          i,
                          a = {},
                          r = []
                        for (e = 0, n = t.length; e < n; ++e)
                          a[(i = t[e])] || ((a[i] = !0), r.push(i))
                        return r
                      })(g).sort(ni)
                    : g.sort(ni)),
                (c = Math.min(c, g[0])),
                (f = Math.max(f, g[g.length - 1]))),
              (c = si(s, ii(d)) || c),
              (f = si(s, ai(d)) || f),
              (c = c === Qn ? +u.startOf(Date.now(), h) : c),
              (f = f === Jn ? +u.endOf(Date.now(), h) + 1 : f),
              (s.min = Math.min(c, f)),
              (s.max = Math.max(c + 1, f)),
              (s._table = []),
              (s._timestamps = { data: g, datasets: p, labels: m })
          },
          buildTicks: function () {
            var t,
              e,
              n,
              i = this,
              a = i.min,
              r = i.max,
              o = i.options,
              s = o.ticks,
              l = o.time,
              u = i._timestamps,
              d = [],
              h = i.getLabelCapacity(a),
              c = s.source,
              f = o.distribution
            for (
              u =
                'data' === c || ('auto' === c && 'series' === f)
                  ? u.data
                  : 'labels' === c
                  ? u.labels
                  : (function (t, e, n, i) {
                      var a,
                        r = t._adapter,
                        o = t.options,
                        s = o.time,
                        l = s.unit || li(s.minUnit, e, n, i),
                        u = Zn([s.stepSize, s.unitStepSize, 1]),
                        d = 'week' === l && s.isoWeekday,
                        h = e,
                        c = []
                      if (
                        (d && (h = +r.startOf(h, 'isoWeek', d)),
                        (h = +r.startOf(h, d ? 'day' : l)),
                        r.diff(n, e, l) > 1e5 * u)
                      )
                        throw (
                          e +
                          ' and ' +
                          n +
                          ' are too far apart with stepSize of ' +
                          u +
                          ' ' +
                          l
                        )
                      for (a = h; a < n; a = +r.add(a, u, l)) c.push(a)
                      return (a !== n && 'ticks' !== o.bounds) || c.push(a), c
                    })(i, a, r, h),
                'ticks' === o.bounds &&
                  u.length &&
                  ((a = u[0]), (r = u[u.length - 1])),
                a = si(i, ii(o)) || a,
                r = si(i, ai(o)) || r,
                t = 0,
                e = u.length;
              t < e;
              ++t
            )
              (n = u[t]) >= a && n <= r && d.push(n)
            return (
              (i.min = a),
              (i.max = r),
              (i._unit =
                l.unit ||
                (s.autoSkip
                  ? li(l.minUnit, i.min, i.max, h)
                  : (function (t, e, n, i, a) {
                      var r, o
                      for (r = ei.length - 1; r >= ei.indexOf(n); r--)
                        if (
                          ((o = ei[r]),
                          ti[o].common && t._adapter.diff(a, i, o) >= e - 1)
                        )
                          return o
                      return ei[n ? ei.indexOf(n) : 0]
                    })(i, d.length, l.minUnit, i.min, i.max))),
              (i._majorUnit =
                s.major.enabled && 'year' !== i._unit
                  ? (function (t) {
                      for (var e = ei.indexOf(t) + 1, n = ei.length; e < n; ++e)
                        if (ti[ei[e]].common) return ei[e]
                    })(i._unit)
                  : void 0),
              (i._table = (function (t, e, n, i) {
                if ('linear' === i || !t.length)
                  return [
                    { time: e, pos: 0 },
                    { time: n, pos: 1 },
                  ]
                var a,
                  r,
                  o,
                  s,
                  l,
                  u = [],
                  d = [e]
                for (a = 0, r = t.length; a < r; ++a)
                  (s = t[a]) > e && s < n && d.push(s)
                for (d.push(n), a = 0, r = d.length; a < r; ++a)
                  (l = d[a + 1]),
                    (o = d[a - 1]),
                    (s = d[a]),
                    (void 0 !== o &&
                      void 0 !== l &&
                      Math.round((l + o) / 2) === s) ||
                      u.push({ time: s, pos: a / (r - 1) })
                return u
              })(i._timestamps.data, a, r, f)),
              (i._offsets = (function (t, e, n, i, a) {
                var r,
                  o,
                  s = 0,
                  l = 0
                return (
                  a.offset &&
                    e.length &&
                    ((r = ri(t, 'time', e[0], 'pos')),
                    (s =
                      1 === e.length
                        ? 1 - r
                        : (ri(t, 'time', e[1], 'pos') - r) / 2),
                    (o = ri(t, 'time', e[e.length - 1], 'pos')),
                    (l =
                      1 === e.length
                        ? o
                        : (o - ri(t, 'time', e[e.length - 2], 'pos')) / 2)),
                  { start: s, end: l, factor: 1 / (s + 1 + l) }
                )
              })(i._table, d, 0, 0, o)),
              s.reverse && d.reverse(),
              ui(i, d, i._majorUnit)
            )
          },
          getLabelForIndex: function (t, e) {
            var n = this,
              i = n._adapter,
              a = n.chart.data,
              r = n.options.time,
              o = a.labels && t < a.labels.length ? a.labels[t] : '',
              s = a.datasets[e].data[t]
            return (
              V.isObject(s) && (o = n.getRightValue(s)),
              r.tooltipFormat
                ? i.format(oi(n, o), r.tooltipFormat)
                : 'string' == typeof o
                ? o
                : i.format(oi(n, o), r.displayFormats.datetime)
            )
          },
          tickFormatFunction: function (t, e, n, i) {
            var a = this._adapter,
              r = this.options,
              o = r.time.displayFormats,
              s = o[this._unit],
              l = this._majorUnit,
              u = o[l],
              d = n[e],
              h = r.ticks,
              c = l && u && d && d.major,
              f = a.format(t, i || (c ? u : s)),
              g = c ? h.major : h.minor,
              p = Zn([g.callback, g.userCallback, h.callback, h.userCallback])
            return p ? p(f, e, n) : f
          },
          convertTicksToLabels: function (t) {
            var e,
              n,
              i = []
            for (e = 0, n = t.length; e < n; ++e)
              i.push(this.tickFormatFunction(t[e].value, e, t))
            return i
          },
          getPixelForOffset: function (t) {
            var e = this._offsets,
              n = ri(this._table, 'time', t, 'pos')
            return this.getPixelForDecimal((e.start + n) * e.factor)
          },
          getPixelForValue: function (t, e, n) {
            var i = null
            if (
              (void 0 !== e &&
                void 0 !== n &&
                (i = this._timestamps.datasets[n][e]),
              null === i && (i = si(this, t)),
              null !== i)
            )
              return this.getPixelForOffset(i)
          },
          getPixelForTick: function (t) {
            var e = this.getTicks()
            return t >= 0 && t < e.length
              ? this.getPixelForOffset(e[t].value)
              : null
          },
          getValueForPixel: function (t) {
            var e = this._offsets,
              n = this.getDecimalForPixel(t) / e.factor - e.end,
              i = ri(this._table, 'pos', n, 'time')
            return this._adapter._create(i)
          },
          _getLabelSize: function (t) {
            var e = this.options.ticks,
              n = this.ctx.measureText(t).width,
              i = V.toRadians(
                this.isHorizontal() ? e.maxRotation : e.minRotation
              ),
              a = Math.cos(i),
              r = Math.sin(i),
              o = $n(e.fontSize, z.global.defaultFontSize)
            return { w: n * a + o * r, h: n * r + o * a }
          },
          getLabelWidth: function (t) {
            return this._getLabelSize(t).w
          },
          getLabelCapacity: function (t) {
            var e = this,
              n = e.options.time,
              i = n.displayFormats,
              a = i[n.unit] || i.millisecond,
              r = e.tickFormatFunction(t, 0, ui(e, [t], e._majorUnit), a),
              o = e._getLabelSize(r),
              s = Math.floor(e.isHorizontal() ? e.width / o.w : e.height / o.h)
            return e.options.offset && s--, s > 0 ? s : 1
          },
        }),
        hi = {
          position: 'bottom',
          distribution: 'linear',
          bounds: 'data',
          adapters: {},
          time: {
            parser: !1,
            unit: !1,
            round: !1,
            displayFormat: !1,
            isoWeekday: !1,
            minUnit: 'millisecond',
            displayFormats: {},
          },
          ticks: { autoSkip: !1, source: 'auto', major: { enabled: !1 } },
        }
      di._defaults = hi
      var ci = {
          category: _n,
          linear: Dn,
          logarithmic: Rn,
          radialLinear: Gn,
          time: di,
        },
        fi = {
          datetime: 'MMM D, YYYY, h:mm:ss a',
          millisecond: 'h:mm:ss.SSS a',
          second: 'h:mm:ss a',
          minute: 'h:mm a',
          hour: 'hA',
          day: 'MMM D',
          week: 'll',
          month: 'MMM YYYY',
          quarter: '[Q]Q - YYYY',
          year: 'YYYY',
        }
      an._date.override(
        'function' == typeof t
          ? {
              _id: 'moment',
              formats: function () {
                return fi
              },
              parse: function (e, n) {
                return (
                  'string' == typeof e && 'string' == typeof n
                    ? (e = t(e, n))
                    : e instanceof t || (e = t(e)),
                  e.isValid() ? e.valueOf() : null
                )
              },
              format: function (e, n) {
                return t(e).format(n)
              },
              add: function (e, n, i) {
                return t(e).add(n, i).valueOf()
              },
              diff: function (e, n, i) {
                return t(e).diff(t(n), i)
              },
              startOf: function (e, n, i) {
                return (
                  (e = t(e)),
                  'isoWeek' === n
                    ? e.isoWeekday(i).valueOf()
                    : e.startOf(n).valueOf()
                )
              },
              endOf: function (e, n) {
                return t(e).endOf(n).valueOf()
              },
              _create: function (e) {
                return t(e)
              },
            }
          : {}
      ),
        z._set('global', { plugins: { filler: { propagate: !0 } } })
      var gi = {
        dataset: function (t) {
          var e = t.fill,
            n = t.chart,
            i = n.getDatasetMeta(e),
            a = (i && n.isDatasetVisible(e) && i.dataset._children) || [],
            r = a.length || 0
          return r
            ? function (t, e) {
                return (e < r && a[e]._view) || null
              }
            : null
        },
        boundary: function (t) {
          var e = t.boundary,
            n = e ? e.x : null,
            i = e ? e.y : null
          return V.isArray(e)
            ? function (t, n) {
                return e[n]
              }
            : function (t) {
                return { x: null === n ? t.x : n, y: null === i ? t.y : i }
              }
        },
      }
      function pi(t, e, n) {
        var i,
          a = t._model || {},
          r = a.fill
        if ((void 0 === r && (r = !!a.backgroundColor), !1 === r || null === r))
          return !1
        if (!0 === r) return 'origin'
        if (((i = parseFloat(r, 10)), isFinite(i) && Math.floor(i) === i))
          return (
            ('-' !== r[0] && '+' !== r[0]) || (i = e + i),
            !(i === e || i < 0 || i >= n) && i
          )
        switch (r) {
          case 'bottom':
            return 'start'
          case 'top':
            return 'end'
          case 'zero':
            return 'origin'
          case 'origin':
          case 'start':
          case 'end':
            return r
          default:
            return !1
        }
      }
      function mi(t) {
        return (t.el._scale || {}).getPointPositionForValue
          ? (function (t) {
              var e,
                n,
                i,
                a,
                r,
                o = t.el._scale,
                s = o.options,
                l = o.chart.data.labels.length,
                u = t.fill,
                d = []
              if (!l) return null
              for (
                e = s.ticks.reverse ? o.max : o.min,
                  n = s.ticks.reverse ? o.min : o.max,
                  i = o.getPointPositionForValue(0, e),
                  a = 0;
                a < l;
                ++a
              )
                (r =
                  'start' === u || 'end' === u
                    ? o.getPointPositionForValue(a, 'start' === u ? e : n)
                    : o.getBasePosition(a)),
                  s.gridLines.circular &&
                    ((r.cx = i.x),
                    (r.cy = i.y),
                    (r.angle = o.getIndexAngle(a) - Math.PI / 2)),
                  d.push(r)
              return d
            })(t)
          : (function (t) {
              var e,
                n = t.el._model || {},
                i = t.el._scale || {},
                a = t.fill,
                r = null
              if (isFinite(a)) return null
              if (
                ('start' === a
                  ? (r = void 0 === n.scaleBottom ? i.bottom : n.scaleBottom)
                  : 'end' === a
                  ? (r = void 0 === n.scaleTop ? i.top : n.scaleTop)
                  : void 0 !== n.scaleZero
                  ? (r = n.scaleZero)
                  : i.getBasePixel && (r = i.getBasePixel()),
                null != r)
              ) {
                if (void 0 !== r.x && void 0 !== r.y) return r
                if (V.isFinite(r))
                  return {
                    x: (e = i.isHorizontal()) ? r : null,
                    y: e ? null : r,
                  }
              }
              return null
            })(t)
      }
      function vi(t, e, n) {
        var i,
          a = t[e].fill,
          r = [e]
        if (!n) return a
        for (; !1 !== a && -1 === r.indexOf(a); ) {
          if (!isFinite(a)) return a
          if (!(i = t[a])) return !1
          if (i.visible) return a
          r.push(a), (a = i.fill)
        }
        return !1
      }
      function bi(t) {
        var e = t.fill,
          n = 'dataset'
        return !1 === e ? null : (isFinite(e) || (n = 'boundary'), gi[n](t))
      }
      function xi(t) {
        return t && !t.skip
      }
      function yi(t, e, n, i, a) {
        var r, o, s, l
        if (i && a) {
          for (t.moveTo(e[0].x, e[0].y), r = 1; r < i; ++r)
            V.canvas.lineTo(t, e[r - 1], e[r])
          if (void 0 === n[0].angle)
            for (t.lineTo(n[a - 1].x, n[a - 1].y), r = a - 1; r > 0; --r)
              V.canvas.lineTo(t, n[r], n[r - 1], !0)
          else
            for (
              o = n[0].cx,
                s = n[0].cy,
                l = Math.sqrt(
                  Math.pow(n[0].x - o, 2) + Math.pow(n[0].y - s, 2)
                ),
                r = a - 1;
              r > 0;
              --r
            )
              t.arc(o, s, l, n[r].angle, n[r - 1].angle, !0)
        }
      }
      function _i(t, e, n, i, a, r) {
        var o,
          s,
          l,
          u,
          d,
          h,
          c,
          f,
          g = e.length,
          p = i.spanGaps,
          m = [],
          v = [],
          b = 0,
          x = 0
        for (t.beginPath(), o = 0, s = g; o < s; ++o)
          (d = n((u = e[(l = o % g)]._view), l, i)),
            (h = xi(u)),
            (c = xi(d)),
            r && void 0 === f && h && (s = g + (f = o + 1)),
            h && c
              ? ((b = m.push(u)), (x = v.push(d)))
              : b &&
                x &&
                (p
                  ? (h && m.push(u), c && v.push(d))
                  : (yi(t, m, v, b, x), (b = x = 0), (m = []), (v = [])))
        yi(t, m, v, b, x), t.closePath(), (t.fillStyle = a), t.fill()
      }
      var ki = {
          id: 'filler',
          afterDatasetsUpdate: function (t, e) {
            var n,
              i,
              a,
              r,
              o = (t.data.datasets || []).length,
              s = e.propagate,
              l = []
            for (i = 0; i < o; ++i)
              (r = null),
                (a = (n = t.getDatasetMeta(i)).dataset) &&
                  a._model &&
                  a instanceof _t.Line &&
                  (r = {
                    visible: t.isDatasetVisible(i),
                    fill: pi(a, i, o),
                    chart: t,
                    el: a,
                  }),
                (n.$filler = r),
                l.push(r)
            for (i = 0; i < o; ++i)
              (r = l[i]) &&
                ((r.fill = vi(l, i, s)),
                (r.boundary = mi(r)),
                (r.mapper = bi(r)))
          },
          beforeDatasetsDraw: function (t) {
            var e,
              n,
              i,
              a,
              r,
              o,
              s,
              l = t._getSortedVisibleDatasetMetas(),
              u = t.ctx
            for (n = l.length - 1; n >= 0; --n)
              (e = l[n].$filler) &&
                e.visible &&
                ((a = (i = e.el)._view),
                (r = i._children || []),
                (o = e.mapper),
                (s = a.backgroundColor || z.global.defaultColor),
                o &&
                  s &&
                  r.length &&
                  (V.canvas.clipArea(u, t.chartArea),
                  _i(u, r, o, a, s, i._loop),
                  V.canvas.unclipArea(u)))
          },
        },
        wi = V.rtl.getRtlAdapter,
        Mi = V.noop,
        Si = V.valueOrDefault
      function Ci(t, e) {
        return t.usePointStyle && t.boxWidth > e ? e : t.boxWidth
      }
      z._set('global', {
        legend: {
          display: !0,
          position: 'top',
          align: 'center',
          fullWidth: !0,
          reverse: !1,
          weight: 1e3,
          onClick: function (t, e) {
            var n = e.datasetIndex,
              i = this.chart,
              a = i.getDatasetMeta(n)
            ;(a.hidden = null === a.hidden ? !i.data.datasets[n].hidden : null),
              i.update()
          },
          onHover: null,
          onLeave: null,
          labels: {
            boxWidth: 40,
            padding: 10,
            generateLabels: function (t) {
              var e = t.data.datasets,
                n = t.options.legend || {},
                i = n.labels && n.labels.usePointStyle
              return t._getSortedDatasetMetas().map(function (n) {
                var a = n.controller.getStyle(i ? 0 : void 0)
                return {
                  text: e[n.index].label,
                  fillStyle: a.backgroundColor,
                  hidden: !t.isDatasetVisible(n.index),
                  lineCap: a.borderCapStyle,
                  lineDash: a.borderDash,
                  lineDashOffset: a.borderDashOffset,
                  lineJoin: a.borderJoinStyle,
                  lineWidth: a.borderWidth,
                  strokeStyle: a.borderColor,
                  pointStyle: a.pointStyle,
                  rotation: a.rotation,
                  datasetIndex: n.index,
                }
              }, this)
            },
          },
        },
        legendCallback: function (t) {
          var e,
            n,
            i,
            a = document.createElement('ul'),
            r = t.data.datasets
          for (
            a.setAttribute('class', t.id + '-legend'), e = 0, n = r.length;
            e < n;
            e++
          )
            ((i = a.appendChild(document.createElement('li'))).appendChild(
              document.createElement('span')
            ).style.backgroundColor = r[e].backgroundColor),
              r[e].label && i.appendChild(document.createTextNode(r[e].label))
          return a.outerHTML
        },
      })
      var Pi = X.extend({
        initialize: function (t) {
          V.extend(this, t),
            (this.legendHitBoxes = []),
            (this._hoveredItem = null),
            (this.doughnutMode = !1)
        },
        beforeUpdate: Mi,
        update: function (t, e, n) {
          var i = this
          return (
            i.beforeUpdate(),
            (i.maxWidth = t),
            (i.maxHeight = e),
            (i.margins = n),
            i.beforeSetDimensions(),
            i.setDimensions(),
            i.afterSetDimensions(),
            i.beforeBuildLabels(),
            i.buildLabels(),
            i.afterBuildLabels(),
            i.beforeFit(),
            i.fit(),
            i.afterFit(),
            i.afterUpdate(),
            i.minSize
          )
        },
        afterUpdate: Mi,
        beforeSetDimensions: Mi,
        setDimensions: function () {
          var t = this
          t.isHorizontal()
            ? ((t.width = t.maxWidth), (t.left = 0), (t.right = t.width))
            : ((t.height = t.maxHeight), (t.top = 0), (t.bottom = t.height)),
            (t.paddingLeft = 0),
            (t.paddingTop = 0),
            (t.paddingRight = 0),
            (t.paddingBottom = 0),
            (t.minSize = { width: 0, height: 0 })
        },
        afterSetDimensions: Mi,
        beforeBuildLabels: Mi,
        buildLabels: function () {
          var t = this,
            e = t.options.labels || {},
            n = V.callback(e.generateLabels, [t.chart], t) || []
          e.filter &&
            (n = n.filter(function (n) {
              return e.filter(n, t.chart.data)
            })),
            t.options.reverse && n.reverse(),
            (t.legendItems = n)
        },
        afterBuildLabels: Mi,
        beforeFit: Mi,
        fit: function () {
          var t = this,
            e = t.options,
            n = e.labels,
            i = e.display,
            a = t.ctx,
            r = V.options._parseFont(n),
            o = r.size,
            s = (t.legendHitBoxes = []),
            l = t.minSize,
            u = t.isHorizontal()
          if (
            (u
              ? ((l.width = t.maxWidth), (l.height = i ? 10 : 0))
              : ((l.width = i ? 10 : 0), (l.height = t.maxHeight)),
            i)
          ) {
            if (((a.font = r.string), u)) {
              var d = (t.lineWidths = [0]),
                h = 0
              ;(a.textAlign = 'left'),
                (a.textBaseline = 'middle'),
                V.each(t.legendItems, function (t, e) {
                  var i = Ci(n, o) + o / 2 + a.measureText(t.text).width
                  ;(0 === e || d[d.length - 1] + i + 2 * n.padding > l.width) &&
                    ((h += o + n.padding), (d[d.length - (e > 0 ? 0 : 1)] = 0)),
                    (s[e] = { left: 0, top: 0, width: i, height: o }),
                    (d[d.length - 1] += i + n.padding)
                }),
                (l.height += h)
            } else {
              var c = n.padding,
                f = (t.columnWidths = []),
                g = (t.columnHeights = []),
                p = n.padding,
                m = 0,
                v = 0
              V.each(t.legendItems, function (t, e) {
                var i = Ci(n, o) + o / 2 + a.measureText(t.text).width
                e > 0 &&
                  v + o + 2 * c > l.height &&
                  ((p += m + n.padding),
                  f.push(m),
                  g.push(v),
                  (m = 0),
                  (v = 0)),
                  (m = Math.max(m, i)),
                  (v += o + c),
                  (s[e] = { left: 0, top: 0, width: i, height: o })
              }),
                (p += m),
                f.push(m),
                g.push(v),
                (l.width += p)
            }
            ;(t.width = l.width), (t.height = l.height)
          } else t.width = l.width = t.height = l.height = 0
        },
        afterFit: Mi,
        isHorizontal: function () {
          return (
            'top' === this.options.position ||
            'bottom' === this.options.position
          )
        },
        draw: function () {
          var t = this,
            e = t.options,
            n = e.labels,
            i = z.global,
            a = i.defaultColor,
            r = i.elements.line,
            o = t.height,
            s = t.columnHeights,
            l = t.width,
            u = t.lineWidths
          if (e.display) {
            var d,
              h = wi(e.rtl, t.left, t.minSize.width),
              c = t.ctx,
              f = Si(n.fontColor, i.defaultFontColor),
              g = V.options._parseFont(n),
              p = g.size
            ;(c.textAlign = h.textAlign('left')),
              (c.textBaseline = 'middle'),
              (c.lineWidth = 0.5),
              (c.strokeStyle = f),
              (c.fillStyle = f),
              (c.font = g.string)
            var m = Ci(n, p),
              v = t.legendHitBoxes,
              b = function (t, i) {
                switch (e.align) {
                  case 'start':
                    return n.padding
                  case 'end':
                    return t - i
                  default:
                    return (t - i + n.padding) / 2
                }
              },
              x = t.isHorizontal()
            ;(d = x
              ? { x: t.left + b(l, u[0]), y: t.top + n.padding, line: 0 }
              : { x: t.left + n.padding, y: t.top + b(o, s[0]), line: 0 }),
              V.rtl.overrideTextDirection(t.ctx, e.textDirection)
            var y = p + n.padding
            V.each(t.legendItems, function (e, i) {
              var f = c.measureText(e.text).width,
                g = m + p / 2 + f,
                _ = d.x,
                k = d.y
              h.setWidth(t.minSize.width),
                x
                  ? i > 0 &&
                    _ + g + n.padding > t.left + t.minSize.width &&
                    ((k = d.y += y),
                    d.line++,
                    (_ = d.x = t.left + b(l, u[d.line])))
                  : i > 0 &&
                    k + y > t.top + t.minSize.height &&
                    ((_ = d.x = _ + t.columnWidths[d.line] + n.padding),
                    d.line++,
                    (k = d.y = t.top + b(o, s[d.line])))
              var w = h.x(_)
              !(function (t, e, i) {
                if (!(isNaN(m) || m <= 0)) {
                  c.save()
                  var o = Si(i.lineWidth, r.borderWidth)
                  if (
                    ((c.fillStyle = Si(i.fillStyle, a)),
                    (c.lineCap = Si(i.lineCap, r.borderCapStyle)),
                    (c.lineDashOffset = Si(
                      i.lineDashOffset,
                      r.borderDashOffset
                    )),
                    (c.lineJoin = Si(i.lineJoin, r.borderJoinStyle)),
                    (c.lineWidth = o),
                    (c.strokeStyle = Si(i.strokeStyle, a)),
                    c.setLineDash &&
                      c.setLineDash(Si(i.lineDash, r.borderDash)),
                    n && n.usePointStyle)
                  ) {
                    var s = (m * Math.SQRT2) / 2,
                      l = h.xPlus(t, m / 2),
                      u = e + p / 2
                    V.canvas.drawPoint(c, i.pointStyle, s, l, u, i.rotation)
                  } else
                    c.fillRect(h.leftForLtr(t, m), e, m, p),
                      0 !== o && c.strokeRect(h.leftForLtr(t, m), e, m, p)
                  c.restore()
                }
              })(w, k, e),
                (v[i].left = h.leftForLtr(w, v[i].width)),
                (v[i].top = k),
                (function (t, e, n, i) {
                  var a = p / 2,
                    r = h.xPlus(t, m + a),
                    o = e + a
                  c.fillText(n.text, r, o),
                    n.hidden &&
                      (c.beginPath(),
                      (c.lineWidth = 2),
                      c.moveTo(r, o),
                      c.lineTo(h.xPlus(r, i), o),
                      c.stroke())
                })(w, k, e, f),
                x ? (d.x += g + n.padding) : (d.y += y)
            }),
              V.rtl.restoreTextDirection(t.ctx, e.textDirection)
          }
        },
        _getLegendItemAt: function (t, e) {
          var n,
            i,
            a,
            r = this
          if (t >= r.left && t <= r.right && e >= r.top && e <= r.bottom)
            for (a = r.legendHitBoxes, n = 0; n < a.length; ++n)
              if (
                t >= (i = a[n]).left &&
                t <= i.left + i.width &&
                e >= i.top &&
                e <= i.top + i.height
              )
                return r.legendItems[n]
          return null
        },
        handleEvent: function (t) {
          var e,
            n = this,
            i = n.options,
            a = 'mouseup' === t.type ? 'click' : t.type
          if ('mousemove' === a) {
            if (!i.onHover && !i.onLeave) return
          } else {
            if ('click' !== a) return
            if (!i.onClick) return
          }
          ;(e = n._getLegendItemAt(t.x, t.y)),
            'click' === a
              ? e && i.onClick && i.onClick.call(n, t.native, e)
              : (i.onLeave &&
                  e !== n._hoveredItem &&
                  (n._hoveredItem &&
                    i.onLeave.call(n, t.native, n._hoveredItem),
                  (n._hoveredItem = e)),
                i.onHover && e && i.onHover.call(n, t.native, e))
        },
      })
      function Ai(t, e) {
        var n = new Pi({ ctx: t.ctx, options: e, chart: t })
        ge.configure(t, n, e), ge.addBox(t, n), (t.legend = n)
      }
      var Di = {
          id: 'legend',
          _element: Pi,
          beforeInit: function (t) {
            var e = t.options.legend
            e && Ai(t, e)
          },
          beforeUpdate: function (t) {
            var e = t.options.legend,
              n = t.legend
            e
              ? (V.mergeIf(e, z.global.legend),
                n ? (ge.configure(t, n, e), (n.options = e)) : Ai(t, e))
              : n && (ge.removeBox(t, n), delete t.legend)
          },
          afterEvent: function (t, e) {
            var n = t.legend
            n && n.handleEvent(e)
          },
        },
        Ti = V.noop
      z._set('global', {
        title: {
          display: !1,
          fontStyle: 'bold',
          fullWidth: !0,
          padding: 10,
          position: 'top',
          text: '',
          weight: 2e3,
        },
      })
      var Ii = X.extend({
        initialize: function (t) {
          V.extend(this, t), (this.legendHitBoxes = [])
        },
        beforeUpdate: Ti,
        update: function (t, e, n) {
          var i = this
          return (
            i.beforeUpdate(),
            (i.maxWidth = t),
            (i.maxHeight = e),
            (i.margins = n),
            i.beforeSetDimensions(),
            i.setDimensions(),
            i.afterSetDimensions(),
            i.beforeBuildLabels(),
            i.buildLabels(),
            i.afterBuildLabels(),
            i.beforeFit(),
            i.fit(),
            i.afterFit(),
            i.afterUpdate(),
            i.minSize
          )
        },
        afterUpdate: Ti,
        beforeSetDimensions: Ti,
        setDimensions: function () {
          var t = this
          t.isHorizontal()
            ? ((t.width = t.maxWidth), (t.left = 0), (t.right = t.width))
            : ((t.height = t.maxHeight), (t.top = 0), (t.bottom = t.height)),
            (t.paddingLeft = 0),
            (t.paddingTop = 0),
            (t.paddingRight = 0),
            (t.paddingBottom = 0),
            (t.minSize = { width: 0, height: 0 })
        },
        afterSetDimensions: Ti,
        beforeBuildLabels: Ti,
        buildLabels: Ti,
        afterBuildLabels: Ti,
        beforeFit: Ti,
        fit: function () {
          var t,
            e = this,
            n = e.options,
            i = (e.minSize = {}),
            a = e.isHorizontal()
          n.display
            ? ((t =
                (V.isArray(n.text) ? n.text.length : 1) *
                  V.options._parseFont(n).lineHeight +
                2 * n.padding),
              (e.width = i.width = a ? e.maxWidth : t),
              (e.height = i.height = a ? t : e.maxHeight))
            : (e.width = i.width = e.height = i.height = 0)
        },
        afterFit: Ti,
        isHorizontal: function () {
          var t = this.options.position
          return 'top' === t || 'bottom' === t
        },
        draw: function () {
          var t = this,
            e = t.ctx,
            n = t.options
          if (n.display) {
            var i,
              a,
              r,
              o = V.options._parseFont(n),
              s = o.lineHeight,
              l = s / 2 + n.padding,
              u = 0,
              d = t.top,
              h = t.left,
              c = t.bottom,
              f = t.right
            ;(e.fillStyle = V.valueOrDefault(
              n.fontColor,
              z.global.defaultFontColor
            )),
              (e.font = o.string),
              t.isHorizontal()
                ? ((a = h + (f - h) / 2), (r = d + l), (i = f - h))
                : ((a = 'left' === n.position ? h + l : f - l),
                  (r = d + (c - d) / 2),
                  (i = c - d),
                  (u = Math.PI * ('left' === n.position ? -0.5 : 0.5))),
              e.save(),
              e.translate(a, r),
              e.rotate(u),
              (e.textAlign = 'center'),
              (e.textBaseline = 'middle')
            var g = n.text
            if (V.isArray(g))
              for (var p = 0, m = 0; m < g.length; ++m)
                e.fillText(g[m], 0, p, i), (p += s)
            else e.fillText(g, 0, 0, i)
            e.restore()
          }
        },
      })
      function Fi(t, e) {
        var n = new Ii({ ctx: t.ctx, options: e, chart: t })
        ge.configure(t, n, e), ge.addBox(t, n), (t.titleBlock = n)
      }
      var Li = {},
        Oi = ki,
        Ri = Di,
        zi = {
          id: 'title',
          _element: Ii,
          beforeInit: function (t) {
            var e = t.options.title
            e && Fi(t, e)
          },
          beforeUpdate: function (t) {
            var e = t.options.title,
              n = t.titleBlock
            e
              ? (V.mergeIf(e, z.global.title),
                n ? (ge.configure(t, n, e), (n.options = e)) : Fi(t, e))
              : n && (ge.removeBox(t, n), delete t.titleBlock)
          },
        }
      for (var Ni in ((Li.filler = Oi),
      (Li.legend = Ri),
      (Li.title = zi),
      (tn.helpers = V),
      (function () {
        function t(t, e, n) {
          var i
          return (
            'string' == typeof t
              ? ((i = parseInt(t, 10)),
                -1 !== t.indexOf('%') && (i = (i / 100) * e.parentNode[n]))
              : (i = t),
            i
          )
        }
        function e(t) {
          return null != t && 'none' !== t
        }
        function n(n, i, a) {
          var r = document.defaultView,
            o = V._getParentNode(n),
            s = r.getComputedStyle(n)[i],
            l = r.getComputedStyle(o)[i],
            u = e(s),
            d = e(l),
            h = Number.POSITIVE_INFINITY
          return u || d
            ? Math.min(u ? t(s, n, a) : h, d ? t(l, o, a) : h)
            : 'none'
        }
        ;(V.where = function (t, e) {
          if (V.isArray(t) && Array.prototype.filter) return t.filter(e)
          var n = []
          return (
            V.each(t, function (t) {
              e(t) && n.push(t)
            }),
            n
          )
        }),
          (V.findIndex = Array.prototype.findIndex
            ? function (t, e, n) {
                return t.findIndex(e, n)
              }
            : function (t, e, n) {
                n = void 0 === n ? t : n
                for (var i = 0, a = t.length; i < a; ++i)
                  if (e.call(n, t[i], i, t)) return i
                return -1
              }),
          (V.findNextWhere = function (t, e, n) {
            V.isNullOrUndef(n) && (n = -1)
            for (var i = n + 1; i < t.length; i++) {
              var a = t[i]
              if (e(a)) return a
            }
          }),
          (V.findPreviousWhere = function (t, e, n) {
            V.isNullOrUndef(n) && (n = t.length)
            for (var i = n - 1; i >= 0; i--) {
              var a = t[i]
              if (e(a)) return a
            }
          }),
          (V.isNumber = function (t) {
            return !isNaN(parseFloat(t)) && isFinite(t)
          }),
          (V.almostEquals = function (t, e, n) {
            return Math.abs(t - e) < n
          }),
          (V.almostWhole = function (t, e) {
            var n = Math.round(t)
            return n - e <= t && n + e >= t
          }),
          (V.max = function (t) {
            return t.reduce(function (t, e) {
              return isNaN(e) ? t : Math.max(t, e)
            }, Number.NEGATIVE_INFINITY)
          }),
          (V.min = function (t) {
            return t.reduce(function (t, e) {
              return isNaN(e) ? t : Math.min(t, e)
            }, Number.POSITIVE_INFINITY)
          }),
          (V.sign = Math.sign
            ? function (t) {
                return Math.sign(t)
              }
            : function (t) {
                return 0 === (t = +t) || isNaN(t) ? t : t > 0 ? 1 : -1
              }),
          (V.toRadians = function (t) {
            return t * (Math.PI / 180)
          }),
          (V.toDegrees = function (t) {
            return t * (180 / Math.PI)
          }),
          (V._decimalPlaces = function (t) {
            if (V.isFinite(t)) {
              for (var e = 1, n = 0; Math.round(t * e) / e !== t; )
                (e *= 10), n++
              return n
            }
          }),
          (V.getAngleFromPoint = function (t, e) {
            var n = e.x - t.x,
              i = e.y - t.y,
              a = Math.sqrt(n * n + i * i),
              r = Math.atan2(i, n)
            return (
              r < -0.5 * Math.PI && (r += 2 * Math.PI),
              { angle: r, distance: a }
            )
          }),
          (V.distanceBetweenPoints = function (t, e) {
            return Math.sqrt(Math.pow(e.x - t.x, 2) + Math.pow(e.y - t.y, 2))
          }),
          (V.aliasPixel = function (t) {
            return t % 2 == 0 ? 0 : 0.5
          }),
          (V._alignPixel = function (t, e, n) {
            var i = t.currentDevicePixelRatio,
              a = n / 2
            return Math.round((e - a) * i) / i + a
          }),
          (V.splineCurve = function (t, e, n, i) {
            var a = t.skip ? e : t,
              r = e,
              o = n.skip ? e : n,
              s = Math.sqrt(Math.pow(r.x - a.x, 2) + Math.pow(r.y - a.y, 2)),
              l = Math.sqrt(Math.pow(o.x - r.x, 2) + Math.pow(o.y - r.y, 2)),
              u = s / (s + l),
              d = l / (s + l),
              h = i * (u = isNaN(u) ? 0 : u),
              c = i * (d = isNaN(d) ? 0 : d)
            return {
              previous: { x: r.x - h * (o.x - a.x), y: r.y - h * (o.y - a.y) },
              next: { x: r.x + c * (o.x - a.x), y: r.y + c * (o.y - a.y) },
            }
          }),
          (V.EPSILON = Number.EPSILON || 1e-14),
          (V.splineCurveMonotone = function (t) {
            var e,
              n,
              i,
              a,
              r,
              o,
              s,
              l,
              u,
              d = (t || []).map(function (t) {
                return { model: t._model, deltaK: 0, mK: 0 }
              }),
              h = d.length
            for (e = 0; e < h; ++e)
              if (!(i = d[e]).model.skip) {
                if (
                  ((n = e > 0 ? d[e - 1] : null),
                  (a = e < h - 1 ? d[e + 1] : null) && !a.model.skip)
                ) {
                  var c = a.model.x - i.model.x
                  i.deltaK = 0 !== c ? (a.model.y - i.model.y) / c : 0
                }
                !n || n.model.skip
                  ? (i.mK = i.deltaK)
                  : !a || a.model.skip
                  ? (i.mK = n.deltaK)
                  : this.sign(n.deltaK) !== this.sign(i.deltaK)
                  ? (i.mK = 0)
                  : (i.mK = (n.deltaK + i.deltaK) / 2)
              }
            for (e = 0; e < h - 1; ++e)
              (i = d[e]),
                (a = d[e + 1]),
                i.model.skip ||
                  a.model.skip ||
                  (V.almostEquals(i.deltaK, 0, this.EPSILON)
                    ? (i.mK = a.mK = 0)
                    : ((r = i.mK / i.deltaK),
                      (o = a.mK / i.deltaK),
                      (l = Math.pow(r, 2) + Math.pow(o, 2)) <= 9 ||
                        ((s = 3 / Math.sqrt(l)),
                        (i.mK = r * s * i.deltaK),
                        (a.mK = o * s * i.deltaK))))
            for (e = 0; e < h; ++e)
              (i = d[e]).model.skip ||
                ((n = e > 0 ? d[e - 1] : null),
                (a = e < h - 1 ? d[e + 1] : null),
                n &&
                  !n.model.skip &&
                  ((u = (i.model.x - n.model.x) / 3),
                  (i.model.controlPointPreviousX = i.model.x - u),
                  (i.model.controlPointPreviousY = i.model.y - u * i.mK)),
                a &&
                  !a.model.skip &&
                  ((u = (a.model.x - i.model.x) / 3),
                  (i.model.controlPointNextX = i.model.x + u),
                  (i.model.controlPointNextY = i.model.y + u * i.mK)))
          }),
          (V.nextItem = function (t, e, n) {
            return n
              ? e >= t.length - 1
                ? t[0]
                : t[e + 1]
              : e >= t.length - 1
              ? t[t.length - 1]
              : t[e + 1]
          }),
          (V.previousItem = function (t, e, n) {
            return n
              ? e <= 0
                ? t[t.length - 1]
                : t[e - 1]
              : e <= 0
              ? t[0]
              : t[e - 1]
          }),
          (V.niceNum = function (t, e) {
            var n = Math.floor(V.log10(t)),
              i = t / Math.pow(10, n)
            return (
              (e
                ? i < 1.5
                  ? 1
                  : i < 3
                  ? 2
                  : i < 7
                  ? 5
                  : 10
                : i <= 1
                ? 1
                : i <= 2
                ? 2
                : i <= 5
                ? 5
                : 10) * Math.pow(10, n)
            )
          }),
          (V.requestAnimFrame =
            'undefined' == typeof window
              ? function (t) {
                  t()
                }
              : window.requestAnimationFrame ||
                window.webkitRequestAnimationFrame ||
                window.mozRequestAnimationFrame ||
                window.oRequestAnimationFrame ||
                window.msRequestAnimationFrame ||
                function (t) {
                  return window.setTimeout(t, 1e3 / 60)
                }),
          (V.getRelativePosition = function (t, e) {
            var n,
              i,
              a = t.originalEvent || t,
              r = t.target || t.srcElement,
              o = r.getBoundingClientRect(),
              s = a.touches
            s && s.length > 0
              ? ((n = s[0].clientX), (i = s[0].clientY))
              : ((n = a.clientX), (i = a.clientY))
            var l = parseFloat(V.getStyle(r, 'padding-left')),
              u = parseFloat(V.getStyle(r, 'padding-top')),
              d = parseFloat(V.getStyle(r, 'padding-right')),
              h = parseFloat(V.getStyle(r, 'padding-bottom')),
              c = o.right - o.left - l - d,
              f = o.bottom - o.top - u - h
            return {
              x: (n = Math.round(
                (((n - o.left - l) / c) * r.width) / e.currentDevicePixelRatio
              )),
              y: (i = Math.round(
                (((i - o.top - u) / f) * r.height) / e.currentDevicePixelRatio
              )),
            }
          }),
          (V.getConstraintWidth = function (t) {
            return n(t, 'max-width', 'clientWidth')
          }),
          (V.getConstraintHeight = function (t) {
            return n(t, 'max-height', 'clientHeight')
          }),
          (V._calculatePadding = function (t, e, n) {
            return (e = V.getStyle(t, e)).indexOf('%') > -1
              ? (n * parseInt(e, 10)) / 100
              : parseInt(e, 10)
          }),
          (V._getParentNode = function (t) {
            var e = t.parentNode
            return (
              e && '[object ShadowRoot]' === e.toString() && (e = e.host), e
            )
          }),
          (V.getMaximumWidth = function (t) {
            var e = V._getParentNode(t)
            if (!e) return t.clientWidth
            var n = e.clientWidth,
              i =
                n -
                V._calculatePadding(e, 'padding-left', n) -
                V._calculatePadding(e, 'padding-right', n),
              a = V.getConstraintWidth(t)
            return isNaN(a) ? i : Math.min(i, a)
          }),
          (V.getMaximumHeight = function (t) {
            var e = V._getParentNode(t)
            if (!e) return t.clientHeight
            var n = e.clientHeight,
              i =
                n -
                V._calculatePadding(e, 'padding-top', n) -
                V._calculatePadding(e, 'padding-bottom', n),
              a = V.getConstraintHeight(t)
            return isNaN(a) ? i : Math.min(i, a)
          }),
          (V.getStyle = function (t, e) {
            return t.currentStyle
              ? t.currentStyle[e]
              : document.defaultView
                  .getComputedStyle(t, null)
                  .getPropertyValue(e)
          }),
          (V.retinaScale = function (t, e) {
            var n = (t.currentDevicePixelRatio =
              e ||
              ('undefined' != typeof window && window.devicePixelRatio) ||
              1)
            if (1 !== n) {
              var i = t.canvas,
                a = t.height,
                r = t.width
              ;(i.height = a * n),
                (i.width = r * n),
                t.ctx.scale(n, n),
                i.style.height ||
                  i.style.width ||
                  ((i.style.height = a + 'px'), (i.style.width = r + 'px'))
            }
          }),
          (V.fontString = function (t, e, n) {
            return e + ' ' + t + 'px ' + n
          }),
          (V.longestText = function (t, e, n, i) {
            var a = ((i = i || {}).data = i.data || {}),
              r = (i.garbageCollect = i.garbageCollect || [])
            i.font !== e &&
              ((a = i.data = {}), (r = i.garbageCollect = []), (i.font = e)),
              (t.font = e)
            var o,
              s,
              l,
              u,
              d,
              h = 0,
              c = n.length
            for (o = 0; o < c; o++)
              if (null != (u = n[o]) && !0 !== V.isArray(u))
                h = V.measureText(t, a, r, h, u)
              else if (V.isArray(u))
                for (s = 0, l = u.length; s < l; s++)
                  null == (d = u[s]) ||
                    V.isArray(d) ||
                    (h = V.measureText(t, a, r, h, d))
            var f = r.length / 2
            if (f > n.length) {
              for (o = 0; o < f; o++) delete a[r[o]]
              r.splice(0, f)
            }
            return h
          }),
          (V.measureText = function (t, e, n, i, a) {
            var r = e[a]
            return (
              r || ((r = e[a] = t.measureText(a).width), n.push(a)),
              r > i && (i = r),
              i
            )
          }),
          (V.numberOfLabelLines = function (t) {
            var e = 1
            return (
              V.each(t, function (t) {
                V.isArray(t) && t.length > e && (e = t.length)
              }),
              e
            )
          }),
          (V.color = k
            ? function (t) {
                return (
                  t instanceof CanvasGradient && (t = z.global.defaultColor),
                  k(t)
                )
              }
            : function (t) {
                return console.error('Color.js not found!'), t
              }),
          (V.getHoverColor = function (t) {
            return t instanceof CanvasPattern || t instanceof CanvasGradient
              ? t
              : V.color(t).saturate(0.5).darken(0.1).rgbString()
          })
      })(),
      (tn._adapters = an),
      (tn.Animation = Z),
      (tn.animationService = $),
      (tn.controllers = $t),
      (tn.DatasetController = nt),
      (tn.defaults = z),
      (tn.Element = X),
      (tn.elements = _t),
      (tn.Interaction = ae),
      (tn.layouts = ge),
      (tn.platform = Fe),
      (tn.plugins = Le),
      (tn.Scale = xn),
      (tn.scaleService = Oe),
      (tn.Ticks = rn),
      (tn.Tooltip = Ue),
      tn.helpers.each(ci, function (t, e) {
        tn.scaleService.registerScaleType(e, t, t._defaults)
      }),
      Li))
        Li.hasOwnProperty(Ni) && tn.plugins.register(Li[Ni])
      tn.platform.initialize()
      var Bi = tn
      return (
        'undefined' != typeof window && (window.Chart = tn),
        (tn.Chart = tn),
        (tn.Legend = Li.legend._element),
        (tn.Title = Li.title._element),
        (tn.pluginService = tn.plugins),
        (tn.PluginBase = tn.Element.extend({})),
        (tn.canvasHelpers = tn.helpers.canvas),
        (tn.layoutService = tn.layouts),
        (tn.LinearScaleBase = Sn),
        tn.helpers.each(
          [
            'Bar',
            'Bubble',
            'Doughnut',
            'Line',
            'PolarArea',
            'Radar',
            'Scatter',
          ],
          function (t) {
            tn[t] = function (e, n) {
              return new tn(
                e,
                tn.helpers.merge(n || {}, {
                  type: t.charAt(0).toLowerCase() + t.slice(1),
                })
              )
            }
          }
        ),
        Bi
      )
    })

    ;(function () {
      var pieCharts = document.querySelectorAll('.pie-chart')

      Array.prototype.forEach.call(pieCharts, function (wrapperEl) {
        // Pull our variables out of our helper div
        var dataset = wrapperEl.dataset
        var percentage = dataset.percentage
          ? parseInt(dataset.percentage, 10)
          : 0
        var diameter = dataset.diameter ? parseInt(dataset.diameter, 10) : 150
        var strokeWidth = dataset.strokeWidth
          ? parseInt(dataset.strokeWidth, 10)
          : 15
        var fillColor = dataset.fillColor || '#f47b28' // orange
        var bgColor = dataset.bgColor || '#fac5a1' // light orange

        // Size our wrapper element and add our percentage
        wrapperEl.style.height = diameter + 'px'
        wrapperEl.style.width = diameter + 'px'
        var percentageEl = document.createElement('span')
        percentageEl.classList.add('pie-chart__percentage')
        percentageEl.style.color = fillColor
        percentageEl.innerText = percentage + '%'
        wrapperEl.appendChild(percentageEl)

        // Setting up the values we're gonna use to draw our circles
        var center = diameter
        var radius = center - strokeWidth
        var startAngle = degreesToRadians(-90)
        var fullCircle = degreesToRadians(365)
        var endAngle = startAngle + degreesToRadians((percentage / 100) * 365)

        // Draw our canvas! Note we're doubling our sizes so we look good on high res displays
        var canvas = document.createElement('canvas')
        canvas.classList.add('pie-chart__canvas')
        canvas.height = diameter * 2
        canvas.width = diameter * 2
        var ctx = canvas.getContext('2d')
        ctx.lineWidth = strokeWidth * 2
        ctx.strokeStyle = bgColor
        ctx.beginPath()
        ctx.arc(center, center, radius, startAngle, fullCircle)
        ctx.stroke()
        ctx.strokeStyle = fillColor
        ctx.beginPath()
        ctx.arc(center, center, radius, startAngle, endAngle)
        ctx.stroke()

        wrapperEl.appendChild(canvas)
      })

      function degreesToRadians(degrees) {
        return (degrees / 360) * (2 * Math.PI)
      }
    })()

    !(function (e, t) {
      'object' == typeof exports && 'undefined' != typeof module
        ? (module.exports = t())
        : 'function' == typeof define && define.amd
        ? define(t)
        : (e.moment = t())
    })(this, function () {
      'use strict'
      var e, i
      function f() {
        return e.apply(null, arguments)
      }
      function o(e) {
        return (
          e instanceof Array ||
          '[object Array]' === Object.prototype.toString.call(e)
        )
      }
      function u(e) {
        return (
          null != e && '[object Object]' === Object.prototype.toString.call(e)
        )
      }
      function m(e, t) {
        return Object.prototype.hasOwnProperty.call(e, t)
      }
      function l(e) {
        if (Object.getOwnPropertyNames)
          return 0 === Object.getOwnPropertyNames(e).length
        for (var t in e) if (m(e, t)) return
        return 1
      }
      function r(e) {
        return void 0 === e
      }
      function h(e) {
        return (
          'number' == typeof e ||
          '[object Number]' === Object.prototype.toString.call(e)
        )
      }
      function a(e) {
        return (
          e instanceof Date ||
          '[object Date]' === Object.prototype.toString.call(e)
        )
      }
      function d(e, t) {
        for (var n = [], s = 0; s < e.length; ++s) n.push(t(e[s], s))
        return n
      }
      function c(e, t) {
        for (var n in t) m(t, n) && (e[n] = t[n])
        return (
          m(t, 'toString') && (e.toString = t.toString),
          m(t, 'valueOf') && (e.valueOf = t.valueOf),
          e
        )
      }
      function _(e, t, n, s) {
        return xt(e, t, n, s, !0).utc()
      }
      function y(e) {
        return (
          null == e._pf &&
            (e._pf = {
              empty: !1,
              unusedTokens: [],
              unusedInput: [],
              overflow: -2,
              charsLeftOver: 0,
              nullInput: !1,
              invalidEra: null,
              invalidMonth: null,
              invalidFormat: !1,
              userInvalidated: !1,
              iso: !1,
              parsedDateParts: [],
              era: null,
              meridiem: null,
              rfc2822: !1,
              weekdayMismatch: !1,
            }),
          e._pf
        )
      }
      function g(e) {
        if (null == e._isValid) {
          var t = y(e),
            n = i.call(t.parsedDateParts, function (e) {
              return null != e
            }),
            s =
              !isNaN(e._d.getTime()) &&
              t.overflow < 0 &&
              !t.empty &&
              !t.invalidEra &&
              !t.invalidMonth &&
              !t.invalidWeekday &&
              !t.weekdayMismatch &&
              !t.nullInput &&
              !t.invalidFormat &&
              !t.userInvalidated &&
              (!t.meridiem || (t.meridiem && n))
          if (
            (e._strict &&
              (s =
                s &&
                0 === t.charsLeftOver &&
                0 === t.unusedTokens.length &&
                void 0 === t.bigHour),
            null != Object.isFrozen && Object.isFrozen(e))
          )
            return s
          e._isValid = s
        }
        return e._isValid
      }
      function w(e) {
        var t = _(NaN)
        return null != e ? c(y(t), e) : (y(t).userInvalidated = !0), t
      }
      i = Array.prototype.some
        ? Array.prototype.some
        : function (e) {
            for (var t = Object(this), n = t.length >>> 0, s = 0; s < n; s++)
              if (s in t && e.call(this, t[s], s, t)) return !0
            return !1
          }
      var p = (f.momentProperties = []),
        t = !1
      function v(e, t) {
        var n, s, i
        if (
          (r(t._isAMomentObject) || (e._isAMomentObject = t._isAMomentObject),
          r(t._i) || (e._i = t._i),
          r(t._f) || (e._f = t._f),
          r(t._l) || (e._l = t._l),
          r(t._strict) || (e._strict = t._strict),
          r(t._tzm) || (e._tzm = t._tzm),
          r(t._isUTC) || (e._isUTC = t._isUTC),
          r(t._offset) || (e._offset = t._offset),
          r(t._pf) || (e._pf = y(t)),
          r(t._locale) || (e._locale = t._locale),
          0 < p.length)
        )
          for (n = 0; n < p.length; n++) r((i = t[(s = p[n])])) || (e[s] = i)
        return e
      }
      function k(e) {
        v(this, e),
          (this._d = new Date(null != e._d ? e._d.getTime() : NaN)),
          this.isValid() || (this._d = new Date(NaN)),
          !1 === t && ((t = !0), f.updateOffset(this), (t = !1))
      }
      function M(e) {
        return e instanceof k || (null != e && null != e._isAMomentObject)
      }
      function D(e) {
        !1 === f.suppressDeprecationWarnings &&
          'undefined' != typeof console &&
          console.warn &&
          console.warn('Deprecation warning: ' + e)
      }
      function n(i, r) {
        var a = !0
        return c(function () {
          if (
            (null != f.deprecationHandler && f.deprecationHandler(null, i), a)
          ) {
            for (var e, t, n = [], s = 0; s < arguments.length; s++) {
              if (((e = ''), 'object' == typeof arguments[s])) {
                for (t in ((e += '\n[' + s + '] '), arguments[0]))
                  m(arguments[0], t) && (e += t + ': ' + arguments[0][t] + ', ')
                e = e.slice(0, -2)
              } else e = arguments[s]
              n.push(e)
            }
            D(
              i +
                '\nArguments: ' +
                Array.prototype.slice.call(n).join('') +
                '\n' +
                new Error().stack
            ),
              (a = !1)
          }
          return r.apply(this, arguments)
        }, r)
      }
      var s,
        S = {}
      function Y(e, t) {
        null != f.deprecationHandler && f.deprecationHandler(e, t),
          S[e] || (D(t), (S[e] = !0))
      }
      function O(e) {
        return (
          ('undefined' != typeof Function && e instanceof Function) ||
          '[object Function]' === Object.prototype.toString.call(e)
        )
      }
      function b(e, t) {
        var n,
          s = c({}, e)
        for (n in t)
          m(t, n) &&
            (u(e[n]) && u(t[n])
              ? ((s[n] = {}), c(s[n], e[n]), c(s[n], t[n]))
              : null != t[n]
              ? (s[n] = t[n])
              : delete s[n])
        for (n in e) m(e, n) && !m(t, n) && u(e[n]) && (s[n] = c({}, s[n]))
        return s
      }
      function x(e) {
        null != e && this.set(e)
      }
      ;(f.suppressDeprecationWarnings = !1),
        (f.deprecationHandler = null),
        (s = Object.keys
          ? Object.keys
          : function (e) {
              var t,
                n = []
              for (t in e) m(e, t) && n.push(t)
              return n
            })
      function T(e, t, n) {
        var s = '' + Math.abs(e),
          i = t - s.length
        return (
          (0 <= e ? (n ? '+' : '') : '-') +
          Math.pow(10, Math.max(0, i)).toString().substr(1) +
          s
        )
      }
      var N =
          /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,
        P = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,
        R = {},
        W = {}
      function C(e, t, n, s) {
        var i =
          'string' == typeof s
            ? function () {
                return this[s]()
              }
            : s
        e && (W[e] = i),
          t &&
            (W[t[0]] = function () {
              return T(i.apply(this, arguments), t[1], t[2])
            }),
          n &&
            (W[n] = function () {
              return this.localeData().ordinal(i.apply(this, arguments), e)
            })
      }
      function U(e, t) {
        return e.isValid()
          ? ((t = H(t, e.localeData())),
            (R[t] =
              R[t] ||
              (function (s) {
                for (var e, i = s.match(N), t = 0, r = i.length; t < r; t++)
                  W[i[t]]
                    ? (i[t] = W[i[t]])
                    : (i[t] = (e = i[t]).match(/\[[\s\S]/)
                        ? e.replace(/^\[|\]$/g, '')
                        : e.replace(/\\/g, ''))
                return function (e) {
                  for (var t = '', n = 0; n < r; n++)
                    t += O(i[n]) ? i[n].call(e, s) : i[n]
                  return t
                }
              })(t)),
            R[t](e))
          : e.localeData().invalidDate()
      }
      function H(e, t) {
        var n = 5
        function s(e) {
          return t.longDateFormat(e) || e
        }
        for (P.lastIndex = 0; 0 <= n && P.test(e); )
          (e = e.replace(P, s)), (P.lastIndex = 0), --n
        return e
      }
      var F = {}
      function L(e, t) {
        var n = e.toLowerCase()
        F[n] = F[n + 's'] = F[t] = e
      }
      function V(e) {
        return 'string' == typeof e ? F[e] || F[e.toLowerCase()] : void 0
      }
      function G(e) {
        var t,
          n,
          s = {}
        for (n in e) m(e, n) && (t = V(n)) && (s[t] = e[n])
        return s
      }
      var E = {}
      function A(e, t) {
        E[e] = t
      }
      function j(e) {
        return (e % 4 == 0 && e % 100 != 0) || e % 400 == 0
      }
      function I(e) {
        return e < 0 ? Math.ceil(e) || 0 : Math.floor(e)
      }
      function Z(e) {
        var t = +e,
          n = 0
        return 0 != t && isFinite(t) && (n = I(t)), n
      }
      function z(t, n) {
        return function (e) {
          return null != e
            ? (q(this, t, e), f.updateOffset(this, n), this)
            : $(this, t)
        }
      }
      function $(e, t) {
        return e.isValid() ? e._d['get' + (e._isUTC ? 'UTC' : '') + t]() : NaN
      }
      function q(e, t, n) {
        e.isValid() &&
          !isNaN(n) &&
          ('FullYear' === t && j(e.year()) && 1 === e.month() && 29 === e.date()
            ? ((n = Z(n)),
              e._d['set' + (e._isUTC ? 'UTC' : '') + t](
                n,
                e.month(),
                xe(n, e.month())
              ))
            : e._d['set' + (e._isUTC ? 'UTC' : '') + t](n))
      }
      var B,
        J = /\d/,
        Q = /\d\d/,
        X = /\d{3}/,
        K = /\d{4}/,
        ee = /[+-]?\d{6}/,
        te = /\d\d?/,
        ne = /\d\d\d\d?/,
        se = /\d\d\d\d\d\d?/,
        ie = /\d{1,3}/,
        re = /\d{1,4}/,
        ae = /[+-]?\d{1,6}/,
        oe = /\d+/,
        ue = /[+-]?\d+/,
        le = /Z|[+-]\d\d:?\d\d/gi,
        he = /Z|[+-]\d\d(?::?\d\d)?/gi,
        de =
          /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i
      function ce(e, n, s) {
        B[e] = O(n)
          ? n
          : function (e, t) {
              return e && s ? s : n
            }
      }
      function fe(e, t) {
        return m(B, e)
          ? B[e](t._strict, t._locale)
          : new RegExp(
              me(
                e
                  .replace('\\', '')
                  .replace(
                    /\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,
                    function (e, t, n, s, i) {
                      return t || n || s || i
                    }
                  )
              )
            )
      }
      function me(e) {
        return e.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&')
      }
      B = {}
      var _e = {}
      function ye(e, n) {
        var t,
          s = n
        for (
          'string' == typeof e && (e = [e]),
            h(n) &&
              (s = function (e, t) {
                t[n] = Z(e)
              }),
            t = 0;
          t < e.length;
          t++
        )
          _e[e[t]] = s
      }
      function ge(e, i) {
        ye(e, function (e, t, n, s) {
          ;(n._w = n._w || {}), i(e, n._w, n, s)
        })
      }
      var we,
        pe = 0,
        ve = 1,
        ke = 2,
        Me = 3,
        De = 4,
        Se = 5,
        Ye = 6,
        Oe = 7,
        be = 8
      function xe(e, t) {
        if (isNaN(e) || isNaN(t)) return NaN
        var n,
          s = ((t % (n = 12)) + n) % n
        return (
          (e += (t - s) / 12), 1 == s ? (j(e) ? 29 : 28) : 31 - ((s % 7) % 2)
        )
      }
      ;(we = Array.prototype.indexOf
        ? Array.prototype.indexOf
        : function (e) {
            for (var t = 0; t < this.length; ++t) if (this[t] === e) return t
            return -1
          }),
        C('M', ['MM', 2], 'Mo', function () {
          return this.month() + 1
        }),
        C('MMM', 0, 0, function (e) {
          return this.localeData().monthsShort(this, e)
        }),
        C('MMMM', 0, 0, function (e) {
          return this.localeData().months(this, e)
        }),
        L('month', 'M'),
        A('month', 8),
        ce('M', te),
        ce('MM', te, Q),
        ce('MMM', function (e, t) {
          return t.monthsShortRegex(e)
        }),
        ce('MMMM', function (e, t) {
          return t.monthsRegex(e)
        }),
        ye(['M', 'MM'], function (e, t) {
          t[ve] = Z(e) - 1
        }),
        ye(['MMM', 'MMMM'], function (e, t, n, s) {
          var i = n._locale.monthsParse(e, s, n._strict)
          null != i ? (t[ve] = i) : (y(n).invalidMonth = e)
        })
      var Te =
          'January_February_March_April_May_June_July_August_September_October_November_December'.split(
            '_'
          ),
        Ne = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        Pe = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,
        Re = de,
        We = de
      function Ce(e, t) {
        var n
        if (!e.isValid()) return e
        if ('string' == typeof t)
          if (/^\d+$/.test(t)) t = Z(t)
          else if (!h((t = e.localeData().monthsParse(t)))) return e
        return (
          (n = Math.min(e.date(), xe(e.year(), t))),
          e._d['set' + (e._isUTC ? 'UTC' : '') + 'Month'](t, n),
          e
        )
      }
      function Ue(e) {
        return null != e
          ? (Ce(this, e), f.updateOffset(this, !0), this)
          : $(this, 'Month')
      }
      function He() {
        function e(e, t) {
          return t.length - e.length
        }
        for (var t, n = [], s = [], i = [], r = 0; r < 12; r++)
          (t = _([2e3, r])),
            n.push(this.monthsShort(t, '')),
            s.push(this.months(t, '')),
            i.push(this.months(t, '')),
            i.push(this.monthsShort(t, ''))
        for (n.sort(e), s.sort(e), i.sort(e), r = 0; r < 12; r++)
          (n[r] = me(n[r])), (s[r] = me(s[r]))
        for (r = 0; r < 24; r++) i[r] = me(i[r])
        ;(this._monthsRegex = new RegExp('^(' + i.join('|') + ')', 'i')),
          (this._monthsShortRegex = this._monthsRegex),
          (this._monthsStrictRegex = new RegExp('^(' + s.join('|') + ')', 'i')),
          (this._monthsShortStrictRegex = new RegExp(
            '^(' + n.join('|') + ')',
            'i'
          ))
      }
      function Fe(e) {
        return j(e) ? 366 : 365
      }
      C('Y', 0, 0, function () {
        var e = this.year()
        return e <= 9999 ? T(e, 4) : '+' + e
      }),
        C(0, ['YY', 2], 0, function () {
          return this.year() % 100
        }),
        C(0, ['YYYY', 4], 0, 'year'),
        C(0, ['YYYYY', 5], 0, 'year'),
        C(0, ['YYYYYY', 6, !0], 0, 'year'),
        L('year', 'y'),
        A('year', 1),
        ce('Y', ue),
        ce('YY', te, Q),
        ce('YYYY', re, K),
        ce('YYYYY', ae, ee),
        ce('YYYYYY', ae, ee),
        ye(['YYYYY', 'YYYYYY'], pe),
        ye('YYYY', function (e, t) {
          t[pe] = 2 === e.length ? f.parseTwoDigitYear(e) : Z(e)
        }),
        ye('YY', function (e, t) {
          t[pe] = f.parseTwoDigitYear(e)
        }),
        ye('Y', function (e, t) {
          t[pe] = parseInt(e, 10)
        }),
        (f.parseTwoDigitYear = function (e) {
          return Z(e) + (68 < Z(e) ? 1900 : 2e3)
        })
      var Le = z('FullYear', !0)
      function Ve(e) {
        var t, n
        return (
          e < 100 && 0 <= e
            ? (((n = Array.prototype.slice.call(arguments))[0] = e + 400),
              (t = new Date(Date.UTC.apply(null, n))),
              isFinite(t.getUTCFullYear()) && t.setUTCFullYear(e))
            : (t = new Date(Date.UTC.apply(null, arguments))),
          t
        )
      }
      function Ge(e, t, n) {
        var s = 7 + t - n
        return s - ((7 + Ve(e, 0, s).getUTCDay() - t) % 7) - 1
      }
      function Ee(e, t, n, s, i) {
        var r,
          a = 1 + 7 * (t - 1) + ((7 + n - s) % 7) + Ge(e, s, i),
          o =
            a <= 0
              ? Fe((r = e - 1)) + a
              : a > Fe(e)
              ? ((r = e + 1), a - Fe(e))
              : ((r = e), a)
        return { year: r, dayOfYear: o }
      }
      function Ae(e, t, n) {
        var s,
          i,
          r = Ge(e.year(), t, n),
          a = Math.floor((e.dayOfYear() - r - 1) / 7) + 1
        return (
          a < 1
            ? (s = a + je((i = e.year() - 1), t, n))
            : a > je(e.year(), t, n)
            ? ((s = a - je(e.year(), t, n)), (i = e.year() + 1))
            : ((i = e.year()), (s = a)),
          { week: s, year: i }
        )
      }
      function je(e, t, n) {
        var s = Ge(e, t, n),
          i = Ge(e + 1, t, n)
        return (Fe(e) - s + i) / 7
      }
      C('w', ['ww', 2], 'wo', 'week'),
        C('W', ['WW', 2], 'Wo', 'isoWeek'),
        L('week', 'w'),
        L('isoWeek', 'W'),
        A('week', 5),
        A('isoWeek', 5),
        ce('w', te),
        ce('ww', te, Q),
        ce('W', te),
        ce('WW', te, Q),
        ge(['w', 'ww', 'W', 'WW'], function (e, t, n, s) {
          t[s.substr(0, 1)] = Z(e)
        })
      function Ie(e, t) {
        return e.slice(t, 7).concat(e.slice(0, t))
      }
      C('d', 0, 'do', 'day'),
        C('dd', 0, 0, function (e) {
          return this.localeData().weekdaysMin(this, e)
        }),
        C('ddd', 0, 0, function (e) {
          return this.localeData().weekdaysShort(this, e)
        }),
        C('dddd', 0, 0, function (e) {
          return this.localeData().weekdays(this, e)
        }),
        C('e', 0, 0, 'weekday'),
        C('E', 0, 0, 'isoWeekday'),
        L('day', 'd'),
        L('weekday', 'e'),
        L('isoWeekday', 'E'),
        A('day', 11),
        A('weekday', 11),
        A('isoWeekday', 11),
        ce('d', te),
        ce('e', te),
        ce('E', te),
        ce('dd', function (e, t) {
          return t.weekdaysMinRegex(e)
        }),
        ce('ddd', function (e, t) {
          return t.weekdaysShortRegex(e)
        }),
        ce('dddd', function (e, t) {
          return t.weekdaysRegex(e)
        }),
        ge(['dd', 'ddd', 'dddd'], function (e, t, n, s) {
          var i = n._locale.weekdaysParse(e, s, n._strict)
          null != i ? (t.d = i) : (y(n).invalidWeekday = e)
        }),
        ge(['d', 'e', 'E'], function (e, t, n, s) {
          t[s] = Z(e)
        })
      var Ze = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
          '_'
        ),
        ze = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        $e = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        qe = de,
        Be = de,
        Je = de
      function Qe() {
        function e(e, t) {
          return t.length - e.length
        }
        for (var t, n, s, i, r = [], a = [], o = [], u = [], l = 0; l < 7; l++)
          (t = _([2e3, 1]).day(l)),
            (n = me(this.weekdaysMin(t, ''))),
            (s = me(this.weekdaysShort(t, ''))),
            (i = me(this.weekdays(t, ''))),
            r.push(n),
            a.push(s),
            o.push(i),
            u.push(n),
            u.push(s),
            u.push(i)
        r.sort(e),
          a.sort(e),
          o.sort(e),
          u.sort(e),
          (this._weekdaysRegex = new RegExp('^(' + u.join('|') + ')', 'i')),
          (this._weekdaysShortRegex = this._weekdaysRegex),
          (this._weekdaysMinRegex = this._weekdaysRegex),
          (this._weekdaysStrictRegex = new RegExp(
            '^(' + o.join('|') + ')',
            'i'
          )),
          (this._weekdaysShortStrictRegex = new RegExp(
            '^(' + a.join('|') + ')',
            'i'
          )),
          (this._weekdaysMinStrictRegex = new RegExp(
            '^(' + r.join('|') + ')',
            'i'
          ))
      }
      function Xe() {
        return this.hours() % 12 || 12
      }
      function Ke(e, t) {
        C(e, 0, 0, function () {
          return this.localeData().meridiem(this.hours(), this.minutes(), t)
        })
      }
      function et(e, t) {
        return t._meridiemParse
      }
      C('H', ['HH', 2], 0, 'hour'),
        C('h', ['hh', 2], 0, Xe),
        C('k', ['kk', 2], 0, function () {
          return this.hours() || 24
        }),
        C('hmm', 0, 0, function () {
          return '' + Xe.apply(this) + T(this.minutes(), 2)
        }),
        C('hmmss', 0, 0, function () {
          return (
            '' + Xe.apply(this) + T(this.minutes(), 2) + T(this.seconds(), 2)
          )
        }),
        C('Hmm', 0, 0, function () {
          return '' + this.hours() + T(this.minutes(), 2)
        }),
        C('Hmmss', 0, 0, function () {
          return '' + this.hours() + T(this.minutes(), 2) + T(this.seconds(), 2)
        }),
        Ke('a', !0),
        Ke('A', !1),
        L('hour', 'h'),
        A('hour', 13),
        ce('a', et),
        ce('A', et),
        ce('H', te),
        ce('h', te),
        ce('k', te),
        ce('HH', te, Q),
        ce('hh', te, Q),
        ce('kk', te, Q),
        ce('hmm', ne),
        ce('hmmss', se),
        ce('Hmm', ne),
        ce('Hmmss', se),
        ye(['H', 'HH'], Me),
        ye(['k', 'kk'], function (e, t, n) {
          var s = Z(e)
          t[Me] = 24 === s ? 0 : s
        }),
        ye(['a', 'A'], function (e, t, n) {
          ;(n._isPm = n._locale.isPM(e)), (n._meridiem = e)
        }),
        ye(['h', 'hh'], function (e, t, n) {
          ;(t[Me] = Z(e)), (y(n).bigHour = !0)
        }),
        ye('hmm', function (e, t, n) {
          var s = e.length - 2
          ;(t[Me] = Z(e.substr(0, s))),
            (t[De] = Z(e.substr(s))),
            (y(n).bigHour = !0)
        }),
        ye('hmmss', function (e, t, n) {
          var s = e.length - 4,
            i = e.length - 2
          ;(t[Me] = Z(e.substr(0, s))),
            (t[De] = Z(e.substr(s, 2))),
            (t[Se] = Z(e.substr(i))),
            (y(n).bigHour = !0)
        }),
        ye('Hmm', function (e, t, n) {
          var s = e.length - 2
          ;(t[Me] = Z(e.substr(0, s))), (t[De] = Z(e.substr(s)))
        }),
        ye('Hmmss', function (e, t, n) {
          var s = e.length - 4,
            i = e.length - 2
          ;(t[Me] = Z(e.substr(0, s))),
            (t[De] = Z(e.substr(s, 2))),
            (t[Se] = Z(e.substr(i)))
        })
      var tt = z('Hours', !0)
      var nt,
        st = {
          calendar: {
            sameDay: '[Today at] LT',
            nextDay: '[Tomorrow at] LT',
            nextWeek: 'dddd [at] LT',
            lastDay: '[Yesterday at] LT',
            lastWeek: '[Last] dddd [at] LT',
            sameElse: 'L',
          },
          longDateFormat: {
            LTS: 'h:mm:ss A',
            LT: 'h:mm A',
            L: 'MM/DD/YYYY',
            LL: 'MMMM D, YYYY',
            LLL: 'MMMM D, YYYY h:mm A',
            LLLL: 'dddd, MMMM D, YYYY h:mm A',
          },
          invalidDate: 'Invalid date',
          ordinal: '%d',
          dayOfMonthOrdinalParse: /\d{1,2}/,
          relativeTime: {
            future: 'in %s',
            past: '%s ago',
            s: 'a few seconds',
            ss: '%d seconds',
            m: 'a minute',
            mm: '%d minutes',
            h: 'an hour',
            hh: '%d hours',
            d: 'a day',
            dd: '%d days',
            w: 'a week',
            ww: '%d weeks',
            M: 'a month',
            MM: '%d months',
            y: 'a year',
            yy: '%d years',
          },
          months: Te,
          monthsShort: Ne,
          week: { dow: 0, doy: 6 },
          weekdays: Ze,
          weekdaysMin: $e,
          weekdaysShort: ze,
          meridiemParse: /[ap]\.?m?\.?/i,
        },
        it = {},
        rt = {}
      function at(e) {
        return e ? e.toLowerCase().replace('_', '-') : e
      }
      function ot(e) {
        for (var t, n, s, i, r = 0; r < e.length; ) {
          for (
            t = (i = at(e[r]).split('-')).length,
              n = (n = at(e[r + 1])) ? n.split('-') : null;
            0 < t;

          ) {
            if ((s = ut(i.slice(0, t).join('-')))) return s
            if (
              n &&
              n.length >= t &&
              (function (e, t) {
                for (var n = Math.min(e.length, t.length), s = 0; s < n; s += 1)
                  if (e[s] !== t[s]) return s
                return n
              })(i, n) >=
                t - 1
            )
              break
            t--
          }
          r++
        }
        return nt
      }
      function ut(t) {
        var e
        if (
          void 0 === it[t] &&
          'undefined' != typeof module &&
          module &&
          module.exports
        )
          try {
            ;(e = nt._abbr), require('./locale/' + t), lt(e)
          } catch (e) {
            it[t] = null
          }
        return it[t]
      }
      function lt(e, t) {
        var n
        return (
          e &&
            ((n = r(t) ? dt(e) : ht(e, t))
              ? (nt = n)
              : 'undefined' != typeof console &&
                console.warn &&
                console.warn(
                  'Locale ' + e + ' not found. Did you forget to load it?'
                )),
          nt._abbr
        )
      }
      function ht(e, t) {
        if (null === t) return delete it[e], null
        var n,
          s = st
        if (((t.abbr = e), null != it[e]))
          Y(
            'defineLocaleOverride',
            'use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'
          ),
            (s = it[e]._config)
        else if (null != t.parentLocale)
          if (null != it[t.parentLocale]) s = it[t.parentLocale]._config
          else {
            if (null == (n = ut(t.parentLocale)))
              return (
                rt[t.parentLocale] || (rt[t.parentLocale] = []),
                rt[t.parentLocale].push({ name: e, config: t }),
                null
              )
            s = n._config
          }
        return (
          (it[e] = new x(b(s, t))),
          rt[e] &&
            rt[e].forEach(function (e) {
              ht(e.name, e.config)
            }),
          lt(e),
          it[e]
        )
      }
      function dt(e) {
        var t
        if ((e && e._locale && e._locale._abbr && (e = e._locale._abbr), !e))
          return nt
        if (!o(e)) {
          if ((t = ut(e))) return t
          e = [e]
        }
        return ot(e)
      }
      function ct(e) {
        var t,
          n = e._a
        return (
          n &&
            -2 === y(e).overflow &&
            ((t =
              n[ve] < 0 || 11 < n[ve]
                ? ve
                : n[ke] < 1 || n[ke] > xe(n[pe], n[ve])
                ? ke
                : n[Me] < 0 ||
                  24 < n[Me] ||
                  (24 === n[Me] && (0 !== n[De] || 0 !== n[Se] || 0 !== n[Ye]))
                ? Me
                : n[De] < 0 || 59 < n[De]
                ? De
                : n[Se] < 0 || 59 < n[Se]
                ? Se
                : n[Ye] < 0 || 999 < n[Ye]
                ? Ye
                : -1),
            y(e)._overflowDayOfYear && (t < pe || ke < t) && (t = ke),
            y(e)._overflowWeeks && -1 === t && (t = Oe),
            y(e)._overflowWeekday && -1 === t && (t = be),
            (y(e).overflow = t)),
          e
        )
      }
      var ft =
          /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
        mt =
          /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
        _t = /Z|[+-]\d\d(?::?\d\d)?/,
        yt = [
          ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
          ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
          ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
          ['GGGG-[W]WW', /\d{4}-W\d\d/, !1],
          ['YYYY-DDD', /\d{4}-\d{3}/],
          ['YYYY-MM', /\d{4}-\d\d/, !1],
          ['YYYYYYMMDD', /[+-]\d{10}/],
          ['YYYYMMDD', /\d{8}/],
          ['GGGG[W]WWE', /\d{4}W\d{3}/],
          ['GGGG[W]WW', /\d{4}W\d{2}/, !1],
          ['YYYYDDD', /\d{7}/],
          ['YYYYMM', /\d{6}/, !1],
          ['YYYY', /\d{4}/, !1],
        ],
        gt = [
          ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
          ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
          ['HH:mm:ss', /\d\d:\d\d:\d\d/],
          ['HH:mm', /\d\d:\d\d/],
          ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
          ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
          ['HHmmss', /\d\d\d\d\d\d/],
          ['HHmm', /\d\d\d\d/],
          ['HH', /\d\d/],
        ],
        wt = /^\/?Date\((-?\d+)/i,
        pt =
          /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,
        vt = {
          UT: 0,
          GMT: 0,
          EDT: -240,
          EST: -300,
          CDT: -300,
          CST: -360,
          MDT: -360,
          MST: -420,
          PDT: -420,
          PST: -480,
        }
      function kt(e) {
        var t,
          n,
          s,
          i,
          r,
          a,
          o = e._i,
          u = ft.exec(o) || mt.exec(o)
        if (u) {
          for (y(e).iso = !0, t = 0, n = yt.length; t < n; t++)
            if (yt[t][1].exec(u[1])) {
              ;(i = yt[t][0]), (s = !1 !== yt[t][2])
              break
            }
          if (null == i) return void (e._isValid = !1)
          if (u[3]) {
            for (t = 0, n = gt.length; t < n; t++)
              if (gt[t][1].exec(u[3])) {
                r = (u[2] || ' ') + gt[t][0]
                break
              }
            if (null == r) return void (e._isValid = !1)
          }
          if (!s && null != r) return void (e._isValid = !1)
          if (u[4]) {
            if (!_t.exec(u[4])) return void (e._isValid = !1)
            a = 'Z'
          }
          ;(e._f = i + (r || '') + (a || '')), Ot(e)
        } else e._isValid = !1
      }
      function Mt(e, t, n, s, i, r) {
        var a = [
          (function (e) {
            var t = parseInt(e, 10)
            {
              if (t <= 49) return 2e3 + t
              if (t <= 999) return 1900 + t
            }
            return t
          })(e),
          Ne.indexOf(t),
          parseInt(n, 10),
          parseInt(s, 10),
          parseInt(i, 10),
        ]
        return r && a.push(parseInt(r, 10)), a
      }
      function Dt(e) {
        var t,
          n,
          s,
          i,
          r = pt.exec(
            e._i
              .replace(/\([^)]*\)|[\n\t]/g, ' ')
              .replace(/(\s\s+)/g, ' ')
              .replace(/^\s\s*/, '')
              .replace(/\s\s*$/, '')
          )
        if (r) {
          if (
            ((t = Mt(r[4], r[3], r[2], r[5], r[6], r[7])),
            (n = r[1]),
            (s = t),
            (i = e),
            n &&
              ze.indexOf(n) !== new Date(s[0], s[1], s[2]).getDay() &&
              ((y(i).weekdayMismatch = !0), !void (i._isValid = !1)))
          )
            return
          ;(e._a = t),
            (e._tzm = (function (e, t, n) {
              if (e) return vt[e]
              if (t) return 0
              var s = parseInt(n, 10),
                i = s % 100
              return 60 * ((s - i) / 100) + i
            })(r[8], r[9], r[10])),
            (e._d = Ve.apply(null, e._a)),
            e._d.setUTCMinutes(e._d.getUTCMinutes() - e._tzm),
            (y(e).rfc2822 = !0)
        } else e._isValid = !1
      }
      function St(e, t, n) {
        return null != e ? e : null != t ? t : n
      }
      function Yt(e) {
        var t,
          n,
          s,
          i,
          r,
          a,
          o,
          u = []
        if (!e._d) {
          for (
            a = e,
              o = new Date(f.now()),
              s = a._useUTC
                ? [o.getUTCFullYear(), o.getUTCMonth(), o.getUTCDate()]
                : [o.getFullYear(), o.getMonth(), o.getDate()],
              e._w &&
                null == e._a[ke] &&
                null == e._a[ve] &&
                (function (e) {
                  var t, n, s, i, r, a, o, u, l
                  null != (t = e._w).GG || null != t.W || null != t.E
                    ? ((r = 1),
                      (a = 4),
                      (n = St(t.GG, e._a[pe], Ae(Tt(), 1, 4).year)),
                      (s = St(t.W, 1)),
                      ((i = St(t.E, 1)) < 1 || 7 < i) && (u = !0))
                    : ((r = e._locale._week.dow),
                      (a = e._locale._week.doy),
                      (l = Ae(Tt(), r, a)),
                      (n = St(t.gg, e._a[pe], l.year)),
                      (s = St(t.w, l.week)),
                      null != t.d
                        ? ((i = t.d) < 0 || 6 < i) && (u = !0)
                        : null != t.e
                        ? ((i = t.e + r), (t.e < 0 || 6 < t.e) && (u = !0))
                        : (i = r))
                  s < 1 || s > je(n, r, a)
                    ? (y(e)._overflowWeeks = !0)
                    : null != u
                    ? (y(e)._overflowWeekday = !0)
                    : ((o = Ee(n, s, i, r, a)),
                      (e._a[pe] = o.year),
                      (e._dayOfYear = o.dayOfYear))
                })(e),
              null != e._dayOfYear &&
                ((r = St(e._a[pe], s[pe])),
                (e._dayOfYear > Fe(r) || 0 === e._dayOfYear) &&
                  (y(e)._overflowDayOfYear = !0),
                (n = Ve(r, 0, e._dayOfYear)),
                (e._a[ve] = n.getUTCMonth()),
                (e._a[ke] = n.getUTCDate())),
              t = 0;
            t < 3 && null == e._a[t];
            ++t
          )
            e._a[t] = u[t] = s[t]
          for (; t < 7; t++)
            e._a[t] = u[t] = null == e._a[t] ? (2 === t ? 1 : 0) : e._a[t]
          24 === e._a[Me] &&
            0 === e._a[De] &&
            0 === e._a[Se] &&
            0 === e._a[Ye] &&
            ((e._nextDay = !0), (e._a[Me] = 0)),
            (e._d = (
              e._useUTC
                ? Ve
                : function (e, t, n, s, i, r, a) {
                    var o
                    return (
                      e < 100 && 0 <= e
                        ? ((o = new Date(e + 400, t, n, s, i, r, a)),
                          isFinite(o.getFullYear()) && o.setFullYear(e))
                        : (o = new Date(e, t, n, s, i, r, a)),
                      o
                    )
                  }
            ).apply(null, u)),
            (i = e._useUTC ? e._d.getUTCDay() : e._d.getDay()),
            null != e._tzm && e._d.setUTCMinutes(e._d.getUTCMinutes() - e._tzm),
            e._nextDay && (e._a[Me] = 24),
            e._w &&
              void 0 !== e._w.d &&
              e._w.d !== i &&
              (y(e).weekdayMismatch = !0)
        }
      }
      function Ot(e) {
        if (e._f !== f.ISO_8601)
          if (e._f !== f.RFC_2822) {
            ;(e._a = []), (y(e).empty = !0)
            for (
              var t,
                n,
                s,
                i,
                r,
                a,
                o,
                u = '' + e._i,
                l = u.length,
                h = 0,
                d = H(e._f, e._locale).match(N) || [],
                c = 0;
              c < d.length;
              c++
            )
              (n = d[c]),
                (t = (u.match(fe(n, e)) || [])[0]) &&
                  (0 < (s = u.substr(0, u.indexOf(t))).length &&
                    y(e).unusedInput.push(s),
                  (u = u.slice(u.indexOf(t) + t.length)),
                  (h += t.length)),
                W[n]
                  ? (t ? (y(e).empty = !1) : y(e).unusedTokens.push(n),
                    (r = n),
                    (o = e),
                    null != (a = t) && m(_e, r) && _e[r](a, o._a, o, r))
                  : e._strict && !t && y(e).unusedTokens.push(n)
            ;(y(e).charsLeftOver = l - h),
              0 < u.length && y(e).unusedInput.push(u),
              e._a[Me] <= 12 &&
                !0 === y(e).bigHour &&
                0 < e._a[Me] &&
                (y(e).bigHour = void 0),
              (y(e).parsedDateParts = e._a.slice(0)),
              (y(e).meridiem = e._meridiem),
              (e._a[Me] = (function (e, t, n) {
                var s
                if (null == n) return t
                return null != e.meridiemHour
                  ? e.meridiemHour(t, n)
                  : (null != e.isPM &&
                      ((s = e.isPM(n)) && t < 12 && (t += 12),
                      s || 12 !== t || (t = 0)),
                    t)
              })(e._locale, e._a[Me], e._meridiem)),
              null !== (i = y(e).era) &&
                (e._a[pe] = e._locale.erasConvertYear(i, e._a[pe])),
              Yt(e),
              ct(e)
          } else Dt(e)
        else kt(e)
      }
      function bt(e) {
        var t,
          n,
          s = e._i,
          i = e._f
        return (
          (e._locale = e._locale || dt(e._l)),
          null === s || (void 0 === i && '' === s)
            ? w({ nullInput: !0 })
            : ('string' == typeof s && (e._i = s = e._locale.preparse(s)),
              M(s)
                ? new k(ct(s))
                : (a(s)
                    ? (e._d = s)
                    : o(i)
                    ? (function (e) {
                        var t,
                          n,
                          s,
                          i,
                          r,
                          a,
                          o = !1
                        if (0 === e._f.length)
                          return (
                            (y(e).invalidFormat = !0), (e._d = new Date(NaN))
                          )
                        for (i = 0; i < e._f.length; i++)
                          (r = 0),
                            (a = !1),
                            (t = v({}, e)),
                            null != e._useUTC && (t._useUTC = e._useUTC),
                            (t._f = e._f[i]),
                            Ot(t),
                            g(t) && (a = !0),
                            (r += y(t).charsLeftOver),
                            (r += 10 * y(t).unusedTokens.length),
                            (y(t).score = r),
                            o
                              ? r < s && ((s = r), (n = t))
                              : (null == s || r < s || a) &&
                                ((s = r), (n = t), a && (o = !0))
                        c(e, n || t)
                      })(e)
                    : i
                    ? Ot(e)
                    : r((n = (t = e)._i))
                    ? (t._d = new Date(f.now()))
                    : a(n)
                    ? (t._d = new Date(n.valueOf()))
                    : 'string' == typeof n
                    ? (function (e) {
                        var t = wt.exec(e._i)
                        null === t
                          ? (kt(e),
                            !1 === e._isValid &&
                              (delete e._isValid,
                              Dt(e),
                              !1 === e._isValid &&
                                (delete e._isValid,
                                e._strict
                                  ? (e._isValid = !1)
                                  : f.createFromInputFallback(e))))
                          : (e._d = new Date(+t[1]))
                      })(t)
                    : o(n)
                    ? ((t._a = d(n.slice(0), function (e) {
                        return parseInt(e, 10)
                      })),
                      Yt(t))
                    : u(n)
                    ? (function (e) {
                        var t, n
                        e._d ||
                          ((n = void 0 === (t = G(e._i)).day ? t.date : t.day),
                          (e._a = d(
                            [
                              t.year,
                              t.month,
                              n,
                              t.hour,
                              t.minute,
                              t.second,
                              t.millisecond,
                            ],
                            function (e) {
                              return e && parseInt(e, 10)
                            }
                          )),
                          Yt(e))
                      })(t)
                    : h(n)
                    ? (t._d = new Date(n))
                    : f.createFromInputFallback(t),
                  g(e) || (e._d = null),
                  e))
        )
      }
      function xt(e, t, n, s, i) {
        var r,
          a = {}
        return (
          (!0 !== t && !1 !== t) || ((s = t), (t = void 0)),
          (!0 !== n && !1 !== n) || ((s = n), (n = void 0)),
          ((u(e) && l(e)) || (o(e) && 0 === e.length)) && (e = void 0),
          (a._isAMomentObject = !0),
          (a._useUTC = a._isUTC = i),
          (a._l = n),
          (a._i = e),
          (a._f = t),
          (a._strict = s),
          (r = new k(ct(bt(a))))._nextDay &&
            (r.add(1, 'd'), (r._nextDay = void 0)),
          r
        )
      }
      function Tt(e, t, n, s) {
        return xt(e, t, n, s, !1)
      }
      ;(f.createFromInputFallback = n(
        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged and will be removed in an upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.',
        function (e) {
          e._d = new Date(e._i + (e._useUTC ? ' UTC' : ''))
        }
      )),
        (f.ISO_8601 = function () {}),
        (f.RFC_2822 = function () {})
      var Nt = n(
          'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
          function () {
            var e = Tt.apply(null, arguments)
            return this.isValid() && e.isValid() ? (e < this ? this : e) : w()
          }
        ),
        Pt = n(
          'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
          function () {
            var e = Tt.apply(null, arguments)
            return this.isValid() && e.isValid() ? (this < e ? this : e) : w()
          }
        )
      function Rt(e, t) {
        var n, s
        if ((1 === t.length && o(t[0]) && (t = t[0]), !t.length)) return Tt()
        for (n = t[0], s = 1; s < t.length; ++s)
          (t[s].isValid() && !t[s][e](n)) || (n = t[s])
        return n
      }
      var Wt = [
        'year',
        'quarter',
        'month',
        'week',
        'day',
        'hour',
        'minute',
        'second',
        'millisecond',
      ]
      function Ct(e) {
        var t = G(e),
          n = t.year || 0,
          s = t.quarter || 0,
          i = t.month || 0,
          r = t.week || t.isoWeek || 0,
          a = t.day || 0,
          o = t.hour || 0,
          u = t.minute || 0,
          l = t.second || 0,
          h = t.millisecond || 0
        ;(this._isValid = (function (e) {
          var t,
            n,
            s = !1
          for (t in e)
            if (
              m(e, t) &&
              (-1 === we.call(Wt, t) || (null != e[t] && isNaN(e[t])))
            )
              return !1
          for (n = 0; n < Wt.length; ++n)
            if (e[Wt[n]]) {
              if (s) return !1
              parseFloat(e[Wt[n]]) !== Z(e[Wt[n]]) && (s = !0)
            }
          return !0
        })(t)),
          (this._milliseconds = +h + 1e3 * l + 6e4 * u + 1e3 * o * 60 * 60),
          (this._days = +a + 7 * r),
          (this._months = +i + 3 * s + 12 * n),
          (this._data = {}),
          (this._locale = dt()),
          this._bubble()
      }
      function Ut(e) {
        return e instanceof Ct
      }
      function Ht(e) {
        return e < 0 ? -1 * Math.round(-1 * e) : Math.round(e)
      }
      function Ft(e, n) {
        C(e, 0, 0, function () {
          var e = this.utcOffset(),
            t = '+'
          return (
            e < 0 && ((e = -e), (t = '-')),
            t + T(~~(e / 60), 2) + n + T(~~e % 60, 2)
          )
        })
      }
      Ft('Z', ':'),
        Ft('ZZ', ''),
        ce('Z', he),
        ce('ZZ', he),
        ye(['Z', 'ZZ'], function (e, t, n) {
          ;(n._useUTC = !0), (n._tzm = Vt(he, e))
        })
      var Lt = /([\+\-]|\d\d)/gi
      function Vt(e, t) {
        var n,
          s,
          i = (t || '').match(e)
        return null === i
          ? null
          : 0 ===
            (s =
              60 *
                (n = ((i[i.length - 1] || []) + '').match(Lt) || [
                  '-',
                  0,
                  0,
                ])[1] +
              Z(n[2]))
          ? 0
          : '+' === n[0]
          ? s
          : -s
      }
      function Gt(e, t) {
        var n, s
        return t._isUTC
          ? ((n = t.clone()),
            (s = (M(e) || a(e) ? e.valueOf() : Tt(e).valueOf()) - n.valueOf()),
            n._d.setTime(n._d.valueOf() + s),
            f.updateOffset(n, !1),
            n)
          : Tt(e).local()
      }
      function Et(e) {
        return -Math.round(e._d.getTimezoneOffset())
      }
      function At() {
        return !!this.isValid() && this._isUTC && 0 === this._offset
      }
      f.updateOffset = function () {}
      var jt = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/,
        It =
          /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/
      function Zt(e, t) {
        var n,
          s,
          i,
          r = e,
          a = null
        return (
          Ut(e)
            ? (r = { ms: e._milliseconds, d: e._days, M: e._months })
            : h(e) || !isNaN(+e)
            ? ((r = {}), t ? (r[t] = +e) : (r.milliseconds = +e))
            : (a = jt.exec(e))
            ? ((n = '-' === a[1] ? -1 : 1),
              (r = {
                y: 0,
                d: Z(a[ke]) * n,
                h: Z(a[Me]) * n,
                m: Z(a[De]) * n,
                s: Z(a[Se]) * n,
                ms: Z(Ht(1e3 * a[Ye])) * n,
              }))
            : (a = It.exec(e))
            ? ((n = '-' === a[1] ? -1 : 1),
              (r = {
                y: zt(a[2], n),
                M: zt(a[3], n),
                w: zt(a[4], n),
                d: zt(a[5], n),
                h: zt(a[6], n),
                m: zt(a[7], n),
                s: zt(a[8], n),
              }))
            : null == r
            ? (r = {})
            : 'object' == typeof r &&
              ('from' in r || 'to' in r) &&
              ((i = (function (e, t) {
                var n
                if (!e.isValid() || !t.isValid())
                  return { milliseconds: 0, months: 0 }
                ;(t = Gt(t, e)),
                  e.isBefore(t)
                    ? (n = $t(e, t))
                    : (((n = $t(t, e)).milliseconds = -n.milliseconds),
                      (n.months = -n.months))
                return n
              })(Tt(r.from), Tt(r.to))),
              ((r = {}).ms = i.milliseconds),
              (r.M = i.months)),
          (s = new Ct(r)),
          Ut(e) && m(e, '_locale') && (s._locale = e._locale),
          Ut(e) && m(e, '_isValid') && (s._isValid = e._isValid),
          s
        )
      }
      function zt(e, t) {
        var n = e && parseFloat(e.replace(',', '.'))
        return (isNaN(n) ? 0 : n) * t
      }
      function $t(e, t) {
        var n = {}
        return (
          (n.months = t.month() - e.month() + 12 * (t.year() - e.year())),
          e.clone().add(n.months, 'M').isAfter(t) && --n.months,
          (n.milliseconds = t - e.clone().add(n.months, 'M')),
          n
        )
      }
      function qt(s, i) {
        return function (e, t) {
          var n
          return (
            null === t ||
              isNaN(+t) ||
              (Y(
                i,
                'moment().' +
                  i +
                  '(period, number) is deprecated. Please use moment().' +
                  i +
                  '(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'
              ),
              (n = e),
              (e = t),
              (t = n)),
            Bt(this, Zt(e, t), s),
            this
          )
        }
      }
      function Bt(e, t, n, s) {
        var i = t._milliseconds,
          r = Ht(t._days),
          a = Ht(t._months)
        e.isValid() &&
          ((s = null == s || s),
          a && Ce(e, $(e, 'Month') + a * n),
          r && q(e, 'Date', $(e, 'Date') + r * n),
          i && e._d.setTime(e._d.valueOf() + i * n),
          s && f.updateOffset(e, r || a))
      }
      ;(Zt.fn = Ct.prototype),
        (Zt.invalid = function () {
          return Zt(NaN)
        })
      var Jt = qt(1, 'add'),
        Qt = qt(-1, 'subtract')
      function Xt(e) {
        return 'string' == typeof e || e instanceof String
      }
      function Kt(e) {
        return (
          M(e) ||
          a(e) ||
          Xt(e) ||
          h(e) ||
          (function (t) {
            var e = o(t),
              n = !1
            e &&
              (n =
                0 ===
                t.filter(function (e) {
                  return !h(e) && Xt(t)
                }).length)
            return e && n
          })(e) ||
          (function (e) {
            var t,
              n,
              s = u(e) && !l(e),
              i = !1,
              r = [
                'years',
                'year',
                'y',
                'months',
                'month',
                'M',
                'days',
                'day',
                'd',
                'dates',
                'date',
                'D',
                'hours',
                'hour',
                'h',
                'minutes',
                'minute',
                'm',
                'seconds',
                'second',
                's',
                'milliseconds',
                'millisecond',
                'ms',
              ]
            for (t = 0; t < r.length; t += 1) (n = r[t]), (i = i || m(e, n))
            return s && i
          })(e) ||
          null == e
        )
      }
      function en(e, t) {
        if (e.date() < t.date()) return -en(t, e)
        var n = 12 * (t.year() - e.year()) + (t.month() - e.month()),
          s = e.clone().add(n, 'months'),
          i =
            t - s < 0
              ? (t - s) / (s - e.clone().add(n - 1, 'months'))
              : (t - s) / (e.clone().add(1 + n, 'months') - s)
        return -(n + i) || 0
      }
      function tn(e) {
        var t
        return void 0 === e
          ? this._locale._abbr
          : (null != (t = dt(e)) && (this._locale = t), this)
      }
      ;(f.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ'),
        (f.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]')
      var nn = n(
        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
        function (e) {
          return void 0 === e ? this.localeData() : this.locale(e)
        }
      )
      function sn() {
        return this._locale
      }
      var rn = 126227808e5
      function an(e, t) {
        return ((e % t) + t) % t
      }
      function on(e, t, n) {
        return e < 100 && 0 <= e
          ? new Date(e + 400, t, n) - rn
          : new Date(e, t, n).valueOf()
      }
      function un(e, t, n) {
        return e < 100 && 0 <= e
          ? Date.UTC(e + 400, t, n) - rn
          : Date.UTC(e, t, n)
      }
      function ln(e, t) {
        return t.erasAbbrRegex(e)
      }
      function hn() {
        for (
          var e = [],
            t = [],
            n = [],
            s = [],
            i = this.eras(),
            r = 0,
            a = i.length;
          r < a;
          ++r
        )
          t.push(me(i[r].name)),
            e.push(me(i[r].abbr)),
            n.push(me(i[r].narrow)),
            s.push(me(i[r].name)),
            s.push(me(i[r].abbr)),
            s.push(me(i[r].narrow))
        ;(this._erasRegex = new RegExp('^(' + s.join('|') + ')', 'i')),
          (this._erasNameRegex = new RegExp('^(' + t.join('|') + ')', 'i')),
          (this._erasAbbrRegex = new RegExp('^(' + e.join('|') + ')', 'i')),
          (this._erasNarrowRegex = new RegExp('^(' + n.join('|') + ')', 'i'))
      }
      function dn(e, t) {
        C(0, [e, e.length], 0, t)
      }
      function cn(e, t, n, s, i) {
        var r
        return null == e
          ? Ae(this, s, i).year
          : ((r = je(e, s, i)) < t && (t = r),
            function (e, t, n, s, i) {
              var r = Ee(e, t, n, s, i),
                a = Ve(r.year, 0, r.dayOfYear)
              return (
                this.year(a.getUTCFullYear()),
                this.month(a.getUTCMonth()),
                this.date(a.getUTCDate()),
                this
              )
            }.call(this, e, t, n, s, i))
      }
      C('N', 0, 0, 'eraAbbr'),
        C('NN', 0, 0, 'eraAbbr'),
        C('NNN', 0, 0, 'eraAbbr'),
        C('NNNN', 0, 0, 'eraName'),
        C('NNNNN', 0, 0, 'eraNarrow'),
        C('y', ['y', 1], 'yo', 'eraYear'),
        C('y', ['yy', 2], 0, 'eraYear'),
        C('y', ['yyy', 3], 0, 'eraYear'),
        C('y', ['yyyy', 4], 0, 'eraYear'),
        ce('N', ln),
        ce('NN', ln),
        ce('NNN', ln),
        ce('NNNN', function (e, t) {
          return t.erasNameRegex(e)
        }),
        ce('NNNNN', function (e, t) {
          return t.erasNarrowRegex(e)
        }),
        ye(['N', 'NN', 'NNN', 'NNNN', 'NNNNN'], function (e, t, n, s) {
          var i = n._locale.erasParse(e, s, n._strict)
          i ? (y(n).era = i) : (y(n).invalidEra = e)
        }),
        ce('y', oe),
        ce('yy', oe),
        ce('yyy', oe),
        ce('yyyy', oe),
        ce('yo', function (e, t) {
          return t._eraYearOrdinalRegex || oe
        }),
        ye(['y', 'yy', 'yyy', 'yyyy'], pe),
        ye(['yo'], function (e, t, n, s) {
          var i
          n._locale._eraYearOrdinalRegex &&
            (i = e.match(n._locale._eraYearOrdinalRegex)),
            n._locale.eraYearOrdinalParse
              ? (t[pe] = n._locale.eraYearOrdinalParse(e, i))
              : (t[pe] = parseInt(e, 10))
        }),
        C(0, ['gg', 2], 0, function () {
          return this.weekYear() % 100
        }),
        C(0, ['GG', 2], 0, function () {
          return this.isoWeekYear() % 100
        }),
        dn('gggg', 'weekYear'),
        dn('ggggg', 'weekYear'),
        dn('GGGG', 'isoWeekYear'),
        dn('GGGGG', 'isoWeekYear'),
        L('weekYear', 'gg'),
        L('isoWeekYear', 'GG'),
        A('weekYear', 1),
        A('isoWeekYear', 1),
        ce('G', ue),
        ce('g', ue),
        ce('GG', te, Q),
        ce('gg', te, Q),
        ce('GGGG', re, K),
        ce('gggg', re, K),
        ce('GGGGG', ae, ee),
        ce('ggggg', ae, ee),
        ge(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (e, t, n, s) {
          t[s.substr(0, 2)] = Z(e)
        }),
        ge(['gg', 'GG'], function (e, t, n, s) {
          t[s] = f.parseTwoDigitYear(e)
        }),
        C('Q', 0, 'Qo', 'quarter'),
        L('quarter', 'Q'),
        A('quarter', 7),
        ce('Q', J),
        ye('Q', function (e, t) {
          t[ve] = 3 * (Z(e) - 1)
        }),
        C('D', ['DD', 2], 'Do', 'date'),
        L('date', 'D'),
        A('date', 9),
        ce('D', te),
        ce('DD', te, Q),
        ce('Do', function (e, t) {
          return e
            ? t._dayOfMonthOrdinalParse || t._ordinalParse
            : t._dayOfMonthOrdinalParseLenient
        }),
        ye(['D', 'DD'], ke),
        ye('Do', function (e, t) {
          t[ke] = Z(e.match(te)[0])
        })
      var fn = z('Date', !0)
      C('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'),
        L('dayOfYear', 'DDD'),
        A('dayOfYear', 4),
        ce('DDD', ie),
        ce('DDDD', X),
        ye(['DDD', 'DDDD'], function (e, t, n) {
          n._dayOfYear = Z(e)
        }),
        C('m', ['mm', 2], 0, 'minute'),
        L('minute', 'm'),
        A('minute', 14),
        ce('m', te),
        ce('mm', te, Q),
        ye(['m', 'mm'], De)
      var mn = z('Minutes', !1)
      C('s', ['ss', 2], 0, 'second'),
        L('second', 's'),
        A('second', 15),
        ce('s', te),
        ce('ss', te, Q),
        ye(['s', 'ss'], Se)
      var _n,
        yn,
        gn = z('Seconds', !1)
      for (
        C('S', 0, 0, function () {
          return ~~(this.millisecond() / 100)
        }),
          C(0, ['SS', 2], 0, function () {
            return ~~(this.millisecond() / 10)
          }),
          C(0, ['SSS', 3], 0, 'millisecond'),
          C(0, ['SSSS', 4], 0, function () {
            return 10 * this.millisecond()
          }),
          C(0, ['SSSSS', 5], 0, function () {
            return 100 * this.millisecond()
          }),
          C(0, ['SSSSSS', 6], 0, function () {
            return 1e3 * this.millisecond()
          }),
          C(0, ['SSSSSSS', 7], 0, function () {
            return 1e4 * this.millisecond()
          }),
          C(0, ['SSSSSSSS', 8], 0, function () {
            return 1e5 * this.millisecond()
          }),
          C(0, ['SSSSSSSSS', 9], 0, function () {
            return 1e6 * this.millisecond()
          }),
          L('millisecond', 'ms'),
          A('millisecond', 16),
          ce('S', ie, J),
          ce('SS', ie, Q),
          ce('SSS', ie, X),
          _n = 'SSSS';
        _n.length <= 9;
        _n += 'S'
      )
        ce(_n, oe)
      function wn(e, t) {
        t[Ye] = Z(1e3 * ('0.' + e))
      }
      for (_n = 'S'; _n.length <= 9; _n += 'S') ye(_n, wn)
      ;(yn = z('Milliseconds', !1)),
        C('z', 0, 0, 'zoneAbbr'),
        C('zz', 0, 0, 'zoneName')
      var pn = k.prototype
      function vn(e) {
        return e
      }
      ;(pn.add = Jt),
        (pn.calendar = function (e, t) {
          1 === arguments.length &&
            (arguments[0]
              ? Kt(arguments[0])
                ? ((e = arguments[0]), (t = void 0))
                : (function (e) {
                    for (
                      var t = u(e) && !l(e),
                        n = !1,
                        s = [
                          'sameDay',
                          'nextDay',
                          'lastDay',
                          'nextWeek',
                          'lastWeek',
                          'sameElse',
                        ],
                        i = 0;
                      i < s.length;
                      i += 1
                    )
                      n = n || m(e, s[i])
                    return t && n
                  })(arguments[0]) && ((t = arguments[0]), (e = void 0))
              : (t = e = void 0))
          var n = e || Tt(),
            s = Gt(n, this).startOf('day'),
            i = f.calendarFormat(this, s) || 'sameElse',
            r = t && (O(t[i]) ? t[i].call(this, n) : t[i])
          return this.format(r || this.localeData().calendar(i, this, Tt(n)))
        }),
        (pn.clone = function () {
          return new k(this)
        }),
        (pn.diff = function (e, t, n) {
          var s, i, r
          if (!this.isValid()) return NaN
          if (!(s = Gt(e, this)).isValid()) return NaN
          switch (
            ((i = 6e4 * (s.utcOffset() - this.utcOffset())), (t = V(t)))
          ) {
            case 'year':
              r = en(this, s) / 12
              break
            case 'month':
              r = en(this, s)
              break
            case 'quarter':
              r = en(this, s) / 3
              break
            case 'second':
              r = (this - s) / 1e3
              break
            case 'minute':
              r = (this - s) / 6e4
              break
            case 'hour':
              r = (this - s) / 36e5
              break
            case 'day':
              r = (this - s - i) / 864e5
              break
            case 'week':
              r = (this - s - i) / 6048e5
              break
            default:
              r = this - s
          }
          return n ? r : I(r)
        }),
        (pn.endOf = function (e) {
          var t, n
          if (void 0 === (e = V(e)) || 'millisecond' === e || !this.isValid())
            return this
          switch (((n = this._isUTC ? un : on), e)) {
            case 'year':
              t = n(this.year() + 1, 0, 1) - 1
              break
            case 'quarter':
              t = n(this.year(), this.month() - (this.month() % 3) + 3, 1) - 1
              break
            case 'month':
              t = n(this.year(), this.month() + 1, 1) - 1
              break
            case 'week':
              t =
                n(this.year(), this.month(), this.date() - this.weekday() + 7) -
                1
              break
            case 'isoWeek':
              t =
                n(
                  this.year(),
                  this.month(),
                  this.date() - (this.isoWeekday() - 1) + 7
                ) - 1
              break
            case 'day':
            case 'date':
              t = n(this.year(), this.month(), this.date() + 1) - 1
              break
            case 'hour':
              ;(t = this._d.valueOf()),
                (t +=
                  36e5 -
                  an(t + (this._isUTC ? 0 : 6e4 * this.utcOffset()), 36e5) -
                  1)
              break
            case 'minute':
              ;(t = this._d.valueOf()), (t += 6e4 - an(t, 6e4) - 1)
              break
            case 'second':
              ;(t = this._d.valueOf()), (t += 1e3 - an(t, 1e3) - 1)
              break
          }
          return this._d.setTime(t), f.updateOffset(this, !0), this
        }),
        (pn.format = function (e) {
          e = e || (this.isUtc() ? f.defaultFormatUtc : f.defaultFormat)
          var t = U(this, e)
          return this.localeData().postformat(t)
        }),
        (pn.from = function (e, t) {
          return this.isValid() && ((M(e) && e.isValid()) || Tt(e).isValid())
            ? Zt({ to: this, from: e }).locale(this.locale()).humanize(!t)
            : this.localeData().invalidDate()
        }),
        (pn.fromNow = function (e) {
          return this.from(Tt(), e)
        }),
        (pn.to = function (e, t) {
          return this.isValid() && ((M(e) && e.isValid()) || Tt(e).isValid())
            ? Zt({ from: this, to: e }).locale(this.locale()).humanize(!t)
            : this.localeData().invalidDate()
        }),
        (pn.toNow = function (e) {
          return this.to(Tt(), e)
        }),
        (pn.get = function (e) {
          return O(this[(e = V(e))]) ? this[e]() : this
        }),
        (pn.invalidAt = function () {
          return y(this).overflow
        }),
        (pn.isAfter = function (e, t) {
          var n = M(e) ? e : Tt(e)
          return (
            !(!this.isValid() || !n.isValid()) &&
            ('millisecond' === (t = V(t) || 'millisecond')
              ? this.valueOf() > n.valueOf()
              : n.valueOf() < this.clone().startOf(t).valueOf())
          )
        }),
        (pn.isBefore = function (e, t) {
          var n = M(e) ? e : Tt(e)
          return (
            !(!this.isValid() || !n.isValid()) &&
            ('millisecond' === (t = V(t) || 'millisecond')
              ? this.valueOf() < n.valueOf()
              : this.clone().endOf(t).valueOf() < n.valueOf())
          )
        }),
        (pn.isBetween = function (e, t, n, s) {
          var i = M(e) ? e : Tt(e),
            r = M(t) ? t : Tt(t)
          return (
            !!(this.isValid() && i.isValid() && r.isValid()) &&
            ('(' === (s = s || '()')[0]
              ? this.isAfter(i, n)
              : !this.isBefore(i, n)) &&
            (')' === s[1] ? this.isBefore(r, n) : !this.isAfter(r, n))
          )
        }),
        (pn.isSame = function (e, t) {
          var n,
            s = M(e) ? e : Tt(e)
          return (
            !(!this.isValid() || !s.isValid()) &&
            ('millisecond' === (t = V(t) || 'millisecond')
              ? this.valueOf() === s.valueOf()
              : ((n = s.valueOf()),
                this.clone().startOf(t).valueOf() <= n &&
                  n <= this.clone().endOf(t).valueOf()))
          )
        }),
        (pn.isSameOrAfter = function (e, t) {
          return this.isSame(e, t) || this.isAfter(e, t)
        }),
        (pn.isSameOrBefore = function (e, t) {
          return this.isSame(e, t) || this.isBefore(e, t)
        }),
        (pn.isValid = function () {
          return g(this)
        }),
        (pn.lang = nn),
        (pn.locale = tn),
        (pn.localeData = sn),
        (pn.max = Pt),
        (pn.min = Nt),
        (pn.parsingFlags = function () {
          return c({}, y(this))
        }),
        (pn.set = function (e, t) {
          if ('object' == typeof e)
            for (
              var n = (function (e) {
                  var t,
                    n = []
                  for (t in e) m(e, t) && n.push({ unit: t, priority: E[t] })
                  return (
                    n.sort(function (e, t) {
                      return e.priority - t.priority
                    }),
                    n
                  )
                })((e = G(e))),
                s = 0;
              s < n.length;
              s++
            )
              this[n[s].unit](e[n[s].unit])
          else if (O(this[(e = V(e))])) return this[e](t)
          return this
        }),
        (pn.startOf = function (e) {
          var t, n
          if (void 0 === (e = V(e)) || 'millisecond' === e || !this.isValid())
            return this
          switch (((n = this._isUTC ? un : on), e)) {
            case 'year':
              t = n(this.year(), 0, 1)
              break
            case 'quarter':
              t = n(this.year(), this.month() - (this.month() % 3), 1)
              break
            case 'month':
              t = n(this.year(), this.month(), 1)
              break
            case 'week':
              t = n(this.year(), this.month(), this.date() - this.weekday())
              break
            case 'isoWeek':
              t = n(
                this.year(),
                this.month(),
                this.date() - (this.isoWeekday() - 1)
              )
              break
            case 'day':
            case 'date':
              t = n(this.year(), this.month(), this.date())
              break
            case 'hour':
              ;(t = this._d.valueOf()),
                (t -= an(t + (this._isUTC ? 0 : 6e4 * this.utcOffset()), 36e5))
              break
            case 'minute':
              ;(t = this._d.valueOf()), (t -= an(t, 6e4))
              break
            case 'second':
              ;(t = this._d.valueOf()), (t -= an(t, 1e3))
              break
          }
          return this._d.setTime(t), f.updateOffset(this, !0), this
        }),
        (pn.subtract = Qt),
        (pn.toArray = function () {
          var e = this
          return [
            e.year(),
            e.month(),
            e.date(),
            e.hour(),
            e.minute(),
            e.second(),
            e.millisecond(),
          ]
        }),
        (pn.toObject = function () {
          var e = this
          return {
            years: e.year(),
            months: e.month(),
            date: e.date(),
            hours: e.hours(),
            minutes: e.minutes(),
            seconds: e.seconds(),
            milliseconds: e.milliseconds(),
          }
        }),
        (pn.toDate = function () {
          return new Date(this.valueOf())
        }),
        (pn.toISOString = function (e) {
          if (!this.isValid()) return null
          var t = !0 !== e,
            n = t ? this.clone().utc() : this
          return n.year() < 0 || 9999 < n.year()
            ? U(
                n,
                t
                  ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]'
                  : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ'
              )
            : O(Date.prototype.toISOString)
            ? t
              ? this.toDate().toISOString()
              : new Date(this.valueOf() + 60 * this.utcOffset() * 1e3)
                  .toISOString()
                  .replace('Z', U(n, 'Z'))
            : U(
                n,
                t
                  ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]'
                  : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ'
              )
        }),
        (pn.inspect = function () {
          if (!this.isValid()) return 'moment.invalid(/* ' + this._i + ' */)'
          var e,
            t,
            n,
            s = 'moment',
            i = ''
          return (
            this.isLocal() ||
              ((s = 0 === this.utcOffset() ? 'moment.utc' : 'moment.parseZone'),
              (i = 'Z')),
            (e = '[' + s + '("]'),
            (t = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY'),
            (n = i + '[")]'),
            this.format(e + t + '-MM-DD[T]HH:mm:ss.SSS' + n)
          )
        }),
        'undefined' != typeof Symbol &&
          null != Symbol.for &&
          (pn[Symbol.for('nodejs.util.inspect.custom')] = function () {
            return 'Moment<' + this.format() + '>'
          }),
        (pn.toJSON = function () {
          return this.isValid() ? this.toISOString() : null
        }),
        (pn.toString = function () {
          return this.clone()
            .locale('en')
            .format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ')
        }),
        (pn.unix = function () {
          return Math.floor(this.valueOf() / 1e3)
        }),
        (pn.valueOf = function () {
          return this._d.valueOf() - 6e4 * (this._offset || 0)
        }),
        (pn.creationData = function () {
          return {
            input: this._i,
            format: this._f,
            locale: this._locale,
            isUTC: this._isUTC,
            strict: this._strict,
          }
        }),
        (pn.eraName = function () {
          for (
            var e, t = this.localeData().eras(), n = 0, s = t.length;
            n < s;
            ++n
          ) {
            if (
              ((e = this.clone().startOf('day').valueOf()),
              t[n].since <= e && e <= t[n].until)
            )
              return t[n].name
            if (t[n].until <= e && e <= t[n].since) return t[n].name
          }
          return ''
        }),
        (pn.eraNarrow = function () {
          for (
            var e, t = this.localeData().eras(), n = 0, s = t.length;
            n < s;
            ++n
          ) {
            if (
              ((e = this.clone().startOf('day').valueOf()),
              t[n].since <= e && e <= t[n].until)
            )
              return t[n].narrow
            if (t[n].until <= e && e <= t[n].since) return t[n].narrow
          }
          return ''
        }),
        (pn.eraAbbr = function () {
          for (
            var e, t = this.localeData().eras(), n = 0, s = t.length;
            n < s;
            ++n
          ) {
            if (
              ((e = this.clone().startOf('day').valueOf()),
              t[n].since <= e && e <= t[n].until)
            )
              return t[n].abbr
            if (t[n].until <= e && e <= t[n].since) return t[n].abbr
          }
          return ''
        }),
        (pn.eraYear = function () {
          for (
            var e, t, n = this.localeData().eras(), s = 0, i = n.length;
            s < i;
            ++s
          )
            if (
              ((e = n[s].since <= n[s].until ? 1 : -1),
              (t = this.clone().startOf('day').valueOf()),
              (n[s].since <= t && t <= n[s].until) ||
                (n[s].until <= t && t <= n[s].since))
            )
              return (this.year() - f(n[s].since).year()) * e + n[s].offset
          return this.year()
        }),
        (pn.year = Le),
        (pn.isLeapYear = function () {
          return j(this.year())
        }),
        (pn.weekYear = function (e) {
          return cn.call(
            this,
            e,
            this.week(),
            this.weekday(),
            this.localeData()._week.dow,
            this.localeData()._week.doy
          )
        }),
        (pn.isoWeekYear = function (e) {
          return cn.call(this, e, this.isoWeek(), this.isoWeekday(), 1, 4)
        }),
        (pn.quarter = pn.quarters =
          function (e) {
            return null == e
              ? Math.ceil((this.month() + 1) / 3)
              : this.month(3 * (e - 1) + (this.month() % 3))
          }),
        (pn.month = Ue),
        (pn.daysInMonth = function () {
          return xe(this.year(), this.month())
        }),
        (pn.week = pn.weeks =
          function (e) {
            var t = this.localeData().week(this)
            return null == e ? t : this.add(7 * (e - t), 'd')
          }),
        (pn.isoWeek = pn.isoWeeks =
          function (e) {
            var t = Ae(this, 1, 4).week
            return null == e ? t : this.add(7 * (e - t), 'd')
          }),
        (pn.weeksInYear = function () {
          var e = this.localeData()._week
          return je(this.year(), e.dow, e.doy)
        }),
        (pn.weeksInWeekYear = function () {
          var e = this.localeData()._week
          return je(this.weekYear(), e.dow, e.doy)
        }),
        (pn.isoWeeksInYear = function () {
          return je(this.year(), 1, 4)
        }),
        (pn.isoWeeksInISOWeekYear = function () {
          return je(this.isoWeekYear(), 1, 4)
        }),
        (pn.date = fn),
        (pn.day = pn.days =
          function (e) {
            if (!this.isValid()) return null != e ? this : NaN
            var t,
              n,
              s = this._isUTC ? this._d.getUTCDay() : this._d.getDay()
            return null != e
              ? ((t = e),
                (n = this.localeData()),
                (e =
                  'string' != typeof t
                    ? t
                    : isNaN(t)
                    ? 'number' == typeof (t = n.weekdaysParse(t))
                      ? t
                      : null
                    : parseInt(t, 10)),
                this.add(e - s, 'd'))
              : s
          }),
        (pn.weekday = function (e) {
          if (!this.isValid()) return null != e ? this : NaN
          var t = (this.day() + 7 - this.localeData()._week.dow) % 7
          return null == e ? t : this.add(e - t, 'd')
        }),
        (pn.isoWeekday = function (e) {
          if (!this.isValid()) return null != e ? this : NaN
          if (null == e) return this.day() || 7
          var t,
            n,
            s =
              ((t = e),
              (n = this.localeData()),
              'string' == typeof t
                ? n.weekdaysParse(t) % 7 || 7
                : isNaN(t)
                ? null
                : t)
          return this.day(this.day() % 7 ? s : s - 7)
        }),
        (pn.dayOfYear = function (e) {
          var t =
            Math.round(
              (this.clone().startOf('day') - this.clone().startOf('year')) /
                864e5
            ) + 1
          return null == e ? t : this.add(e - t, 'd')
        }),
        (pn.hour = pn.hours = tt),
        (pn.minute = pn.minutes = mn),
        (pn.second = pn.seconds = gn),
        (pn.millisecond = pn.milliseconds = yn),
        (pn.utcOffset = function (e, t, n) {
          var s,
            i = this._offset || 0
          if (!this.isValid()) return null != e ? this : NaN
          if (null == e) return this._isUTC ? i : Et(this)
          if ('string' == typeof e) {
            if (null === (e = Vt(he, e))) return this
          } else Math.abs(e) < 16 && !n && (e *= 60)
          return (
            !this._isUTC && t && (s = Et(this)),
            (this._offset = e),
            (this._isUTC = !0),
            null != s && this.add(s, 'm'),
            i !== e &&
              (!t || this._changeInProgress
                ? Bt(this, Zt(e - i, 'm'), 1, !1)
                : this._changeInProgress ||
                  ((this._changeInProgress = !0),
                  f.updateOffset(this, !0),
                  (this._changeInProgress = null))),
            this
          )
        }),
        (pn.utc = function (e) {
          return this.utcOffset(0, e)
        }),
        (pn.local = function (e) {
          return (
            this._isUTC &&
              (this.utcOffset(0, e),
              (this._isUTC = !1),
              e && this.subtract(Et(this), 'm')),
            this
          )
        }),
        (pn.parseZone = function () {
          var e
          return (
            null != this._tzm
              ? this.utcOffset(this._tzm, !1, !0)
              : 'string' == typeof this._i &&
                (null != (e = Vt(le, this._i))
                  ? this.utcOffset(e)
                  : this.utcOffset(0, !0)),
            this
          )
        }),
        (pn.hasAlignedHourOffset = function (e) {
          return (
            !!this.isValid() &&
            ((e = e ? Tt(e).utcOffset() : 0), (this.utcOffset() - e) % 60 == 0)
          )
        }),
        (pn.isDST = function () {
          return (
            this.utcOffset() > this.clone().month(0).utcOffset() ||
            this.utcOffset() > this.clone().month(5).utcOffset()
          )
        }),
        (pn.isLocal = function () {
          return !!this.isValid() && !this._isUTC
        }),
        (pn.isUtcOffset = function () {
          return !!this.isValid() && this._isUTC
        }),
        (pn.isUtc = At),
        (pn.isUTC = At),
        (pn.zoneAbbr = function () {
          return this._isUTC ? 'UTC' : ''
        }),
        (pn.zoneName = function () {
          return this._isUTC ? 'Coordinated Universal Time' : ''
        }),
        (pn.dates = n('dates accessor is deprecated. Use date instead.', fn)),
        (pn.months = n('months accessor is deprecated. Use month instead', Ue)),
        (pn.years = n('years accessor is deprecated. Use year instead', Le)),
        (pn.zone = n(
          'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',
          function (e, t) {
            return null != e
              ? ('string' != typeof e && (e = -e), this.utcOffset(e, t), this)
              : -this.utcOffset()
          }
        )),
        (pn.isDSTShifted = n(
          'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',
          function () {
            if (!r(this._isDSTShifted)) return this._isDSTShifted
            var e,
              t = {}
            return (
              v(t, this),
              (t = bt(t))._a
                ? ((e = (t._isUTC ? _ : Tt)(t._a)),
                  (this._isDSTShifted =
                    this.isValid() &&
                    0 <
                      (function (e, t, n) {
                        for (
                          var s = Math.min(e.length, t.length),
                            i = Math.abs(e.length - t.length),
                            r = 0,
                            a = 0;
                          a < s;
                          a++
                        )
                          ((n && e[a] !== t[a]) ||
                            (!n && Z(e[a]) !== Z(t[a]))) &&
                            r++
                        return r + i
                      })(t._a, e.toArray())))
                : (this._isDSTShifted = !1),
              this._isDSTShifted
            )
          }
        ))
      var kn = x.prototype
      function Mn(e, t, n, s) {
        var i = dt(),
          r = _().set(s, t)
        return i[n](r, e)
      }
      function Dn(e, t, n) {
        if ((h(e) && ((t = e), (e = void 0)), (e = e || ''), null != t))
          return Mn(e, t, n, 'month')
        for (var s = [], i = 0; i < 12; i++) s[i] = Mn(e, i, n, 'month')
        return s
      }
      function Sn(e, t, n, s) {
        t =
          ('boolean' == typeof e
            ? h(t) && ((n = t), (t = void 0))
            : ((t = e), (e = !1), h((n = t)) && ((n = t), (t = void 0))),
          t || '')
        var i,
          r = dt(),
          a = e ? r._week.dow : 0,
          o = []
        if (null != n) return Mn(t, (n + a) % 7, s, 'day')
        for (i = 0; i < 7; i++) o[i] = Mn(t, (i + a) % 7, s, 'day')
        return o
      }
      ;(kn.calendar = function (e, t, n) {
        var s = this._calendar[e] || this._calendar.sameElse
        return O(s) ? s.call(t, n) : s
      }),
        (kn.longDateFormat = function (e) {
          var t = this._longDateFormat[e],
            n = this._longDateFormat[e.toUpperCase()]
          return t || !n
            ? t
            : ((this._longDateFormat[e] = n
                .match(N)
                .map(function (e) {
                  return 'MMMM' === e ||
                    'MM' === e ||
                    'DD' === e ||
                    'dddd' === e
                    ? e.slice(1)
                    : e
                })
                .join('')),
              this._longDateFormat[e])
        }),
        (kn.invalidDate = function () {
          return this._invalidDate
        }),
        (kn.ordinal = function (e) {
          return this._ordinal.replace('%d', e)
        }),
        (kn.preparse = vn),
        (kn.postformat = vn),
        (kn.relativeTime = function (e, t, n, s) {
          var i = this._relativeTime[n]
          return O(i) ? i(e, t, n, s) : i.replace(/%d/i, e)
        }),
        (kn.pastFuture = function (e, t) {
          var n = this._relativeTime[0 < e ? 'future' : 'past']
          return O(n) ? n(t) : n.replace(/%s/i, t)
        }),
        (kn.set = function (e) {
          var t, n
          for (n in e)
            m(e, n) && (O((t = e[n])) ? (this[n] = t) : (this['_' + n] = t))
          ;(this._config = e),
            (this._dayOfMonthOrdinalParseLenient = new RegExp(
              (this._dayOfMonthOrdinalParse.source ||
                this._ordinalParse.source) +
                '|' +
                /\d{1,2}/.source
            ))
        }),
        (kn.eras = function (e, t) {
          for (
            var n, s = this._eras || dt('en')._eras, i = 0, r = s.length;
            i < r;
            ++i
          ) {
            switch (typeof s[i].since) {
              case 'string':
                ;(n = f(s[i].since).startOf('day')), (s[i].since = n.valueOf())
                break
            }
            switch (typeof s[i].until) {
              case 'undefined':
                s[i].until = 1 / 0
                break
              case 'string':
                ;(n = f(s[i].until).startOf('day').valueOf()),
                  (s[i].until = n.valueOf())
                break
            }
          }
          return s
        }),
        (kn.erasParse = function (e, t, n) {
          var s,
            i,
            r,
            a,
            o,
            u = this.eras()
          for (e = e.toUpperCase(), s = 0, i = u.length; s < i; ++s)
            if (
              ((r = u[s].name.toUpperCase()),
              (a = u[s].abbr.toUpperCase()),
              (o = u[s].narrow.toUpperCase()),
              n)
            )
              switch (t) {
                case 'N':
                case 'NN':
                case 'NNN':
                  if (a === e) return u[s]
                  break
                case 'NNNN':
                  if (r === e) return u[s]
                  break
                case 'NNNNN':
                  if (o === e) return u[s]
                  break
              }
            else if (0 <= [r, a, o].indexOf(e)) return u[s]
        }),
        (kn.erasConvertYear = function (e, t) {
          var n = e.since <= e.until ? 1 : -1
          return void 0 === t
            ? f(e.since).year()
            : f(e.since).year() + (t - e.offset) * n
        }),
        (kn.erasAbbrRegex = function (e) {
          return (
            m(this, '_erasAbbrRegex') || hn.call(this),
            e ? this._erasAbbrRegex : this._erasRegex
          )
        }),
        (kn.erasNameRegex = function (e) {
          return (
            m(this, '_erasNameRegex') || hn.call(this),
            e ? this._erasNameRegex : this._erasRegex
          )
        }),
        (kn.erasNarrowRegex = function (e) {
          return (
            m(this, '_erasNarrowRegex') || hn.call(this),
            e ? this._erasNarrowRegex : this._erasRegex
          )
        }),
        (kn.months = function (e, t) {
          return e
            ? o(this._months)
              ? this._months[e.month()]
              : this._months[
                  (this._months.isFormat || Pe).test(t)
                    ? 'format'
                    : 'standalone'
                ][e.month()]
            : o(this._months)
            ? this._months
            : this._months.standalone
        }),
        (kn.monthsShort = function (e, t) {
          return e
            ? o(this._monthsShort)
              ? this._monthsShort[e.month()]
              : this._monthsShort[Pe.test(t) ? 'format' : 'standalone'][
                  e.month()
                ]
            : o(this._monthsShort)
            ? this._monthsShort
            : this._monthsShort.standalone
        }),
        (kn.monthsParse = function (e, t, n) {
          var s, i, r
          if (this._monthsParseExact)
            return function (e, t, n) {
              var s,
                i,
                r,
                a = e.toLocaleLowerCase()
              if (!this._monthsParse)
                for (
                  this._monthsParse = [],
                    this._longMonthsParse = [],
                    this._shortMonthsParse = [],
                    s = 0;
                  s < 12;
                  ++s
                )
                  (r = _([2e3, s])),
                    (this._shortMonthsParse[s] = this.monthsShort(
                      r,
                      ''
                    ).toLocaleLowerCase()),
                    (this._longMonthsParse[s] = this.months(
                      r,
                      ''
                    ).toLocaleLowerCase())
              return n
                ? 'MMM' === t
                  ? -1 !== (i = we.call(this._shortMonthsParse, a))
                    ? i
                    : null
                  : -1 !== (i = we.call(this._longMonthsParse, a))
                  ? i
                  : null
                : 'MMM' === t
                ? -1 !== (i = we.call(this._shortMonthsParse, a)) ||
                  -1 !== (i = we.call(this._longMonthsParse, a))
                  ? i
                  : null
                : -1 !== (i = we.call(this._longMonthsParse, a)) ||
                  -1 !== (i = we.call(this._shortMonthsParse, a))
                ? i
                : null
            }.call(this, e, t, n)
          for (
            this._monthsParse ||
              ((this._monthsParse = []),
              (this._longMonthsParse = []),
              (this._shortMonthsParse = [])),
              s = 0;
            s < 12;
            s++
          ) {
            if (
              ((i = _([2e3, s])),
              n &&
                !this._longMonthsParse[s] &&
                ((this._longMonthsParse[s] = new RegExp(
                  '^' + this.months(i, '').replace('.', '') + '$',
                  'i'
                )),
                (this._shortMonthsParse[s] = new RegExp(
                  '^' + this.monthsShort(i, '').replace('.', '') + '$',
                  'i'
                ))),
              n ||
                this._monthsParse[s] ||
                ((r =
                  '^' + this.months(i, '') + '|^' + this.monthsShort(i, '')),
                (this._monthsParse[s] = new RegExp(r.replace('.', ''), 'i'))),
              n && 'MMMM' === t && this._longMonthsParse[s].test(e))
            )
              return s
            if (n && 'MMM' === t && this._shortMonthsParse[s].test(e)) return s
            if (!n && this._monthsParse[s].test(e)) return s
          }
        }),
        (kn.monthsRegex = function (e) {
          return this._monthsParseExact
            ? (m(this, '_monthsRegex') || He.call(this),
              e ? this._monthsStrictRegex : this._monthsRegex)
            : (m(this, '_monthsRegex') || (this._monthsRegex = We),
              this._monthsStrictRegex && e
                ? this._monthsStrictRegex
                : this._monthsRegex)
        }),
        (kn.monthsShortRegex = function (e) {
          return this._monthsParseExact
            ? (m(this, '_monthsRegex') || He.call(this),
              e ? this._monthsShortStrictRegex : this._monthsShortRegex)
            : (m(this, '_monthsShortRegex') || (this._monthsShortRegex = Re),
              this._monthsShortStrictRegex && e
                ? this._monthsShortStrictRegex
                : this._monthsShortRegex)
        }),
        (kn.week = function (e) {
          return Ae(e, this._week.dow, this._week.doy).week
        }),
        (kn.firstDayOfYear = function () {
          return this._week.doy
        }),
        (kn.firstDayOfWeek = function () {
          return this._week.dow
        }),
        (kn.weekdays = function (e, t) {
          var n = o(this._weekdays)
            ? this._weekdays
            : this._weekdays[
                e && !0 !== e && this._weekdays.isFormat.test(t)
                  ? 'format'
                  : 'standalone'
              ]
          return !0 === e ? Ie(n, this._week.dow) : e ? n[e.day()] : n
        }),
        (kn.weekdaysMin = function (e) {
          return !0 === e
            ? Ie(this._weekdaysMin, this._week.dow)
            : e
            ? this._weekdaysMin[e.day()]
            : this._weekdaysMin
        }),
        (kn.weekdaysShort = function (e) {
          return !0 === e
            ? Ie(this._weekdaysShort, this._week.dow)
            : e
            ? this._weekdaysShort[e.day()]
            : this._weekdaysShort
        }),
        (kn.weekdaysParse = function (e, t, n) {
          var s, i, r
          if (this._weekdaysParseExact)
            return function (e, t, n) {
              var s,
                i,
                r,
                a = e.toLocaleLowerCase()
              if (!this._weekdaysParse)
                for (
                  this._weekdaysParse = [],
                    this._shortWeekdaysParse = [],
                    this._minWeekdaysParse = [],
                    s = 0;
                  s < 7;
                  ++s
                )
                  (r = _([2e3, 1]).day(s)),
                    (this._minWeekdaysParse[s] = this.weekdaysMin(
                      r,
                      ''
                    ).toLocaleLowerCase()),
                    (this._shortWeekdaysParse[s] = this.weekdaysShort(
                      r,
                      ''
                    ).toLocaleLowerCase()),
                    (this._weekdaysParse[s] = this.weekdays(
                      r,
                      ''
                    ).toLocaleLowerCase())
              return n
                ? 'dddd' === t
                  ? -1 !== (i = we.call(this._weekdaysParse, a))
                    ? i
                    : null
                  : 'ddd' === t
                  ? -1 !== (i = we.call(this._shortWeekdaysParse, a))
                    ? i
                    : null
                  : -1 !== (i = we.call(this._minWeekdaysParse, a))
                  ? i
                  : null
                : 'dddd' === t
                ? -1 !== (i = we.call(this._weekdaysParse, a)) ||
                  -1 !== (i = we.call(this._shortWeekdaysParse, a)) ||
                  -1 !== (i = we.call(this._minWeekdaysParse, a))
                  ? i
                  : null
                : 'ddd' === t
                ? -1 !== (i = we.call(this._shortWeekdaysParse, a)) ||
                  -1 !== (i = we.call(this._weekdaysParse, a)) ||
                  -1 !== (i = we.call(this._minWeekdaysParse, a))
                  ? i
                  : null
                : -1 !== (i = we.call(this._minWeekdaysParse, a)) ||
                  -1 !== (i = we.call(this._weekdaysParse, a)) ||
                  -1 !== (i = we.call(this._shortWeekdaysParse, a))
                ? i
                : null
            }.call(this, e, t, n)
          for (
            this._weekdaysParse ||
              ((this._weekdaysParse = []),
              (this._minWeekdaysParse = []),
              (this._shortWeekdaysParse = []),
              (this._fullWeekdaysParse = [])),
              s = 0;
            s < 7;
            s++
          ) {
            if (
              ((i = _([2e3, 1]).day(s)),
              n &&
                !this._fullWeekdaysParse[s] &&
                ((this._fullWeekdaysParse[s] = new RegExp(
                  '^' + this.weekdays(i, '').replace('.', '\\.?') + '$',
                  'i'
                )),
                (this._shortWeekdaysParse[s] = new RegExp(
                  '^' + this.weekdaysShort(i, '').replace('.', '\\.?') + '$',
                  'i'
                )),
                (this._minWeekdaysParse[s] = new RegExp(
                  '^' + this.weekdaysMin(i, '').replace('.', '\\.?') + '$',
                  'i'
                ))),
              this._weekdaysParse[s] ||
                ((r =
                  '^' +
                  this.weekdays(i, '') +
                  '|^' +
                  this.weekdaysShort(i, '') +
                  '|^' +
                  this.weekdaysMin(i, '')),
                (this._weekdaysParse[s] = new RegExp(r.replace('.', ''), 'i'))),
              n && 'dddd' === t && this._fullWeekdaysParse[s].test(e))
            )
              return s
            if (n && 'ddd' === t && this._shortWeekdaysParse[s].test(e))
              return s
            if (n && 'dd' === t && this._minWeekdaysParse[s].test(e)) return s
            if (!n && this._weekdaysParse[s].test(e)) return s
          }
        }),
        (kn.weekdaysRegex = function (e) {
          return this._weekdaysParseExact
            ? (m(this, '_weekdaysRegex') || Qe.call(this),
              e ? this._weekdaysStrictRegex : this._weekdaysRegex)
            : (m(this, '_weekdaysRegex') || (this._weekdaysRegex = qe),
              this._weekdaysStrictRegex && e
                ? this._weekdaysStrictRegex
                : this._weekdaysRegex)
        }),
        (kn.weekdaysShortRegex = function (e) {
          return this._weekdaysParseExact
            ? (m(this, '_weekdaysRegex') || Qe.call(this),
              e ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex)
            : (m(this, '_weekdaysShortRegex') ||
                (this._weekdaysShortRegex = Be),
              this._weekdaysShortStrictRegex && e
                ? this._weekdaysShortStrictRegex
                : this._weekdaysShortRegex)
        }),
        (kn.weekdaysMinRegex = function (e) {
          return this._weekdaysParseExact
            ? (m(this, '_weekdaysRegex') || Qe.call(this),
              e ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex)
            : (m(this, '_weekdaysMinRegex') || (this._weekdaysMinRegex = Je),
              this._weekdaysMinStrictRegex && e
                ? this._weekdaysMinStrictRegex
                : this._weekdaysMinRegex)
        }),
        (kn.isPM = function (e) {
          return 'p' === (e + '').toLowerCase().charAt(0)
        }),
        (kn.meridiem = function (e, t, n) {
          return 11 < e ? (n ? 'pm' : 'PM') : n ? 'am' : 'AM'
        }),
        lt('en', {
          eras: [
            {
              since: '0001-01-01',
              until: 1 / 0,
              offset: 1,
              name: 'Anno Domini',
              narrow: 'AD',
              abbr: 'AD',
            },
            {
              since: '0000-12-31',
              until: -1 / 0,
              offset: 1,
              name: 'Before Christ',
              narrow: 'BC',
              abbr: 'BC',
            },
          ],
          dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
          ordinal: function (e) {
            var t = e % 10
            return (
              e +
              (1 === Z((e % 100) / 10)
                ? 'th'
                : 1 == t
                ? 'st'
                : 2 == t
                ? 'nd'
                : 3 == t
                ? 'rd'
                : 'th')
            )
          },
        }),
        (f.lang = n(
          'moment.lang is deprecated. Use moment.locale instead.',
          lt
        )),
        (f.langData = n(
          'moment.langData is deprecated. Use moment.localeData instead.',
          dt
        ))
      var Yn = Math.abs
      function On(e, t, n, s) {
        var i = Zt(t, n)
        return (
          (e._milliseconds += s * i._milliseconds),
          (e._days += s * i._days),
          (e._months += s * i._months),
          e._bubble()
        )
      }
      function bn(e) {
        return e < 0 ? Math.floor(e) : Math.ceil(e)
      }
      function xn(e) {
        return (4800 * e) / 146097
      }
      function Tn(e) {
        return (146097 * e) / 4800
      }
      function Nn(e) {
        return function () {
          return this.as(e)
        }
      }
      var Pn = Nn('ms'),
        Rn = Nn('s'),
        Wn = Nn('m'),
        Cn = Nn('h'),
        Un = Nn('d'),
        Hn = Nn('w'),
        Fn = Nn('M'),
        Ln = Nn('Q'),
        Vn = Nn('y')
      function Gn(e) {
        return function () {
          return this.isValid() ? this._data[e] : NaN
        }
      }
      var En = Gn('milliseconds'),
        An = Gn('seconds'),
        jn = Gn('minutes'),
        In = Gn('hours'),
        Zn = Gn('days'),
        zn = Gn('months'),
        $n = Gn('years')
      var qn = Math.round,
        Bn = { ss: 44, s: 45, m: 45, h: 22, d: 26, w: null, M: 11 }
      function Jn(e, t, n, s) {
        var i = Zt(e).abs(),
          r = qn(i.as('s')),
          a = qn(i.as('m')),
          o = qn(i.as('h')),
          u = qn(i.as('d')),
          l = qn(i.as('M')),
          h = qn(i.as('w')),
          d = qn(i.as('y')),
          c =
            (r <= n.ss ? ['s', r] : r < n.s && ['ss', r]) ||
            (a <= 1 && ['m']) ||
            (a < n.m && ['mm', a]) ||
            (o <= 1 && ['h']) ||
            (o < n.h && ['hh', o]) ||
            (u <= 1 && ['d']) ||
            (u < n.d && ['dd', u])
        return (
          null != n.w && (c = c || (h <= 1 && ['w']) || (h < n.w && ['ww', h])),
          ((c = c ||
            (l <= 1 && ['M']) ||
            (l < n.M && ['MM', l]) ||
            (d <= 1 && ['y']) || ['yy', d])[2] = t),
          (c[3] = 0 < +e),
          (c[4] = s),
          function (e, t, n, s, i) {
            return i.relativeTime(t || 1, !!n, e, s)
          }.apply(null, c)
        )
      }
      var Qn = Math.abs
      function Xn(e) {
        return (0 < e) - (e < 0) || +e
      }
      function Kn() {
        if (!this.isValid()) return this.localeData().invalidDate()
        var e,
          t,
          n,
          s,
          i,
          r,
          a,
          o,
          u = Qn(this._milliseconds) / 1e3,
          l = Qn(this._days),
          h = Qn(this._months),
          d = this.asSeconds()
        return d
          ? ((e = I(u / 60)),
            (t = I(e / 60)),
            (u %= 60),
            (e %= 60),
            (n = I(h / 12)),
            (h %= 12),
            (s = u ? u.toFixed(3).replace(/\.?0+$/, '') : ''),
            (i = d < 0 ? '-' : ''),
            (r = Xn(this._months) !== Xn(d) ? '-' : ''),
            (a = Xn(this._days) !== Xn(d) ? '-' : ''),
            (o = Xn(this._milliseconds) !== Xn(d) ? '-' : ''),
            i +
              'P' +
              (n ? r + n + 'Y' : '') +
              (h ? r + h + 'M' : '') +
              (l ? a + l + 'D' : '') +
              (t || e || u ? 'T' : '') +
              (t ? o + t + 'H' : '') +
              (e ? o + e + 'M' : '') +
              (u ? o + s + 'S' : ''))
          : 'P0D'
      }
      var es = Ct.prototype
      return (
        (es.isValid = function () {
          return this._isValid
        }),
        (es.abs = function () {
          var e = this._data
          return (
            (this._milliseconds = Yn(this._milliseconds)),
            (this._days = Yn(this._days)),
            (this._months = Yn(this._months)),
            (e.milliseconds = Yn(e.milliseconds)),
            (e.seconds = Yn(e.seconds)),
            (e.minutes = Yn(e.minutes)),
            (e.hours = Yn(e.hours)),
            (e.months = Yn(e.months)),
            (e.years = Yn(e.years)),
            this
          )
        }),
        (es.add = function (e, t) {
          return On(this, e, t, 1)
        }),
        (es.subtract = function (e, t) {
          return On(this, e, t, -1)
        }),
        (es.as = function (e) {
          if (!this.isValid()) return NaN
          var t,
            n,
            s = this._milliseconds
          if ('month' === (e = V(e)) || 'quarter' === e || 'year' === e)
            switch (
              ((t = this._days + s / 864e5), (n = this._months + xn(t)), e)
            ) {
              case 'month':
                return n
              case 'quarter':
                return n / 3
              case 'year':
                return n / 12
            }
          else
            switch (((t = this._days + Math.round(Tn(this._months))), e)) {
              case 'week':
                return t / 7 + s / 6048e5
              case 'day':
                return t + s / 864e5
              case 'hour':
                return 24 * t + s / 36e5
              case 'minute':
                return 1440 * t + s / 6e4
              case 'second':
                return 86400 * t + s / 1e3
              case 'millisecond':
                return Math.floor(864e5 * t) + s
              default:
                throw new Error('Unknown unit ' + e)
            }
        }),
        (es.asMilliseconds = Pn),
        (es.asSeconds = Rn),
        (es.asMinutes = Wn),
        (es.asHours = Cn),
        (es.asDays = Un),
        (es.asWeeks = Hn),
        (es.asMonths = Fn),
        (es.asQuarters = Ln),
        (es.asYears = Vn),
        (es.valueOf = function () {
          return this.isValid()
            ? this._milliseconds +
                864e5 * this._days +
                (this._months % 12) * 2592e6 +
                31536e6 * Z(this._months / 12)
            : NaN
        }),
        (es._bubble = function () {
          var e,
            t,
            n,
            s,
            i,
            r = this._milliseconds,
            a = this._days,
            o = this._months,
            u = this._data
          return (
            (0 <= r && 0 <= a && 0 <= o) ||
              (r <= 0 && a <= 0 && o <= 0) ||
              ((r += 864e5 * bn(Tn(o) + a)), (o = a = 0)),
            (u.milliseconds = r % 1e3),
            (e = I(r / 1e3)),
            (u.seconds = e % 60),
            (t = I(e / 60)),
            (u.minutes = t % 60),
            (n = I(t / 60)),
            (u.hours = n % 24),
            (a += I(n / 24)),
            (o += i = I(xn(a))),
            (a -= bn(Tn(i))),
            (s = I(o / 12)),
            (o %= 12),
            (u.days = a),
            (u.months = o),
            (u.years = s),
            this
          )
        }),
        (es.clone = function () {
          return Zt(this)
        }),
        (es.get = function (e) {
          return (e = V(e)), this.isValid() ? this[e + 's']() : NaN
        }),
        (es.milliseconds = En),
        (es.seconds = An),
        (es.minutes = jn),
        (es.hours = In),
        (es.days = Zn),
        (es.weeks = function () {
          return I(this.days() / 7)
        }),
        (es.months = zn),
        (es.years = $n),
        (es.humanize = function (e, t) {
          if (!this.isValid()) return this.localeData().invalidDate()
          var n,
            s,
            i = !1,
            r = Bn
          return (
            'object' == typeof e && ((t = e), (e = !1)),
            'boolean' == typeof e && (i = e),
            'object' == typeof t &&
              ((r = Object.assign({}, Bn, t)),
              null != t.s && null == t.ss && (r.ss = t.s - 1)),
            (n = this.localeData()),
            (s = Jn(this, !i, r, n)),
            i && (s = n.pastFuture(+this, s)),
            n.postformat(s)
          )
        }),
        (es.toISOString = Kn),
        (es.toString = Kn),
        (es.toJSON = Kn),
        (es.locale = tn),
        (es.localeData = sn),
        (es.toIsoString = n(
          'toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',
          Kn
        )),
        (es.lang = nn),
        C('X', 0, 0, 'unix'),
        C('x', 0, 0, 'valueOf'),
        ce('x', ue),
        ce('X', /[+-]?\d+(\.\d{1,3})?/),
        ye('X', function (e, t, n) {
          n._d = new Date(1e3 * parseFloat(e))
        }),
        ye('x', function (e, t, n) {
          n._d = new Date(Z(e))
        }),
        (f.version = '2.29.0'),
        (e = Tt),
        (f.fn = pn),
        (f.min = function () {
          return Rt('isBefore', [].slice.call(arguments, 0))
        }),
        (f.max = function () {
          return Rt('isAfter', [].slice.call(arguments, 0))
        }),
        (f.now = function () {
          return Date.now ? Date.now() : +new Date()
        }),
        (f.utc = _),
        (f.unix = function (e) {
          return Tt(1e3 * e)
        }),
        (f.months = function (e, t) {
          return Dn(e, t, 'months')
        }),
        (f.isDate = a),
        (f.locale = lt),
        (f.invalid = w),
        (f.duration = Zt),
        (f.isMoment = M),
        (f.weekdays = function (e, t, n) {
          return Sn(e, t, n, 'weekdays')
        }),
        (f.parseZone = function () {
          return Tt.apply(null, arguments).parseZone()
        }),
        (f.localeData = dt),
        (f.isDuration = Ut),
        (f.monthsShort = function (e, t) {
          return Dn(e, t, 'monthsShort')
        }),
        (f.weekdaysMin = function (e, t, n) {
          return Sn(e, t, n, 'weekdaysMin')
        }),
        (f.defineLocale = ht),
        (f.updateLocale = function (e, t) {
          var n, s, i
          return (
            null != t
              ? ((i = st),
                null != it[e] && null != it[e].parentLocale
                  ? it[e].set(b(it[e]._config, t))
                  : (null != (s = ut(e)) && (i = s._config),
                    (t = b(i, t)),
                    null == s && (t.abbr = e),
                    ((n = new x(t)).parentLocale = it[e]),
                    (it[e] = n)),
                lt(e))
              : null != it[e] &&
                (null != it[e].parentLocale
                  ? ((it[e] = it[e].parentLocale), e === lt() && lt(e))
                  : null != it[e] && delete it[e]),
            it[e]
          )
        }),
        (f.locales = function () {
          return s(it)
        }),
        (f.weekdaysShort = function (e, t, n) {
          return Sn(e, t, n, 'weekdaysShort')
        }),
        (f.normalizeUnits = V),
        (f.relativeTimeRounding = function (e) {
          return void 0 === e ? qn : 'function' == typeof e && ((qn = e), !0)
        }),
        (f.relativeTimeThreshold = function (e, t) {
          return (
            void 0 !== Bn[e] &&
            (void 0 === t
              ? Bn[e]
              : ((Bn[e] = t), 's' === e && (Bn.ss = t - 1), !0))
          )
        }),
        (f.calendarFormat = function (e, t) {
          var n = e.diff(t, 'days', !0)
          return n < -6
            ? 'sameElse'
            : n < -1
            ? 'lastWeek'
            : n < 0
            ? 'lastDay'
            : n < 1
            ? 'sameDay'
            : n < 2
            ? 'nextDay'
            : n < 7
            ? 'nextWeek'
            : 'sameElse'
        }),
        (f.prototype = pn),
        (f.HTML5_FMT = {
          DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',
          DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',
          DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',
          DATE: 'YYYY-MM-DD',
          TIME: 'HH:mm',
          TIME_SECONDS: 'HH:mm:ss',
          TIME_MS: 'HH:mm:ss.SSS',
          WEEK: 'GGGG-[W]WW',
          MONTH: 'YYYY-MM',
        }),
        f
      )
    })
    //# sourceMappingURL=moment.min.js.map
    /*!
FullCalendar v5.6.0
Docs & License: https://fullcalendar.io/
(c) 2020 Adam Shaw
*/
    var FullCalendar = (function (exports) {
      'use strict'

      /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
      /* global Reflect, Promise */

      var extendStatics = function (d, b) {
        extendStatics =
          Object.setPrototypeOf ||
          ({ __proto__: [] } instanceof Array &&
            function (d, b) {
              d.__proto__ = b
            }) ||
          function (d, b) {
            for (var p in b)
              if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]
          }
        return extendStatics(d, b)
      }

      function __extends(d, b) {
        extendStatics(d, b)

        function __() {
          this.constructor = d
        }

        d.prototype =
          b === null
            ? Object.create(b)
            : ((__.prototype = b.prototype), new __())
      }

      var __assign = function () {
        __assign =
          Object.assign ||
          function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
              s = arguments[i]
              for (var p in s)
                if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p]
            }
            return t
          }
        return __assign.apply(this, arguments)
      }

      function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
          s += arguments[i].length
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
          for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j]
        return r
      }

      var n,
        u,
        i,
        t,
        o,
        r,
        f = {},
        e = [],
        c = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i

      function s(n, l) {
        for (var u in l) n[u] = l[u]
        return n
      }

      function a(n) {
        var l = n.parentNode
        l && l.removeChild(n)
      }

      function v(n, l, u) {
        var i,
          t,
          o,
          r = arguments,
          f = {}
        for (o in l)
          'key' == o ? (i = l[o]) : 'ref' == o ? (t = l[o]) : (f[o] = l[o])
        if (arguments.length > 3)
          for (u = [u], o = 3; o < arguments.length; o++) u.push(r[o])
        if (
          (null != u && (f.children = u),
          'function' == typeof n && null != n.defaultProps)
        )
          for (o in n.defaultProps)
            void 0 === f[o] && (f[o] = n.defaultProps[o])
        return h(n, f, i, t, null)
      }

      function h(l, u, i, t, o) {
        var r = {
          type: l,
          props: u,
          key: i,
          ref: t,
          __k: null,
          __: null,
          __b: 0,
          __e: null,
          __d: void 0,
          __c: null,
          __h: null,
          constructor: void 0,
          __v: null == o ? ++n.__v : o,
        }
        return null != n.vnode && n.vnode(r), r
      }

      function y() {
        return { current: null }
      }

      function p(n) {
        return n.children
      }

      function d(n, l) {
        ;(this.props = n), (this.context = l)
      }

      function _(n, l) {
        if (null == l) return n.__ ? _(n.__, n.__.__k.indexOf(n) + 1) : null
        for (var u; l < n.__k.length; l++)
          if (null != (u = n.__k[l]) && null != u.__e) return u.__e
        return 'function' == typeof n.type ? _(n) : null
      }

      function w(n) {
        var l, u
        if (null != (n = n.__) && null != n.__c) {
          for (n.__e = n.__c.base = null, l = 0; l < n.__k.length; l++)
            if (null != (u = n.__k[l]) && null != u.__e) {
              n.__e = n.__c.base = u.__e
              break
            }
          return w(n)
        }
      }

      function k(l) {
        ;((!l.__d && (l.__d = !0) && u.push(l) && !g.__r++) ||
          t !== n.debounceRendering) &&
          ((t = n.debounceRendering) || i)(g)
      }

      function g() {
        for (var n; (g.__r = u.length); )
          (n = u.sort(function (n, l) {
            return n.__v.__b - l.__v.__b
          })),
            (u = []),
            n.some(function (n) {
              var l, u, i, t, o, r, f
              n.__d &&
                ((r = (o = (l = n).__v).__e),
                (f = l.__P) &&
                  ((u = []),
                  ((i = s({}, o)).__v = o.__v + 1),
                  (t = $(
                    f,
                    o,
                    i,
                    l.__n,
                    void 0 !== f.ownerSVGElement,
                    null != o.__h ? [r] : null,
                    u,
                    null == r ? _(o) : r,
                    o.__h
                  )),
                  j(u, o),
                  t != r && w(o)))
            })
      }

      function m(n, l, u, i, t, o, r, c, s, v) {
        var y,
          d,
          w,
          k,
          g,
          m,
          b,
          A = (i && i.__k) || e,
          P = A.length
        for (
          s == f && (s = null != r ? r[0] : P ? _(i, 0) : null),
            u.__k = [],
            y = 0;
          y < l.length;
          y++
        )
          if (
            null !=
            (k = u.__k[y] =
              null == (k = l[y]) || 'boolean' == typeof k
                ? null
                : 'string' == typeof k || 'number' == typeof k
                ? h(null, k, null, null, k)
                : Array.isArray(k)
                ? h(p, { children: k }, null, null, null)
                : null != k.__e || null != k.__c
                ? h(k.type, k.props, k.key, null, k.__v)
                : k)
          ) {
            if (
              ((k.__ = u),
              (k.__b = u.__b + 1),
              null === (w = A[y]) || (w && k.key == w.key && k.type === w.type))
            )
              A[y] = void 0
            else
              for (d = 0; d < P; d++) {
                if ((w = A[d]) && k.key == w.key && k.type === w.type) {
                  A[d] = void 0
                  break
                }
                w = null
              }
            ;(g = $(n, k, (w = w || f), t, o, r, c, s, v)),
              (d = k.ref) &&
                w.ref != d &&
                (b || (b = []),
                w.ref && b.push(w.ref, null, k),
                b.push(d, k.__c || g, k)),
              null != g
                ? (null == m && (m = g),
                  (s = x(n, k, w, A, r, g, s)),
                  v || 'option' != u.type
                    ? 'function' == typeof u.type && (u.__d = s)
                    : (n.value = ''))
                : s && w.__e == s && s.parentNode != n && (s = _(w))
          }
        if (((u.__e = m), null != r && 'function' != typeof u.type))
          for (y = r.length; y--; ) null != r[y] && a(r[y])
        for (y = P; y--; ) null != A[y] && L(A[y], A[y])
        if (b) for (y = 0; y < b.length; y++) I(b[y], b[++y], b[++y])
      }

      function x(n, l, u, i, t, o, r) {
        var f, e, c
        if (void 0 !== l.__d) (f = l.__d), (l.__d = void 0)
        else if (t == u || o != r || null == o.parentNode)
          n: if (null == r || r.parentNode !== n) n.appendChild(o), (f = null)
          else {
            for (e = r, c = 0; (e = e.nextSibling) && c < i.length; c += 2)
              if (e == o) break n
            n.insertBefore(o, r), (f = r)
          }
        return void 0 !== f ? f : o.nextSibling
      }

      function A(n, l, u, i, t) {
        var o
        for (o in u)
          'children' === o || 'key' === o || o in l || C(n, o, null, u[o], i)
        for (o in l)
          (t && 'function' != typeof l[o]) ||
            'children' === o ||
            'key' === o ||
            'value' === o ||
            'checked' === o ||
            u[o] === l[o] ||
            C(n, o, l[o], u[o], i)
      }

      function P(n, l, u) {
        '-' === l[0]
          ? n.setProperty(l, u)
          : (n[l] =
              null == u ? '' : 'number' != typeof u || c.test(l) ? u : u + 'px')
      }

      function C(n, l, u, i, t) {
        var o, r, f
        if ((t && 'className' == l && (l = 'class'), 'style' === l))
          if ('string' == typeof u) n.style.cssText = u
          else {
            if (('string' == typeof i && (n.style.cssText = i = ''), i))
              for (l in i) (u && l in u) || P(n.style, l, '')
            if (u) for (l in u) (i && u[l] === i[l]) || P(n.style, l, u[l])
          }
        else
          'o' === l[0] && 'n' === l[1]
            ? ((o = l !== (l = l.replace(/Capture$/, ''))),
              (r = l.toLowerCase()) in n && (l = r),
              (l = l.slice(2)),
              n.l || (n.l = {}),
              (n.l[l + o] = u),
              (f = o ? N : z),
              u
                ? i || n.addEventListener(l, f, o)
                : n.removeEventListener(l, f, o))
            : 'list' !== l &&
              'tagName' !== l &&
              'form' !== l &&
              'type' !== l &&
              'size' !== l &&
              'download' !== l &&
              'href' !== l &&
              !t &&
              l in n
            ? (n[l] = null == u ? '' : u)
            : 'function' != typeof u &&
              'dangerouslySetInnerHTML' !== l &&
              (l !== (l = l.replace(/xlink:?/, ''))
                ? null == u || !1 === u
                  ? n.removeAttributeNS(
                      'http://www.w3.org/1999/xlink',
                      l.toLowerCase()
                    )
                  : n.setAttributeNS(
                      'http://www.w3.org/1999/xlink',
                      l.toLowerCase(),
                      u
                    )
                : null == u || (!1 === u && !/^ar/.test(l))
                ? n.removeAttribute(l)
                : n.setAttribute(l, u))
      }

      function z(l) {
        this.l[l.type + !1](n.event ? n.event(l) : l)
      }

      function N(l) {
        this.l[l.type + !0](n.event ? n.event(l) : l)
      }

      function T(n, l, u) {
        var i, t
        for (i = 0; i < n.__k.length; i++)
          (t = n.__k[i]) &&
            ((t.__ = n),
            t.__e &&
              ('function' == typeof t.type && t.__k.length > 1 && T(t, l, u),
              (l = x(u, t, t, n.__k, null, t.__e, l)),
              'function' == typeof n.type && (n.__d = l)))
      }

      function $(l, u, i, t, o, r, f, e, c) {
        var a,
          v,
          h,
          y,
          _,
          w,
          k,
          g,
          b,
          x,
          A,
          P = u.type
        if (void 0 !== u.constructor) return null
        null != i.__h &&
          ((c = i.__h), (e = u.__e = i.__e), (u.__h = null), (r = [e])),
          (a = n.__b) && a(u)
        try {
          n: if ('function' == typeof P) {
            if (
              ((g = u.props),
              (b = (a = P.contextType) && t[a.__c]),
              (x = a ? (b ? b.props.value : a.__) : t),
              i.__c
                ? (k = (v = u.__c = i.__c).__ = v.__E)
                : ('prototype' in P && P.prototype.render
                    ? (u.__c = v = new P(g, x))
                    : ((u.__c = v = new d(g, x)),
                      (v.constructor = P),
                      (v.render = M)),
                  b && b.sub(v),
                  (v.props = g),
                  v.state || (v.state = {}),
                  (v.context = x),
                  (v.__n = t),
                  (h = v.__d = !0),
                  (v.__h = [])),
              null == v.__s && (v.__s = v.state),
              null != P.getDerivedStateFromProps &&
                (v.__s == v.state && (v.__s = s({}, v.__s)),
                s(v.__s, P.getDerivedStateFromProps(g, v.__s))),
              (y = v.props),
              (_ = v.state),
              h)
            )
              null == P.getDerivedStateFromProps &&
                null != v.componentWillMount &&
                v.componentWillMount(),
                null != v.componentDidMount && v.__h.push(v.componentDidMount)
            else {
              if (
                (null == P.getDerivedStateFromProps &&
                  g !== y &&
                  null != v.componentWillReceiveProps &&
                  v.componentWillReceiveProps(g, x),
                (!v.__e &&
                  null != v.shouldComponentUpdate &&
                  !1 === v.shouldComponentUpdate(g, v.__s, x)) ||
                  u.__v === i.__v)
              ) {
                ;(v.props = g),
                  (v.state = v.__s),
                  u.__v !== i.__v && (v.__d = !1),
                  (v.__v = u),
                  (u.__e = i.__e),
                  (u.__k = i.__k),
                  v.__h.length && f.push(v),
                  T(u, e, l)
                break n
              }
              null != v.componentWillUpdate &&
                v.componentWillUpdate(g, v.__s, x),
                null != v.componentDidUpdate &&
                  v.__h.push(function () {
                    v.componentDidUpdate(y, _, w)
                  })
            }
            ;(v.context = x),
              (v.props = g),
              (v.state = v.__s),
              (a = n.__r) && a(u),
              (v.__d = !1),
              (v.__v = u),
              (v.__P = l),
              (a = v.render(v.props, v.state, v.context)),
              (v.state = v.__s),
              null != v.getChildContext &&
                (t = s(s({}, t), v.getChildContext())),
              h ||
                null == v.getSnapshotBeforeUpdate ||
                (w = v.getSnapshotBeforeUpdate(y, _)),
              (A =
                null != a && a.type == p && null == a.key
                  ? a.props.children
                  : a),
              m(l, Array.isArray(A) ? A : [A], u, i, t, o, r, f, e, c),
              (v.base = u.__e),
              (u.__h = null),
              v.__h.length && f.push(v),
              k && (v.__E = v.__ = null),
              (v.__e = !1)
          } else
            null == r && u.__v === i.__v
              ? ((u.__k = i.__k), (u.__e = i.__e))
              : (u.__e = H(i.__e, u, i, t, o, r, f, c))
          ;(a = n.diffed) && a(u)
        } catch (l) {
          ;(u.__v = null),
            (c || null != r) &&
              ((u.__e = e), (u.__h = !!c), (r[r.indexOf(e)] = null)),
            n.__e(l, u, i)
        }
        return u.__e
      }

      function j(l, u) {
        n.__c && n.__c(u, l),
          l.some(function (u) {
            try {
              ;(l = u.__h),
                (u.__h = []),
                l.some(function (n) {
                  n.call(u)
                })
            } catch (l) {
              n.__e(l, u.__v)
            }
          })
      }

      function H(n, l, u, i, t, o, r, c) {
        var s,
          a,
          v,
          h,
          y,
          p = u.props,
          d = l.props
        if (((t = 'svg' === l.type || t), null != o))
          for (s = 0; s < o.length; s++)
            if (
              null != (a = o[s]) &&
              ((null === l.type ? 3 === a.nodeType : a.localName === l.type) ||
                n == a)
            ) {
              ;(n = a), (o[s] = null)
              break
            }
        if (null == n) {
          if (null === l.type) return document.createTextNode(d)
          ;(n = t
            ? document.createElementNS('http://www.w3.org/2000/svg', l.type)
            : document.createElement(l.type, d.is && { is: d.is })),
            (o = null),
            (c = !1)
        }
        if (null === l.type) p === d || (c && n.data === d) || (n.data = d)
        else {
          if (
            (null != o && (o = e.slice.call(n.childNodes)),
            (v = (p = u.props || f).dangerouslySetInnerHTML),
            (h = d.dangerouslySetInnerHTML),
            !c)
          ) {
            if (null != o)
              for (p = {}, y = 0; y < n.attributes.length; y++)
                p[n.attributes[y].name] = n.attributes[y].value
            ;(h || v) &&
              ((h &&
                ((v && h.__html == v.__html) || h.__html === n.innerHTML)) ||
                (n.innerHTML = (h && h.__html) || ''))
          }
          A(n, d, p, t, c),
            h
              ? (l.__k = [])
              : ((s = l.props.children),
                m(
                  n,
                  Array.isArray(s) ? s : [s],
                  l,
                  u,
                  i,
                  'foreignObject' !== l.type && t,
                  o,
                  r,
                  f,
                  c
                )),
            c ||
              ('value' in d &&
                void 0 !== (s = d.value) &&
                (s !== n.value || ('progress' === l.type && !s)) &&
                C(n, 'value', s, p.value, !1),
              'checked' in d &&
                void 0 !== (s = d.checked) &&
                s !== n.checked &&
                C(n, 'checked', s, p.checked, !1))
        }
        return n
      }

      function I(l, u, i) {
        try {
          'function' == typeof l ? l(u) : (l.current = u)
        } catch (l) {
          n.__e(l, i)
        }
      }

      function L(l, u, i) {
        var t, o, r
        if (
          (n.unmount && n.unmount(l),
          (t = l.ref) && ((t.current && t.current !== l.__e) || I(t, null, u)),
          i || 'function' == typeof l.type || (i = null != (o = l.__e)),
          (l.__e = l.__d = void 0),
          null != (t = l.__c))
        ) {
          if (t.componentWillUnmount)
            try {
              t.componentWillUnmount()
            } catch (l) {
              n.__e(l, u)
            }
          t.base = t.__P = null
        }
        if ((t = l.__k)) for (r = 0; r < t.length; r++) t[r] && L(t[r], u, i)
        null != o && a(o)
      }

      function M(n, l, u) {
        return this.constructor(n, u)
      }

      function O(l, u, i) {
        var t, r, c
        n.__ && n.__(l, u),
          (r = (t = i === o) ? null : (i && i.__k) || u.__k),
          (l = v(p, null, [l])),
          (c = []),
          $(
            u,
            ((t ? u : i || u).__k = l),
            r || f,
            f,
            void 0 !== u.ownerSVGElement,
            i && !t
              ? [i]
              : r
              ? null
              : u.childNodes.length
              ? e.slice.call(u.childNodes)
              : null,
            c,
            i || f,
            t
          ),
          j(c, l)
      }

      function B(n, l) {
        var u = {
          __c: (l = '__cC' + r++),
          __: n,
          Consumer: function (n, l) {
            return n.children(l)
          },
          Provider: function (n, u, i) {
            return (
              this.getChildContext ||
                ((u = []),
                ((i = {})[l] = this),
                (this.getChildContext = function () {
                  return i
                }),
                (this.shouldComponentUpdate = function (n) {
                  this.props.value !== n.value && u.some(k)
                }),
                (this.sub = function (n) {
                  u.push(n)
                  var l = n.componentWillUnmount
                  n.componentWillUnmount = function () {
                    u.splice(u.indexOf(n), 1), l && l.call(n)
                  }
                })),
              n.children
            )
          },
        }
        return (u.Provider.__ = u.Consumer.contextType = u)
      }

      ;(n = {
        __e: function (n, l) {
          for (var u, i, t, o = l.__h; (l = l.__); )
            if ((u = l.__c) && !u.__)
              try {
                if (
                  ((i = u.constructor) &&
                    null != i.getDerivedStateFromError &&
                    (u.setState(i.getDerivedStateFromError(n)), (t = u.__d)),
                  null != u.componentDidCatch &&
                    (u.componentDidCatch(n), (t = u.__d)),
                  t)
                )
                  return (l.__h = o), (u.__E = u)
              } catch (l) {
                n = l
              }
          throw n
        },
        __v: 0,
      }),
        (d.prototype.setState = function (n, l) {
          var u
          ;(u =
            null != this.__s && this.__s !== this.state
              ? this.__s
              : (this.__s = s({}, this.state))),
            'function' == typeof n && (n = n(s({}, u), this.props)),
            n && s(u, n),
            null != n && this.__v && (l && this.__h.push(l), k(this))
        }),
        (d.prototype.forceUpdate = function (n) {
          this.__v && ((this.__e = !0), n && this.__h.push(n), k(this))
        }),
        (d.prototype.render = p),
        (u = []),
        (i =
          'function' == typeof Promise
            ? Promise.prototype.then.bind(Promise.resolve())
            : setTimeout),
        (g.__r = 0),
        (o = f),
        (r = 0)

      var globalObj = typeof globalThis !== 'undefined' ? globalThis : window // // TODO: streamline when killing IE11 support
      if (globalObj.FullCalendarVDom) {
        console.warn('FullCalendar VDOM already loaded')
      } else {
        globalObj.FullCalendarVDom = {
          Component: d,
          createElement: v,
          render: O,
          createRef: y,
          Fragment: p,
          createContext: createContext,
          flushToDom: flushToDom,
          unmountComponentAtNode: unmountComponentAtNode,
        }
      }
      // HACKS...
      // TODO: lock version
      // TODO: link gh issues
      function flushToDom() {
        var oldDebounceRendering = n.debounceRendering // orig
        var callbackQ = []

        function execCallbackSync(callback) {
          callbackQ.push(callback)
        }

        n.debounceRendering = execCallbackSync
        O(v(FakeComponent, {}), document.createElement('div'))
        while (callbackQ.length) {
          callbackQ.shift()()
        }
        n.debounceRendering = oldDebounceRendering
      }

      var FakeComponent = /** @class */ (function (_super) {
        __extends(FakeComponent, _super)

        function FakeComponent() {
          return (_super !== null && _super.apply(this, arguments)) || this
        }

        FakeComponent.prototype.render = function () {
          return v('div', {})
        }
        FakeComponent.prototype.componentDidMount = function () {
          this.setState({})
        }
        return FakeComponent
      })(d)

      function createContext(defaultValue) {
        var ContextType = B(defaultValue)
        var origProvider = ContextType.Provider
        ContextType.Provider = function () {
          var _this = this
          var isNew = !this.getChildContext
          var children = origProvider.apply(this, arguments) // eslint-disable-line prefer-rest-params
          if (isNew) {
            var subs_1 = []
            this.shouldComponentUpdate = function (_props) {
              if (_this.props.value !== _props.value) {
                subs_1.forEach(function (c) {
                  c.context = _props.value
                  c.forceUpdate()
                })
              }
            }
            this.sub = function (c) {
              subs_1.push(c)
              var old = c.componentWillUnmount
              c.componentWillUnmount = function () {
                subs_1.splice(subs_1.indexOf(c), 1)
                old && old.call(c)
              }
            }
          }
          return children
        }
        return ContextType
      }

      function unmountComponentAtNode(node) {
        O(null, node)
      }

      // no public types yet. when there are, export from:
      // import {} from './api-type-deps'
      var EventSourceApi = /** @class */ (function () {
        function EventSourceApi(context, internalEventSource) {
          this.context = context
          this.internalEventSource = internalEventSource
        }

        EventSourceApi.prototype.remove = function () {
          this.context.dispatch({
            type: 'REMOVE_EVENT_SOURCE',
            sourceId: this.internalEventSource.sourceId,
          })
        }
        EventSourceApi.prototype.refetch = function () {
          this.context.dispatch({
            type: 'FETCH_EVENT_SOURCES',
            sourceIds: [this.internalEventSource.sourceId],
            isRefetch: true,
          })
        }
        Object.defineProperty(EventSourceApi.prototype, 'id', {
          get: function () {
            return this.internalEventSource.publicId
          },
          enumerable: false,
          configurable: true,
        })
        Object.defineProperty(EventSourceApi.prototype, 'url', {
          get: function () {
            return this.internalEventSource.meta.url
          },
          enumerable: false,
          configurable: true,
        })
        Object.defineProperty(EventSourceApi.prototype, 'format', {
          get: function () {
            return this.internalEventSource.meta.format // TODO: bad. not guaranteed
          },
          enumerable: false,
          configurable: true,
        })
        return EventSourceApi
      })()

      function removeElement(el) {
        if (el.parentNode) {
          el.parentNode.removeChild(el)
        }
      }

      // Querying
      // ----------------------------------------------------------------------------------------------------------------
      function elementClosest(el, selector) {
        if (el.closest) {
          return el.closest(selector)
          // really bad fallback for IE
          // from https://developer.mozilla.org/en-US/docs/Web/API/Element/closest
        }
        if (!document.documentElement.contains(el)) {
          return null
        }
        do {
          if (elementMatches(el, selector)) {
            return el
          }
          el = el.parentElement || el.parentNode
        } while (el !== null && el.nodeType === 1)
        return null
      }

      function elementMatches(el, selector) {
        var method = el.matches || el.matchesSelector || el.msMatchesSelector
        return method.call(el, selector)
      }

      // accepts multiple subject els
      // returns a real array. good for methods like forEach
      // TODO: accept the document
      function findElements(container, selector) {
        var containers =
          container instanceof HTMLElement ? [container] : container
        var allMatches = []
        for (var i = 0; i < containers.length; i += 1) {
          var matches = containers[i].querySelectorAll(selector)
          for (var j = 0; j < matches.length; j += 1) {
            allMatches.push(matches[j])
          }
        }
        return allMatches
      }

      // accepts multiple subject els
      // only queries direct child elements // TODO: rename to findDirectChildren!
      function findDirectChildren(parent, selector) {
        var parents = parent instanceof HTMLElement ? [parent] : parent
        var allMatches = []
        for (var i = 0; i < parents.length; i += 1) {
          var childNodes = parents[i].children // only ever elements
          for (var j = 0; j < childNodes.length; j += 1) {
            var childNode = childNodes[j]
            if (!selector || elementMatches(childNode, selector)) {
              allMatches.push(childNode)
            }
          }
        }
        return allMatches
      }

      // Style
      // ----------------------------------------------------------------------------------------------------------------
      var PIXEL_PROP_RE = /(top|left|right|bottom|width|height)$/i

      function applyStyle(el, props) {
        for (var propName in props) {
          applyStyleProp(el, propName, props[propName])
        }
      }

      function applyStyleProp(el, name, val) {
        if (val == null) {
          el.style[name] = ''
        } else if (typeof val === 'number' && PIXEL_PROP_RE.test(name)) {
          el.style[name] = val + 'px'
        } else {
          el.style[name] = val
        }
      }

      // Stops a mouse/touch event from doing it's native browser action
      function preventDefault(ev) {
        ev.preventDefault()
      }

      // Event Delegation
      // ----------------------------------------------------------------------------------------------------------------
      function buildDelegationHandler(selector, handler) {
        return function (ev) {
          var matchedChild = elementClosest(ev.target, selector)
          if (matchedChild) {
            handler.call(matchedChild, ev, matchedChild)
          }
        }
      }

      function listenBySelector(container, eventType, selector, handler) {
        var attachedHandler = buildDelegationHandler(selector, handler)
        container.addEventListener(eventType, attachedHandler)
        return function () {
          container.removeEventListener(eventType, attachedHandler)
        }
      }

      function listenToHoverBySelector(
        container,
        selector,
        onMouseEnter,
        onMouseLeave
      ) {
        var currentMatchedChild
        return listenBySelector(
          container,
          'mouseover',
          selector,
          function (mouseOverEv, matchedChild) {
            if (matchedChild !== currentMatchedChild) {
              currentMatchedChild = matchedChild
              onMouseEnter(mouseOverEv, matchedChild)
              var realOnMouseLeave_1 = function (mouseLeaveEv) {
                currentMatchedChild = null
                onMouseLeave(mouseLeaveEv, matchedChild)
                matchedChild.removeEventListener(
                  'mouseleave',
                  realOnMouseLeave_1
                )
              }
              // listen to the next mouseleave, and then unattach
              matchedChild.addEventListener('mouseleave', realOnMouseLeave_1)
            }
          }
        )
      }

      // Animation
      // ----------------------------------------------------------------------------------------------------------------
      var transitionEventNames = [
        'webkitTransitionEnd',
        'otransitionend',
        'oTransitionEnd',
        'msTransitionEnd',
        'transitionend',
      ]

      // triggered only when the next single subsequent transition finishes
      function whenTransitionDone(el, callback) {
        var realCallback = function (ev) {
          callback(ev)
          transitionEventNames.forEach(function (eventName) {
            el.removeEventListener(eventName, realCallback)
          })
        }
        transitionEventNames.forEach(function (eventName) {
          el.addEventListener(eventName, realCallback) // cross-browser way to determine when the transition finishes
        })
      }

      var guidNumber = 0

      function guid() {
        guidNumber += 1
        return String(guidNumber)
      }

      /* FullCalendar-specific DOM Utilities
    ----------------------------------------------------------------------------------------------------------------------*/

      // Make the mouse cursor express that an event is not allowed in the current area
      function disableCursor() {
        document.body.classList.add('fc-not-allowed')
      }

      // Returns the mouse cursor to its original look
      function enableCursor() {
        document.body.classList.remove('fc-not-allowed')
      }

      /* Selection
    ----------------------------------------------------------------------------------------------------------------------*/
      function preventSelection(el) {
        el.classList.add('fc-unselectable')
        el.addEventListener('selectstart', preventDefault)
      }

      function allowSelection(el) {
        el.classList.remove('fc-unselectable')
        el.removeEventListener('selectstart', preventDefault)
      }

      /* Context Menu
    ----------------------------------------------------------------------------------------------------------------------*/
      function preventContextMenu(el) {
        el.addEventListener('contextmenu', preventDefault)
      }

      function allowContextMenu(el) {
        el.removeEventListener('contextmenu', preventDefault)
      }

      function parseFieldSpecs(input) {
        var specs = []
        var tokens = []
        var i
        var token
        if (typeof input === 'string') {
          tokens = input.split(/\s*,\s*/)
        } else if (typeof input === 'function') {
          tokens = [input]
        } else if (Array.isArray(input)) {
          tokens = input
        }
        for (i = 0; i < tokens.length; i += 1) {
          token = tokens[i]
          if (typeof token === 'string') {
            specs.push(
              token.charAt(0) === '-'
                ? { field: token.substring(1), order: -1 }
                : { field: token, order: 1 }
            )
          } else if (typeof token === 'function') {
            specs.push({ func: token })
          }
        }
        return specs
      }

      function compareByFieldSpecs(obj0, obj1, fieldSpecs) {
        var i
        var cmp
        for (i = 0; i < fieldSpecs.length; i += 1) {
          cmp = compareByFieldSpec(obj0, obj1, fieldSpecs[i])
          if (cmp) {
            return cmp
          }
        }
        return 0
      }

      function compareByFieldSpec(obj0, obj1, fieldSpec) {
        if (fieldSpec.func) {
          return fieldSpec.func(obj0, obj1)
        }
        return (
          flexibleCompare(obj0[fieldSpec.field], obj1[fieldSpec.field]) *
          (fieldSpec.order || 1)
        )
      }

      function flexibleCompare(a, b) {
        if (!a && !b) {
          return 0
        }
        if (b == null) {
          return -1
        }
        if (a == null) {
          return 1
        }
        if (typeof a === 'string' || typeof b === 'string') {
          return String(a).localeCompare(String(b))
        }
        return a - b
      }

      /* String Utilities
    ----------------------------------------------------------------------------------------------------------------------*/
      function padStart(val, len) {
        var s = String(val)
        return '000'.substr(0, len - s.length) + s
      }

      /* Number Utilities
    ----------------------------------------------------------------------------------------------------------------------*/
      function compareNumbers(a, b) {
        return a - b
      }

      function isInt(n) {
        return n % 1 === 0
      }

      /* FC-specific DOM dimension stuff
    ----------------------------------------------------------------------------------------------------------------------*/
      function computeSmallestCellWidth(cellEl) {
        var allWidthEl = cellEl.querySelector('.fc-scrollgrid-shrink-frame')
        var contentWidthEl = cellEl.querySelector(
          '.fc-scrollgrid-shrink-cushion'
        )
        if (!allWidthEl) {
          throw new Error('needs fc-scrollgrid-shrink-frame className') // TODO: use const
        }
        if (!contentWidthEl) {
          throw new Error('needs fc-scrollgrid-shrink-cushion className')
        }
        return (
          cellEl.getBoundingClientRect().width -
          allWidthEl.getBoundingClientRect().width + // the cell padding+border
          contentWidthEl.getBoundingClientRect().width
        )
      }

      var DAY_IDS = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat']

      // Adding
      function addWeeks(m, n) {
        var a = dateToUtcArray(m)
        a[2] += n * 7
        return arrayToUtcDate(a)
      }

      function addDays(m, n) {
        var a = dateToUtcArray(m)
        a[2] += n
        return arrayToUtcDate(a)
      }

      function addMs(m, n) {
        var a = dateToUtcArray(m)
        a[6] += n
        return arrayToUtcDate(a)
      }

      // Diffing (all return floats)
      // TODO: why not use ranges?
      function diffWeeks(m0, m1) {
        return diffDays(m0, m1) / 7
      }

      function diffDays(m0, m1) {
        return (m1.valueOf() - m0.valueOf()) / (1000 * 60 * 60 * 24)
      }

      function diffHours(m0, m1) {
        return (m1.valueOf() - m0.valueOf()) / (1000 * 60 * 60)
      }

      function diffMinutes(m0, m1) {
        return (m1.valueOf() - m0.valueOf()) / (1000 * 60)
      }

      function diffSeconds(m0, m1) {
        return (m1.valueOf() - m0.valueOf()) / 1000
      }

      function diffDayAndTime(m0, m1) {
        var m0day = startOfDay(m0)
        var m1day = startOfDay(m1)
        return {
          years: 0,
          months: 0,
          days: Math.round(diffDays(m0day, m1day)),
          milliseconds:
            m1.valueOf() - m1day.valueOf() - (m0.valueOf() - m0day.valueOf()),
        }
      }

      // Diffing Whole Units
      function diffWholeWeeks(m0, m1) {
        var d = diffWholeDays(m0, m1)
        if (d !== null && d % 7 === 0) {
          return d / 7
        }
        return null
      }

      function diffWholeDays(m0, m1) {
        if (timeAsMs(m0) === timeAsMs(m1)) {
          return Math.round(diffDays(m0, m1))
        }
        return null
      }

      // Start-Of
      function startOfDay(m) {
        return arrayToUtcDate([
          m.getUTCFullYear(),
          m.getUTCMonth(),
          m.getUTCDate(),
        ])
      }

      function startOfHour(m) {
        return arrayToUtcDate([
          m.getUTCFullYear(),
          m.getUTCMonth(),
          m.getUTCDate(),
          m.getUTCHours(),
        ])
      }

      function startOfMinute(m) {
        return arrayToUtcDate([
          m.getUTCFullYear(),
          m.getUTCMonth(),
          m.getUTCDate(),
          m.getUTCHours(),
          m.getUTCMinutes(),
        ])
      }

      function startOfSecond(m) {
        return arrayToUtcDate([
          m.getUTCFullYear(),
          m.getUTCMonth(),
          m.getUTCDate(),
          m.getUTCHours(),
          m.getUTCMinutes(),
          m.getUTCSeconds(),
        ])
      }

      // Week Computation
      function weekOfYear(marker, dow, doy) {
        var y = marker.getUTCFullYear()
        var w = weekOfGivenYear(marker, y, dow, doy)
        if (w < 1) {
          return weekOfGivenYear(marker, y - 1, dow, doy)
        }
        var nextW = weekOfGivenYear(marker, y + 1, dow, doy)
        if (nextW >= 1) {
          return Math.min(w, nextW)
        }
        return w
      }

      function weekOfGivenYear(marker, year, dow, doy) {
        var firstWeekStart = arrayToUtcDate([
          year,
          0,
          1 + firstWeekOffset(year, dow, doy),
        ])
        var dayStart = startOfDay(marker)
        var days = Math.round(diffDays(firstWeekStart, dayStart))
        return Math.floor(days / 7) + 1 // zero-indexed
      }

      // start-of-first-week - start-of-year
      function firstWeekOffset(year, dow, doy) {
        // first-week day -- which january is always in the first week (4 for iso, 1 for other)
        var fwd = 7 + dow - doy
        // first-week day local weekday -- which local weekday is fwd
        var fwdlw = (7 + arrayToUtcDate([year, 0, fwd]).getUTCDay() - dow) % 7
        return -fwdlw + fwd - 1
      }

      // Array Conversion
      function dateToLocalArray(date) {
        return [
          date.getFullYear(),
          date.getMonth(),
          date.getDate(),
          date.getHours(),
          date.getMinutes(),
          date.getSeconds(),
          date.getMilliseconds(),
        ]
      }

      function arrayToLocalDate(a) {
        return new Date(
          a[0],
          a[1] || 0,
          a[2] == null ? 1 : a[2], // day of month
          a[3] || 0,
          a[4] || 0,
          a[5] || 0
        )
      }

      function dateToUtcArray(date) {
        return [
          date.getUTCFullYear(),
          date.getUTCMonth(),
          date.getUTCDate(),
          date.getUTCHours(),
          date.getUTCMinutes(),
          date.getUTCSeconds(),
          date.getUTCMilliseconds(),
        ]
      }

      function arrayToUtcDate(a) {
        // according to web standards (and Safari), a month index is required.
        // massage if only given a year.
        if (a.length === 1) {
          a = a.concat([0])
        }
        return new Date(Date.UTC.apply(Date, a))
      }

      // Other Utils
      function isValidDate(m) {
        return !isNaN(m.valueOf())
      }

      function timeAsMs(m) {
        return (
          m.getUTCHours() * 1000 * 60 * 60 +
          m.getUTCMinutes() * 1000 * 60 +
          m.getUTCSeconds() * 1000 +
          m.getUTCMilliseconds()
        )
      }

      function createEventInstance(defId, range, forcedStartTzo, forcedEndTzo) {
        return {
          instanceId: guid(),
          defId: defId,
          range: range,
          forcedStartTzo: forcedStartTzo == null ? null : forcedStartTzo,
          forcedEndTzo: forcedEndTzo == null ? null : forcedEndTzo,
        }
      }

      var hasOwnProperty = Object.prototype.hasOwnProperty
      // Merges an array of objects into a single object.
      // The second argument allows for an array of property names who's object values will be merged together.
      function mergeProps(propObjs, complexPropsMap) {
        var dest = {}
        if (complexPropsMap) {
          for (var name_1 in complexPropsMap) {
            var complexObjs = []
            // collect the trailing object values, stopping when a non-object is discovered
            for (var i = propObjs.length - 1; i >= 0; i -= 1) {
              var val = propObjs[i][name_1]
              if (typeof val === 'object' && val) {
                // non-null object
                complexObjs.unshift(val)
              } else if (val !== undefined) {
                dest[name_1] = val // if there were no objects, this value will be used
                break
              }
            }
            // if the trailing values were objects, use the merged value
            if (complexObjs.length) {
              dest[name_1] = mergeProps(complexObjs)
            }
          }
        }
        // copy values into the destination, going from last to first
        for (var i = propObjs.length - 1; i >= 0; i -= 1) {
          var props = propObjs[i]
          for (var name_2 in props) {
            if (!(name_2 in dest)) {
              // if already assigned by previous props or complex props, don't reassign
              dest[name_2] = props[name_2]
            }
          }
        }
        return dest
      }

      function filterHash(hash, func) {
        var filtered = {}
        for (var key in hash) {
          if (func(hash[key], key)) {
            filtered[key] = hash[key]
          }
        }
        return filtered
      }

      function mapHash(hash, func) {
        var newHash = {}
        for (var key in hash) {
          newHash[key] = func(hash[key], key)
        }
        return newHash
      }

      function arrayToHash(a) {
        var hash = {}
        for (var _i = 0, a_1 = a; _i < a_1.length; _i++) {
          var item = a_1[_i]
          hash[item] = true
        }
        return hash
      }

      function buildHashFromArray(a, func) {
        var hash = {}
        for (var i = 0; i < a.length; i += 1) {
          var tuple = func(a[i], i)
          hash[tuple[0]] = tuple[1]
        }
        return hash
      }

      function hashValuesToArray(obj) {
        var a = []
        for (var key in obj) {
          a.push(obj[key])
        }
        return a
      }

      function isPropsEqual(obj0, obj1) {
        if (obj0 === obj1) {
          return true
        }
        for (var key in obj0) {
          if (hasOwnProperty.call(obj0, key)) {
            if (!(key in obj1)) {
              return false
            }
          }
        }
        for (var key in obj1) {
          if (hasOwnProperty.call(obj1, key)) {
            if (obj0[key] !== obj1[key]) {
              return false
            }
          }
        }
        return true
      }

      function getUnequalProps(obj0, obj1) {
        var keys = []
        for (var key in obj0) {
          if (hasOwnProperty.call(obj0, key)) {
            if (!(key in obj1)) {
              keys.push(key)
            }
          }
        }
        for (var key in obj1) {
          if (hasOwnProperty.call(obj1, key)) {
            if (obj0[key] !== obj1[key]) {
              keys.push(key)
            }
          }
        }
        return keys
      }

      function compareObjs(oldProps, newProps, equalityFuncs) {
        if (equalityFuncs === void 0) {
          equalityFuncs = {}
        }
        if (oldProps === newProps) {
          return true
        }
        for (var key in newProps) {
          if (
            key in oldProps &&
            isObjValsEqual(oldProps[key], newProps[key], equalityFuncs[key])
          );
          else {
            return false
          }
        }
        // check for props that were omitted in the new
        for (var key in oldProps) {
          if (!(key in newProps)) {
            return false
          }
        }
        return true
      }

      /*
    assumed "true" equality for handler names like "onReceiveSomething"
    */
      function isObjValsEqual(val0, val1, comparator) {
        if (val0 === val1 || comparator === true) {
          return true
        }
        if (comparator) {
          return comparator(val0, val1)
        }
        return false
      }

      function collectFromHash(hash, startIndex, endIndex, step) {
        if (startIndex === void 0) {
          startIndex = 0
        }
        if (step === void 0) {
          step = 1
        }
        var res = []
        if (endIndex == null) {
          endIndex = Object.keys(hash).length
        }
        for (var i = startIndex; i < endIndex; i += step) {
          var val = hash[i]
          if (val !== undefined) {
            // will disregard undefined for sparse arrays
            res.push(val)
          }
        }
        return res
      }

      function parseRecurring(refined, defaultAllDay, dateEnv, recurringTypes) {
        for (var i = 0; i < recurringTypes.length; i += 1) {
          var parsed = recurringTypes[i].parse(refined, dateEnv)
          if (parsed) {
            var allDay = refined.allDay
            if (allDay == null) {
              allDay = defaultAllDay
              if (allDay == null) {
                allDay = parsed.allDayGuess
                if (allDay == null) {
                  allDay = false
                }
              }
            }
            return {
              allDay: allDay,
              duration: parsed.duration,
              typeData: parsed.typeData,
              typeId: i,
            }
          }
        }
        return null
      }

      function expandRecurring(eventStore, framingRange, context) {
        var dateEnv = context.dateEnv,
          pluginHooks = context.pluginHooks,
          options = context.options
        var defs = eventStore.defs,
          instances = eventStore.instances
        // remove existing recurring instances
        // TODO: bad. always expand events as a second step
        instances = filterHash(instances, function (instance) {
          return !defs[instance.defId].recurringDef
        })
        for (var defId in defs) {
          var def = defs[defId]
          if (def.recurringDef) {
            var duration = def.recurringDef.duration
            if (!duration) {
              duration = def.allDay
                ? options.defaultAllDayEventDuration
                : options.defaultTimedEventDuration
            }
            var starts = expandRecurringRanges(
              def,
              duration,
              framingRange,
              dateEnv,
              pluginHooks.recurringTypes
            )
            for (var _i = 0, starts_1 = starts; _i < starts_1.length; _i++) {
              var start = starts_1[_i]
              var instance = createEventInstance(defId, {
                start: start,
                end: dateEnv.add(start, duration),
              })
              instances[instance.instanceId] = instance
            }
          }
        }
        return { defs: defs, instances: instances }
      }

      /*
    Event MUST have a recurringDef
    */
      function expandRecurringRanges(
        eventDef,
        duration,
        framingRange,
        dateEnv,
        recurringTypes
      ) {
        var typeDef = recurringTypes[eventDef.recurringDef.typeId]
        var markers = typeDef.expand(
          eventDef.recurringDef.typeData,
          {
            start: dateEnv.subtract(framingRange.start, duration),
            end: framingRange.end,
          },
          dateEnv
        )
        // the recurrence plugins don't guarantee that all-day events are start-of-day, so we have to
        if (eventDef.allDay) {
          markers = markers.map(startOfDay)
        }
        return markers
      }

      var INTERNAL_UNITS = ['years', 'months', 'days', 'milliseconds']
      var PARSE_RE = /^(-?)(?:(\d+)\.)?(\d+):(\d\d)(?::(\d\d)(?:\.(\d\d\d))?)?/

      // Parsing and Creation
      function createDuration(input, unit) {
        var _a
        if (typeof input === 'string') {
          return parseString(input)
        }
        if (typeof input === 'object' && input) {
          // non-null object
          return parseObject(input)
        }
        if (typeof input === 'number') {
          return parseObject(
            ((_a = {}), (_a[unit || 'milliseconds'] = input), _a)
          )
        }
        return null
      }

      function parseString(s) {
        var m = PARSE_RE.exec(s)
        if (m) {
          var sign = m[1] ? -1 : 1
          return {
            years: 0,
            months: 0,
            days: sign * (m[2] ? parseInt(m[2], 10) : 0),
            milliseconds:
              sign *
              ((m[3] ? parseInt(m[3], 10) : 0) * 60 * 60 * 1000 + // hours
                (m[4] ? parseInt(m[4], 10) : 0) * 60 * 1000 + // minutes
                (m[5] ? parseInt(m[5], 10) : 0) * 1000 + // seconds
                (m[6] ? parseInt(m[6], 10) : 0)), // ms
          }
        }
        return null
      }

      function parseObject(obj) {
        var duration = {
          years: obj.years || obj.year || 0,
          months: obj.months || obj.month || 0,
          days: obj.days || obj.day || 0,
          milliseconds:
            (obj.hours || obj.hour || 0) * 60 * 60 * 1000 + // hours
            (obj.minutes || obj.minute || 0) * 60 * 1000 + // minutes
            (obj.seconds || obj.second || 0) * 1000 + // seconds
            (obj.milliseconds || obj.millisecond || obj.ms || 0),
        }
        var weeks = obj.weeks || obj.week
        if (weeks) {
          duration.days += weeks * 7
          duration.specifiedWeeks = true
        }
        return duration
      }

      // Equality
      function durationsEqual(d0, d1) {
        return (
          d0.years === d1.years &&
          d0.months === d1.months &&
          d0.days === d1.days &&
          d0.milliseconds === d1.milliseconds
        )
      }

      function asCleanDays(dur) {
        if (!dur.years && !dur.months && !dur.milliseconds) {
          return dur.days
        }
        return 0
      }

      // Simple Math
      function addDurations(d0, d1) {
        return {
          years: d0.years + d1.years,
          months: d0.months + d1.months,
          days: d0.days + d1.days,
          milliseconds: d0.milliseconds + d1.milliseconds,
        }
      }

      function subtractDurations(d1, d0) {
        return {
          years: d1.years - d0.years,
          months: d1.months - d0.months,
          days: d1.days - d0.days,
          milliseconds: d1.milliseconds - d0.milliseconds,
        }
      }

      function multiplyDuration(d, n) {
        return {
          years: d.years * n,
          months: d.months * n,
          days: d.days * n,
          milliseconds: d.milliseconds * n,
        }
      }

      // Conversions
      // "Rough" because they are based on average-case Gregorian months/years
      function asRoughYears(dur) {
        return asRoughDays(dur) / 365
      }

      function asRoughMonths(dur) {
        return asRoughDays(dur) / 30
      }

      function asRoughDays(dur) {
        return asRoughMs(dur) / 864e5
      }

      function asRoughMinutes(dur) {
        return asRoughMs(dur) / (1000 * 60)
      }

      function asRoughSeconds(dur) {
        return asRoughMs(dur) / 1000
      }

      function asRoughMs(dur) {
        return (
          dur.years * (365 * 864e5) +
          dur.months * (30 * 864e5) +
          dur.days * 864e5 +
          dur.milliseconds
        )
      }

      // Advanced Math
      function wholeDivideDurations(numerator, denominator) {
        var res = null
        for (var i = 0; i < INTERNAL_UNITS.length; i += 1) {
          var unit = INTERNAL_UNITS[i]
          if (denominator[unit]) {
            var localRes = numerator[unit] / denominator[unit]
            if (!isInt(localRes) || (res !== null && res !== localRes)) {
              return null
            }
            res = localRes
          } else if (numerator[unit]) {
            // needs to divide by something but can't!
            return null
          }
        }
        return res
      }

      function greatestDurationDenominator(dur) {
        var ms = dur.milliseconds
        if (ms) {
          if (ms % 1000 !== 0) {
            return { unit: 'millisecond', value: ms }
          }
          if (ms % (1000 * 60) !== 0) {
            return { unit: 'second', value: ms / 1000 }
          }
          if (ms % (1000 * 60 * 60) !== 0) {
            return { unit: 'minute', value: ms / (1000 * 60) }
          }
          if (ms) {
            return { unit: 'hour', value: ms / (1000 * 60 * 60) }
          }
        }
        if (dur.days) {
          if (dur.specifiedWeeks && dur.days % 7 === 0) {
            return { unit: 'week', value: dur.days / 7 }
          }
          return { unit: 'day', value: dur.days }
        }
        if (dur.months) {
          return { unit: 'month', value: dur.months }
        }
        if (dur.years) {
          return { unit: 'year', value: dur.years }
        }
        return { unit: 'millisecond', value: 0 }
      }

      // timeZoneOffset is in minutes
      function buildIsoString(marker, timeZoneOffset, stripZeroTime) {
        if (stripZeroTime === void 0) {
          stripZeroTime = false
        }
        var s = marker.toISOString()
        s = s.replace('.000', '')
        if (stripZeroTime) {
          s = s.replace('T00:00:00Z', '')
        }
        if (s.length > 10) {
          // time part wasn't stripped, can add timezone info
          if (timeZoneOffset == null) {
            s = s.replace('Z', '')
          } else if (timeZoneOffset !== 0) {
            s = s.replace('Z', formatTimeZoneOffset(timeZoneOffset, true))
          }
          // otherwise, its UTC-0 and we want to keep the Z
        }
        return s
      }

      // formats the date, but with no time part
      // TODO: somehow merge with buildIsoString and stripZeroTime
      // TODO: rename. omit "string"
      function formatDayString(marker) {
        return marker.toISOString().replace(/T.*$/, '')
      }

      // TODO: use Date::toISOString and use everything after the T?
      function formatIsoTimeString(marker) {
        return (
          padStart(marker.getUTCHours(), 2) +
          ':' +
          padStart(marker.getUTCMinutes(), 2) +
          ':' +
          padStart(marker.getUTCSeconds(), 2)
        )
      }

      function formatTimeZoneOffset(minutes, doIso) {
        if (doIso === void 0) {
          doIso = false
        }
        var sign = minutes < 0 ? '-' : '+'
        var abs = Math.abs(minutes)
        var hours = Math.floor(abs / 60)
        var mins = Math.round(abs % 60)
        if (doIso) {
          return sign + padStart(hours, 2) + ':' + padStart(mins, 2)
        }
        return 'GMT' + sign + hours + (mins ? ':' + padStart(mins, 2) : '')
      }

      // TODO: new util arrayify?
      function removeExact(array, exactVal) {
        var removeCnt = 0
        var i = 0
        while (i < array.length) {
          if (array[i] === exactVal) {
            array.splice(i, 1)
            removeCnt += 1
          } else {
            i += 1
          }
        }
        return removeCnt
      }

      function isArraysEqual(a0, a1, equalityFunc) {
        if (a0 === a1) {
          return true
        }
        var len = a0.length
        var i
        if (len !== a1.length) {
          // not array? or not same length?
          return false
        }
        for (i = 0; i < len; i += 1) {
          if (!(equalityFunc ? equalityFunc(a0[i], a1[i]) : a0[i] === a1[i])) {
            return false
          }
        }
        return true
      }

      function memoize(workerFunc, resEquality, teardownFunc) {
        var currentArgs
        var currentRes
        return function () {
          var newArgs = []
          for (var _i = 0; _i < arguments.length; _i++) {
            newArgs[_i] = arguments[_i]
          }
          if (!currentArgs) {
            currentRes = workerFunc.apply(this, newArgs)
          } else if (!isArraysEqual(currentArgs, newArgs)) {
            if (teardownFunc) {
              teardownFunc(currentRes)
            }
            var res = workerFunc.apply(this, newArgs)
            if (!resEquality || !resEquality(res, currentRes)) {
              currentRes = res
            }
          }
          currentArgs = newArgs
          return currentRes
        }
      }

      function memoizeObjArg(workerFunc, resEquality, teardownFunc) {
        var _this = this
        var currentArg
        var currentRes
        return function (newArg) {
          if (!currentArg) {
            currentRes = workerFunc.call(_this, newArg)
          } else if (!isPropsEqual(currentArg, newArg)) {
            if (teardownFunc) {
              teardownFunc(currentRes)
            }
            var res = workerFunc.call(_this, newArg)
            if (!resEquality || !resEquality(res, currentRes)) {
              currentRes = res
            }
          }
          currentArg = newArg
          return currentRes
        }
      }

      function memoizeArraylike(workerFunc, resEquality, teardownFunc) { // used at all?
        var _this = this
        var currentArgSets = []
        var currentResults = []
        return function (newArgSets) {
          var currentLen = currentArgSets.length
          var newLen = newArgSets.length
          var i = 0
          for (; i < currentLen; i += 1) {
            if (!newArgSets[i]) {
              // one of the old sets no longer exists
              if (teardownFunc) {
                teardownFunc(currentResults[i])
              }
            } else if (!isArraysEqual(currentArgSets[i], newArgSets[i])) {
              if (teardownFunc) {
                teardownFunc(currentResults[i])
              }
              var res = workerFunc.apply(_this, newArgSets[i])
              if (!resEquality || !resEquality(res, currentResults[i])) {
                currentResults[i] = res
              }
            }
          }
          for (; i < newLen; i += 1) {
            currentResults[i] = workerFunc.apply(_this, newArgSets[i])
          }
          currentArgSets = newArgSets
          currentResults.splice(newLen) // remove excess
          return currentResults
        }
      }

      function memoizeHashlike(workerFunc, resEquality, teardownFunc) { // used?
        var _this = this
        var currentArgHash = {}
        var currentResHash = {}
        return function (newArgHash) {
          var newResHash = {}
          for (var key in newArgHash) {
            if (!currentResHash[key]) {
              newResHash[key] = workerFunc.apply(_this, newArgHash[key])
            } else if (!isArraysEqual(currentArgHash[key], newArgHash[key])) {
              if (teardownFunc) {
                teardownFunc(currentResHash[key])
              }
              var res = workerFunc.apply(_this, newArgHash[key])
              newResHash[key] =
                resEquality && resEquality(res, currentResHash[key])
                  ? currentResHash[key]
                  : res
            } else {
              newResHash[key] = currentResHash[key]
            }
          }
          currentArgHash = newArgHash
          currentResHash = newResHash
          return newResHash
        }
      }

      var EXTENDED_SETTINGS_AND_SEVERITIES = {
        week: 3,
        separator: 0,
        omitZeroMinute: 0,
        meridiem: 0,
        omitCommas: 0,
      }
      var STANDARD_DATE_PROP_SEVERITIES = {
        timeZoneName: 7,
        era: 6,
        year: 5,
        month: 4,
        day: 2,
        weekday: 2,
        hour: 1,
        minute: 1,
        second: 1,
      }
      var MERIDIEM_RE = /\s*([ap])\.?m\.?/i // eats up leading spaces too
      var COMMA_RE = /,/g // we need re for globalness
      var MULTI_SPACE_RE = /\s+/g
      var LTR_RE = /\u200e/g // control character
      var UTC_RE = /UTC|GMT/
      var NativeFormatter = /** @class */ (function () {
        function NativeFormatter(formatSettings) {
          var standardDateProps = {}
          var extendedSettings = {}
          var severity = 0
          for (var name_1 in formatSettings) {
            if (name_1 in EXTENDED_SETTINGS_AND_SEVERITIES) {
              extendedSettings[name_1] = formatSettings[name_1]
              severity = Math.max(
                EXTENDED_SETTINGS_AND_SEVERITIES[name_1],
                severity
              )
            } else {
              standardDateProps[name_1] = formatSettings[name_1]
              if (name_1 in STANDARD_DATE_PROP_SEVERITIES) {
                // TODO: what about hour12? no severity
                severity = Math.max(
                  STANDARD_DATE_PROP_SEVERITIES[name_1],
                  severity
                )
              }
            }
          }
          this.standardDateProps = standardDateProps
          this.extendedSettings = extendedSettings
          this.severity = severity
          this.buildFormattingFunc = memoize(buildFormattingFunc)
        }

        NativeFormatter.prototype.format = function (date, context) {
          return this.buildFormattingFunc(
            this.standardDateProps,
            this.extendedSettings,
            context
          )(date)
        }
        NativeFormatter.prototype.formatRange = function (
          start,
          end,
          context,
          betterDefaultSeparator
        ) {
          var _a = this,
            standardDateProps = _a.standardDateProps,
            extendedSettings = _a.extendedSettings
          var diffSeverity = computeMarkerDiffSeverity(
            start.marker,
            end.marker,
            context.calendarSystem
          )
          if (!diffSeverity) {
            return this.format(start, context)
          }
          var biggestUnitForPartial = diffSeverity
          if (
            biggestUnitForPartial > 1 && // the two dates are different in a way that's larger scale than time
            (standardDateProps.year === 'numeric' ||
              standardDateProps.year === '2-digit') &&
            (standardDateProps.month === 'numeric' ||
              standardDateProps.month === '2-digit') &&
            (standardDateProps.day === 'numeric' ||
              standardDateProps.day === '2-digit')
          ) {
            biggestUnitForPartial = 1 // make it look like the dates are only different in terms of time
          }
          var full0 = this.format(start, context)
          var full1 = this.format(end, context)
          if (full0 === full1) {
            return full0
          }
          var partialDateProps = computePartialFormattingOptions(
            standardDateProps,
            biggestUnitForPartial
          )
          var partialFormattingFunc = buildFormattingFunc(
            partialDateProps,
            extendedSettings,
            context
          )
          var partial0 = partialFormattingFunc(start)
          var partial1 = partialFormattingFunc(end)
          var insertion = findCommonInsertion(full0, partial0, full1, partial1)
          var separator =
            extendedSettings.separator ||
            betterDefaultSeparator ||
            context.defaultSeparator ||
            ''
          if (insertion) {
            return (
              insertion.before +
              partial0 +
              separator +
              partial1 +
              insertion.after
            )
          }
          return full0 + separator + full1
        }
        NativeFormatter.prototype.getLargestUnit = function () {
          switch (this.severity) {
            case 7:
            case 6:
            case 5:
              return 'year'
            case 4:
              return 'month'
            case 3:
              return 'week'
            case 2:
              return 'day'
            default:
              return 'time' // really?
          }
        }
        return NativeFormatter
      })()

      function buildFormattingFunc(
        standardDateProps,
        extendedSettings,
        context
      ) {
        var standardDatePropCnt = Object.keys(standardDateProps).length
        if (
          standardDatePropCnt === 1 &&
          standardDateProps.timeZoneName === 'short'
        ) {
          return function (date) {
            return formatTimeZoneOffset(date.timeZoneOffset)
          }
        }
        if (standardDatePropCnt === 0 && extendedSettings.week) {
          return function (date) {
            return formatWeekNumber(
              context.computeWeekNumber(date.marker),
              context.weekText,
              context.locale,
              extendedSettings.week
            )
          }
        }
        return buildNativeFormattingFunc(
          standardDateProps,
          extendedSettings,
          context
        )
      }

      function buildNativeFormattingFunc(
        standardDateProps,
        extendedSettings,
        context
      ) {
        standardDateProps = __assign({}, standardDateProps) // copy
        extendedSettings = __assign({}, extendedSettings) // copy
        sanitizeSettings(standardDateProps, extendedSettings)
        standardDateProps.timeZone = 'UTC' // we leverage the only guaranteed timeZone for our UTC markers
        var normalFormat = new Intl.DateTimeFormat(
          context.locale.codes,
          standardDateProps
        )
        var zeroFormat // needed?
        if (extendedSettings.omitZeroMinute) {
          var zeroProps = __assign({}, standardDateProps)
          delete zeroProps.minute // seconds and ms were already considered in sanitizeSettings
          zeroFormat = new Intl.DateTimeFormat(context.locale.codes, zeroProps)
        }
        return function (date) {
          var marker = date.marker
          var format
          if (zeroFormat && !marker.getUTCMinutes()) {
            format = zeroFormat
          } else {
            format = normalFormat
          }
          var s = format.format(marker)
          return postProcess(
            s,
            date,
            standardDateProps,
            extendedSettings,
            context
          )
        }
      }

      function sanitizeSettings(standardDateProps, extendedSettings) {
        // deal with a browser inconsistency where formatting the timezone
        // requires that the hour/minute be present.
        if (standardDateProps.timeZoneName) {
          if (!standardDateProps.hour) {
            standardDateProps.hour = '2-digit'
          }
          if (!standardDateProps.minute) {
            standardDateProps.minute = '2-digit'
          }
        }
        // only support short timezone names
        if (standardDateProps.timeZoneName === 'long') {
          standardDateProps.timeZoneName = 'short'
        }
        // if requesting to display seconds, MUST display minutes
        if (
          extendedSettings.omitZeroMinute &&
          (standardDateProps.second || standardDateProps.millisecond)
        ) {
          delete extendedSettings.omitZeroMinute
        }
      }

      function postProcess(
        s,
        date,
        standardDateProps,
        extendedSettings,
        context
      ) {
        s = s.replace(LTR_RE, '') // remove left-to-right control chars. do first. good for other regexes
        if (standardDateProps.timeZoneName === 'short') {
          s = injectTzoStr(
            s,
            context.timeZone === 'UTC' || date.timeZoneOffset == null
              ? 'UTC' // important to normalize for IE, which does "GMT"
              : formatTimeZoneOffset(date.timeZoneOffset)
          )
        }
        if (extendedSettings.omitCommas) {
          s = s.replace(COMMA_RE, '').trim()
        }
        if (extendedSettings.omitZeroMinute) {
          s = s.replace(':00', '') // zeroFormat doesn't always achieve this
        }
        // ^ do anything that might create adjacent spaces before this point,
        // because MERIDIEM_RE likes to eat up loading spaces
        if (extendedSettings.meridiem === false) {
          s = s.replace(MERIDIEM_RE, '').trim()
        } else if (extendedSettings.meridiem === 'narrow') {
          // a/p
          s = s.replace(MERIDIEM_RE, function (m0, m1) {
            return m1.toLocaleLowerCase()
          })
        } else if (extendedSettings.meridiem === 'short') {
          // am/pm
          s = s.replace(MERIDIEM_RE, function (m0, m1) {
            return m1.toLocaleLowerCase() + 'm'
          })
        } else if (extendedSettings.meridiem === 'lowercase') {
          // other meridiem transformers already converted to lowercase
          s = s.replace(MERIDIEM_RE, function (m0) {
            return m0.toLocaleLowerCase()
          })
        }
        s = s.replace(MULTI_SPACE_RE, ' ')
        s = s.trim()
        return s
      }

      function injectTzoStr(s, tzoStr) {
        var replaced = false
        s = s.replace(UTC_RE, function () {
          replaced = true
          return tzoStr
        })
        // IE11 doesn't include UTC/GMT in the original string, so append to end
        if (!replaced) {
          s += ' ' + tzoStr
        }
        return s
      }

      function formatWeekNumber(num, weekText, locale, display) {
        var parts = []
        if (display === 'narrow') {
          parts.push(weekText)
        } else if (display === 'short') {
          parts.push(weekText, ' ')
        }
        // otherwise, considered 'numeric'
        parts.push(locale.simpleNumberFormat.format(num))
        if (locale.options.direction === 'rtl') {
          // TODO: use control characters instead?
          parts.reverse()
        }
        return parts.join('')
      }

      // Range Formatting Utils
      // 0 = exactly the same
      // 1 = different by time
      // and bigger
      function computeMarkerDiffSeverity(d0, d1, ca) {
        if (ca.getMarkerYear(d0) !== ca.getMarkerYear(d1)) {
          return 5
        }
        if (ca.getMarkerMonth(d0) !== ca.getMarkerMonth(d1)) {
          return 4
        }
        if (ca.getMarkerDay(d0) !== ca.getMarkerDay(d1)) {
          return 2
        }
        if (timeAsMs(d0) !== timeAsMs(d1)) {
          return 1
        }
        return 0
      }

      function computePartialFormattingOptions(options, biggestUnit) {
        var partialOptions = {}
        for (var name_2 in options) {
          if (
            !(name_2 in STANDARD_DATE_PROP_SEVERITIES) || // not a date part prop (like timeZone)
            STANDARD_DATE_PROP_SEVERITIES[name_2] <= biggestUnit
          ) {
            partialOptions[name_2] = options[name_2]
          }
        }
        return partialOptions
      }

      function findCommonInsertion(full0, partial0, full1, partial1) {
        var i0 = 0
        while (i0 < full0.length) {
          var found0 = full0.indexOf(partial0, i0)
          if (found0 === -1) {
            break
          }
          var before0 = full0.substr(0, found0)
          i0 = found0 + partial0.length
          var after0 = full0.substr(i0)
          var i1 = 0
          while (i1 < full1.length) {
            var found1 = full1.indexOf(partial1, i1)
            if (found1 === -1) {
              break
            }
            var before1 = full1.substr(0, found1)
            i1 = found1 + partial1.length
            var after1 = full1.substr(i1)
            if (before0 === before1 && after0 === after1) {
              return {
                before: before0,
                after: after0,
              }
            }
          }
        }
        return null
      }

      function expandZonedMarker(dateInfo, calendarSystem) {
        var a = calendarSystem.markerToArray(dateInfo.marker)
        return {
          marker: dateInfo.marker,
          timeZoneOffset: dateInfo.timeZoneOffset,
          array: a,
          year: a[0],
          month: a[1],
          day: a[2],
          hour: a[3],
          minute: a[4],
          second: a[5],
          millisecond: a[6],
        }
      }

      function createVerboseFormattingArg(
        start,
        end,
        context,
        betterDefaultSeparator
      ) {
        var startInfo = expandZonedMarker(start, context.calendarSystem)
        var endInfo = end
          ? expandZonedMarker(end, context.calendarSystem)
          : null
        return {
          date: startInfo,
          start: startInfo,
          end: endInfo,
          timeZone: context.timeZone,
          localeCodes: context.locale.codes,
          defaultSeparator: betterDefaultSeparator || context.defaultSeparator,
        }
      }

      /*
    TODO: fix the terminology of "formatter" vs "formatting func"
    */
      /*
    At the time of instantiation, this object does not know which cmd-formatting system it will use.
    It receives this at the time of formatting, as a setting.
    */
      var CmdFormatter = /** @class */ (function () {
        function CmdFormatter(cmdStr) {
          this.cmdStr = cmdStr
        }

        CmdFormatter.prototype.format = function (
          date,
          context,
          betterDefaultSeparator
        ) {
          return context.cmdFormatter(
            this.cmdStr,
            createVerboseFormattingArg(
              date,
              null,
              context,
              betterDefaultSeparator
            )
          )
        }
        CmdFormatter.prototype.formatRange = function (
          start,
          end,
          context,
          betterDefaultSeparator
        ) {
          return context.cmdFormatter(
            this.cmdStr,
            createVerboseFormattingArg(
              start,
              end,
              context,
              betterDefaultSeparator
            )
          )
        }
        return CmdFormatter
      })()

      var FuncFormatter = /** @class */ (function () {
        function FuncFormatter(func) {
          this.func = func
        }

        FuncFormatter.prototype.format = function (
          date,
          context,
          betterDefaultSeparator
        ) {
          return this.func(
            createVerboseFormattingArg(
              date,
              null,
              context,
              betterDefaultSeparator
            )
          )
        }
        FuncFormatter.prototype.formatRange = function (
          start,
          end,
          context,
          betterDefaultSeparator
        ) {
          return this.func(
            createVerboseFormattingArg(
              start,
              end,
              context,
              betterDefaultSeparator
            )
          )
        }
        return FuncFormatter
      })()

      function createFormatter(input) {
        if (typeof input === 'object' && input) {
          // non-null object
          return new NativeFormatter(input)
        }
        if (typeof input === 'string') {
          return new CmdFormatter(input)
        }
        if (typeof input === 'function') {
          return new FuncFormatter(input)
        }
        return null
      }

      // base options
      // ------------
      var BASE_OPTION_REFINERS = {
        navLinkDayClick: identity,
        navLinkWeekClick: identity,
        duration: createDuration,
        bootstrapFontAwesome: identity,
        buttonIcons: identity,
        customButtons: identity,
        defaultAllDayEventDuration: createDuration,
        defaultTimedEventDuration: createDuration,
        nextDayThreshold: createDuration,
        scrollTime: createDuration,
        slotMinTime: createDuration,
        slotMaxTime: createDuration,
        dayPopoverFormat: createFormatter,
        slotDuration: createDuration,
        snapDuration: createDuration,
        headerToolbar: identity,
        footerToolbar: identity,
        defaultRangeSeparator: String,
        titleRangeSeparator: String,
        forceEventDuration: Boolean,
        dayHeaders: Boolean,
        dayHeaderFormat: createFormatter,
        dayHeaderClassNames: identity,
        dayHeaderContent: identity,
        dayHeaderDidMount: identity,
        dayHeaderWillUnmount: identity,
        dayCellClassNames: identity,
        dayCellContent: identity,
        dayCellDidMount: identity,
        dayCellWillUnmount: identity,
        initialView: String,
        aspectRatio: Number,
        weekends: Boolean,
        weekNumberCalculation: identity,
        weekNumbers: Boolean,
        weekNumberClassNames: identity,
        weekNumberContent: identity,
        weekNumberDidMount: identity,
        weekNumberWillUnmount: identity,
        editable: Boolean,
        viewClassNames: identity,
        viewDidMount: identity,
        viewWillUnmount: identity,
        nowIndicator: Boolean,
        nowIndicatorClassNames: identity,
        nowIndicatorContent: identity,
        nowIndicatorDidMount: identity,
        nowIndicatorWillUnmount: identity,
        showNonCurrentDates: Boolean,
        lazyFetching: Boolean,
        startParam: String,
        endParam: String,
        timeZoneParam: String,
        timeZone: String,
        locales: identity,
        locale: identity,
        themeSystem: String,
        dragRevertDuration: Number,
        dragScroll: Boolean,
        allDayMaintainDuration: Boolean,
        unselectAuto: Boolean,
        dropAccept: identity,
        eventOrder: parseFieldSpecs,
        handleWindowResize: Boolean,
        windowResizeDelay: Number,
        longPressDelay: Number,
        eventDragMinDistance: Number,
        expandRows: Boolean,
        height: identity,
        contentHeight: identity,
        direction: String,
        weekNumberFormat: createFormatter,
        eventResizableFromStart: Boolean,
        displayEventTime: Boolean,
        displayEventEnd: Boolean,
        weekText: String,
        progressiveEventRendering: Boolean,
        businessHours: identity,
        initialDate: identity,
        now: identity,
        eventDataTransform: identity,
        stickyHeaderDates: identity,
        stickyFooterScrollbar: identity,
        viewHeight: identity,
        defaultAllDay: Boolean,
        eventSourceFailure: identity,
        eventSourceSuccess: identity,
        eventDisplay: String,
        eventStartEditable: Boolean,
        eventDurationEditable: Boolean,
        eventOverlap: identity,
        eventConstraint: identity,
        eventAllow: identity,
        eventBackgroundColor: String,
        eventBorderColor: String,
        eventTextColor: String,
        eventColor: String,
        eventClassNames: identity,
        eventContent: identity,
        eventDidMount: identity,
        eventWillUnmount: identity,
        selectConstraint: identity,
        selectOverlap: identity,
        selectAllow: identity,
        droppable: Boolean,
        unselectCancel: String,
        slotLabelFormat: identity,
        slotLaneClassNames: identity,
        slotLaneContent: identity,
        slotLaneDidMount: identity,
        slotLaneWillUnmount: identity,
        slotLabelClassNames: identity,
        slotLabelContent: identity,
        slotLabelDidMount: identity,
        slotLabelWillUnmount: identity,
        dayMaxEvents: identity,
        dayMaxEventRows: identity,
        dayMinWidth: Number,
        slotLabelInterval: createDuration,
        allDayText: String,
        allDayClassNames: identity,
        allDayContent: identity,
        allDayDidMount: identity,
        allDayWillUnmount: identity,
        slotMinWidth: Number,
        navLinks: Boolean,
        eventTimeFormat: createFormatter,
        rerenderDelay: Number,
        moreLinkText: identity,
        selectMinDistance: Number,
        selectable: Boolean,
        selectLongPressDelay: Number,
        eventLongPressDelay: Number,
        selectMirror: Boolean,
        eventMinHeight: Number,
        slotEventOverlap: Boolean,
        plugins: identity,
        firstDay: Number,
        dayCount: Number,
        dateAlignment: String,
        dateIncrement: createDuration,
        hiddenDays: identity,
        monthMode: Boolean,
        fixedWeekCount: Boolean,
        validRange: identity,
        visibleRange: identity,
        titleFormat: identity, // only used by list-view, but languages define the value, so we need it in base options
        noEventsText: String,
      }
      // do NOT give a type here. need `typeof BASE_OPTION_DEFAULTS` to give real results.
      // raw values.
      var BASE_OPTION_DEFAULTS = {
        eventDisplay: 'auto',
        defaultRangeSeparator: ' - ',
        titleRangeSeparator: ' \u2013 ',
        defaultTimedEventDuration: '01:00:00',
        defaultAllDayEventDuration: { day: 1 },
        forceEventDuration: false,
        nextDayThreshold: '00:00:00',
        dayHeaders: true,
        initialView: '',
        aspectRatio: 1.35,
        headerToolbar: {
          start: 'title',
          center: '',
          end: 'today prev,next',
        },
        weekends: true,
        weekNumbers: false,
        weekNumberCalculation: 'local',
        editable: false,
        nowIndicator: false,
        scrollTime: '06:00:00',
        slotMinTime: '00:00:00',
        slotMaxTime: '24:00:00',
        showNonCurrentDates: true,
        lazyFetching: true,
        startParam: 'start',
        endParam: 'end',
        timeZoneParam: 'timeZone',
        timeZone: 'local',
        locales: [],
        locale: '',
        themeSystem: 'standard',
        dragRevertDuration: 500,
        dragScroll: true,
        allDayMaintainDuration: false,
        unselectAuto: true,
        dropAccept: '*',
        eventOrder: 'start,-duration,allDay,title',
        dayPopoverFormat: { month: 'long', day: 'numeric', year: 'numeric' },
        handleWindowResize: true,
        windowResizeDelay: 100,
        longPressDelay: 1000,
        eventDragMinDistance: 5,
        expandRows: false,
        navLinks: false,
        selectable: false,
      }
      // calendar listeners
      // ------------------
      var CALENDAR_LISTENER_REFINERS = {
        datesSet: identity,
        eventsSet: identity,
        eventAdd: identity,
        eventChange: identity,
        eventRemove: identity,
        windowResize: identity,
        eventClick: identity,
        eventMouseEnter: identity,
        eventMouseLeave: identity,
        select: identity,
        unselect: identity,
        loading: identity, // internal
        _unmount: identity,
        _beforeprint: identity,
        _afterprint: identity,
        _noEventDrop: identity,
        _noEventResize: identity,
        _resize: identity,
        _scrollRequest: identity,
      }
      // calendar-specific options
      // -------------------------
      var CALENDAR_OPTION_REFINERS = {
        buttonText: identity,
        views: identity,
        plugins: identity,
        initialEvents: identity,
        events: identity,
        eventSources: identity,
      }
      var COMPLEX_OPTION_COMPARATORS = {
        headerToolbar: isBoolComplexEqual,
        footerToolbar: isBoolComplexEqual,
        buttonText: isBoolComplexEqual,
        buttonIcons: isBoolComplexEqual,
      }

      function isBoolComplexEqual(a, b) {
        if (typeof a === 'object' && typeof b === 'object' && a && b) {
          // both non-null objects
          return isPropsEqual(a, b)
        }
        return a === b
      }

      // view-specific options
      // ---------------------
      var VIEW_OPTION_REFINERS = {
        type: String,
        component: identity,
        buttonText: String,
        buttonTextKey: String,
        dateProfileGeneratorClass: identity,
        usesMinMaxTime: Boolean,
        classNames: identity,
        content: identity,
        didMount: identity,
        willUnmount: identity,
      }
      // util funcs
      // ----------------------------------------------------------------------------------------------------
      function mergeRawOptions(optionSets) {
        return mergeProps(optionSets, COMPLEX_OPTION_COMPARATORS)
      }

      function refineProps(input, refiners) {
        var refined = {}
        var extra = {}
        for (var propName in refiners) {
          if (propName in input) {
            refined[propName] = refiners[propName](input[propName])
          }
        }
        for (var propName in input) {
          if (!(propName in refiners)) {
            extra[propName] = input[propName]
          }
        }
        return { refined: refined, extra: extra }
      }

      function identity(raw) {
        return raw
      }

      function parseEvents(rawEvents, eventSource, context, allowOpenRange) {
        var eventStore = createEmptyEventStore()
        var eventRefiners = buildEventRefiners(context)
        for (
          var _i = 0, rawEvents_1 = rawEvents;
          _i < rawEvents_1.length;
          _i++
        ) {
          var rawEvent = rawEvents_1[_i]
          var tuple = parseEvent(
            rawEvent,
            eventSource,
            context,
            allowOpenRange,
            eventRefiners
          )
          if (tuple) {
            eventTupleToStore(tuple, eventStore)
          }
        }
        return eventStore
      }

      function eventTupleToStore(tuple, eventStore) {
        if (eventStore === void 0) {
          eventStore = createEmptyEventStore()
        }
        eventStore.defs[tuple.def.defId] = tuple.def
        if (tuple.instance) {
          eventStore.instances[tuple.instance.instanceId] = tuple.instance
        }
        return eventStore
      }

      // retrieves events that have the same groupId as the instance specified by `instanceId`
      // or they are the same as the instance.
      // why might instanceId not be in the store? an event from another calendar?
      function getRelevantEvents(eventStore, instanceId) {
        var instance = eventStore.instances[instanceId]
        if (instance) {
          var def_1 = eventStore.defs[instance.defId]
          // get events/instances with same group
          var newStore = filterEventStoreDefs(eventStore, function (lookDef) {
            return isEventDefsGrouped(def_1, lookDef)
          })
          // add the original
          // TODO: wish we could use eventTupleToStore or something like it
          newStore.defs[def_1.defId] = def_1
          newStore.instances[instance.instanceId] = instance
          return newStore
        }
        return createEmptyEventStore()
      }

      function isEventDefsGrouped(def0, def1) {
        return Boolean(def0.groupId && def0.groupId === def1.groupId)
      }

      function createEmptyEventStore() {
        return { defs: {}, instances: {} }
      }

      function mergeEventStores(store0, store1) {
        return {
          defs: __assign(__assign({}, store0.defs), store1.defs),
          instances: __assign(__assign({}, store0.instances), store1.instances),
        }
      }

      function filterEventStoreDefs(eventStore, filterFunc) {
        var defs = filterHash(eventStore.defs, filterFunc)
        var instances = filterHash(eventStore.instances, function (instance) {
          return defs[instance.defId] // still exists?
        })
        return { defs: defs, instances: instances }
      }

      function excludeSubEventStore(master, sub) {
        var defs = master.defs,
          instances = master.instances
        var filteredDefs = {}
        var filteredInstances = {}
        for (var defId in defs) {
          if (!sub.defs[defId]) {
            // not explicitly excluded
            filteredDefs[defId] = defs[defId]
          }
        }
        for (var instanceId in instances) {
          if (
            !sub.instances[instanceId] && // not explicitly excluded
            filteredDefs[instances[instanceId].defId] // def wasn't filtered away
          ) {
            filteredInstances[instanceId] = instances[instanceId]
          }
        }
        return {
          defs: filteredDefs,
          instances: filteredInstances,
        }
      }

      function normalizeConstraint(input, context) {
        if (Array.isArray(input)) {
          return parseEvents(input, null, context, true) // allowOpenRange=true
        }
        if (typeof input === 'object' && input) {
          // non-null object
          return parseEvents([input], null, context, true) // allowOpenRange=true
        }
        if (input != null) {
          return String(input)
        }
        return null
      }

      function parseClassNames(raw) {
        if (Array.isArray(raw)) {
          return raw
        }
        if (typeof raw === 'string') {
          return raw.split(/\s+/)
        }
        return []
      }

      // TODO: better called "EventSettings" or "EventConfig"
      // TODO: move this file into structs
      // TODO: separate constraint/overlap/allow, because selection uses only that, not other props
      var EVENT_UI_REFINERS = {
        display: String,
        editable: Boolean,
        startEditable: Boolean,
        durationEditable: Boolean,
        constraint: identity,
        overlap: identity,
        allow: identity,
        className: parseClassNames,
        classNames: parseClassNames,
        color: String,
        backgroundColor: String,
        borderColor: String,
        textColor: String,
      }
      var EMPTY_EVENT_UI = {
        display: null,
        startEditable: null,
        durationEditable: null,
        constraints: [],
        overlap: null,
        allows: [],
        backgroundColor: '',
        borderColor: '',
        textColor: '',
        classNames: [],
      }

      function createEventUi(refined, context) {
        var constraint = normalizeConstraint(refined.constraint, context)
        return {
          display: refined.display || null,
          startEditable:
            refined.startEditable != null
              ? refined.startEditable
              : refined.editable,
          durationEditable:
            refined.durationEditable != null
              ? refined.durationEditable
              : refined.editable,
          constraints: constraint != null ? [constraint] : [],
          overlap: refined.overlap != null ? refined.overlap : null,
          allows: refined.allow != null ? [refined.allow] : [],
          backgroundColor: refined.backgroundColor || refined.color || '',
          borderColor: refined.borderColor || refined.color || '',
          textColor: refined.textColor || '',
          classNames: (refined.className || []).concat(
            refined.classNames || []
          ),
        }
      }

      // TODO: prevent against problems with <2 args!
      function combineEventUis(uis) {
        return uis.reduce(combineTwoEventUis, EMPTY_EVENT_UI)
      }

      function combineTwoEventUis(item0, item1) {
        return {
          display: item1.display != null ? item1.display : item0.display,
          startEditable:
            item1.startEditable != null
              ? item1.startEditable
              : item0.startEditable,
          durationEditable:
            item1.durationEditable != null
              ? item1.durationEditable
              : item0.durationEditable,
          constraints: item0.constraints.concat(item1.constraints),
          overlap:
            typeof item1.overlap === 'boolean' ? item1.overlap : item0.overlap,
          allows: item0.allows.concat(item1.allows),
          backgroundColor: item1.backgroundColor || item0.backgroundColor,
          borderColor: item1.borderColor || item0.borderColor,
          textColor: item1.textColor || item0.textColor,
          classNames: item0.classNames.concat(item1.classNames),
        }
      }

      var EVENT_NON_DATE_REFINERS = {
        id: String,
        groupId: String,
        title: String,
        url: String,
      }
      var EVENT_DATE_REFINERS = {
        start: identity,
        end: identity,
        date: identity,
        allDay: Boolean,
      }
      var EVENT_REFINERS = __assign(
        __assign(__assign({}, EVENT_NON_DATE_REFINERS), EVENT_DATE_REFINERS),
        { extendedProps: identity }
      )

      function parseEvent(raw, eventSource, context, allowOpenRange, refiners) {
        if (refiners === void 0) {
          refiners = buildEventRefiners(context)
        }
        var _a = refineEventDef(raw, context, refiners),
          refined = _a.refined,
          extra = _a.extra
        var defaultAllDay = computeIsDefaultAllDay(eventSource, context)
        var recurringRes = parseRecurring(
          refined,
          defaultAllDay,
          context.dateEnv,
          context.pluginHooks.recurringTypes
        )
        if (recurringRes) {
          var def = parseEventDef(
            refined,
            extra,
            eventSource ? eventSource.sourceId : '',
            recurringRes.allDay,
            Boolean(recurringRes.duration),
            context
          )
          def.recurringDef = {
            typeId: recurringRes.typeId,
            typeData: recurringRes.typeData,
            duration: recurringRes.duration,
          }
          return { def: def, instance: null }
        }
        var singleRes = parseSingle(
          refined,
          defaultAllDay,
          context,
          allowOpenRange
        )
        if (singleRes) {
          var def = parseEventDef(
            refined,
            extra,
            eventSource ? eventSource.sourceId : '',
            singleRes.allDay,
            singleRes.hasEnd,
            context
          )
          var instance = createEventInstance(
            def.defId,
            singleRes.range,
            singleRes.forcedStartTzo,
            singleRes.forcedEndTzo
          )
          return { def: def, instance: instance }
        }
        return null
      }

      function refineEventDef(raw, context, refiners) {
        if (refiners === void 0) {
          refiners = buildEventRefiners(context)
        }
        return refineProps(raw, refiners)
      }

      function buildEventRefiners(context) {
        return __assign(
          __assign(__assign({}, EVENT_UI_REFINERS), EVENT_REFINERS),
          context.pluginHooks.eventRefiners
        )
      }

      /*
    Will NOT populate extendedProps with the leftover properties.
    Will NOT populate date-related props.
    */
      function parseEventDef(
        refined,
        extra,
        sourceId,
        allDay,
        hasEnd,
        context
      ) {
        var def = {
          title: refined.title || '',
          groupId: refined.groupId || '',
          publicId: refined.id || '',
          url: refined.url || '',
          recurringDef: null,
          defId: guid(),
          sourceId: sourceId,
          allDay: allDay,
          hasEnd: hasEnd,
          ui: createEventUi(refined, context),
          extendedProps: __assign(
            __assign({}, refined.extendedProps || {}),
            extra
          ),
        }
        for (
          var _i = 0, _a = context.pluginHooks.eventDefMemberAdders;
          _i < _a.length;
          _i++
        ) {
          var memberAdder = _a[_i]
          __assign(def, memberAdder(refined))
        }
        // help out EventApi from having user modify props
        Object.freeze(def.ui.classNames)
        Object.freeze(def.extendedProps)
        return def
      }

      function parseSingle(refined, defaultAllDay, context, allowOpenRange) {
        var allDay = refined.allDay
        var startMeta
        var startMarker = null
        var hasEnd = false
        var endMeta
        var endMarker = null
        var startInput = refined.start != null ? refined.start : refined.date
        startMeta = context.dateEnv.createMarkerMeta(startInput)
        if (startMeta) {
          startMarker = startMeta.marker
        } else if (!allowOpenRange) {
          return null
        }
        if (refined.end != null) {
          endMeta = context.dateEnv.createMarkerMeta(refined.end)
        }
        if (allDay == null) {
          if (defaultAllDay != null) {
            allDay = defaultAllDay
          } else {
            // fall back to the date props LAST
            allDay =
              (!startMeta || startMeta.isTimeUnspecified) &&
              (!endMeta || endMeta.isTimeUnspecified)
          }
        }
        if (allDay && startMarker) {
          startMarker = startOfDay(startMarker)
        }
        if (endMeta) {
          endMarker = endMeta.marker
          if (allDay) {
            endMarker = startOfDay(endMarker)
          }
          if (startMarker && endMarker <= startMarker) {
            endMarker = null
          }
        }
        if (endMarker) {
          hasEnd = true
        } else if (!allowOpenRange) {
          hasEnd = context.options.forceEventDuration || false
          endMarker = context.dateEnv.add(
            startMarker,
            allDay
              ? context.options.defaultAllDayEventDuration
              : context.options.defaultTimedEventDuration
          )
        }
        return {
          allDay: allDay,
          hasEnd: hasEnd,
          range: { start: startMarker, end: endMarker },
          forcedStartTzo: startMeta ? startMeta.forcedTzo : null,
          forcedEndTzo: endMeta ? endMeta.forcedTzo : null,
        }
      }

      function computeIsDefaultAllDay(eventSource, context) {
        var res = null
        if (eventSource) {
          res = eventSource.defaultAllDay
        }
        if (res == null) {
          res = context.options.defaultAllDay
        }
        return res
      }

      /* Date stuff that doesn't belong in datelib core
    ----------------------------------------------------------------------------------------------------------------------*/
      // given a timed range, computes an all-day range that has the same exact duration,
      // but whose start time is aligned with the start of the day.
      function computeAlignedDayRange(timedRange) {
        var dayCnt = Math.floor(diffDays(timedRange.start, timedRange.end)) || 1
        var start = startOfDay(timedRange.start)
        var end = addDays(start, dayCnt)
        return { start: start, end: end }
      }

      // given a timed range, computes an all-day range based on how for the end date bleeds into the next day
      // TODO: give nextDayThreshold a default arg
      function computeVisibleDayRange(timedRange, nextDayThreshold) {
        if (nextDayThreshold === void 0) {
          nextDayThreshold = createDuration(0)
        }
        var startDay = null
        var endDay = null
        if (timedRange.end) {
          endDay = startOfDay(timedRange.end)
          var endTimeMS = timedRange.end.valueOf() - endDay.valueOf() // # of milliseconds into `endDay`
          // If the end time is actually inclusively part of the next day and is equal to or
          // beyond the next day threshold, adjust the end to be the exclusive end of `endDay`.
          // Otherwise, leaving it as inclusive will cause it to exclude `endDay`.
          if (endTimeMS && endTimeMS >= asRoughMs(nextDayThreshold)) {
            endDay = addDays(endDay, 1)
          }
        }
        if (timedRange.start) {
          startDay = startOfDay(timedRange.start) // the beginning of the day the range starts
          // If end is within `startDay` but not past nextDayThreshold, assign the default duration of one day.
          if (endDay && endDay <= startDay) {
            endDay = addDays(startDay, 1)
          }
        }
        return { start: startDay, end: endDay }
      }

      // spans from one day into another?
      function isMultiDayRange(range) {
        var visibleRange = computeVisibleDayRange(range)
        return diffDays(visibleRange.start, visibleRange.end) > 1
      }

      function diffDates(date0, date1, dateEnv, largeUnit) {
        if (largeUnit === 'year') {
          return createDuration(dateEnv.diffWholeYears(date0, date1), 'year')
        }
        if (largeUnit === 'month') {
          return createDuration(dateEnv.diffWholeMonths(date0, date1), 'month')
        }
        return diffDayAndTime(date0, date1) // returns a duration
      }

      function parseRange(input, dateEnv) {
        var start = null
        var end = null
        if (input.start) {
          start = dateEnv.createMarker(input.start)
        }
        if (input.end) {
          end = dateEnv.createMarker(input.end)
        }
        if (!start && !end) {
          return null
        }
        if (start && end && end < start) {
          return null
        }
        return { start: start, end: end }
      }

      // SIDE-EFFECT: will mutate ranges.
      // Will return a new array result.
      function invertRanges(ranges, constraintRange) {
        var invertedRanges = []
        var start = constraintRange.start // the end of the previous range. the start of the new range
        var i
        var dateRange
        // ranges need to be in order. required for our date-walking algorithm
        ranges.sort(compareRanges)
        for (i = 0; i < ranges.length; i += 1) {
          dateRange = ranges[i]
          // add the span of time before the event (if there is any)
          if (dateRange.start > start) {
            // compare millisecond time (skip any ambig logic)
            invertedRanges.push({ start: start, end: dateRange.start })
          }
          if (dateRange.end > start) {
            start = dateRange.end
          }
        }
        // add the span of time after the last event (if there is any)
        if (start < constraintRange.end) {
          // compare millisecond time (skip any ambig logic)
          invertedRanges.push({ start: start, end: constraintRange.end })
        }
        return invertedRanges
      }

      function compareRanges(range0, range1) {
        return range0.start.valueOf() - range1.start.valueOf() // earlier ranges go first
      }

      function intersectRanges(range0, range1) {
        var start = range0.start,
          end = range0.end
        var newRange = null
        if (range1.start !== null) {
          if (start === null) {
            start = range1.start
          } else {
            start = new Date(Math.max(start.valueOf(), range1.start.valueOf()))
          }
        }
        if (range1.end != null) {
          if (end === null) {
            end = range1.end
          } else {
            end = new Date(Math.min(end.valueOf(), range1.end.valueOf()))
          }
        }
        if (start === null || end === null || start < end) {
          newRange = { start: start, end: end }
        }
        return newRange
      }

      function rangesEqual(range0, range1) {
        return (
          (range0.start === null ? null : range0.start.valueOf()) ===
            (range1.start === null ? null : range1.start.valueOf()) &&
          (range0.end === null ? null : range0.end.valueOf()) ===
            (range1.end === null ? null : range1.end.valueOf())
        )
      }

      function rangesIntersect(range0, range1) {
        return (
          (range0.end === null ||
            range1.start === null ||
            range0.end > range1.start) &&
          (range0.start === null ||
            range1.end === null ||
            range0.start < range1.end)
        )
      }

      function rangeContainsRange(outerRange, innerRange) {
        return (
          (outerRange.start === null ||
            (innerRange.start !== null &&
              innerRange.start >= outerRange.start)) &&
          (outerRange.end === null ||
            (innerRange.end !== null && innerRange.end <= outerRange.end))
        )
      }

      function rangeContainsMarker(range, date) {
        return (
          (range.start === null || date >= range.start) &&
          (range.end === null || date < range.end)
        )
      }

      // If the given date is not within the given range, move it inside.
      // (If it's past the end, make it one millisecond before the end).
      function constrainMarkerToRange(date, range) {
        if (range.start != null && date < range.start) {
          return range.start
        }
        if (range.end != null && date >= range.end) {
          return new Date(range.end.valueOf() - 1)
        }
        return date
      }

      /*
    Specifying nextDayThreshold signals that all-day ranges should be sliced.
    */
      function sliceEventStore(
        eventStore,
        eventUiBases,
        framingRange,
        nextDayThreshold
      ) {
        var inverseBgByGroupId = {}
        var inverseBgByDefId = {}
        var defByGroupId = {}
        var bgRanges = []
        var fgRanges = []
        var eventUis = compileEventUis(eventStore.defs, eventUiBases)
        for (var defId in eventStore.defs) {
          var def = eventStore.defs[defId]
          var ui = eventUis[def.defId]
          if (ui.display === 'inverse-background') {
            if (def.groupId) {
              inverseBgByGroupId[def.groupId] = []
              if (!defByGroupId[def.groupId]) {
                defByGroupId[def.groupId] = def
              }
            } else {
              inverseBgByDefId[defId] = []
            }
          }
        }
        for (var instanceId in eventStore.instances) {
          var instance = eventStore.instances[instanceId]
          var def = eventStore.defs[instance.defId]
          var ui = eventUis[def.defId]
          var origRange = instance.range
          var normalRange =
            !def.allDay && nextDayThreshold
              ? computeVisibleDayRange(origRange, nextDayThreshold)
              : origRange
          var slicedRange = intersectRanges(normalRange, framingRange)
          if (slicedRange) {
            if (ui.display === 'inverse-background') {
              if (def.groupId) {
                inverseBgByGroupId[def.groupId].push(slicedRange)
              } else {
                inverseBgByDefId[instance.defId].push(slicedRange)
              }
            } else if (ui.display !== 'none') {
              ;(ui.display === 'background' ? bgRanges : fgRanges).push({
                def: def,
                ui: ui,
                instance: instance,
                range: slicedRange,
                isStart:
                  normalRange.start &&
                  normalRange.start.valueOf() === slicedRange.start.valueOf(),
                isEnd:
                  normalRange.end &&
                  normalRange.end.valueOf() === slicedRange.end.valueOf(),
              })
            }
          }
        }
        for (var groupId in inverseBgByGroupId) {
          // BY GROUP
          var ranges = inverseBgByGroupId[groupId]
          var invertedRanges = invertRanges(ranges, framingRange)
          for (
            var _i = 0, invertedRanges_1 = invertedRanges;
            _i < invertedRanges_1.length;
            _i++
          ) {
            var invertedRange = invertedRanges_1[_i]
            var def = defByGroupId[groupId]
            var ui = eventUis[def.defId]
            bgRanges.push({
              def: def,
              ui: ui,
              instance: null,
              range: invertedRange,
              isStart: false,
              isEnd: false,
            })
          }
        }
        for (var defId in inverseBgByDefId) {
          var ranges = inverseBgByDefId[defId]
          var invertedRanges = invertRanges(ranges, framingRange)
          for (
            var _a = 0, invertedRanges_2 = invertedRanges;
            _a < invertedRanges_2.length;
            _a++
          ) {
            var invertedRange = invertedRanges_2[_a]
            bgRanges.push({
              def: eventStore.defs[defId],
              ui: eventUis[defId],
              instance: null,
              range: invertedRange,
              isStart: false,
              isEnd: false,
            })
          }
        }
        return { bg: bgRanges, fg: fgRanges }
      }

      function hasBgRendering(def) {
        return (
          def.ui.display === 'background' ||
          def.ui.display === 'inverse-background'
        )
      }

      function setElSeg(el, seg) {
        el.fcSeg = seg
      }

      function getElSeg(el) {
        return (
          el.fcSeg ||
          el.parentNode.fcSeg || // for the harness
          null
        )
      }

      // event ui computation
      function compileEventUis(eventDefs, eventUiBases) {
        return mapHash(eventDefs, function (eventDef) {
          return compileEventUi(eventDef, eventUiBases)
        })
      }

      function compileEventUi(eventDef, eventUiBases) {
        var uis = []
        if (eventUiBases['']) {
          uis.push(eventUiBases[''])
        }
        if (eventUiBases[eventDef.defId]) {
          uis.push(eventUiBases[eventDef.defId])
        }
        uis.push(eventDef.ui)
        return combineEventUis(uis)
      }

      function sortEventSegs(segs, eventOrderSpecs) {
        var objs = segs.map(buildSegCompareObj)
        objs.sort(function (obj0, obj1) {
          return compareByFieldSpecs(obj0, obj1, eventOrderSpecs)
        })
        return objs.map(function (c) {
          return c._seg
        })
      }

      // returns a object with all primitive props that can be compared
      function buildSegCompareObj(seg) {
        var eventRange = seg.eventRange
        var eventDef = eventRange.def
        var range = eventRange.instance
          ? eventRange.instance.range
          : eventRange.range
        var start = range.start ? range.start.valueOf() : 0 // TODO: better support for open-range events
        var end = range.end ? range.end.valueOf() : 0 // "
        return __assign(
          __assign(__assign({}, eventDef.extendedProps), eventDef),
          {
            id: eventDef.publicId,
            start: start,
            end: end,
            duration: end - start,
            allDay: Number(eventDef.allDay),
            _seg: seg,
          }
        )
      }

      function computeSegDraggable(seg, context) {
        var pluginHooks = context.pluginHooks
        var transformers = pluginHooks.isDraggableTransformers
        var _a = seg.eventRange,
          def = _a.def,
          ui = _a.ui
        var val = ui.startEditable
        for (
          var _i = 0, transformers_1 = transformers;
          _i < transformers_1.length;
          _i++
        ) {
          var transformer = transformers_1[_i]
          val = transformer(val, def, ui, context)
        }
        return val
      }

      function computeSegStartResizable(seg, context) {
        return (
          seg.isStart &&
          seg.eventRange.ui.durationEditable &&
          context.options.eventResizableFromStart
        )
      }

      function computeSegEndResizable(seg, context) {
        return seg.isEnd && seg.eventRange.ui.durationEditable
      }

      function buildSegTimeText(
        seg,
        timeFormat,
        context,
        defaultDisplayEventTime, // defaults to true
        defaultDisplayEventEnd, // defaults to true
        startOverride,
        endOverride
      ) {
        var dateEnv = context.dateEnv,
          options = context.options
        var displayEventTime = options.displayEventTime,
          displayEventEnd = options.displayEventEnd
        var eventDef = seg.eventRange.def
        var eventInstance = seg.eventRange.instance
        if (displayEventTime == null) {
          displayEventTime = defaultDisplayEventTime !== false
        }
        if (displayEventEnd == null) {
          displayEventEnd = defaultDisplayEventEnd !== false
        }
        var wholeEventStart = eventInstance.range.start
        var wholeEventEnd = eventInstance.range.end
        var segStart = startOverride || seg.start || seg.eventRange.range.start
        var segEnd = endOverride || seg.end || seg.eventRange.range.end
        var isStartDay =
          startOfDay(wholeEventStart).valueOf() ===
          startOfDay(segStart).valueOf()
        var isEndDay =
          startOfDay(addMs(wholeEventEnd, -1)).valueOf() ===
          startOfDay(addMs(segEnd, -1)).valueOf()
        if (displayEventTime && !eventDef.allDay && (isStartDay || isEndDay)) {
          segStart = isStartDay ? wholeEventStart : segStart
          segEnd = isEndDay ? wholeEventEnd : segEnd
          if (displayEventEnd && eventDef.hasEnd) {
            return dateEnv.formatRange(segStart, segEnd, timeFormat, {
              forcedStartTzo: startOverride
                ? null
                : eventInstance.forcedStartTzo,
              forcedEndTzo: endOverride ? null : eventInstance.forcedEndTzo,
            })
          }
          return dateEnv.format(segStart, timeFormat, {
            forcedTzo: startOverride ? null : eventInstance.forcedStartTzo,
          })
        }
        return ''
      }

      function getSegMeta(seg, todayRange, nowDate) {
        var segRange = seg.eventRange.range
        return {
          isPast: segRange.end < (nowDate || todayRange.start),
          isFuture: segRange.start >= (nowDate || todayRange.end),
          isToday:
            todayRange && rangeContainsMarker(todayRange, segRange.start),
        }
      }

      function getEventClassNames(props) {
        var classNames = ['fc-event']
        if (props.isMirror) {
          classNames.push('fc-event-mirror')
        }
        if (props.isDraggable) {
          classNames.push('fc-event-draggable')
        }
        if (props.isStartResizable || props.isEndResizable) {
          classNames.push('fc-event-resizable')
        }
        if (props.isDragging) {
          classNames.push('fc-event-dragging')
        }
        if (props.isResizing) {
          classNames.push('fc-event-resizing')
        }
        if (props.isSelected) {
          classNames.push('fc-event-selected')
        }
        if (props.isStart) {
          classNames.push('fc-event-start')
        }
        if (props.isEnd) {
          classNames.push('fc-event-end')
        }
        if (props.isPast) {
          classNames.push('fc-event-past')
        }
        if (props.isToday) {
          classNames.push('fc-event-today')
        }
        if (props.isFuture) {
          classNames.push('fc-event-future')
        }
        return classNames
      }

      function buildEventRangeKey(eventRange) {
        return eventRange.instance
          ? eventRange.instance.instanceId
          : eventRange.def.defId + ':' + eventRange.range.start.toISOString()
        // inverse-background events don't have specific instances. TODO: better solution
      }

      var STANDARD_PROPS = {
        start: identity,
        end: identity,
        allDay: Boolean,
      }

      function parseDateSpan(raw, dateEnv, defaultDuration) {
        var span = parseOpenDateSpan(raw, dateEnv)
        var range = span.range
        if (!range.start) {
          return null
        }
        if (!range.end) {
          if (defaultDuration == null) {
            return null
          }
          range.end = dateEnv.add(range.start, defaultDuration)
        }
        return span
      }

      /*
    TODO: somehow combine with parseRange?
    Will return null if the start/end props were present but parsed invalidly.
    */
      function parseOpenDateSpan(raw, dateEnv) {
        var _a = refineProps(raw, STANDARD_PROPS),
          standardProps = _a.refined,
          extra = _a.extra
        var startMeta = standardProps.start
          ? dateEnv.createMarkerMeta(standardProps.start)
          : null
        var endMeta = standardProps.end
          ? dateEnv.createMarkerMeta(standardProps.end)
          : null
        var allDay = standardProps.allDay
        if (allDay == null) {
          allDay =
            startMeta &&
            startMeta.isTimeUnspecified &&
            (!endMeta || endMeta.isTimeUnspecified)
        }
        return __assign(
          {
            range: {
              start: startMeta ? startMeta.marker : null,
              end: endMeta ? endMeta.marker : null,
            },
            allDay: allDay,
          },
          extra
        )
      }

      function isDateSpansEqual(span0, span1) {
        return (
          rangesEqual(span0.range, span1.range) &&
          span0.allDay === span1.allDay &&
          isSpanPropsEqual(span0, span1)
        )
      }

      // the NON-DATE-RELATED props
      function isSpanPropsEqual(span0, span1) {
        for (var propName in span1) {
          if (propName !== 'range' && propName !== 'allDay') {
            if (span0[propName] !== span1[propName]) {
              return false
            }
          }
        }
        // are there any props that span0 has that span1 DOESN'T have?
        // both have range/allDay, so no need to special-case.
        for (var propName in span0) {
          if (!(propName in span1)) {
            return false
          }
        }
        return true
      }

      function buildDateSpanApi(span, dateEnv) {
        return __assign(
          __assign({}, buildRangeApi(span.range, dateEnv, span.allDay)),
          { allDay: span.allDay }
        )
      }

      function buildRangeApiWithTimeZone(range, dateEnv, omitTime) {
        return __assign(__assign({}, buildRangeApi(range, dateEnv, omitTime)), {
          timeZone: dateEnv.timeZone,
        })
      }

      function buildRangeApi(range, dateEnv, omitTime) {
        return {
          start: dateEnv.toDate(range.start),
          end: dateEnv.toDate(range.end),
          startStr: dateEnv.formatIso(range.start, { omitTime: omitTime }),
          endStr: dateEnv.formatIso(range.end, { omitTime: omitTime }),
        }
      }

      function fabricateEventRange(dateSpan, eventUiBases, context) {
        var res = refineEventDef({ editable: false }, context)
        var def = parseEventDef(
          res.refined,
          res.extra,
          '', // sourceId
          dateSpan.allDay,
          true, // hasEnd
          context
        )
        return {
          def: def,
          ui: compileEventUi(def, eventUiBases),
          instance: createEventInstance(def.defId, dateSpan.range),
          range: dateSpan.range,
          isStart: true,
          isEnd: true,
        }
      }

      function triggerDateSelect(selection, pev, context) {
        context.emitter.trigger(
          'select',
          __assign(
            __assign({}, buildDateSpanApiWithContext(selection, context)),
            {
              jsEvent: pev ? pev.origEvent : null,
              view: context.viewApi || context.calendarApi.view,
            }
          )
        )
      }

      function triggerDateUnselect(pev, context) {
        context.emitter.trigger('unselect', {
          jsEvent: pev ? pev.origEvent : null,
          view: context.viewApi || context.calendarApi.view,
        })
      }

      function buildDateSpanApiWithContext(dateSpan, context) {
        var props = {}
        for (
          var _i = 0, _a = context.pluginHooks.dateSpanTransforms;
          _i < _a.length;
          _i++
        ) {
          var transform = _a[_i]
          __assign(props, transform(dateSpan, context))
        }
        __assign(props, buildDateSpanApi(dateSpan, context.dateEnv))
        return props
      }

      // Given an event's allDay status and start date, return what its fallback end date should be.
      // TODO: rename to computeDefaultEventEnd
      function getDefaultEventEnd(allDay, marker, context) {
        var dateEnv = context.dateEnv,
          options = context.options
        var end = marker
        if (allDay) {
          end = startOfDay(end)
          end = dateEnv.add(end, options.defaultAllDayEventDuration)
        } else {
          end = dateEnv.add(end, options.defaultTimedEventDuration)
        }
        return end
      }

      // applies the mutation to ALL defs/instances within the event store
      function applyMutationToEventStore(
        eventStore,
        eventConfigBase,
        mutation,
        context
      ) {
        var eventConfigs = compileEventUis(eventStore.defs, eventConfigBase)
        var dest = createEmptyEventStore()
        for (var defId in eventStore.defs) {
          var def = eventStore.defs[defId]
          dest.defs[defId] = applyMutationToEventDef(
            def,
            eventConfigs[defId],
            mutation,
            context
          )
        }
        for (var instanceId in eventStore.instances) {
          var instance = eventStore.instances[instanceId]
          var def = dest.defs[instance.defId] // important to grab the newly modified def
          dest.instances[instanceId] = applyMutationToEventInstance(
            instance,
            def,
            eventConfigs[instance.defId],
            mutation,
            context
          )
        }
        return dest
      }

      function applyMutationToEventDef(
        eventDef,
        eventConfig,
        mutation,
        context
      ) {
        var standardProps = mutation.standardProps || {}
        // if hasEnd has not been specified, guess a good value based on deltas.
        // if duration will change, there's no way the default duration will persist,
        // and thus, we need to mark the event as having a real end
        if (
          standardProps.hasEnd == null &&
          eventConfig.durationEditable &&
          (mutation.startDelta || mutation.endDelta)
        ) {
          standardProps.hasEnd = true // TODO: is this mutation okay?
        }
        var copy = __assign(__assign(__assign({}, eventDef), standardProps), {
          ui: __assign(__assign({}, eventDef.ui), standardProps.ui),
        })
        if (mutation.extendedProps) {
          copy.extendedProps = __assign(
            __assign({}, copy.extendedProps),
            mutation.extendedProps
          )
        }
        for (
          var _i = 0, _a = context.pluginHooks.eventDefMutationAppliers;
          _i < _a.length;
          _i++
        ) {
          var applier = _a[_i]
          applier(copy, mutation, context)
        }
        if (!copy.hasEnd && context.options.forceEventDuration) {
          copy.hasEnd = true
        }
        return copy
      }

      function applyMutationToEventInstance(
        eventInstance,
        eventDef, // must first be modified by applyMutationToEventDef
        eventConfig,
        mutation,
        context
      ) {
        var dateEnv = context.dateEnv
        var forceAllDay =
          mutation.standardProps && mutation.standardProps.allDay === true
        var clearEnd =
          mutation.standardProps && mutation.standardProps.hasEnd === false
        var copy = __assign({}, eventInstance)
        if (forceAllDay) {
          copy.range = computeAlignedDayRange(copy.range)
        }
        if (mutation.datesDelta && eventConfig.startEditable) {
          copy.range = {
            start: dateEnv.add(copy.range.start, mutation.datesDelta),
            end: dateEnv.add(copy.range.end, mutation.datesDelta),
          }
        }
        if (mutation.startDelta && eventConfig.durationEditable) {
          copy.range = {
            start: dateEnv.add(copy.range.start, mutation.startDelta),
            end: copy.range.end,
          }
        }
        if (mutation.endDelta && eventConfig.durationEditable) {
          copy.range = {
            start: copy.range.start,
            end: dateEnv.add(copy.range.end, mutation.endDelta),
          }
        }
        if (clearEnd) {
          copy.range = {
            start: copy.range.start,
            end: getDefaultEventEnd(eventDef.allDay, copy.range.start, context),
          }
        }
        // in case event was all-day but the supplied deltas were not
        // better util for this?
        if (eventDef.allDay) {
          copy.range = {
            start: startOfDay(copy.range.start),
            end: startOfDay(copy.range.end),
          }
        }
        // handle invalid durations
        if (copy.range.end < copy.range.start) {
          copy.range.end = getDefaultEventEnd(
            eventDef.allDay,
            copy.range.start,
            context
          )
        }
        return copy
      }

      // no public types yet. when there are, export from:
      // import {} from './api-type-deps'
      var ViewApi = /** @class */ (function () {
        function ViewApi(type, getCurrentData, dateEnv) {
          this.type = type
          this.getCurrentData = getCurrentData
          this.dateEnv = dateEnv
        }

        Object.defineProperty(ViewApi.prototype, 'calendar', {
          get: function () {
            return this.getCurrentData().calendarApi
          },
          enumerable: false,
          configurable: true,
        })
        Object.defineProperty(ViewApi.prototype, 'title', {
          get: function () {
            return this.getCurrentData().viewTitle
          },
          enumerable: false,
          configurable: true,
        })
        Object.defineProperty(ViewApi.prototype, 'activeStart', {
          get: function () {
            return this.dateEnv.toDate(
              this.getCurrentData().dateProfile.activeRange.start
            )
          },
          enumerable: false,
          configurable: true,
        })
        Object.defineProperty(ViewApi.prototype, 'activeEnd', {
          get: function () {
            return this.dateEnv.toDate(
              this.getCurrentData().dateProfile.activeRange.end
            )
          },
          enumerable: false,
          configurable: true,
        })
        Object.defineProperty(ViewApi.prototype, 'currentStart', {
          get: function () {
            return this.dateEnv.toDate(
              this.getCurrentData().dateProfile.currentRange.start
            )
          },
          enumerable: false,
          configurable: true,
        })
        Object.defineProperty(ViewApi.prototype, 'currentEnd', {
          get: function () {
            return this.dateEnv.toDate(
              this.getCurrentData().dateProfile.currentRange.end
            )
          },
          enumerable: false,
          configurable: true,
        })
        ViewApi.prototype.getOption = function (name) {
          return this.getCurrentData().options[name] // are the view-specific options
        }
        return ViewApi
      })()

      var EVENT_SOURCE_REFINERS = {
        id: String,
        defaultAllDay: Boolean,
        url: String,
        format: String,
        events: identity,
        eventDataTransform: identity, // for any network-related sources
        success: identity,
        failure: identity,
      }

      function parseEventSource(raw, context, refiners) {
        if (refiners === void 0) {
          refiners = buildEventSourceRefiners(context)
        }
        var rawObj
        if (typeof raw === 'string') {
          rawObj = { url: raw }
        } else if (typeof raw === 'function' || Array.isArray(raw)) {
          rawObj = { events: raw }
        } else if (typeof raw === 'object' && raw) {
          // not null
          rawObj = raw
        }
        if (rawObj) {
          var _a = refineProps(rawObj, refiners),
            refined = _a.refined,
            extra = _a.extra
          var metaRes = buildEventSourceMeta(refined, context)
          if (metaRes) {
            return {
              _raw: raw,
              isFetching: false,
              latestFetchId: '',
              fetchRange: null,
              defaultAllDay: refined.defaultAllDay,
              eventDataTransform: refined.eventDataTransform,
              success: refined.success,
              failure: refined.failure,
              publicId: refined.id || '',
              sourceId: guid(),
              sourceDefId: metaRes.sourceDefId,
              meta: metaRes.meta,
              ui: createEventUi(refined, context),
              extendedProps: extra,
            }
          }
        }
        return null
      }

      function buildEventSourceRefiners(context) {
        return __assign(
          __assign(__assign({}, EVENT_UI_REFINERS), EVENT_SOURCE_REFINERS),
          context.pluginHooks.eventSourceRefiners
        )
      }

      function buildEventSourceMeta(raw, context) {
        var defs = context.pluginHooks.eventSourceDefs
        for (var i = defs.length - 1; i >= 0; i -= 1) {
          // later-added plugins take precedence
          var def = defs[i]
          var meta = def.parseMeta(raw)
          if (meta) {
            return { sourceDefId: i, meta: meta }
          }
        }
        return null
      }

      function reduceCurrentDate(currentDate, action) {
        switch (action.type) {
          case 'CHANGE_DATE':
            return action.dateMarker
          default:
            return currentDate
        }
      }

      function getInitialDate(options, dateEnv) {
        var initialDateInput = options.initialDate
        // compute the initial ambig-timezone date
        if (initialDateInput != null) {
          return dateEnv.createMarker(initialDateInput)
        }
        return getNow(options.now, dateEnv) // getNow already returns unzoned
      }

      function getNow(nowInput, dateEnv) {
        if (typeof nowInput === 'function') {
          nowInput = nowInput()
        }
        if (nowInput == null) {
          return dateEnv.createNowMarker()
        }
        return dateEnv.createMarker(nowInput)
      }

      var CalendarApi = /** @class */ (function () {
        function CalendarApi() {}

        CalendarApi.prototype.getCurrentData = function () {
          return this.currentDataManager.getCurrentData()
        }
        CalendarApi.prototype.dispatch = function (action) {
          return this.currentDataManager.dispatch(action)
        }
        Object.defineProperty(CalendarApi.prototype, 'view', {
          get: function () {
            return this.getCurrentData().viewApi
          }, // for public API
          enumerable: false,
          configurable: true,
        })
        CalendarApi.prototype.batchRendering = function (callback) {
          callback()
        }
        CalendarApi.prototype.updateSize = function () {
          this.trigger('_resize', true)
        }
        // Options
        // -----------------------------------------------------------------------------------------------------------------
        CalendarApi.prototype.setOption = function (name, val) {
          this.dispatch({
            type: 'SET_OPTION',
            optionName: name,
            rawOptionValue: val,
          })
        }
        CalendarApi.prototype.getOption = function (name) {
          return this.currentDataManager.currentCalendarOptionsInput[name]
        }
        CalendarApi.prototype.getAvailableLocaleCodes = function () {
          return Object.keys(this.getCurrentData().availableRawLocales)
        }
        // Trigger
        // -----------------------------------------------------------------------------------------------------------------
        CalendarApi.prototype.on = function (handlerName, handler) {
          var currentDataManager = this.currentDataManager
          if (currentDataManager.currentCalendarOptionsRefiners[handlerName]) {
            currentDataManager.emitter.on(handlerName, handler)
          } else {
            console.warn("Unknown listener name '" + handlerName + "'")
          }
        }
        CalendarApi.prototype.off = function (handlerName, handler) {
          this.currentDataManager.emitter.off(handlerName, handler)
        }
        // not meant for public use
        CalendarApi.prototype.trigger = function (handlerName) {
          var _a
          var args = []
          for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i]
          }
          ;(_a = this.currentDataManager.emitter).trigger.apply(
            _a,
            __spreadArrays([handlerName], args)
          )
        }
        // View
        // -----------------------------------------------------------------------------------------------------------------
        CalendarApi.prototype.changeView = function (viewType, dateOrRange) {
          var _this = this
          this.batchRendering(function () {
            _this.unselect()
            if (dateOrRange) {
              if (dateOrRange.start && dateOrRange.end) {
                // a range
                _this.dispatch({
                  type: 'CHANGE_VIEW_TYPE',
                  viewType: viewType,
                })
                _this.dispatch({
                  type: 'SET_OPTION',
                  optionName: 'visibleRange',
                  rawOptionValue: dateOrRange,
                })
              } else {
                var dateEnv = _this.getCurrentData().dateEnv
                _this.dispatch({
                  type: 'CHANGE_VIEW_TYPE',
                  viewType: viewType,
                  dateMarker: dateEnv.createMarker(dateOrRange),
                })
              }
            } else {
              _this.dispatch({
                type: 'CHANGE_VIEW_TYPE',
                viewType: viewType,
              })
            }
          })
        }
        // Forces navigation to a view for the given date.
        // `viewType` can be a specific view name or a generic one like "week" or "day".
        // needs to change
        CalendarApi.prototype.zoomTo = function (dateMarker, viewType) {
          var state = this.getCurrentData()
          var spec
          viewType = viewType || 'day' // day is default zoom
          spec = state.viewSpecs[viewType] || this.getUnitViewSpec(viewType)
          this.unselect()
          if (spec) {
            this.dispatch({
              type: 'CHANGE_VIEW_TYPE',
              viewType: spec.type,
              dateMarker: dateMarker,
            })
          } else {
            this.dispatch({
              type: 'CHANGE_DATE',
              dateMarker: dateMarker,
            })
          }
        }
        // Given a duration singular unit, like "week" or "day", finds a matching view spec.
        // Preference is given to views that have corresponding buttons.
        CalendarApi.prototype.getUnitViewSpec = function (unit) {
          var _a = this.getCurrentData(),
            viewSpecs = _a.viewSpecs,
            toolbarConfig = _a.toolbarConfig
          var viewTypes = [].concat(toolbarConfig.viewsWithButtons)
          var i
          var spec
          for (var viewType in viewSpecs) {
            viewTypes.push(viewType)
          }
          for (i = 0; i < viewTypes.length; i += 1) {
            spec = viewSpecs[viewTypes[i]]
            if (spec) {
              if (spec.singleUnit === unit) {
                return spec
              }
            }
          }
          return null
        }
        // Current Date
        // -----------------------------------------------------------------------------------------------------------------
        CalendarApi.prototype.prev = function () {
          this.unselect()
          this.dispatch({ type: 'PREV' })
        }
        CalendarApi.prototype.next = function () {
          this.unselect()
          this.dispatch({ type: 'NEXT' })
        }
        CalendarApi.prototype.prevYear = function () {
          var state = this.getCurrentData()
          this.unselect()
          this.dispatch({
            type: 'CHANGE_DATE',
            dateMarker: state.dateEnv.addYears(state.currentDate, -1),
          })
        }
        CalendarApi.prototype.nextYear = function () {
          var state = this.getCurrentData()
          this.unselect()
          this.dispatch({
            type: 'CHANGE_DATE',
            dateMarker: state.dateEnv.addYears(state.currentDate, 1),
          })
        }
        CalendarApi.prototype.today = function () {
          var state = this.getCurrentData()
          this.unselect()
          this.dispatch({
            type: 'CHANGE_DATE',
            dateMarker: getNow(state.calendarOptions.now, state.dateEnv),
          })
        }
        CalendarApi.prototype.gotoDate = function (zonedDateInput) {
          var state = this.getCurrentData()
          this.unselect()
          this.dispatch({
            type: 'CHANGE_DATE',
            dateMarker: state.dateEnv.createMarker(zonedDateInput),
          })
        }
        CalendarApi.prototype.incrementDate = function (deltaInput) {
          var state = this.getCurrentData()
          var delta = createDuration(deltaInput)
          if (delta) {
            // else, warn about invalid input?
            this.unselect()
            this.dispatch({
              type: 'CHANGE_DATE',
              dateMarker: state.dateEnv.add(state.currentDate, delta),
            })
          }
        }
        // for external API
        CalendarApi.prototype.getDate = function () {
          var state = this.getCurrentData()
          return state.dateEnv.toDate(state.currentDate)
        }
        // Date Formatting Utils
        // -----------------------------------------------------------------------------------------------------------------
        CalendarApi.prototype.formatDate = function (d, formatter) {
          var dateEnv = this.getCurrentData().dateEnv
          return dateEnv.format(
            dateEnv.createMarker(d),
            createFormatter(formatter)
          )
        }
        // `settings` is for formatter AND isEndExclusive
        CalendarApi.prototype.formatRange = function (d0, d1, settings) {
          var dateEnv = this.getCurrentData().dateEnv
          return dateEnv.formatRange(
            dateEnv.createMarker(d0),
            dateEnv.createMarker(d1),
            createFormatter(settings),
            settings
          )
        }
        CalendarApi.prototype.formatIso = function (d, omitTime) {
          var dateEnv = this.getCurrentData().dateEnv
          return dateEnv.formatIso(dateEnv.createMarker(d), {
            omitTime: omitTime,
          })
        }
        // Date Selection / Event Selection / DayClick
        // -----------------------------------------------------------------------------------------------------------------
        // this public method receives start/end dates in any format, with any timezone
        // NOTE: args were changed from v3
        CalendarApi.prototype.select = function (dateOrObj, endDate) {
          var selectionInput
          if (endDate == null) {
            if (dateOrObj.start != null) {
              selectionInput = dateOrObj
            } else {
              selectionInput = {
                start: dateOrObj,
                end: null,
              }
            }
          } else {
            selectionInput = {
              start: dateOrObj,
              end: endDate,
            }
          }
          var state = this.getCurrentData()
          var selection = parseDateSpan(
            selectionInput,
            state.dateEnv,
            createDuration({ days: 1 })
          )
          if (selection) {
            // throw parse error otherwise?
            this.dispatch({ type: 'SELECT_DATES', selection: selection })
            triggerDateSelect(selection, null, state)
          }
        }
        // public method
        CalendarApi.prototype.unselect = function (pev) {
          var state = this.getCurrentData()
          if (state.dateSelection) {
            this.dispatch({ type: 'UNSELECT_DATES' })
            triggerDateUnselect(pev, state)
          }
        }
        // Public Events API
        // -----------------------------------------------------------------------------------------------------------------
        CalendarApi.prototype.addEvent = function (eventInput, sourceInput) {
          if (eventInput instanceof EventApi) {
            var def = eventInput._def
            var instance = eventInput._instance
            var currentData = this.getCurrentData()
            // not already present? don't want to add an old snapshot
            if (!currentData.eventStore.defs[def.defId]) {
              this.dispatch({
                type: 'ADD_EVENTS',
                eventStore: eventTupleToStore({ def: def, instance: instance }),
              })
              this.triggerEventAdd(eventInput)
            }
            return eventInput
          }
          var state = this.getCurrentData()
          var eventSource
          if (sourceInput instanceof EventSourceApi) {
            eventSource = sourceInput.internalEventSource
          } else if (typeof sourceInput === 'boolean') {
            if (sourceInput) {
              // true. part of the first event source
              eventSource = hashValuesToArray(state.eventSources)[0]
            }
          } else if (sourceInput != null) {
            // an ID. accepts a number too
            var sourceApi = this.getEventSourceById(sourceInput) // TODO: use an internal function
            if (!sourceApi) {
              console.warn(
                'Could not find an event source with ID "' + sourceInput + '"'
              ) // TODO: test
              return null
            }
            eventSource = sourceApi.internalEventSource
          }
          var tuple = parseEvent(eventInput, eventSource, state, false)
          if (tuple) {
            var newEventApi = new EventApi(
              state,
              tuple.def,
              tuple.def.recurringDef ? null : tuple.instance
            )
            this.dispatch({
              type: 'ADD_EVENTS',
              eventStore: eventTupleToStore(tuple),
            })
            this.triggerEventAdd(newEventApi)
            return newEventApi
          }
          return null
        }
        CalendarApi.prototype.triggerEventAdd = function (eventApi) {
          var _this = this
          var emitter = this.getCurrentData().emitter
          emitter.trigger('eventAdd', {
            event: eventApi,
            relatedEvents: [],
            revert: function () {
              _this.dispatch({
                type: 'REMOVE_EVENTS',
                eventStore: eventApiToStore(eventApi),
              })
            },
          })
        }
        // TODO: optimize
        CalendarApi.prototype.getEventById = function (id) {
          var state = this.getCurrentData()
          var _a = state.eventStore,
            defs = _a.defs,
            instances = _a.instances
          id = String(id)
          for (var defId in defs) {
            var def = defs[defId]
            if (def.publicId === id) {
              if (def.recurringDef) {
                return new EventApi(state, def, null)
              }
              for (var instanceId in instances) {
                var instance = instances[instanceId]
                if (instance.defId === def.defId) {
                  return new EventApi(state, def, instance)
                }
              }
            }
          }
          return null
        }
        CalendarApi.prototype.getEvents = function () {
          var currentData = this.getCurrentData()
          return buildEventApis(currentData.eventStore, currentData)
        }
        CalendarApi.prototype.removeAllEvents = function () {
          this.dispatch({ type: 'REMOVE_ALL_EVENTS' })
        }
        // Public Event Sources API
        // -----------------------------------------------------------------------------------------------------------------
        CalendarApi.prototype.getEventSources = function () {
          var state = this.getCurrentData()
          var sourceHash = state.eventSources
          var sourceApis = []
          for (var internalId in sourceHash) {
            sourceApis.push(new EventSourceApi(state, sourceHash[internalId]))
          }
          return sourceApis
        }
        CalendarApi.prototype.getEventSourceById = function (id) {
          var state = this.getCurrentData()
          var sourceHash = state.eventSources
          id = String(id)
          for (var sourceId in sourceHash) {
            if (sourceHash[sourceId].publicId === id) {
              return new EventSourceApi(state, sourceHash[sourceId])
            }
          }
          return null
        }
        CalendarApi.prototype.addEventSource = function (sourceInput) {
          var state = this.getCurrentData()
          if (sourceInput instanceof EventSourceApi) {
            // not already present? don't want to add an old snapshot
            if (!state.eventSources[sourceInput.internalEventSource.sourceId]) {
              this.dispatch({
                type: 'ADD_EVENT_SOURCES',
                sources: [sourceInput.internalEventSource],
              })
            }
            return sourceInput
          }
          var eventSource = parseEventSource(sourceInput, state)
          if (eventSource) {
            // TODO: error otherwise?
            this.dispatch({ type: 'ADD_EVENT_SOURCES', sources: [eventSource] })
            return new EventSourceApi(state, eventSource)
          }
          return null
        }
        CalendarApi.prototype.removeAllEventSources = function () {
          this.dispatch({ type: 'REMOVE_ALL_EVENT_SOURCES' })
        }
        CalendarApi.prototype.refetchEvents = function () {
          this.dispatch({ type: 'FETCH_EVENT_SOURCES', isRefetch: true })
        }
        // Scroll
        // -----------------------------------------------------------------------------------------------------------------
        CalendarApi.prototype.scrollToTime = function (timeInput) {
          var time = createDuration(timeInput)
          if (time) {
            this.trigger('_scrollRequest', { time: time })
          }
        }
        return CalendarApi
      })()

      var EventApi = /** @class */ (function () {
        // instance will be null if expressing a recurring event that has no current instances,
        // OR if trying to validate an incoming external event that has no dates assigned
        function EventApi(context, def, instance) {
          this._context = context
          this._def = def
          this._instance = instance || null
        }

        /*
        TODO: make event struct more responsible for this
        */
        EventApi.prototype.setProp = function (name, val) {
          var _a, _b
          if (name in EVENT_DATE_REFINERS) {
            console.warn(
              "Could not set date-related prop 'name'. Use one of the date-related methods instead."
            )
            // TODO: make proper aliasing system?
          } else if (name === 'id') {
            val = EVENT_NON_DATE_REFINERS[name](val)
            this.mutate({
              standardProps: { publicId: val },
            })
          } else if (name in EVENT_NON_DATE_REFINERS) {
            val = EVENT_NON_DATE_REFINERS[name](val)
            this.mutate({
              standardProps: ((_a = {}), (_a[name] = val), _a),
            })
          } else if (name in EVENT_UI_REFINERS) {
            var ui = EVENT_UI_REFINERS[name](val)
            if (name === 'color') {
              ui = { backgroundColor: val, borderColor: val }
            } else if (name === 'editable') {
              ui = { startEditable: val, durationEditable: val }
            } else {
              ui = ((_b = {}), (_b[name] = val), _b)
            }
            this.mutate({
              standardProps: { ui: ui },
            })
          } else {
            console.warn(
              "Could not set prop '" + name + "'. Use setExtendedProp instead."
            )
          }
        }
        EventApi.prototype.setExtendedProp = function (name, val) {
          var _a
          this.mutate({
            extendedProps: ((_a = {}), (_a[name] = val), _a),
          })
        }
        EventApi.prototype.setStart = function (startInput, options) {
          if (options === void 0) {
            options = {}
          }
          var dateEnv = this._context.dateEnv
          var start = dateEnv.createMarker(startInput)
          if (start && this._instance) {
            // TODO: warning if parsed bad
            var instanceRange = this._instance.range
            var startDelta = diffDates(
              instanceRange.start,
              start,
              dateEnv,
              options.granularity
            ) // what if parsed bad!?
            if (options.maintainDuration) {
              this.mutate({ datesDelta: startDelta })
            } else {
              this.mutate({ startDelta: startDelta })
            }
          }
        }
        EventApi.prototype.setEnd = function (endInput, options) {
          if (options === void 0) {
            options = {}
          }
          var dateEnv = this._context.dateEnv
          var end
          if (endInput != null) {
            end = dateEnv.createMarker(endInput)
            if (!end) {
              return // TODO: warning if parsed bad
            }
          }
          if (this._instance) {
            if (end) {
              var endDelta = diffDates(
                this._instance.range.end,
                end,
                dateEnv,
                options.granularity
              )
              this.mutate({ endDelta: endDelta })
            } else {
              this.mutate({ standardProps: { hasEnd: false } })
            }
          }
        }
        EventApi.prototype.setDates = function (startInput, endInput, options) {
          if (options === void 0) {
            options = {}
          }
          var dateEnv = this._context.dateEnv
          var standardProps = { allDay: options.allDay }
          var start = dateEnv.createMarker(startInput)
          var end
          if (!start) {
            return // TODO: warning if parsed bad
          }
          if (endInput != null) {
            end = dateEnv.createMarker(endInput)
            if (!end) {
              // TODO: warning if parsed bad
              return
            }
          }
          if (this._instance) {
            var instanceRange = this._instance.range
            // when computing the diff for an event being converted to all-day,
            // compute diff off of the all-day values the way event-mutation does.
            if (options.allDay === true) {
              instanceRange = computeAlignedDayRange(instanceRange)
            }
            var startDelta = diffDates(
              instanceRange.start,
              start,
              dateEnv,
              options.granularity
            )
            if (end) {
              var endDelta = diffDates(
                instanceRange.end,
                end,
                dateEnv,
                options.granularity
              )
              if (durationsEqual(startDelta, endDelta)) {
                this.mutate({
                  datesDelta: startDelta,
                  standardProps: standardProps,
                })
              } else {
                this.mutate({
                  startDelta: startDelta,
                  endDelta: endDelta,
                  standardProps: standardProps,
                })
              }
            } else {
              // means "clear the end"
              standardProps.hasEnd = false
              this.mutate({
                datesDelta: startDelta,
                standardProps: standardProps,
              })
            }
          }
        }
        EventApi.prototype.moveStart = function (deltaInput) {
          var delta = createDuration(deltaInput)
          if (delta) {
            // TODO: warning if parsed bad
            this.mutate({ startDelta: delta })
          }
        }
        EventApi.prototype.moveEnd = function (deltaInput) {
          var delta = createDuration(deltaInput)
          if (delta) {
            // TODO: warning if parsed bad
            this.mutate({ endDelta: delta })
          }
        }
        EventApi.prototype.moveDates = function (deltaInput) {
          var delta = createDuration(deltaInput)
          if (delta) {
            // TODO: warning if parsed bad
            this.mutate({ datesDelta: delta })
          }
        }
        EventApi.prototype.setAllDay = function (allDay, options) {
          if (options === void 0) {
            options = {}
          }
          var standardProps = { allDay: allDay }
          var maintainDuration = options.maintainDuration
          if (maintainDuration == null) {
            maintainDuration = this._context.options.allDayMaintainDuration
          }
          if (this._def.allDay !== allDay) {
            standardProps.hasEnd = maintainDuration
          }
          this.mutate({ standardProps: standardProps })
        }
        EventApi.prototype.formatRange = function (formatInput) {
          var dateEnv = this._context.dateEnv
          var instance = this._instance
          var formatter = createFormatter(formatInput)
          if (this._def.hasEnd) {
            return dateEnv.formatRange(
              instance.range.start,
              instance.range.end,
              formatter,
              {
                forcedStartTzo: instance.forcedStartTzo,
                forcedEndTzo: instance.forcedEndTzo,
              }
            )
          }
          return dateEnv.format(instance.range.start, formatter, {
            forcedTzo: instance.forcedStartTzo,
          })
        }
        EventApi.prototype.mutate = function (mutation) {
          var instance = this._instance
          if (instance) {
            var def = this._def
            var context_1 = this._context
            var eventStore_1 = context_1.getCurrentData().eventStore
            var relevantEvents = getRelevantEvents(
              eventStore_1,
              instance.instanceId
            )
            var eventConfigBase = {
              '': {
                display: '',
                startEditable: true,
                durationEditable: true,
                constraints: [],
                overlap: null,
                allows: [],
                backgroundColor: '',
                borderColor: '',
                textColor: '',
                classNames: [],
              },
            }
            relevantEvents = applyMutationToEventStore(
              relevantEvents,
              eventConfigBase,
              mutation,
              context_1
            )
            var oldEvent = new EventApi(context_1, def, instance) // snapshot
            this._def = relevantEvents.defs[def.defId]
            this._instance = relevantEvents.instances[instance.instanceId]
            context_1.dispatch({
              type: 'MERGE_EVENTS',
              eventStore: relevantEvents,
            })
            context_1.emitter.trigger('eventChange', {
              oldEvent: oldEvent,
              event: this,
              relatedEvents: buildEventApis(
                relevantEvents,
                context_1,
                instance
              ),
              revert: function () {
                context_1.dispatch({
                  type: 'RESET_EVENTS',
                  eventStore: eventStore_1,
                })
              },
            })
          }
        }
        EventApi.prototype.remove = function () {
          var context = this._context
          var asStore = eventApiToStore(this)
          context.dispatch({
            type: 'REMOVE_EVENTS',
            eventStore: asStore,
          })
          context.emitter.trigger('eventRemove', {
            event: this,
            relatedEvents: [],
            revert: function () {
              context.dispatch({
                type: 'MERGE_EVENTS',
                eventStore: asStore,
              })
            },
          })
        }
        Object.defineProperty(EventApi.prototype, 'source', {
          get: function () {
            var sourceId = this._def.sourceId
            if (sourceId) {
              return new EventSourceApi(
                this._context,
                this._context.getCurrentData().eventSources[sourceId]
              )
            }
            return null
          },
          enumerable: false,
          configurable: true,
        })
        Object.defineProperty(EventApi.prototype, 'start', {
          get: function () {
            return this._instance
              ? this._context.dateEnv.toDate(this._instance.range.start)
              : null
          },
          enumerable: false,
          configurable: true,
        })
        Object.defineProperty(EventApi.prototype, 'end', {
          get: function () {
            return this._instance && this._def.hasEnd
              ? this._context.dateEnv.toDate(this._instance.range.end)
              : null
          },
          enumerable: false,
          configurable: true,
        })
        Object.defineProperty(EventApi.prototype, 'startStr', {
          get: function () {
            var instance = this._instance
            if (instance) {
              return this._context.dateEnv.formatIso(instance.range.start, {
                omitTime: this._def.allDay,
                forcedTzo: instance.forcedStartTzo,
              })
            }
            return ''
          },
          enumerable: false,
          configurable: true,
        })
        Object.defineProperty(EventApi.prototype, 'endStr', {
          get: function () {
            var instance = this._instance
            if (instance && this._def.hasEnd) {
              return this._context.dateEnv.formatIso(instance.range.end, {
                omitTime: this._def.allDay,
                forcedTzo: instance.forcedEndTzo,
              })
            }
            return ''
          },
          enumerable: false,
          configurable: true,
        })
        Object.defineProperty(EventApi.prototype, 'id', {
          // computable props that all access the def
          // TODO: find a TypeScript-compatible way to do this at scale
          get: function () {
            return this._def.publicId
          },
          enumerable: false,
          configurable: true,
        })
        Object.defineProperty(EventApi.prototype, 'groupId', {
          get: function () {
            return this._def.groupId
          },
          enumerable: false,
          configurable: true,
        })
        Object.defineProperty(EventApi.prototype, 'allDay', {
          get: function () {
            return this._def.allDay
          },
          enumerable: false,
          configurable: true,
        })
        Object.defineProperty(EventApi.prototype, 'title', {
          get: function () {
            return this._def.title
          },
          enumerable: false,
          configurable: true,
        })
        Object.defineProperty(EventApi.prototype, 'url', {
          get: function () {
            return this._def.url
          },
          enumerable: false,
          configurable: true,
        })
        Object.defineProperty(EventApi.prototype, 'display', {
          get: function () {
            return this._def.ui.display || 'auto'
          }, // bad. just normalize the type earlier
          enumerable: false,
          configurable: true,
        })
        Object.defineProperty(EventApi.prototype, 'startEditable', {
          get: function () {
            return this._def.ui.startEditable
          },
          enumerable: false,
          configurable: true,
        })
        Object.defineProperty(EventApi.prototype, 'durationEditable', {
          get: function () {
            return this._def.ui.durationEditable
          },
          enumerable: false,
          configurable: true,
        })
        Object.defineProperty(EventApi.prototype, 'constraint', {
          get: function () {
            return this._def.ui.constraints[0] || null
          },
          enumerable: false,
          configurable: true,
        })
        Object.defineProperty(EventApi.prototype, 'overlap', {
          get: function () {
            return this._def.ui.overlap
          },
          enumerable: false,
          configurable: true,
        })
        Object.defineProperty(EventApi.prototype, 'allow', {
          get: function () {
            return this._def.ui.allows[0] || null
          },
          enumerable: false,
          configurable: true,
        })
        Object.defineProperty(EventApi.prototype, 'backgroundColor', {
          get: function () {
            return this._def.ui.backgroundColor
          },
          enumerable: false,
          configurable: true,
        })
        Object.defineProperty(EventApi.prototype, 'borderColor', {
          get: function () {
            return this._def.ui.borderColor
          },
          enumerable: false,
          configurable: true,
        })
        Object.defineProperty(EventApi.prototype, 'textColor', {
          get: function () {
            return this._def.ui.textColor
          },
          enumerable: false,
          configurable: true,
        })
        Object.defineProperty(EventApi.prototype, 'classNames', {
          // NOTE: user can't modify these because Object.freeze was called in event-def parsing
          get: function () {
            return this._def.ui.classNames
          },
          enumerable: false,
          configurable: true,
        })
        Object.defineProperty(EventApi.prototype, 'extendedProps', {
          get: function () {
            return this._def.extendedProps
          },
          enumerable: false,
          configurable: true,
        })
        EventApi.prototype.toPlainObject = function (settings) {
          if (settings === void 0) {
            settings = {}
          }
          var def = this._def
          var ui = def.ui
          var _a = this,
            startStr = _a.startStr,
            endStr = _a.endStr
          var res = {}
          if (def.title) {
            res.title = def.title
          }
          if (startStr) {
            res.start = startStr
          }
          if (endStr) {
            res.end = endStr
          }
          if (def.publicId) {
            res.id = def.publicId
          }
          if (def.groupId) {
            res.groupId = def.groupId
          }
          if (def.url) {
            res.url = def.url
          }
          if (ui.display && ui.display !== 'auto') {
            res.display = ui.display
          }
          // TODO: what about recurring-event properties???
          // TODO: include startEditable/durationEditable/constraint/overlap/allow
          if (
            settings.collapseColor &&
            ui.backgroundColor &&
            ui.backgroundColor === ui.borderColor
          ) {
            res.color = ui.backgroundColor
          } else {
            if (ui.backgroundColor) {
              res.backgroundColor = ui.backgroundColor
            }
            if (ui.borderColor) {
              res.borderColor = ui.borderColor
            }
          }
          if (ui.textColor) {
            res.textColor = ui.textColor
          }
          if (ui.classNames.length) {
            res.classNames = ui.classNames
          }
          if (Object.keys(def.extendedProps).length) {
            if (settings.collapseExtendedProps) {
              __assign(res, def.extendedProps)
            } else {
              res.extendedProps = def.extendedProps
            }
          }
          return res
        }
        EventApi.prototype.toJSON = function () {
          return this.toPlainObject()
        }
        return EventApi
      })()

      function eventApiToStore(eventApi) {
        var _a, _b
        var def = eventApi._def
        var instance = eventApi._instance
        return {
          defs: ((_a = {}), (_a[def.defId] = def), _a),
          instances: instance
            ? ((_b = {}), (_b[instance.instanceId] = instance), _b)
            : {},
        }
      }

      function buildEventApis(eventStore, context, excludeInstance) {
        var defs = eventStore.defs,
          instances = eventStore.instances
        var eventApis = []
        var excludeInstanceId = excludeInstance
          ? excludeInstance.instanceId
          : ''
        for (var id in instances) {
          var instance = instances[id]
          var def = defs[instance.defId]
          if (instance.instanceId !== excludeInstanceId) {
            eventApis.push(new EventApi(context, def, instance))
          }
        }
        return eventApis
      }

      var calendarSystemClassMap = {}

      function registerCalendarSystem(name, theClass) {
        calendarSystemClassMap[name] = theClass
      }

      function createCalendarSystem(name) {
        return new calendarSystemClassMap[name]()
      }

      var GregorianCalendarSystem = /** @class */ (function () {
        function GregorianCalendarSystem() {}

        GregorianCalendarSystem.prototype.getMarkerYear = function (d) {
          return d.getUTCFullYear()
        }
        GregorianCalendarSystem.prototype.getMarkerMonth = function (d) {
          return d.getUTCMonth()
        }
        GregorianCalendarSystem.prototype.getMarkerDay = function (d) {
          return d.getUTCDate()
        }
        GregorianCalendarSystem.prototype.arrayToMarker = function (arr) {
          return arrayToUtcDate(arr)
        }
        GregorianCalendarSystem.prototype.markerToArray = function (marker) {
          return dateToUtcArray(marker)
        }
        return GregorianCalendarSystem
      })()
      registerCalendarSystem('gregory', GregorianCalendarSystem)

      var ISO_RE =
        /^\s*(\d{4})(-?(\d{2})(-?(\d{2})([T ](\d{2}):?(\d{2})(:?(\d{2})(\.(\d+))?)?(Z|(([-+])(\d{2})(:?(\d{2}))?))?)?)?)?$/

      function parse(str) {
        var m = ISO_RE.exec(str)
        if (m) {
          var marker = new Date(
            Date.UTC(
              Number(m[1]),
              m[3] ? Number(m[3]) - 1 : 0,
              Number(m[5] || 1),
              Number(m[7] || 0),
              Number(m[8] || 0),
              Number(m[10] || 0),
              m[12] ? Number('0.' + m[12]) * 1000 : 0
            )
          )
          if (isValidDate(marker)) {
            var timeZoneOffset = null
            if (m[13]) {
              timeZoneOffset =
                (m[15] === '-' ? -1 : 1) *
                (Number(m[16] || 0) * 60 + Number(m[18] || 0))
            }
            return {
              marker: marker,
              isTimeUnspecified: !m[6],
              timeZoneOffset: timeZoneOffset,
            }
          }
        }
        return null
      }

      var DateEnv = /** @class */ (function () {
        function DateEnv(settings) {
          var timeZone = (this.timeZone = settings.timeZone)
          var isNamedTimeZone = timeZone !== 'local' && timeZone !== 'UTC'
          if (settings.namedTimeZoneImpl && isNamedTimeZone) {
            this.namedTimeZoneImpl = new settings.namedTimeZoneImpl(timeZone)
          }
          this.canComputeOffset = Boolean(
            !isNamedTimeZone || this.namedTimeZoneImpl
          )
          this.calendarSystem = createCalendarSystem(settings.calendarSystem)
          this.locale = settings.locale
          this.weekDow = settings.locale.week.dow
          this.weekDoy = settings.locale.week.doy
          if (settings.weekNumberCalculation === 'ISO') {
            this.weekDow = 1
            this.weekDoy = 4
          }
          if (typeof settings.firstDay === 'number') {
            this.weekDow = settings.firstDay
          }
          if (typeof settings.weekNumberCalculation === 'function') {
            this.weekNumberFunc = settings.weekNumberCalculation
          }
          this.weekText =
            settings.weekText != null
              ? settings.weekText
              : settings.locale.options.weekText
          this.cmdFormatter = settings.cmdFormatter
          this.defaultSeparator = settings.defaultSeparator
        }

        // Creating / Parsing
        DateEnv.prototype.createMarker = function (input) {
          var meta = this.createMarkerMeta(input)
          if (meta === null) {
            return null
          }
          return meta.marker
        }
        DateEnv.prototype.createNowMarker = function () {
          if (this.canComputeOffset) {
            return this.timestampToMarker(new Date().valueOf())
          }
          // if we can't compute the current date val for a timezone,
          // better to give the current local date vals than UTC
          return arrayToUtcDate(dateToLocalArray(new Date()))
        }
        DateEnv.prototype.createMarkerMeta = function (input) {
          if (typeof input === 'string') {
            return this.parse(input)
          }
          var marker = null
          if (typeof input === 'number') {
            marker = this.timestampToMarker(input)
          } else if (input instanceof Date) {
            input = input.valueOf()
            if (!isNaN(input)) {
              marker = this.timestampToMarker(input)
            }
          } else if (Array.isArray(input)) {
            marker = arrayToUtcDate(input)
          }
          if (marker === null || !isValidDate(marker)) {
            return null
          }
          return { marker: marker, isTimeUnspecified: false, forcedTzo: null }
        }
        DateEnv.prototype.parse = function (s) {
          var parts = parse(s)
          if (parts === null) {
            return null
          }
          var marker = parts.marker
          var forcedTzo = null
          if (parts.timeZoneOffset !== null) {
            if (this.canComputeOffset) {
              marker = this.timestampToMarker(
                marker.valueOf() - parts.timeZoneOffset * 60 * 1000
              )
            } else {
              forcedTzo = parts.timeZoneOffset
            }
          }
          return {
            marker: marker,
            isTimeUnspecified: parts.isTimeUnspecified,
            forcedTzo: forcedTzo,
          }
        }
        // Accessors
        DateEnv.prototype.getYear = function (marker) {
          return this.calendarSystem.getMarkerYear(marker)
        }
        DateEnv.prototype.getMonth = function (marker) {
          return this.calendarSystem.getMarkerMonth(marker)
        }
        // Adding / Subtracting
        DateEnv.prototype.add = function (marker, dur) {
          var a = this.calendarSystem.markerToArray(marker)
          a[0] += dur.years
          a[1] += dur.months
          a[2] += dur.days
          a[6] += dur.milliseconds
          return this.calendarSystem.arrayToMarker(a)
        }
        DateEnv.prototype.subtract = function (marker, dur) {
          var a = this.calendarSystem.markerToArray(marker)
          a[0] -= dur.years
          a[1] -= dur.months
          a[2] -= dur.days
          a[6] -= dur.milliseconds
          return this.calendarSystem.arrayToMarker(a)
        }
        DateEnv.prototype.addYears = function (marker, n) {
          var a = this.calendarSystem.markerToArray(marker)
          a[0] += n
          return this.calendarSystem.arrayToMarker(a)
        }
        DateEnv.prototype.addMonths = function (marker, n) {
          var a = this.calendarSystem.markerToArray(marker)
          a[1] += n
          return this.calendarSystem.arrayToMarker(a)
        }
        // Diffing Whole Units
        DateEnv.prototype.diffWholeYears = function (m0, m1) {
          var calendarSystem = this.calendarSystem
          if (
            timeAsMs(m0) === timeAsMs(m1) &&
            calendarSystem.getMarkerDay(m0) ===
              calendarSystem.getMarkerDay(m1) &&
            calendarSystem.getMarkerMonth(m0) ===
              calendarSystem.getMarkerMonth(m1)
          ) {
            return (
              calendarSystem.getMarkerYear(m1) -
              calendarSystem.getMarkerYear(m0)
            )
          }
          return null
        }
        DateEnv.prototype.diffWholeMonths = function (m0, m1) {
          var calendarSystem = this.calendarSystem
          if (
            timeAsMs(m0) === timeAsMs(m1) &&
            calendarSystem.getMarkerDay(m0) === calendarSystem.getMarkerDay(m1)
          ) {
            return (
              calendarSystem.getMarkerMonth(m1) -
              calendarSystem.getMarkerMonth(m0) +
              (calendarSystem.getMarkerYear(m1) -
                calendarSystem.getMarkerYear(m0)) *
                12
            )
          }
          return null
        }
        // Range / Duration
        DateEnv.prototype.greatestWholeUnit = function (m0, m1) {
          var n = this.diffWholeYears(m0, m1)
          if (n !== null) {
            return { unit: 'year', value: n }
          }
          n = this.diffWholeMonths(m0, m1)
          if (n !== null) {
            return { unit: 'month', value: n }
          }
          n = diffWholeWeeks(m0, m1)
          if (n !== null) {
            return { unit: 'week', value: n }
          }
          n = diffWholeDays(m0, m1)
          if (n !== null) {
            return { unit: 'day', value: n }
          }
          n = diffHours(m0, m1)
          if (isInt(n)) {
            return { unit: 'hour', value: n }
          }
          n = diffMinutes(m0, m1)
          if (isInt(n)) {
            return { unit: 'minute', value: n }
          }
          n = diffSeconds(m0, m1)
          if (isInt(n)) {
            return { unit: 'second', value: n }
          }
          return { unit: 'millisecond', value: m1.valueOf() - m0.valueOf() }
        }
        DateEnv.prototype.countDurationsBetween = function (m0, m1, d) {
          // TODO: can use greatestWholeUnit
          var diff
          if (d.years) {
            diff = this.diffWholeYears(m0, m1)
            if (diff !== null) {
              return diff / asRoughYears(d)
            }
          }
          if (d.months) {
            diff = this.diffWholeMonths(m0, m1)
            if (diff !== null) {
              return diff / asRoughMonths(d)
            }
          }
          if (d.days) {
            diff = diffWholeDays(m0, m1)
            if (diff !== null) {
              return diff / asRoughDays(d)
            }
          }
          return (m1.valueOf() - m0.valueOf()) / asRoughMs(d)
        }
        // Start-Of
        // these DON'T return zoned-dates. only UTC start-of dates
        DateEnv.prototype.startOf = function (m, unit) {
          if (unit === 'year') {
            return this.startOfYear(m)
          }
          if (unit === 'month') {
            return this.startOfMonth(m)
          }
          if (unit === 'week') {
            return this.startOfWeek(m)
          }
          if (unit === 'day') {
            return startOfDay(m)
          }
          if (unit === 'hour') {
            return startOfHour(m)
          }
          if (unit === 'minute') {
            return startOfMinute(m)
          }
          if (unit === 'second') {
            return startOfSecond(m)
          }
          return null
        }
        DateEnv.prototype.startOfYear = function (m) {
          return this.calendarSystem.arrayToMarker([
            this.calendarSystem.getMarkerYear(m),
          ])
        }
        DateEnv.prototype.startOfMonth = function (m) {
          return this.calendarSystem.arrayToMarker([
            this.calendarSystem.getMarkerYear(m),
            this.calendarSystem.getMarkerMonth(m),
          ])
        }
        DateEnv.prototype.startOfWeek = function (m) {
          return this.calendarSystem.arrayToMarker([
            this.calendarSystem.getMarkerYear(m),
            this.calendarSystem.getMarkerMonth(m),
            m.getUTCDate() - ((m.getUTCDay() - this.weekDow + 7) % 7),
          ])
        }
        // Week Number
        DateEnv.prototype.computeWeekNumber = function (marker) {
          if (this.weekNumberFunc) {
            return this.weekNumberFunc(this.toDate(marker))
          }
          return weekOfYear(marker, this.weekDow, this.weekDoy)
        }
        // TODO: choke on timeZoneName: long
        DateEnv.prototype.format = function (marker, formatter, dateOptions) {
          if (dateOptions === void 0) {
            dateOptions = {}
          }
          return formatter.format(
            {
              marker: marker,
              timeZoneOffset:
                dateOptions.forcedTzo != null
                  ? dateOptions.forcedTzo
                  : this.offsetForMarker(marker),
            },
            this
          )
        }
        DateEnv.prototype.formatRange = function (
          start,
          end,
          formatter,
          dateOptions
        ) {
          if (dateOptions === void 0) {
            dateOptions = {}
          }
          if (dateOptions.isEndExclusive) {
            end = addMs(end, -1)
          }
          return formatter.formatRange(
            {
              marker: start,
              timeZoneOffset:
                dateOptions.forcedStartTzo != null
                  ? dateOptions.forcedStartTzo
                  : this.offsetForMarker(start),
            },
            {
              marker: end,
              timeZoneOffset:
                dateOptions.forcedEndTzo != null
                  ? dateOptions.forcedEndTzo
                  : this.offsetForMarker(end),
            },
            this,
            dateOptions.defaultSeparator
          )
        }
        /*
        DUMB: the omitTime arg is dumb. if we omit the time, we want to omit the timezone offset. and if we do that,
        might as well use buildIsoString or some other util directly
        */
        DateEnv.prototype.formatIso = function (marker, extraOptions) {
          if (extraOptions === void 0) {
            extraOptions = {}
          }
          var timeZoneOffset = null
          if (!extraOptions.omitTimeZoneOffset) {
            if (extraOptions.forcedTzo != null) {
              timeZoneOffset = extraOptions.forcedTzo
            } else {
              timeZoneOffset = this.offsetForMarker(marker)
            }
          }
          return buildIsoString(marker, timeZoneOffset, extraOptions.omitTime)
        }
        // TimeZone
        DateEnv.prototype.timestampToMarker = function (ms) {
          if (this.timeZone === 'local') {
            return arrayToUtcDate(dateToLocalArray(new Date(ms)))
          }
          if (this.timeZone === 'UTC' || !this.namedTimeZoneImpl) {
            return new Date(ms)
          }
          return arrayToUtcDate(this.namedTimeZoneImpl.timestampToArray(ms))
        }
        DateEnv.prototype.offsetForMarker = function (m) {
          if (this.timeZone === 'local') {
            return -arrayToLocalDate(dateToUtcArray(m)).getTimezoneOffset() // convert "inverse" offset to "normal" offset
          }
          if (this.timeZone === 'UTC') {
            return 0
          }
          if (this.namedTimeZoneImpl) {
            return this.namedTimeZoneImpl.offsetForArray(dateToUtcArray(m))
          }
          return null
        }
        // Conversion
        DateEnv.prototype.toDate = function (m, forcedTzo) {
          if (this.timeZone === 'local') {
            return arrayToLocalDate(dateToUtcArray(m))
          }
          if (this.timeZone === 'UTC') {
            return new Date(m.valueOf()) // make sure it's a copy
          }
          if (!this.namedTimeZoneImpl) {
            return new Date(m.valueOf() - (forcedTzo || 0))
          }
          return new Date(
            m.valueOf() -
              this.namedTimeZoneImpl.offsetForArray(dateToUtcArray(m)) *
                1000 *
                60
          )
        }
        return DateEnv
      })()

      var globalLocales = []

      var RAW_EN_LOCALE = {
        code: 'en',
        week: {
          dow: 0,
          doy: 4,
        },
        direction: 'ltr',
        buttonText: {
          prev: 'prev',
          next: 'next',
          prevYear: 'prev year',
          nextYear: 'next year',
          year: 'year',
          today: 'today',
          month: 'month',
          week: 'week',
          day: 'day',
          list: 'list',
        },
        weekText: 'W',
        allDayText: 'all-day',
        moreLinkText: 'more',
        noEventsText: 'No events to display',
      }

      function organizeRawLocales(explicitRawLocales) {
        var defaultCode =
          explicitRawLocales.length > 0 ? explicitRawLocales[0].code : 'en'
        var allRawLocales = globalLocales.concat(explicitRawLocales)
        var rawLocaleMap = {
          en: RAW_EN_LOCALE,
        }
        for (
          var _i = 0, allRawLocales_1 = allRawLocales;
          _i < allRawLocales_1.length;
          _i++
        ) {
          var rawLocale = allRawLocales_1[_i]
          rawLocaleMap[rawLocale.code] = rawLocale
        }
        return {
          map: rawLocaleMap,
          defaultCode: defaultCode,
        }
      }

      function buildLocale(inputSingular, available) {
        if (
          typeof inputSingular === 'object' &&
          !Array.isArray(inputSingular)
        ) {
          return parseLocale(
            inputSingular.code,
            [inputSingular.code],
            inputSingular
          )
        }
        return queryLocale(inputSingular, available)
      }

      function queryLocale(codeArg, available) {
        var codes = [].concat(codeArg || []) // will convert to array
        var raw = queryRawLocale(codes, available) || RAW_EN_LOCALE
        return parseLocale(codeArg, codes, raw)
      }

      function queryRawLocale(codes, available) {
        for (var i = 0; i < codes.length; i += 1) {
          var parts = codes[i].toLocaleLowerCase().split('-')
          for (var j = parts.length; j > 0; j -= 1) {
            var simpleId = parts.slice(0, j).join('-')
            if (available[simpleId]) {
              return available[simpleId]
            }
          }
        }
        return null
      }

      function parseLocale(codeArg, codes, raw) {
        var merged = mergeProps([RAW_EN_LOCALE, raw], ['buttonText'])
        delete merged.code // don't want this part of the options
        var week = merged.week
        delete merged.week
        return {
          codeArg: codeArg,
          codes: codes,
          week: week,
          simpleNumberFormat: new Intl.NumberFormat(codeArg),
          options: merged,
        }
      }

      function formatDate(dateInput, options) {
        if (options === void 0) {
          options = {}
        }
        var dateEnv = buildDateEnv(options)
        var formatter = createFormatter(options)
        var dateMeta = dateEnv.createMarkerMeta(dateInput)
        if (!dateMeta) {
          // TODO: warning?
          return ''
        }
        return dateEnv.format(dateMeta.marker, formatter, {
          forcedTzo: dateMeta.forcedTzo,
        })
      }

      function formatRange(startInput, endInput, options) {
        var dateEnv = buildDateEnv(
          typeof options === 'object' && options ? options : {}
        ) // pass in if non-null object
        var formatter = createFormatter(options)
        var startMeta = dateEnv.createMarkerMeta(startInput)
        var endMeta = dateEnv.createMarkerMeta(endInput)
        if (!startMeta || !endMeta) {
          // TODO: warning?
          return ''
        }
        return dateEnv.formatRange(
          startMeta.marker,
          endMeta.marker,
          formatter,
          {
            forcedStartTzo: startMeta.forcedTzo,
            forcedEndTzo: endMeta.forcedTzo,
            isEndExclusive: options.isEndExclusive,
            defaultSeparator: BASE_OPTION_DEFAULTS.defaultRangeSeparator,
          }
        )
      }

      // TODO: more DRY and optimized
      function buildDateEnv(settings) {
        var locale = buildLocale(
          settings.locale || 'en',
          organizeRawLocales([]).map
        ) // TODO: don't hardcode 'en' everywhere
        return new DateEnv(
          __assign(
            __assign(
              {
                timeZone: BASE_OPTION_DEFAULTS.timeZone,
                calendarSystem: 'gregory',
              },
              settings
            ),
            { locale: locale }
          )
        )
      }

      var DEF_DEFAULTS = {
        startTime: '09:00',
        endTime: '17:00',
        daysOfWeek: [1, 2, 3, 4, 5],
        display: 'inverse-background',
        classNames: 'fc-non-business',
        groupId: '_businessHours',
      }

      /*
    TODO: pass around as EventDefHash!!!
    */
      function parseBusinessHours(input, context) {
        return parseEvents(refineInputs(input), null, context)
      }

      function refineInputs(input) {
        var rawDefs
        if (input === true) {
          rawDefs = [{}] // will get DEF_DEFAULTS verbatim
        } else if (Array.isArray(input)) {
          // if specifying an array, every sub-definition NEEDS a day-of-week
          rawDefs = input.filter(function (rawDef) {
            return rawDef.daysOfWeek
          })
        } else if (typeof input === 'object' && input) {
          // non-null object
          rawDefs = [input]
        } else {
          // is probably false
          rawDefs = []
        }
        rawDefs = rawDefs.map(function (rawDef) {
          return __assign(__assign({}, DEF_DEFAULTS), rawDef)
        })
        return rawDefs
      }

      function pointInsideRect(point, rect) {
        return (
          point.left >= rect.left &&
          point.left < rect.right &&
          point.top >= rect.top &&
          point.top < rect.bottom
        )
      }

      // Returns a new rectangle that is the intersection of the two rectangles. If they don't intersect, returns false
      function intersectRects(rect1, rect2) {
        var res = {
          left: Math.max(rect1.left, rect2.left),
          right: Math.min(rect1.right, rect2.right),
          top: Math.max(rect1.top, rect2.top),
          bottom: Math.min(rect1.bottom, rect2.bottom),
        }
        if (res.left < res.right && res.top < res.bottom) {
          return res
        }
        return false
      }

      function translateRect(rect, deltaX, deltaY) {
        return {
          left: rect.left + deltaX,
          right: rect.right + deltaX,
          top: rect.top + deltaY,
          bottom: rect.bottom + deltaY,
        }
      }

      // Returns a new point that will have been moved to reside within the given rectangle
      function constrainPoint(point, rect) {
        return {
          left: Math.min(Math.max(point.left, rect.left), rect.right),
          top: Math.min(Math.max(point.top, rect.top), rect.bottom),
        }
      }

      // Returns a point that is the center of the given rectangle
      function getRectCenter(rect) {
        return {
          left: (rect.left + rect.right) / 2,
          top: (rect.top + rect.bottom) / 2,
        }
      }

      // Subtracts point2's coordinates from point1's coordinates, returning a delta
      function diffPoints(point1, point2) {
        return {
          left: point1.left - point2.left,
          top: point1.top - point2.top,
        }
      }

      var canVGrowWithinCell

      function getCanVGrowWithinCell() {
        if (canVGrowWithinCell == null) {
          canVGrowWithinCell = computeCanVGrowWithinCell()
        }
        return canVGrowWithinCell
      }

      function computeCanVGrowWithinCell() {
        // for SSR, because this function is call immediately at top-level
        // TODO: just make this logic execute top-level, immediately, instead of doing lazily
        if (typeof document === 'undefined') {
          return true
        }
        var el = document.createElement('div')
        el.style.position = 'absolute'
        el.style.top = '0px'
        el.style.left = '0px'
        el.innerHTML = '<table><tr><td><div></div></td></tr></table>'
        el.querySelector('table').style.height = '100px'
        el.querySelector('div').style.height = '100%'
        document.body.appendChild(el)
        var div = el.querySelector('div')
        var possible = div.offsetHeight > 0
        document.body.removeChild(el)
        return possible
      }

      var EMPTY_EVENT_STORE = createEmptyEventStore() // for purecomponents. TODO: keep elsewhere
      var Splitter = /** @class */ (function () {
        function Splitter() {
          this.getKeysForEventDefs = memoize(this._getKeysForEventDefs)
          this.splitDateSelection = memoize(this._splitDateSpan)
          this.splitEventStore = memoize(this._splitEventStore)
          this.splitIndividualUi = memoize(this._splitIndividualUi)
          this.splitEventDrag = memoize(this._splitInteraction)
          this.splitEventResize = memoize(this._splitInteraction)
          this.eventUiBuilders = {} // TODO: typescript protection
        }

        Splitter.prototype.splitProps = function (props) {
          var _this = this
          var keyInfos = this.getKeyInfo(props)
          var defKeys = this.getKeysForEventDefs(props.eventStore)
          var dateSelections = this.splitDateSelection(props.dateSelection)
          var individualUi = this.splitIndividualUi(props.eventUiBases, defKeys) // the individual *bases*
          var eventStores = this.splitEventStore(props.eventStore, defKeys)
          var eventDrags = this.splitEventDrag(props.eventDrag)
          var eventResizes = this.splitEventResize(props.eventResize)
          var splitProps = {}
          this.eventUiBuilders = mapHash(keyInfos, function (info, key) {
            return _this.eventUiBuilders[key] || memoize(buildEventUiForKey)
          })
          for (var key in keyInfos) {
            var keyInfo = keyInfos[key]
            var eventStore = eventStores[key] || EMPTY_EVENT_STORE
            var buildEventUi = this.eventUiBuilders[key]
            splitProps[key] = {
              businessHours: keyInfo.businessHours || props.businessHours,
              dateSelection: dateSelections[key] || null,
              eventStore: eventStore,
              eventUiBases: buildEventUi(
                props.eventUiBases[''],
                keyInfo.ui,
                individualUi[key]
              ),
              eventSelection: eventStore.instances[props.eventSelection]
                ? props.eventSelection
                : '',
              eventDrag: eventDrags[key] || null,
              eventResize: eventResizes[key] || null,
            }
          }
          return splitProps
        }
        Splitter.prototype._splitDateSpan = function (dateSpan) {
          var dateSpans = {}
          if (dateSpan) {
            var keys = this.getKeysForDateSpan(dateSpan)
            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
              var key = keys_1[_i]
              dateSpans[key] = dateSpan
            }
          }
          return dateSpans
        }
        Splitter.prototype._getKeysForEventDefs = function (eventStore) {
          var _this = this
          return mapHash(eventStore.defs, function (eventDef) {
            return _this.getKeysForEventDef(eventDef)
          })
        }
        Splitter.prototype._splitEventStore = function (eventStore, defKeys) {
          var defs = eventStore.defs,
            instances = eventStore.instances
          var splitStores = {}
          for (var defId in defs) {
            for (var _i = 0, _a = defKeys[defId]; _i < _a.length; _i++) {
              var key = _a[_i]
              if (!splitStores[key]) {
                splitStores[key] = createEmptyEventStore()
              }
              splitStores[key].defs[defId] = defs[defId]
            }
          }
          for (var instanceId in instances) {
            var instance = instances[instanceId]
            for (
              var _b = 0, _c = defKeys[instance.defId];
              _b < _c.length;
              _b++
            ) {
              var key = _c[_b]
              if (splitStores[key]) {
                // must have already been created
                splitStores[key].instances[instanceId] = instance
              }
            }
          }
          return splitStores
        }
        Splitter.prototype._splitIndividualUi = function (
          eventUiBases,
          defKeys
        ) {
          var splitHashes = {}
          for (var defId in eventUiBases) {
            if (defId) {
              // not the '' key
              for (var _i = 0, _a = defKeys[defId]; _i < _a.length; _i++) {
                var key = _a[_i]
                if (!splitHashes[key]) {
                  splitHashes[key] = {}
                }
                splitHashes[key][defId] = eventUiBases[defId]
              }
            }
          }
          return splitHashes
        }
        Splitter.prototype._splitInteraction = function (interaction) {
          var splitStates = {}
          if (interaction) {
            var affectedStores_1 = this._splitEventStore(
              interaction.affectedEvents,
              this._getKeysForEventDefs(interaction.affectedEvents)
            )
            // can't rely on defKeys because event data is mutated
            var mutatedKeysByDefId = this._getKeysForEventDefs(
              interaction.mutatedEvents
            )
            var mutatedStores_1 = this._splitEventStore(
              interaction.mutatedEvents,
              mutatedKeysByDefId
            )
            var populate = function (key) {
              if (!splitStates[key]) {
                splitStates[key] = {
                  affectedEvents: affectedStores_1[key] || EMPTY_EVENT_STORE,
                  mutatedEvents: mutatedStores_1[key] || EMPTY_EVENT_STORE,
                  isEvent: interaction.isEvent,
                }
              }
            }
            for (var key in affectedStores_1) {
              populate(key)
            }
            for (var key in mutatedStores_1) {
              populate(key)
            }
          }
          return splitStates
        }
        return Splitter
      })()

      function buildEventUiForKey(allUi, eventUiForKey, individualUi) {
        var baseParts = []
        if (allUi) {
          baseParts.push(allUi)
        }
        if (eventUiForKey) {
          baseParts.push(eventUiForKey)
        }
        var stuff = {
          '': combineEventUis(baseParts),
        }
        if (individualUi) {
          __assign(stuff, individualUi)
        }
        return stuff
      }

      function getDateMeta(date, todayRange, nowDate, dateProfile) {
        return {
          dow: date.getUTCDay(),
          isDisabled: Boolean(
            dateProfile && !rangeContainsMarker(dateProfile.activeRange, date)
          ),
          isOther: Boolean(
            dateProfile && !rangeContainsMarker(dateProfile.currentRange, date)
          ),
          isToday: Boolean(todayRange && rangeContainsMarker(todayRange, date)),
          isPast: Boolean(
            nowDate
              ? date < nowDate
              : todayRange
              ? date < todayRange.start
              : false
          ),
          isFuture: Boolean(
            nowDate
              ? date > nowDate
              : todayRange
              ? date >= todayRange.end
              : false
          ),
        }
      }

      function getDayClassNames(meta, theme) {
        var classNames = ['fc-day', 'fc-day-' + DAY_IDS[meta.dow]]
        if (meta.isDisabled) {
          classNames.push('fc-day-disabled')
        } else {
          if (meta.isToday) {
            classNames.push('fc-day-today')
            classNames.push(theme.getClass('today'))
          }
          if (meta.isPast) {
            classNames.push('fc-day-past')
          }
          if (meta.isFuture) {
            classNames.push('fc-day-future')
          }
          if (meta.isOther) {
            classNames.push('fc-day-other')
          }
        }
        return classNames
      }

      function getSlotClassNames(meta, theme) {
        var classNames = ['fc-slot', 'fc-slot-' + DAY_IDS[meta.dow]]
        if (meta.isDisabled) {
          classNames.push('fc-slot-disabled')
        } else {
          if (meta.isToday) {
            classNames.push('fc-slot-today')
            classNames.push(theme.getClass('today'))
          }
          if (meta.isPast) {
            classNames.push('fc-slot-past')
          }
          if (meta.isFuture) {
            classNames.push('fc-slot-future')
          }
        }
        return classNames
      }

      function buildNavLinkData(date, type) {
        if (type === void 0) {
          type = 'day'
        }
        return JSON.stringify({
          date: formatDayString(date),
          type: type,
        })
      }

      var _isRtlScrollbarOnLeft = null

      function getIsRtlScrollbarOnLeft() {
        if (_isRtlScrollbarOnLeft === null) {
          _isRtlScrollbarOnLeft = computeIsRtlScrollbarOnLeft()
        }
        return _isRtlScrollbarOnLeft
      }

      function computeIsRtlScrollbarOnLeft() {
        var outerEl = document.createElement('div')
        applyStyle(outerEl, {
          position: 'absolute',
          top: -1000,
          left: 0,
          border: 0,
          padding: 0,
          overflow: 'scroll',
          direction: 'rtl',
        })
        outerEl.innerHTML = '<div></div>'
        document.body.appendChild(outerEl)
        var innerEl = outerEl.firstChild
        var res =
          innerEl.getBoundingClientRect().left >
          outerEl.getBoundingClientRect().left
        removeElement(outerEl)
        return res
      }

      var _scrollbarWidths

      function getScrollbarWidths() {
        if (!_scrollbarWidths) {
          _scrollbarWidths = computeScrollbarWidths()
        }
        return _scrollbarWidths
      }

      function computeScrollbarWidths() {
        var el = document.createElement('div')
        el.style.overflow = 'scroll'
        el.style.position = 'absolute'
        el.style.top = '-9999px'
        el.style.left = '-9999px'
        document.body.appendChild(el)
        var res = computeScrollbarWidthsForEl(el)
        document.body.removeChild(el)
        return res
      }

      // WARNING: will include border
      function computeScrollbarWidthsForEl(el) {
        return {
          x: el.offsetHeight - el.clientHeight,
          y: el.offsetWidth - el.clientWidth,
        }
      }

      function computeEdges(el, getPadding) {
        if (getPadding === void 0) {
          getPadding = false
        }
        var computedStyle = window.getComputedStyle(el)
        var borderLeft = parseInt(computedStyle.borderLeftWidth, 10) || 0
        var borderRight = parseInt(computedStyle.borderRightWidth, 10) || 0
        var borderTop = parseInt(computedStyle.borderTopWidth, 10) || 0
        var borderBottom = parseInt(computedStyle.borderBottomWidth, 10) || 0
        var badScrollbarWidths = computeScrollbarWidthsForEl(el) // includes border!
        var scrollbarLeftRight = badScrollbarWidths.y - borderLeft - borderRight
        var scrollbarBottom = badScrollbarWidths.x - borderTop - borderBottom
        var res = {
          borderLeft: borderLeft,
          borderRight: borderRight,
          borderTop: borderTop,
          borderBottom: borderBottom,
          scrollbarBottom: scrollbarBottom,
          scrollbarLeft: 0,
          scrollbarRight: 0,
        }
        if (getIsRtlScrollbarOnLeft() && computedStyle.direction === 'rtl') {
          // is the scrollbar on the left side?
          res.scrollbarLeft = scrollbarLeftRight
        } else {
          res.scrollbarRight = scrollbarLeftRight
        }
        if (getPadding) {
          res.paddingLeft = parseInt(computedStyle.paddingLeft, 10) || 0
          res.paddingRight = parseInt(computedStyle.paddingRight, 10) || 0
          res.paddingTop = parseInt(computedStyle.paddingTop, 10) || 0
          res.paddingBottom = parseInt(computedStyle.paddingBottom, 10) || 0
        }
        return res
      }

      function computeInnerRect(el, goWithinPadding, doFromWindowViewport) {
        if (goWithinPadding === void 0) {
          goWithinPadding = false
        }
        var outerRect = doFromWindowViewport
          ? el.getBoundingClientRect()
          : computeRect(el)
        var edges = computeEdges(el, goWithinPadding)
        var res = {
          left: outerRect.left + edges.borderLeft + edges.scrollbarLeft,
          right: outerRect.right - edges.borderRight - edges.scrollbarRight,
          top: outerRect.top + edges.borderTop,
          bottom: outerRect.bottom - edges.borderBottom - edges.scrollbarBottom,
        }
        if (goWithinPadding) {
          res.left += edges.paddingLeft
          res.right -= edges.paddingRight
          res.top += edges.paddingTop
          res.bottom -= edges.paddingBottom
        }
        return res
      }

      function computeRect(el) {
        var rect = el.getBoundingClientRect()
        return {
          left: rect.left + window.pageXOffset,
          top: rect.top + window.pageYOffset,
          right: rect.right + window.pageXOffset,
          bottom: rect.bottom + window.pageYOffset,
        }
      }

      function computeHeightAndMargins(el) {
        return el.getBoundingClientRect().height + computeVMargins(el)
      }

      function computeVMargins(el) {
        var computed = window.getComputedStyle(el)
        return (
          parseInt(computed.marginTop, 10) + parseInt(computed.marginBottom, 10)
        )
      }

      // does not return window
      function getClippingParents(el) {
        var parents = []
        while (el instanceof HTMLElement) {
          // will stop when gets to document or null
          var computedStyle = window.getComputedStyle(el)
          if (computedStyle.position === 'fixed') {
            break
          }
          if (
            /(auto|scroll)/.test(
              computedStyle.overflow +
                computedStyle.overflowY +
                computedStyle.overflowX
            )
          ) {
            parents.push(el)
          }
          el = el.parentNode
        }
        return parents
      }

      // given a function that resolves a result asynchronously.
      // the function can either call passed-in success and failure callbacks,
      // or it can return a promise.
      // if you need to pass additional params to func, bind them first.
      function unpromisify(func, success, failure) {
        // guard against success/failure callbacks being called more than once
        // and guard against a promise AND callback being used together.
        var isResolved = false
        var wrappedSuccess = function () {
          if (!isResolved) {
            isResolved = true
            success.apply(this, arguments) // eslint-disable-line prefer-rest-params
          }
        }
        var wrappedFailure = function () {
          if (!isResolved) {
            isResolved = true
            if (failure) {
              failure.apply(this, arguments) // eslint-disable-line prefer-rest-params
            }
          }
        }
        var res = func(wrappedSuccess, wrappedFailure)
        if (res && typeof res.then === 'function') {
          res.then(wrappedSuccess, wrappedFailure)
        }
      }

      var Emitter = /** @class */ (function () {
        function Emitter() {
          this.handlers = {}
          this.thisContext = null
        }

        Emitter.prototype.setThisContext = function (thisContext) {
          this.thisContext = thisContext
        }
        Emitter.prototype.setOptions = function (options) {
          this.options = options
        }
        Emitter.prototype.on = function (type, handler) {
          addToHash(this.handlers, type, handler)
        }
        Emitter.prototype.off = function (type, handler) {
          removeFromHash(this.handlers, type, handler)
        }
        Emitter.prototype.trigger = function (type) {
          var args = []
          for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i]
          }
          var attachedHandlers = this.handlers[type] || []
          var optionHandler = this.options && this.options[type]
          var handlers = [].concat(optionHandler || [], attachedHandlers)
          for (
            var _a = 0, handlers_1 = handlers;
            _a < handlers_1.length;
            _a++
          ) {
            var handler = handlers_1[_a]
            handler.apply(this.thisContext, args)
          }
        }
        Emitter.prototype.hasHandlers = function (type) {
          return (
            (this.handlers[type] && this.handlers[type].length) ||
            (this.options && this.options[type])
          )
        }
        return Emitter
      })()

      function addToHash(hash, type, handler) {
        ;(hash[type] || (hash[type] = [])).push(handler)
      }

      function removeFromHash(hash, type, handler) {
        if (handler) {
          if (hash[type]) {
            hash[type] = hash[type].filter(function (func) {
              return func !== handler
            })
          }
        } else {
          delete hash[type] // remove all handler funcs for this type
        }
      }

      /*
    Records offset information for a set of elements, relative to an origin element.
    Can record the left/right OR the top/bottom OR both.
    Provides methods for querying the cache by position.
    */
      var PositionCache = /** @class */ (function () {
        function PositionCache(originEl, els, isHorizontal, isVertical) {
          this.els = els
          var originClientRect = (this.originClientRect =
            originEl.getBoundingClientRect()) // relative to viewport top-left
          if (isHorizontal) {
            this.buildElHorizontals(originClientRect.left)
          }
          if (isVertical) {
            this.buildElVerticals(originClientRect.top)
          }
        }

        // Populates the left/right internal coordinate arrays
        PositionCache.prototype.buildElHorizontals = function (
          originClientLeft
        ) {
          var lefts = []
          var rights = []
          for (var _i = 0, _a = this.els; _i < _a.length; _i++) {
            var el = _a[_i]
            var rect = el.getBoundingClientRect()
            lefts.push(rect.left - originClientLeft)
            rights.push(rect.right - originClientLeft)
          }
          this.lefts = lefts
          this.rights = rights
        }
        // Populates the top/bottom internal coordinate arrays
        PositionCache.prototype.buildElVerticals = function (originClientTop) {
          var tops = []
          var bottoms = []
          for (var _i = 0, _a = this.els; _i < _a.length; _i++) {
            var el = _a[_i]
            var rect = el.getBoundingClientRect()
            tops.push(rect.top - originClientTop)
            bottoms.push(rect.bottom - originClientTop)
          }
          this.tops = tops
          this.bottoms = bottoms
        }
        // Given a left offset (from document left), returns the index of the el that it horizontally intersects.
        // If no intersection is made, returns undefined.
        PositionCache.prototype.leftToIndex = function (leftPosition) {
          var _a = this,
            lefts = _a.lefts,
            rights = _a.rights
          var len = lefts.length
          var i
          for (i = 0; i < len; i += 1) {
            if (leftPosition >= lefts[i] && leftPosition < rights[i]) {
              return i
            }
          }
          return undefined // TODO: better
        }
        // Given a top offset (from document top), returns the index of the el that it vertically intersects.
        // If no intersection is made, returns undefined.
        PositionCache.prototype.topToIndex = function (topPosition) {
          var _a = this,
            tops = _a.tops,
            bottoms = _a.bottoms
          var len = tops.length
          var i
          for (i = 0; i < len; i += 1) {
            if (topPosition >= tops[i] && topPosition < bottoms[i]) {
              return i
            }
          }
          return undefined // TODO: better
        }
        // Gets the width of the element at the given index
        PositionCache.prototype.getWidth = function (leftIndex) {
          return this.rights[leftIndex] - this.lefts[leftIndex]
        }
        // Gets the height of the element at the given index
        PositionCache.prototype.getHeight = function (topIndex) {
          return this.bottoms[topIndex] - this.tops[topIndex]
        }
        return PositionCache
      })()

      /* eslint max-classes-per-file: "off" */
      /*
    An object for getting/setting scroll-related information for an element.
    Internally, this is done very differently for window versus DOM element,
    so this object serves as a common interface.
    */
      var ScrollController = /** @class */ (function () {
        function ScrollController() {}

        ScrollController.prototype.getMaxScrollTop = function () {
          return this.getScrollHeight() - this.getClientHeight()
        }
        ScrollController.prototype.getMaxScrollLeft = function () {
          return this.getScrollWidth() - this.getClientWidth()
        }
        ScrollController.prototype.canScrollVertically = function () {
          return this.getMaxScrollTop() > 0
        }
        ScrollController.prototype.canScrollHorizontally = function () {
          return this.getMaxScrollLeft() > 0
        }
        ScrollController.prototype.canScrollUp = function () {
          return this.getScrollTop() > 0
        }
        ScrollController.prototype.canScrollDown = function () {
          return this.getScrollTop() < this.getMaxScrollTop()
        }
        ScrollController.prototype.canScrollLeft = function () {
          return this.getScrollLeft() > 0
        }
        ScrollController.prototype.canScrollRight = function () {
          return this.getScrollLeft() < this.getMaxScrollLeft()
        }
        return ScrollController
      })()
      var ElementScrollController = /** @class */ (function (_super) {
        __extends(ElementScrollController, _super)

        function ElementScrollController(el) {
          var _this = _super.call(this) || this
          _this.el = el
          return _this
        }

        ElementScrollController.prototype.getScrollTop = function () {
          return this.el.scrollTop
        }
        ElementScrollController.prototype.getScrollLeft = function () {
          return this.el.scrollLeft
        }
        ElementScrollController.prototype.setScrollTop = function (top) {
          this.el.scrollTop = top
        }
        ElementScrollController.prototype.setScrollLeft = function (left) {
          this.el.scrollLeft = left
        }
        ElementScrollController.prototype.getScrollWidth = function () {
          return this.el.scrollWidth
        }
        ElementScrollController.prototype.getScrollHeight = function () {
          return this.el.scrollHeight
        }
        ElementScrollController.prototype.getClientHeight = function () {
          return this.el.clientHeight
        }
        ElementScrollController.prototype.getClientWidth = function () {
          return this.el.clientWidth
        }
        return ElementScrollController
      })(ScrollController)
      var WindowScrollController = /** @class */ (function (_super) {
        __extends(WindowScrollController, _super)

        function WindowScrollController() {
          return (_super !== null && _super.apply(this, arguments)) || this
        }

        WindowScrollController.prototype.getScrollTop = function () {
          return window.pageYOffset
        }
        WindowScrollController.prototype.getScrollLeft = function () {
          return window.pageXOffset
        }
        WindowScrollController.prototype.setScrollTop = function (n) {
          window.scroll(window.pageXOffset, n)
        }
        WindowScrollController.prototype.setScrollLeft = function (n) {
          window.scroll(n, window.pageYOffset)
        }
        WindowScrollController.prototype.getScrollWidth = function () {
          return document.documentElement.scrollWidth
        }
        WindowScrollController.prototype.getScrollHeight = function () {
          return document.documentElement.scrollHeight
        }
        WindowScrollController.prototype.getClientHeight = function () {
          return document.documentElement.clientHeight
        }
        WindowScrollController.prototype.getClientWidth = function () {
          return document.documentElement.clientWidth
        }
        return WindowScrollController
      })(ScrollController)

      var Theme = /** @class */ (function () {
        function Theme(calendarOptions) {
          if (this.iconOverrideOption) {
            this.setIconOverride(calendarOptions[this.iconOverrideOption])
          }
        }

        Theme.prototype.setIconOverride = function (iconOverrideHash) {
          var iconClassesCopy
          var buttonName
          if (typeof iconOverrideHash === 'object' && iconOverrideHash) {
            // non-null object
            iconClassesCopy = __assign({}, this.iconClasses)
            for (buttonName in iconOverrideHash) {
              iconClassesCopy[buttonName] = this.applyIconOverridePrefix(
                iconOverrideHash[buttonName]
              )
            }
            this.iconClasses = iconClassesCopy
          } else if (iconOverrideHash === false) {
            this.iconClasses = {}
          }
        }
        Theme.prototype.applyIconOverridePrefix = function (className) {
          var prefix = this.iconOverridePrefix
          if (prefix && className.indexOf(prefix) !== 0) {
            // if not already present
            className = prefix + className
          }
          return className
        }
        Theme.prototype.getClass = function (key) {
          return this.classes[key] || ''
        }
        Theme.prototype.getIconClass = function (buttonName, isRtl) {
          var className
          if (isRtl && this.rtlIconClasses) {
            className =
              this.rtlIconClasses[buttonName] || this.iconClasses[buttonName]
          } else {
            className = this.iconClasses[buttonName]
          }
          if (className) {
            return this.baseIconClass + ' ' + className
          }
          return ''
        }
        Theme.prototype.getCustomButtonIconClass = function (
          customButtonProps
        ) {
          var className
          if (this.iconOverrideCustomButtonOption) {
            className = customButtonProps[this.iconOverrideCustomButtonOption]
            if (className) {
              return (
                this.baseIconClass +
                ' ' +
                this.applyIconOverridePrefix(className)
              )
            }
          }
          return ''
        }
        return Theme
      })()
      Theme.prototype.classes = {}
      Theme.prototype.iconClasses = {}
      Theme.prototype.baseIconClass = ''
      Theme.prototype.iconOverridePrefix = ''

      /// <reference types="@fullcalendar/core-preact" />
      if (typeof FullCalendarVDom === 'undefined') {
        throw new Error(
          'Please import the top-level fullcalendar lib before attempting to import a plugin.'
        )
      }
      var Component = FullCalendarVDom.Component
      var createElement = FullCalendarVDom.createElement
      var render = FullCalendarVDom.render
      var createRef = FullCalendarVDom.createRef
      var Fragment = FullCalendarVDom.Fragment
      var createContext$1 = FullCalendarVDom.createContext
      var flushToDom$1 = FullCalendarVDom.flushToDom
      var unmountComponentAtNode$1 = FullCalendarVDom.unmountComponentAtNode

      var ScrollResponder = /** @class */ (function () {
        function ScrollResponder(execFunc, emitter, scrollTime) {
          var _this = this
          this.execFunc = execFunc
          this.emitter = emitter
          this.scrollTime = scrollTime
          this.handleScrollRequest = function (request) {
            _this.queuedRequest = __assign(
              {},
              _this.queuedRequest || {},
              request
            )
            _this.drain()
          }
          emitter.on('_scrollRequest', this.handleScrollRequest)
          this.fireInitialScroll()
        }

        ScrollResponder.prototype.detach = function () {
          this.emitter.off('_scrollRequest', this.handleScrollRequest)
        }
        ScrollResponder.prototype.update = function (isDatesNew) {
          if (isDatesNew) {
            this.fireInitialScroll() // will drain
          } else {
            this.drain()
          }
        }
        ScrollResponder.prototype.fireInitialScroll = function () {
          this.handleScrollRequest({
            time: this.scrollTime,
          })
        }
        ScrollResponder.prototype.drain = function () {
          if (this.queuedRequest && this.execFunc(this.queuedRequest)) {
            this.queuedRequest = null
          }
        }
        return ScrollResponder
      })()

      var ViewContextType = createContext$1({}) // for Components
      function buildViewContext(
        viewSpec,
        viewApi,
        viewOptions,
        dateProfileGenerator,
        dateEnv,
        theme,
        pluginHooks,
        dispatch,
        getCurrentData,
        emitter,
        calendarApi,
        registerInteractiveComponent,
        unregisterInteractiveComponent
      ) {
        return {
          dateEnv: dateEnv,
          options: viewOptions,
          pluginHooks: pluginHooks,
          emitter: emitter,
          dispatch: dispatch,
          getCurrentData: getCurrentData,
          calendarApi: calendarApi,
          viewSpec: viewSpec,
          viewApi: viewApi,
          dateProfileGenerator: dateProfileGenerator,
          theme: theme,
          isRtl: viewOptions.direction === 'rtl',
          addResizeHandler: function (handler) {
            emitter.on('_resize', handler)
          },
          removeResizeHandler: function (handler) {
            emitter.off('_resize', handler)
          },
          createScrollResponder: function (execFunc) {
            return new ScrollResponder(
              execFunc,
              emitter,
              createDuration(viewOptions.scrollTime)
            )
          },
          registerInteractiveComponent: registerInteractiveComponent,
          unregisterInteractiveComponent: unregisterInteractiveComponent,
        }
      }

      /* eslint max-classes-per-file: off */
      var PureComponent = /** @class */ (function (_super) {
        __extends(PureComponent, _super)

        function PureComponent() {
          return (_super !== null && _super.apply(this, arguments)) || this
        }

        PureComponent.prototype.shouldComponentUpdate = function (
          nextProps,
          nextState
        ) {
          if (this.debug) {
            // eslint-disable-next-line no-console
            console.log(
              getUnequalProps(nextProps, this.props),
              getUnequalProps(nextState, this.state)
            )
          }
          return (
            !compareObjs(this.props, nextProps, this.propEquality) ||
            !compareObjs(this.state, nextState, this.stateEquality)
          )
        }
        PureComponent.addPropsEquality = addPropsEquality
        PureComponent.addStateEquality = addStateEquality
        PureComponent.contextType = ViewContextType
        return PureComponent
      })(Component)
      PureComponent.prototype.propEquality = {}
      PureComponent.prototype.stateEquality = {}
      var BaseComponent = /** @class */ (function (_super) {
        __extends(BaseComponent, _super)

        function BaseComponent() {
          return (_super !== null && _super.apply(this, arguments)) || this
        }

        BaseComponent.contextType = ViewContextType
        return BaseComponent
      })(PureComponent)

      function addPropsEquality(propEquality) {
        var hash = Object.create(this.prototype.propEquality)
        __assign(hash, propEquality)
        this.prototype.propEquality = hash
      }

      function addStateEquality(stateEquality) {
        var hash = Object.create(this.prototype.stateEquality)
        __assign(hash, stateEquality)
        this.prototype.stateEquality = hash
      }

      // use other one
      function setRef(ref, current) {
        if (typeof ref === 'function') {
          ref(current)
        } else if (ref) {
          // see https://github.com/facebook/react/issues/13029
          ref.current = current
        }
      }

      function reduceEventStore(
        eventStore,
        action,
        eventSources,
        dateProfile,
        context
      ) {
        switch (action.type) {
          case 'RECEIVE_EVENTS': // raw
            return receiveRawEvents(
              eventStore,
              eventSources[action.sourceId],
              action.fetchId,
              action.fetchRange,
              action.rawEvents,
              context
            )
          case 'ADD_EVENTS': // already parsed, but not expanded
            return addEvent(
              eventStore,
              action.eventStore, // new ones
              dateProfile ? dateProfile.activeRange : null,
              context
            )
          case 'RESET_EVENTS':
            return action.eventStore
          case 'MERGE_EVENTS': // already parsed and expanded
            return mergeEventStores(eventStore, action.eventStore)
          case 'PREV': // TODO: how do we track all actions that affect dateProfile :(
          case 'NEXT':
          case 'CHANGE_DATE':
          case 'CHANGE_VIEW_TYPE':
            if (dateProfile) {
              return expandRecurring(
                eventStore,
                dateProfile.activeRange,
                context
              )
            }
            return eventStore
          case 'REMOVE_EVENTS':
            return excludeSubEventStore(eventStore, action.eventStore)
          case 'REMOVE_EVENT_SOURCE':
            return excludeEventsBySourceId(eventStore, action.sourceId)
          case 'REMOVE_ALL_EVENT_SOURCES':
            return filterEventStoreDefs(eventStore, function (eventDef) {
              return !eventDef.sourceId // only keep events with no source id
            })
          case 'REMOVE_ALL_EVENTS':
            return createEmptyEventStore()
          default:
            return eventStore
        }
      }

      function receiveRawEvents(
        eventStore,
        eventSource,
        fetchId,
        fetchRange,
        rawEvents,
        context
      ) {
        if (
          eventSource && // not already removed
          fetchId === eventSource.latestFetchId // TODO: wish this logic was always in event-sources
        ) {
          var subset = parseEvents(
            transformRawEvents(rawEvents, eventSource, context),
            eventSource,
            context
          )
          if (fetchRange) {
            subset = expandRecurring(subset, fetchRange, context)
          }
          return mergeEventStores(
            excludeEventsBySourceId(eventStore, eventSource.sourceId),
            subset
          )
        }
        return eventStore
      }

      function transformRawEvents(rawEvents, eventSource, context) {
        var calEachTransform = context.options.eventDataTransform
        var sourceEachTransform = eventSource
          ? eventSource.eventDataTransform
          : null
        if (sourceEachTransform) {
          rawEvents = transformEachRawEvent(rawEvents, sourceEachTransform)
        }
        if (calEachTransform) {
          rawEvents = transformEachRawEvent(rawEvents, calEachTransform)
        }
        return rawEvents
      }

      function transformEachRawEvent(rawEvents, func) {
        var refinedEvents
        if (!func) {
          refinedEvents = rawEvents
        } else {
          refinedEvents = []
          for (
            var _i = 0, rawEvents_1 = rawEvents;
            _i < rawEvents_1.length;
            _i++
          ) {
            var rawEvent = rawEvents_1[_i]
            var refinedEvent = func(rawEvent)
            if (refinedEvent) {
              refinedEvents.push(refinedEvent)
            } else if (refinedEvent == null) {
              refinedEvents.push(rawEvent)
            } // if a different falsy value, do nothing
          }
        }
        return refinedEvents
      }

      function addEvent(eventStore, subset, expandRange, context) {
        if (expandRange) {
          subset = expandRecurring(subset, expandRange, context)
        }
        return mergeEventStores(eventStore, subset)
      }

      function rezoneEventStoreDates(eventStore, oldDateEnv, newDateEnv) {
        var defs = eventStore.defs
        var instances = mapHash(eventStore.instances, function (instance) {
          var def = defs[instance.defId]
          if (def.allDay || def.recurringDef) {
            return instance // isn't dependent on timezone
          }
          return __assign(__assign({}, instance), {
            range: {
              start: newDateEnv.createMarker(
                oldDateEnv.toDate(instance.range.start, instance.forcedStartTzo)
              ),
              end: newDateEnv.createMarker(
                oldDateEnv.toDate(instance.range.end, instance.forcedEndTzo)
              ),
            },
            forcedStartTzo: newDateEnv.canComputeOffset
              ? null
              : instance.forcedStartTzo,
            forcedEndTzo: newDateEnv.canComputeOffset
              ? null
              : instance.forcedEndTzo,
          })
        })
        return { defs: defs, instances: instances }
      }

      function excludeEventsBySourceId(eventStore, sourceId) {
        return filterEventStoreDefs(eventStore, function (eventDef) {
          return eventDef.sourceId !== sourceId
        })
      }

      // QUESTION: why not just return instances? do a general object-property-exclusion util
      function excludeInstances(eventStore, removals) {
        return {
          defs: eventStore.defs,
          instances: filterHash(eventStore.instances, function (instance) {
            return !removals[instance.instanceId]
          }),
        }
      }

      // high-level segmenting-aware tester functions
      // ------------------------------------------------------------------------------------------------------------------------
      function isInteractionValid(interaction, context) {
        return isNewPropsValid({ eventDrag: interaction }, context) // HACK: the eventDrag props is used for ALL interactions
      }

      function isDateSelectionValid(dateSelection, context) {
        return isNewPropsValid({ dateSelection: dateSelection }, context)
      }

      function isNewPropsValid(newProps, context) {
        var calendarState = context.getCurrentData()
        var props = __assign(
          {
            businessHours: calendarState.businessHours,
            dateSelection: '',
            eventStore: calendarState.eventStore,
            eventUiBases: calendarState.eventUiBases,
            eventSelection: '',
            eventDrag: null,
            eventResize: null,
          },
          newProps
        )
        return (context.pluginHooks.isPropsValid || isPropsValid)(
          props,
          context
        )
      }

      function isPropsValid(state, context, dateSpanMeta, filterConfig) {
        if (dateSpanMeta === void 0) {
          dateSpanMeta = {}
        }
        if (
          state.eventDrag &&
          !isInteractionPropsValid(state, context, dateSpanMeta, filterConfig)
        ) {
          return false
        }
        if (
          state.dateSelection &&
          !isDateSelectionPropsValid(state, context, dateSpanMeta, filterConfig)
        ) {
          return false
        }
        return true
      }

      // Moving Event Validation
      // ------------------------------------------------------------------------------------------------------------------------
      function isInteractionPropsValid(
        state,
        context,
        dateSpanMeta,
        filterConfig
      ) {
        var currentState = context.getCurrentData()
        var interaction = state.eventDrag // HACK: the eventDrag props is used for ALL interactions
        var subjectEventStore = interaction.mutatedEvents
        var subjectDefs = subjectEventStore.defs
        var subjectInstances = subjectEventStore.instances
        var subjectConfigs = compileEventUis(
          subjectDefs,
          interaction.isEvent
            ? state.eventUiBases
            : { '': currentState.selectionConfig }
        )
        if (filterConfig) {
          subjectConfigs = mapHash(subjectConfigs, filterConfig)
        }
        // exclude the subject events. TODO: exclude defs too?
        var otherEventStore = excludeInstances(
          state.eventStore,
          interaction.affectedEvents.instances
        )
        var otherDefs = otherEventStore.defs
        var otherInstances = otherEventStore.instances
        var otherConfigs = compileEventUis(otherDefs, state.eventUiBases)
        for (var subjectInstanceId in subjectInstances) {
          var subjectInstance = subjectInstances[subjectInstanceId]
          var subjectRange = subjectInstance.range
          var subjectConfig = subjectConfigs[subjectInstance.defId]
          var subjectDef = subjectDefs[subjectInstance.defId]
          // constraint
          if (
            !allConstraintsPass(
              subjectConfig.constraints,
              subjectRange,
              otherEventStore,
              state.businessHours,
              context
            )
          ) {
            return false
          }
          // overlap
          var eventOverlap = context.options.eventOverlap
          var eventOverlapFunc =
            typeof eventOverlap === 'function' ? eventOverlap : null
          for (var otherInstanceId in otherInstances) {
            var otherInstance = otherInstances[otherInstanceId]
            // intersect! evaluate
            if (rangesIntersect(subjectRange, otherInstance.range)) {
              var otherOverlap = otherConfigs[otherInstance.defId].overlap
              // consider the other event's overlap. only do this if the subject event is a "real" event
              if (otherOverlap === false && interaction.isEvent) {
                return false
              }
              if (subjectConfig.overlap === false) {
                return false
              }
              if (
                eventOverlapFunc &&
                !eventOverlapFunc(
                  new EventApi(
                    context,
                    otherDefs[otherInstance.defId],
                    otherInstance
                  ), // still event
                  new EventApi(context, subjectDef, subjectInstance)
                )
              ) {
                return false
              }
            }
          }
          // allow (a function)
          var calendarEventStore = currentState.eventStore // need global-to-calendar, not local to component (splittable)state
          for (var _i = 0, _a = subjectConfig.allows; _i < _a.length; _i++) {
            var subjectAllow = _a[_i]
            var subjectDateSpan = __assign(__assign({}, dateSpanMeta), {
              range: subjectInstance.range,
              allDay: subjectDef.allDay,
            })
            var origDef = calendarEventStore.defs[subjectDef.defId]
            var origInstance = calendarEventStore.instances[subjectInstanceId]
            var eventApi = void 0
            if (origDef) {
              // was previously in the calendar
              eventApi = new EventApi(context, origDef, origInstance)
            } else {
              // was an external event
              eventApi = new EventApi(context, subjectDef) // no instance, because had no dates
            }
            if (
              !subjectAllow(
                buildDateSpanApiWithContext(subjectDateSpan, context),
                eventApi
              )
            ) {
              return false
            }
          }
        }
        return true
      }

      // Date Selection Validation
      // ------------------------------------------------------------------------------------------------------------------------
      function isDateSelectionPropsValid(
        state,
        context,
        dateSpanMeta,
        filterConfig
      ) {
        var relevantEventStore = state.eventStore
        var relevantDefs = relevantEventStore.defs
        var relevantInstances = relevantEventStore.instances
        var selection = state.dateSelection
        var selectionRange = selection.range
        var selectionConfig = context.getCurrentData().selectionConfig
        if (filterConfig) {
          selectionConfig = filterConfig(selectionConfig)
        }
        // constraint
        if (
          !allConstraintsPass(
            selectionConfig.constraints,
            selectionRange,
            relevantEventStore,
            state.businessHours,
            context
          )
        ) {
          return false
        }
        // overlap
        var selectOverlap = context.options.selectOverlap
        var selectOverlapFunc =
          typeof selectOverlap === 'function' ? selectOverlap : null
        for (var relevantInstanceId in relevantInstances) {
          var relevantInstance = relevantInstances[relevantInstanceId]
          // intersect! evaluate
          if (rangesIntersect(selectionRange, relevantInstance.range)) {
            if (selectionConfig.overlap === false) {
              return false
            }
            if (
              selectOverlapFunc &&
              !selectOverlapFunc(
                new EventApi(
                  context,
                  relevantDefs[relevantInstance.defId],
                  relevantInstance
                ),
                null
              )
            ) {
              return false
            }
          }
        }
        // allow (a function)
        for (var _i = 0, _a = selectionConfig.allows; _i < _a.length; _i++) {
          var selectionAllow = _a[_i]
          var fullDateSpan = __assign(__assign({}, dateSpanMeta), selection)
          if (
            !selectionAllow(
              buildDateSpanApiWithContext(fullDateSpan, context),
              null
            )
          ) {
            return false
          }
        }
        return true
      }

      // Constraint Utils
      // ------------------------------------------------------------------------------------------------------------------------
      function allConstraintsPass(
        constraints,
        subjectRange,
        otherEventStore,
        businessHoursUnexpanded,
        context
      ) {
        for (
          var _i = 0, constraints_1 = constraints;
          _i < constraints_1.length;
          _i++
        ) {
          var constraint = constraints_1[_i]
          if (
            !anyRangesContainRange(
              constraintToRanges(
                constraint,
                subjectRange,
                otherEventStore,
                businessHoursUnexpanded,
                context
              ),
              subjectRange
            )
          ) {
            return false
          }
        }
        return true
      }

      function constraintToRanges(
        constraint,
        subjectRange, // for expanding a recurring constraint, or expanding business hours
        otherEventStore, // for if constraint is an even group ID
        businessHoursUnexpanded, // for if constraint is 'businessHours'
        context
      ) {
        if (constraint === 'businessHours') {
          return eventStoreToRanges(
            expandRecurring(businessHoursUnexpanded, subjectRange, context)
          )
        }
        if (typeof constraint === 'string') {
          // an group ID
          return eventStoreToRanges(
            filterEventStoreDefs(otherEventStore, function (eventDef) {
              return eventDef.groupId === constraint
            })
          )
        }
        if (typeof constraint === 'object' && constraint) {
          // non-null object
          return eventStoreToRanges(
            expandRecurring(constraint, subjectRange, context)
          )
        }
        return [] // if it's false
      }

      // TODO: move to event-store file?
      function eventStoreToRanges(eventStore) {
        var instances = eventStore.instances
        var ranges = []
        for (var instanceId in instances) {
          ranges.push(instances[instanceId].range)
        }
        return ranges
      }

      // TODO: move to geom file?
      function anyRangesContainRange(outerRanges, innerRange) {
        for (
          var _i = 0, outerRanges_1 = outerRanges;
          _i < outerRanges_1.length;
          _i++
        ) {
          var outerRange = outerRanges_1[_i]
          if (rangeContainsRange(outerRange, innerRange)) {
            return true
          }
        }
        return false
      }

      /*
    an INTERACTABLE date component

    PURPOSES:
    - hook up to fg, fill, and mirror renderers
    - interface for dragging and hits
    */
      var DateComponent = /** @class */ (function (_super) {
        __extends(DateComponent, _super)

        function DateComponent() {
          var _this = (_super !== null && _super.apply(this, arguments)) || this
          _this.uid = guid()
          return _this
        }

        // Hit System
        // -----------------------------------------------------------------------------------------------------------------
        DateComponent.prototype.prepareHits = function () {}
        DateComponent.prototype.queryHit = function (
          positionLeft,
          positionTop,
          elWidth,
          elHeight
        ) {
          return null // this should be abstract
        }
        // Validation
        // -----------------------------------------------------------------------------------------------------------------
        DateComponent.prototype.isInteractionValid = function (interaction) {
          var dateProfile = this.props.dateProfile // HACK
          var instances = interaction.mutatedEvents.instances
          if (dateProfile) {
            // HACK for MorePopover
            for (var instanceId in instances) {
              if (
                !rangeContainsRange(
                  dateProfile.validRange,
                  instances[instanceId].range
                )
              ) {
                return false
              }
            }
          }
          return isInteractionValid(interaction, this.context)
        }
        DateComponent.prototype.isDateSelectionValid = function (selection) {
          var dateProfile = this.props.dateProfile // HACK
          if (
            dateProfile && // HACK for MorePopover
            !rangeContainsRange(dateProfile.validRange, selection.range)
          ) {
            return false
          }
          return isDateSelectionValid(selection, this.context)
        }
        // Pointer Interaction Utils
        // -----------------------------------------------------------------------------------------------------------------
        DateComponent.prototype.isValidSegDownEl = function (el) {
          return (
            !this.props.eventDrag && // HACK
            !this.props.eventResize && // HACK
            !elementClosest(el, '.fc-event-mirror')
          )
        }
        DateComponent.prototype.isValidDateDownEl = function (el) {
          return (
            !elementClosest(el, '.fc-event:not(.fc-bg-event)') &&
            !elementClosest(el, '.fc-daygrid-more-link') && // a "more.." link
            !elementClosest(el, 'a[data-navlink]') && // a clickable nav link
            !elementClosest(el, '.fc-popover')
          ) // hack
        }
        return DateComponent
      })(BaseComponent)

      // TODO: easier way to add new hooks? need to update a million things
      function createPlugin(input) {
        return {
          id: guid(),
          deps: input.deps || [],
          reducers: input.reducers || [],
          isLoadingFuncs: input.isLoadingFuncs || [],
          contextInit: [].concat(input.contextInit || []),
          eventRefiners: input.eventRefiners || {},
          eventDefMemberAdders: input.eventDefMemberAdders || [],
          eventSourceRefiners: input.eventSourceRefiners || {},
          isDraggableTransformers: input.isDraggableTransformers || [],
          eventDragMutationMassagers: input.eventDragMutationMassagers || [],
          eventDefMutationAppliers: input.eventDefMutationAppliers || [],
          dateSelectionTransformers: input.dateSelectionTransformers || [],
          datePointTransforms: input.datePointTransforms || [],
          dateSpanTransforms: input.dateSpanTransforms || [],
          views: input.views || {},
          viewPropsTransformers: input.viewPropsTransformers || [],
          isPropsValid: input.isPropsValid || null,
          externalDefTransforms: input.externalDefTransforms || [],
          eventResizeJoinTransforms: input.eventResizeJoinTransforms || [],
          viewContainerAppends: input.viewContainerAppends || [],
          eventDropTransformers: input.eventDropTransformers || [],
          componentInteractions: input.componentInteractions || [],
          calendarInteractions: input.calendarInteractions || [],
          themeClasses: input.themeClasses || {},
          eventSourceDefs: input.eventSourceDefs || [],
          cmdFormatter: input.cmdFormatter,
          recurringTypes: input.recurringTypes || [],
          namedTimeZonedImpl: input.namedTimeZonedImpl,
          initialView: input.initialView || '',
          elementDraggingImpl: input.elementDraggingImpl,
          optionChangeHandlers: input.optionChangeHandlers || {},
          scrollGridImpl: input.scrollGridImpl || null,
          contentTypeHandlers: input.contentTypeHandlers || {},
          listenerRefiners: input.listenerRefiners || {},
          optionRefiners: input.optionRefiners || {},
          propSetHandlers: input.propSetHandlers || {},
        }
      }

      function buildPluginHooks(pluginDefs, globalDefs) {
        var isAdded = {}
        var hooks = {
          reducers: [],
          isLoadingFuncs: [],
          contextInit: [],
          eventRefiners: {},
          eventDefMemberAdders: [],
          eventSourceRefiners: {},
          isDraggableTransformers: [],
          eventDragMutationMassagers: [],
          eventDefMutationAppliers: [],
          dateSelectionTransformers: [],
          datePointTransforms: [],
          dateSpanTransforms: [],
          views: {},
          viewPropsTransformers: [],
          isPropsValid: null,
          externalDefTransforms: [],
          eventResizeJoinTransforms: [],
          viewContainerAppends: [],
          eventDropTransformers: [],
          componentInteractions: [],
          calendarInteractions: [],
          themeClasses: {},
          eventSourceDefs: [],
          cmdFormatter: null,
          recurringTypes: [],
          namedTimeZonedImpl: null,
          initialView: '',
          elementDraggingImpl: null,
          optionChangeHandlers: {},
          scrollGridImpl: null,
          contentTypeHandlers: {},
          listenerRefiners: {},
          optionRefiners: {},
          propSetHandlers: {},
        }

        function addDefs(defs) {
          for (var _i = 0, defs_1 = defs; _i < defs_1.length; _i++) {
            var def = defs_1[_i]
            if (!isAdded[def.id]) {
              isAdded[def.id] = true
              addDefs(def.deps)
              hooks = combineHooks(hooks, def)
            }
          }
        }

        if (pluginDefs) {
          addDefs(pluginDefs)
        }
        addDefs(globalDefs)
        return hooks
      }

      function buildBuildPluginHooks() {
        var currentOverrideDefs = []
        var currentGlobalDefs = []
        var currentHooks
        return function (overrideDefs, globalDefs) {
          if (
            !currentHooks ||
            !isArraysEqual(overrideDefs, currentOverrideDefs) ||
            !isArraysEqual(globalDefs, currentGlobalDefs)
          ) {
            currentHooks = buildPluginHooks(overrideDefs, globalDefs)
          }
          currentOverrideDefs = overrideDefs
          currentGlobalDefs = globalDefs
          return currentHooks
        }
      }

      function combineHooks(hooks0, hooks1) {
        return {
          reducers: hooks0.reducers.concat(hooks1.reducers),
          isLoadingFuncs: hooks0.isLoadingFuncs.concat(hooks1.isLoadingFuncs),
          contextInit: hooks0.contextInit.concat(hooks1.contextInit),
          eventRefiners: __assign(
            __assign({}, hooks0.eventRefiners),
            hooks1.eventRefiners
          ),
          eventDefMemberAdders: hooks0.eventDefMemberAdders.concat(
            hooks1.eventDefMemberAdders
          ),
          eventSourceRefiners: __assign(
            __assign({}, hooks0.eventSourceRefiners),
            hooks1.eventSourceRefiners
          ),
          isDraggableTransformers: hooks0.isDraggableTransformers.concat(
            hooks1.isDraggableTransformers
          ),
          eventDragMutationMassagers: hooks0.eventDragMutationMassagers.concat(
            hooks1.eventDragMutationMassagers
          ),
          eventDefMutationAppliers: hooks0.eventDefMutationAppliers.concat(
            hooks1.eventDefMutationAppliers
          ),
          dateSelectionTransformers: hooks0.dateSelectionTransformers.concat(
            hooks1.dateSelectionTransformers
          ),
          datePointTransforms: hooks0.datePointTransforms.concat(
            hooks1.datePointTransforms
          ),
          dateSpanTransforms: hooks0.dateSpanTransforms.concat(
            hooks1.dateSpanTransforms
          ),
          views: __assign(__assign({}, hooks0.views), hooks1.views),
          viewPropsTransformers: hooks0.viewPropsTransformers.concat(
            hooks1.viewPropsTransformers
          ),
          isPropsValid: hooks1.isPropsValid || hooks0.isPropsValid,
          externalDefTransforms: hooks0.externalDefTransforms.concat(
            hooks1.externalDefTransforms
          ),
          eventResizeJoinTransforms: hooks0.eventResizeJoinTransforms.concat(
            hooks1.eventResizeJoinTransforms
          ),
          viewContainerAppends: hooks0.viewContainerAppends.concat(
            hooks1.viewContainerAppends
          ),
          eventDropTransformers: hooks0.eventDropTransformers.concat(
            hooks1.eventDropTransformers
          ),
          calendarInteractions: hooks0.calendarInteractions.concat(
            hooks1.calendarInteractions
          ),
          componentInteractions: hooks0.componentInteractions.concat(
            hooks1.componentInteractions
          ),
          themeClasses: __assign(
            __assign({}, hooks0.themeClasses),
            hooks1.themeClasses
          ),
          eventSourceDefs: hooks0.eventSourceDefs.concat(
            hooks1.eventSourceDefs
          ),
          cmdFormatter: hooks1.cmdFormatter || hooks0.cmdFormatter,
          recurringTypes: hooks0.recurringTypes.concat(hooks1.recurringTypes),
          namedTimeZonedImpl:
            hooks1.namedTimeZonedImpl || hooks0.namedTimeZonedImpl,
          initialView: hooks0.initialView || hooks1.initialView,
          elementDraggingImpl:
            hooks0.elementDraggingImpl || hooks1.elementDraggingImpl,
          optionChangeHandlers: __assign(
            __assign({}, hooks0.optionChangeHandlers),
            hooks1.optionChangeHandlers
          ),
          scrollGridImpl: hooks1.scrollGridImpl || hooks0.scrollGridImpl,
          contentTypeHandlers: __assign(
            __assign({}, hooks0.contentTypeHandlers),
            hooks1.contentTypeHandlers
          ),
          listenerRefiners: __assign(
            __assign({}, hooks0.listenerRefiners),
            hooks1.listenerRefiners
          ),
          optionRefiners: __assign(
            __assign({}, hooks0.optionRefiners),
            hooks1.optionRefiners
          ),
          propSetHandlers: __assign(
            __assign({}, hooks0.propSetHandlers),
            hooks1.propSetHandlers
          ),
        }
      }

      var StandardTheme = /** @class */ (function (_super) {
        __extends(StandardTheme, _super)

        function StandardTheme() {
          return (_super !== null && _super.apply(this, arguments)) || this
        }

        return StandardTheme
      })(Theme)
      StandardTheme.prototype.classes = {
        root: 'fc-theme-standard',
        tableCellShaded: 'fc-cell-shaded',
        buttonGroup: 'fc-button-group',
        button: 'fc-button fc-button-primary',
        buttonActive: 'fc-button-active',
      }
      StandardTheme.prototype.baseIconClass = 'fc-icon'
      StandardTheme.prototype.iconClasses = {
        close: 'fc-icon-x',
        prev: 'fc-icon-chevron-left',
        next: 'fc-icon-chevron-right',
        prevYear: 'fc-icon-chevrons-left',
        nextYear: 'fc-icon-chevrons-right',
      }
      StandardTheme.prototype.rtlIconClasses = {
        prev: 'fc-icon-chevron-right',
        next: 'fc-icon-chevron-left',
        prevYear: 'fc-icon-chevrons-right',
        nextYear: 'fc-icon-chevrons-left',
      }
      StandardTheme.prototype.iconOverrideOption = 'buttonIcons' // TODO: make TS-friendly
      StandardTheme.prototype.iconOverrideCustomButtonOption = 'icon'
      StandardTheme.prototype.iconOverridePrefix = 'fc-icon-'

      function compileViewDefs(defaultConfigs, overrideConfigs) {
        var hash = {}
        var viewType
        for (viewType in defaultConfigs) {
          ensureViewDef(viewType, hash, defaultConfigs, overrideConfigs)
        }
        for (viewType in overrideConfigs) {
          ensureViewDef(viewType, hash, defaultConfigs, overrideConfigs)
        }
        return hash
      }

      function ensureViewDef(viewType, hash, defaultConfigs, overrideConfigs) {
        if (hash[viewType]) {
          return hash[viewType]
        }
        var viewDef = buildViewDef(
          viewType,
          hash,
          defaultConfigs,
          overrideConfigs
        )
        if (viewDef) {
          hash[viewType] = viewDef
        }
        return viewDef
      }

      function buildViewDef(viewType, hash, defaultConfigs, overrideConfigs) {
        var defaultConfig = defaultConfigs[viewType]
        var overrideConfig = overrideConfigs[viewType]
        var queryProp = function (name) {
          return defaultConfig && defaultConfig[name] !== null
            ? defaultConfig[name]
            : overrideConfig && overrideConfig[name] !== null
            ? overrideConfig[name]
            : null
        }
        var theComponent = queryProp('component')
        var superType = queryProp('superType')
        var superDef = null
        if (superType) {
          if (superType === viewType) {
            throw new Error(
              "Can't have a custom view type that references itself"
            )
          }
          superDef = ensureViewDef(
            superType,
            hash,
            defaultConfigs,
            overrideConfigs
          )
        }
        if (!theComponent && superDef) {
          theComponent = superDef.component
        }
        if (!theComponent) {
          return null // don't throw a warning, might be settings for a single-unit view
        }
        return {
          type: viewType,
          component: theComponent,
          defaults: __assign(
            __assign({}, superDef ? superDef.defaults : {}),
            defaultConfig ? defaultConfig.rawOptions : {}
          ),
          overrides: __assign(
            __assign({}, superDef ? superDef.overrides : {}),
            overrideConfig ? overrideConfig.rawOptions : {}
          ),
        }
      }

      /* eslint max-classes-per-file: off */
      // NOTE: in JSX, you should always use this class with <HookProps> arg. otherwise, will default to any???
      var RenderHook = /** @class */ (function (_super) {
        __extends(RenderHook, _super)

        function RenderHook() {
          var _this = (_super !== null && _super.apply(this, arguments)) || this
          _this.rootElRef = createRef()
          _this.handleRootEl = function (el) {
            setRef(_this.rootElRef, el)
            if (_this.props.elRef) {
              setRef(_this.props.elRef, el)
            }
          }
          return _this
        }

        RenderHook.prototype.render = function () {
          var _this = this
          var props = this.props
          var hookProps = props.hookProps
          return createElement(
            MountHook,
            {
              hookProps: hookProps,
              didMount: props.didMount,
              willUnmount: props.willUnmount,
              elRef: this.handleRootEl,
            },
            function (rootElRef) {
              return createElement(
                ContentHook,
                {
                  hookProps: hookProps,
                  content: props.content,
                  defaultContent: props.defaultContent,
                  backupElRef: _this.rootElRef,
                },
                function (innerElRef, innerContent) {
                  return props.children(
                    rootElRef,
                    normalizeClassNames(props.classNames, hookProps),
                    innerElRef,
                    innerContent
                  )
                }
              )
            }
          )
        }
        return RenderHook
      })(BaseComponent)
      // TODO: rename to be about function, not default. use in above type
      // for forcing rerender of components that use the ContentHook
      var CustomContentRenderContext = createContext$1(0)

      function ContentHook(props) {
        return createElement(
          CustomContentRenderContext.Consumer,
          null,
          function (renderId) {
            return createElement(
              ContentHookInner,
              __assign({ renderId: renderId }, props)
            )
          }
        )
      }

      var ContentHookInner = /** @class */ (function (_super) {
        __extends(ContentHookInner, _super)

        function ContentHookInner() {
          var _this = (_super !== null && _super.apply(this, arguments)) || this
          _this.innerElRef = createRef()
          return _this
        }

        ContentHookInner.prototype.render = function () {
          return this.props.children(this.innerElRef, this.renderInnerContent())
        }
        ContentHookInner.prototype.componentDidMount = function () {
          this.updateCustomContent()
        }
        ContentHookInner.prototype.componentDidUpdate = function () {
          this.updateCustomContent()
        }
        ContentHookInner.prototype.componentWillUnmount = function () {
          if (this.customContentInfo && this.customContentInfo.destroy) {
            this.customContentInfo.destroy()
          }
        }
        ContentHookInner.prototype.renderInnerContent = function () {
          var contentTypeHandlers = this.context.pluginHooks.contentTypeHandlers
          var _a = this,
            props = _a.props,
            customContentInfo = _a.customContentInfo
          var rawVal = props.content
          var innerContent = normalizeContent(rawVal, props.hookProps)
          var innerContentVDom = null
          if (innerContent === undefined) {
            // use the default
            innerContent = normalizeContent(
              props.defaultContent,
              props.hookProps
            )
          }
          if (innerContent !== undefined) {
            // we allow custom content handlers to return nothing
            if (customContentInfo) {
              customContentInfo.contentVal =
                innerContent[customContentInfo.contentKey]
            } else if (typeof innerContent === 'object') {
              // look for a prop that would indicate a custom content handler is needed
              for (var contentKey in contentTypeHandlers) {
                if (innerContent[contentKey] !== undefined) {
                  var stuff = contentTypeHandlers[contentKey]()
                  customContentInfo = this.customContentInfo = __assign(
                    {
                      contentKey: contentKey,
                      contentVal: innerContent[contentKey],
                    },
                    stuff
                  )
                  break
                }
              }
            }
            if (customContentInfo) {
              innerContentVDom = [] // signal that something was specified
            } else {
              innerContentVDom = innerContent // assume a [p]react vdom node. use it
            }
          }
          return innerContentVDom
        }
        ContentHookInner.prototype.updateCustomContent = function () {
          if (this.customContentInfo) {
            this.customContentInfo.render(
              this.innerElRef.current || this.props.backupElRef.current, // the element to render into
              this.customContentInfo.contentVal
            )
          }
        }
        return ContentHookInner
      })(BaseComponent)
      var MountHook = /** @class */ (function (_super) {
        __extends(MountHook, _super)

        function MountHook() {
          var _this = (_super !== null && _super.apply(this, arguments)) || this
          _this.handleRootEl = function (rootEl) {
            _this.rootEl = rootEl
            if (_this.props.elRef) {
              setRef(_this.props.elRef, rootEl)
            }
          }
          return _this
        }

        MountHook.prototype.render = function () {
          return this.props.children(this.handleRootEl)
        }
        MountHook.prototype.componentDidMount = function () {
          var callback = this.props.didMount
          if (callback) {
            callback(
              __assign(__assign({}, this.props.hookProps), { el: this.rootEl })
            )
          }
        }
        MountHook.prototype.componentWillUnmount = function () {
          var callback = this.props.willUnmount
          if (callback) {
            callback(
              __assign(__assign({}, this.props.hookProps), { el: this.rootEl })
            )
          }
        }
        return MountHook
      })(BaseComponent)

      function buildClassNameNormalizer() {
        var currentGenerator
        var currentHookProps
        var currentClassNames = []
        return function (generator, hookProps) {
          if (
            !currentHookProps ||
            !isPropsEqual(currentHookProps, hookProps) ||
            generator !== currentGenerator
          ) {
            currentGenerator = generator
            currentHookProps = hookProps
            currentClassNames = normalizeClassNames(generator, hookProps)
          }
          return currentClassNames
        }
      }

      function normalizeClassNames(classNames, hookProps) {
        if (typeof classNames === 'function') {
          classNames = classNames(hookProps)
        }
        return parseClassNames(classNames)
      }

      function normalizeContent(input, hookProps) {
        if (typeof input === 'function') {
          return input(hookProps, createElement) // give the function the vdom-creation func
        }
        return input
      }

      var ViewRoot = /** @class */ (function (_super) {
        __extends(ViewRoot, _super)

        function ViewRoot() {
          var _this = (_super !== null && _super.apply(this, arguments)) || this
          _this.normalizeClassNames = buildClassNameNormalizer()
          return _this
        }

        ViewRoot.prototype.render = function () {
          var _a = this,
            props = _a.props,
            context = _a.context
          var options = context.options
          var hookProps = { view: context.viewApi }
          var customClassNames = this.normalizeClassNames(
            options.viewClassNames,
            hookProps
          )
          return createElement(
            MountHook,
            {
              hookProps: hookProps,
              didMount: options.viewDidMount,
              willUnmount: options.viewWillUnmount,
              elRef: props.elRef,
            },
            function (rootElRef) {
              return props.children(
                rootElRef,
                ['fc-' + props.viewSpec.type + '-view', 'fc-view'].concat(
                  customClassNames
                )
              )
            }
          )
        }
        return ViewRoot
      })(BaseComponent)

      function parseViewConfigs(inputs) {
        return mapHash(inputs, parseViewConfig)
      }

      function parseViewConfig(input) {
        var rawOptions =
          typeof input === 'function' ? { component: input } : input
        var component = rawOptions.component
        if (rawOptions.content) {
          component = createViewHookComponent(rawOptions)
          // TODO: remove content/classNames/didMount/etc from options?
        }
        return {
          superType: rawOptions.type,
          component: component,
          rawOptions: rawOptions,
        }
      }

      function createViewHookComponent(options) {
        return function (viewProps) {
          return createElement(
            ViewContextType.Consumer,
            null,
            function (context) {
              return createElement(
                ViewRoot,
                { viewSpec: context.viewSpec },
                function (viewElRef, viewClassNames) {
                  var hookProps = __assign(__assign({}, viewProps), {
                    nextDayThreshold: context.options.nextDayThreshold,
                  })
                  return createElement(
                    RenderHook,
                    {
                      hookProps: hookProps,
                      classNames: options.classNames,
                      content: options.content,
                      didMount: options.didMount,
                      willUnmount: options.willUnmount,
                      elRef: viewElRef,
                    },
                    function (
                      rootElRef,
                      customClassNames,
                      innerElRef,
                      innerContent
                    ) {
                      return createElement(
                        'div',
                        {
                          className: viewClassNames
                            .concat(customClassNames)
                            .join(' '),
                          ref: rootElRef,
                        },
                        innerContent
                      )
                    }
                  )
                }
              )
            }
          )
        }
      }

      function buildViewSpecs(
        defaultInputs,
        optionOverrides,
        dynamicOptionOverrides,
        localeDefaults
      ) {
        var defaultConfigs = parseViewConfigs(defaultInputs)
        var overrideConfigs = parseViewConfigs(optionOverrides.views)
        var viewDefs = compileViewDefs(defaultConfigs, overrideConfigs)
        return mapHash(viewDefs, function (viewDef) {
          return buildViewSpec(
            viewDef,
            overrideConfigs,
            optionOverrides,
            dynamicOptionOverrides,
            localeDefaults
          )
        })
      }

      function buildViewSpec(
        viewDef,
        overrideConfigs,
        optionOverrides,
        dynamicOptionOverrides,
        localeDefaults
      ) {
        var durationInput =
          viewDef.overrides.duration ||
          viewDef.defaults.duration ||
          dynamicOptionOverrides.duration ||
          optionOverrides.duration
        var duration = null
        var durationUnit = ''
        var singleUnit = ''
        var singleUnitOverrides = {}
        if (durationInput) {
          duration = createDurationCached(durationInput)
          if (duration) {
            // valid?
            var denom = greatestDurationDenominator(duration)
            durationUnit = denom.unit
            if (denom.value === 1) {
              singleUnit = durationUnit
              singleUnitOverrides = overrideConfigs[durationUnit]
                ? overrideConfigs[durationUnit].rawOptions
                : {}
            }
          }
        }
        var queryButtonText = function (optionsSubset) {
          var buttonTextMap = optionsSubset.buttonText || {}
          var buttonTextKey = viewDef.defaults.buttonTextKey
          if (buttonTextKey != null && buttonTextMap[buttonTextKey] != null) {
            return buttonTextMap[buttonTextKey]
          }
          if (buttonTextMap[viewDef.type] != null) {
            return buttonTextMap[viewDef.type]
          }
          if (buttonTextMap[singleUnit] != null) {
            return buttonTextMap[singleUnit]
          }
          return null
        }
        return {
          type: viewDef.type,
          component: viewDef.component,
          duration: duration,
          durationUnit: durationUnit,
          singleUnit: singleUnit,
          optionDefaults: viewDef.defaults,
          optionOverrides: __assign(
            __assign({}, singleUnitOverrides),
            viewDef.overrides
          ),
          buttonTextOverride:
            queryButtonText(dynamicOptionOverrides) ||
            queryButtonText(optionOverrides) || // constructor-specified buttonText lookup hash takes precedence
            viewDef.overrides.buttonText,
          buttonTextDefault:
            queryButtonText(localeDefaults) ||
            viewDef.defaults.buttonText ||
            queryButtonText(BASE_OPTION_DEFAULTS) ||
            viewDef.type,
        }
      }

      // hack to get memoization working
      var durationInputMap = {}

      function createDurationCached(durationInput) {
        var json = JSON.stringify(durationInput)
        var res = durationInputMap[json]
        if (res === undefined) {
          res = createDuration(durationInput)
          durationInputMap[json] = res
        }
        return res
      }

      var DateProfileGenerator = /** @class */ (function () {
        function DateProfileGenerator(props) {
          this.props = props
          this.nowDate = getNow(props.nowInput, props.dateEnv)
          this.initHiddenDays()
        }

        /* Date Range Computation
        ------------------------------------------------------------------------------------------------------------------*/
        // Builds a structure with info about what the dates/ranges will be for the "prev" view.
        DateProfileGenerator.prototype.buildPrev = function (
          currentDateProfile,
          currentDate,
          forceToValid
        ) {
          var dateEnv = this.props.dateEnv
          var prevDate = dateEnv.subtract(
            dateEnv.startOf(currentDate, currentDateProfile.currentRangeUnit), // important for start-of-month
            currentDateProfile.dateIncrement
          )
          return this.build(prevDate, -1, forceToValid)
        }
        // Builds a structure with info about what the dates/ranges will be for the "next" view.
        DateProfileGenerator.prototype.buildNext = function (
          currentDateProfile,
          currentDate,
          forceToValid
        ) {
          var dateEnv = this.props.dateEnv
          var nextDate = dateEnv.add(
            dateEnv.startOf(currentDate, currentDateProfile.currentRangeUnit), // important for start-of-month
            currentDateProfile.dateIncrement
          )
          return this.build(nextDate, 1, forceToValid)
        }
        // Builds a structure holding dates/ranges for rendering around the given date.
        // Optional direction param indicates whether the date is being incremented/decremented
        // from its previous value. decremented = -1, incremented = 1 (default).
        DateProfileGenerator.prototype.build = function (
          currentDate,
          direction,
          forceToValid
        ) {
          if (forceToValid === void 0) {
            forceToValid = true
          }
          var props = this.props
          var validRange
          var currentInfo
          var isRangeAllDay
          var renderRange
          var activeRange
          var isValid
          validRange = this.buildValidRange()
          validRange = this.trimHiddenDays(validRange)
          if (forceToValid) {
            currentDate = constrainMarkerToRange(currentDate, validRange)
          }
          currentInfo = this.buildCurrentRangeInfo(currentDate, direction)
          isRangeAllDay = /^(year|month|week|day)$/.test(currentInfo.unit)
          renderRange = this.buildRenderRange(
            this.trimHiddenDays(currentInfo.range),
            currentInfo.unit,
            isRangeAllDay
          )
          renderRange = this.trimHiddenDays(renderRange)
          activeRange = renderRange
          if (!props.showNonCurrentDates) {
            activeRange = intersectRanges(activeRange, currentInfo.range)
          }
          activeRange = this.adjustActiveRange(activeRange)
          activeRange = intersectRanges(activeRange, validRange) // might return null
          // it's invalid if the originally requested date is not contained,
          // or if the range is completely outside of the valid range.
          isValid = rangesIntersect(currentInfo.range, validRange)
          return {
            // constraint for where prev/next operations can go and where events can be dragged/resized to.
            // an object with optional start and end properties.
            validRange: validRange, // range the view is formally responsible for.
            // for example, a month view might have 1st-31st, excluding padded dates
            currentRange: currentInfo.range, // name of largest unit being displayed, like "month" or "week"
            currentRangeUnit: currentInfo.unit,
            isRangeAllDay: isRangeAllDay, // dates that display events and accept drag-n-drop
            // will be `null` if no dates accept events
            activeRange: activeRange, // date range with a rendered skeleton
            // includes not-active days that need some sort of DOM
            renderRange: renderRange, // Duration object that denotes the first visible time of any given day
            slotMinTime: props.slotMinTime, // Duration object that denotes the exclusive visible end time of any given day
            slotMaxTime: props.slotMaxTime,
            isValid: isValid, // how far the current date will move for a prev/next operation
            dateIncrement: this.buildDateIncrement(currentInfo.duration),
          }
        }
        // Builds an object with optional start/end properties.
        // Indicates the minimum/maximum dates to display.
        // not responsible for trimming hidden days.
        DateProfileGenerator.prototype.buildValidRange = function () {
          var input = this.props.validRangeInput
          var simpleInput =
            typeof input === 'function'
              ? input.call(this.props.calendarApi, this.nowDate)
              : input
          return this.refineRange(simpleInput) || { start: null, end: null } // completely open-ended
        }
        // Builds a structure with info about the "current" range, the range that is
        // highlighted as being the current month for example.
        // See build() for a description of `direction`.
        // Guaranteed to have `range` and `unit` properties. `duration` is optional.
        DateProfileGenerator.prototype.buildCurrentRangeInfo = function (
          date,
          direction
        ) {
          var props = this.props
          var duration = null
          var unit = null
          var range = null
          var dayCount
          if (props.duration) {
            duration = props.duration
            unit = props.durationUnit
            range = this.buildRangeFromDuration(date, direction, duration, unit)
          } else if ((dayCount = this.props.dayCount)) {
            unit = 'day'
            range = this.buildRangeFromDayCount(date, direction, dayCount)
          } else if ((range = this.buildCustomVisibleRange(date))) {
            unit = props.dateEnv.greatestWholeUnit(range.start, range.end).unit
          } else {
            duration = this.getFallbackDuration()
            unit = greatestDurationDenominator(duration).unit
            range = this.buildRangeFromDuration(date, direction, duration, unit)
          }
          return { duration: duration, unit: unit, range: range }
        }
        DateProfileGenerator.prototype.getFallbackDuration = function () {
          return createDuration({ day: 1 })
        }
        // Returns a new activeRange to have time values (un-ambiguate)
        // slotMinTime or slotMaxTime causes the range to expand.
        DateProfileGenerator.prototype.adjustActiveRange = function (range) {
          var _a = this.props,
            dateEnv = _a.dateEnv,
            usesMinMaxTime = _a.usesMinMaxTime,
            slotMinTime = _a.slotMinTime,
            slotMaxTime = _a.slotMaxTime
          var start = range.start,
            end = range.end
          if (usesMinMaxTime) {
            // expand active range if slotMinTime is negative (why not when positive?)
            if (asRoughDays(slotMinTime) < 0) {
              start = startOfDay(start) // necessary?
              start = dateEnv.add(start, slotMinTime)
            }
            // expand active range if slotMaxTime is beyond one day (why not when negative?)
            if (asRoughDays(slotMaxTime) > 1) {
              end = startOfDay(end) // necessary?
              end = addDays(end, -1)
              end = dateEnv.add(end, slotMaxTime)
            }
          }
          return { start: start, end: end }
        }
        // Builds the "current" range when it is specified as an explicit duration.
        // `unit` is the already-computed greatestDurationDenominator unit of duration.
        DateProfileGenerator.prototype.buildRangeFromDuration = function (
          date,
          direction,
          duration,
          unit
        ) {
          var _a = this.props,
            dateEnv = _a.dateEnv,
            dateAlignment = _a.dateAlignment
          var start
          var end
          var res
          // compute what the alignment should be
          if (!dateAlignment) {
            var dateIncrement = this.props.dateIncrement
            if (dateIncrement) {
              // use the smaller of the two units
              if (asRoughMs(dateIncrement) < asRoughMs(duration)) {
                dateAlignment = greatestDurationDenominator(dateIncrement).unit
              } else {
                dateAlignment = unit
              }
            } else {
              dateAlignment = unit
            }
          }
          // if the view displays a single day or smaller
          if (asRoughDays(duration) <= 1) {
            if (this.isHiddenDay(start)) {
              start = this.skipHiddenDays(start, direction)
              start = startOfDay(start)
            }
          }

          function computeRes() {
            start = dateEnv.startOf(date, dateAlignment)
            end = dateEnv.add(start, duration)
            res = { start: start, end: end }
          }

          computeRes()
          // if range is completely enveloped by hidden days, go past the hidden days
          if (!this.trimHiddenDays(res)) {
            date = this.skipHiddenDays(date, direction)
            computeRes()
          }
          return res
        }
        // Builds the "current" range when a dayCount is specified.
        DateProfileGenerator.prototype.buildRangeFromDayCount = function (
          date,
          direction,
          dayCount
        ) {
          var _a = this.props,
            dateEnv = _a.dateEnv,
            dateAlignment = _a.dateAlignment
          var runningCount = 0
          var start = date
          var end
          if (dateAlignment) {
            start = dateEnv.startOf(start, dateAlignment)
          }
          start = startOfDay(start)
          start = this.skipHiddenDays(start, direction)
          end = start
          do {
            end = addDays(end, 1)
            if (!this.isHiddenDay(end)) {
              runningCount += 1
            }
          } while (runningCount < dayCount)
          return { start: start, end: end }
        }
        // Builds a normalized range object for the "visible" range,
        // which is a way to define the currentRange and activeRange at the same time.
        DateProfileGenerator.prototype.buildCustomVisibleRange = function (
          date
        ) {
          var props = this.props
          var input = props.visibleRangeInput
          var simpleInput =
            typeof input === 'function'
              ? input.call(props.calendarApi, props.dateEnv.toDate(date))
              : input
          var range = this.refineRange(simpleInput)
          if (range && (range.start == null || range.end == null)) {
            return null
          }
          return range
        }
        // Computes the range that will represent the element/cells for *rendering*,
        // but which may have voided days/times.
        // not responsible for trimming hidden days.
        DateProfileGenerator.prototype.buildRenderRange = function (
          currentRange,
          currentRangeUnit,
          isRangeAllDay
        ) {
          return currentRange
        }
        // Compute the duration value that should be added/substracted to the current date
        // when a prev/next operation happens.
        DateProfileGenerator.prototype.buildDateIncrement = function (
          fallback
        ) {
          var dateIncrement = this.props.dateIncrement
          var customAlignment
          if (dateIncrement) {
            return dateIncrement
          }
          if ((customAlignment = this.props.dateAlignment)) {
            return createDuration(1, customAlignment)
          }
          if (fallback) {
            return fallback
          }
          return createDuration({ days: 1 })
        }
        DateProfileGenerator.prototype.refineRange = function (rangeInput) {
          if (rangeInput) {
            var range = parseRange(rangeInput, this.props.dateEnv)
            if (range) {
              range = computeVisibleDayRange(range)
            }
            return range
          }
          return null
        }
        /* Hidden Days
        ------------------------------------------------------------------------------------------------------------------*/
        // Initializes internal variables related to calculating hidden days-of-week
        DateProfileGenerator.prototype.initHiddenDays = function () {
          var hiddenDays = this.props.hiddenDays || [] // array of day-of-week indices that are hidden
          var isHiddenDayHash = [] // is the day-of-week hidden? (hash with day-of-week-index -> bool)
          var dayCnt = 0
          var i
          if (this.props.weekends === false) {
            hiddenDays.push(0, 6) // 0=sunday, 6=saturday
          }
          for (i = 0; i < 7; i += 1) {
            if (!(isHiddenDayHash[i] = hiddenDays.indexOf(i) !== -1)) {
              dayCnt += 1
            }
          }
          if (!dayCnt) {
            throw new Error('invalid hiddenDays') // all days were hidden? bad.
          }
          this.isHiddenDayHash = isHiddenDayHash
        }
        // Remove days from the beginning and end of the range that are computed as hidden.
        // If the whole range is trimmed off, returns null
        DateProfileGenerator.prototype.trimHiddenDays = function (range) {
          var start = range.start,
            end = range.end
          if (start) {
            start = this.skipHiddenDays(start)
          }
          if (end) {
            end = this.skipHiddenDays(end, -1, true)
          }
          if (start == null || end == null || start < end) {
            return { start: start, end: end }
          }
          return null
        }
        // Is the current day hidden?
        // `day` is a day-of-week index (0-6), or a Date (used for UTC)
        DateProfileGenerator.prototype.isHiddenDay = function (day) {
          if (day instanceof Date) {
            day = day.getUTCDay()
          }
          return this.isHiddenDayHash[day]
        }
        // Incrementing the current day until it is no longer a hidden day, returning a copy.
        // DOES NOT CONSIDER validRange!
        // If the initial value of `date` is not a hidden day, don't do anything.
        // Pass `isExclusive` as `true` if you are dealing with an end date.
        // `inc` defaults to `1` (increment one day forward each time)
        DateProfileGenerator.prototype.skipHiddenDays = function (
          date,
          inc,
          isExclusive
        ) {
          if (inc === void 0) {
            inc = 1
          }
          if (isExclusive === void 0) {
            isExclusive = false
          }
          while (
            this.isHiddenDayHash[
              (date.getUTCDay() + (isExclusive ? inc : 0) + 7) % 7
            ]
          ) {
            date = addDays(date, inc)
          }
          return date
        }
        return DateProfileGenerator
      })()

      function reduceViewType(viewType, action) {
        switch (action.type) {
          case 'CHANGE_VIEW_TYPE':
            viewType = action.viewType
        }
        return viewType
      }

      function reduceDynamicOptionOverrides(dynamicOptionOverrides, action) {
        var _a
        switch (action.type) {
          case 'SET_OPTION':
            return __assign(
              __assign({}, dynamicOptionOverrides),
              ((_a = {}), (_a[action.optionName] = action.rawOptionValue), _a)
            )
          default:
            return dynamicOptionOverrides
        }
      }

      function reduceDateProfile(
        currentDateProfile,
        action,
        currentDate,
        dateProfileGenerator
      ) {
        var dp
        switch (action.type) {
          case 'CHANGE_VIEW_TYPE':
            return dateProfileGenerator.build(action.dateMarker || currentDate)
          case 'CHANGE_DATE':
            if (
              !currentDateProfile.activeRange ||
              !rangeContainsMarker(
                currentDateProfile.currentRange,
                action.dateMarker
              ) // don't move if date already in view
            ) {
              return dateProfileGenerator.build(action.dateMarker)
            }
            break
          case 'PREV':
            dp = dateProfileGenerator.buildPrev(currentDateProfile, currentDate)
            if (dp.isValid) {
              return dp
            }
            break
          case 'NEXT':
            dp = dateProfileGenerator.buildNext(currentDateProfile, currentDate)
            if (dp.isValid) {
              return dp
            }
            break
        }
        return currentDateProfile
      }

      function initEventSources(calendarOptions, dateProfile, context) {
        var activeRange = dateProfile ? dateProfile.activeRange : null
        return addSources(
          {},
          parseInitialSources(calendarOptions, context),
          activeRange,
          context
        )
      }

      function reduceEventSources(eventSources, action, dateProfile, context) {
        var activeRange = dateProfile ? dateProfile.activeRange : null // need this check?
        switch (action.type) {
          case 'ADD_EVENT_SOURCES': // already parsed
            return addSources(
              eventSources,
              action.sources,
              activeRange,
              context
            )
          case 'REMOVE_EVENT_SOURCE':
            return removeSource(eventSources, action.sourceId)
          case 'PREV': // TODO: how do we track all actions that affect dateProfile :(
          case 'NEXT':
          case 'CHANGE_DATE':
          case 'CHANGE_VIEW_TYPE':
            if (dateProfile) {
              return fetchDirtySources(eventSources, activeRange, context)
            }
            return eventSources
          case 'FETCH_EVENT_SOURCES':
            return fetchSourcesByIds(
              eventSources,
              action.sourceIds // why no type?
                ? arrayToHash(action.sourceIds)
                : excludeStaticSources(eventSources, context),
              activeRange,
              action.isRefetch || false,
              context
            )
          case 'RECEIVE_EVENTS':
          case 'RECEIVE_EVENT_ERROR':
            return receiveResponse(
              eventSources,
              action.sourceId,
              action.fetchId,
              action.fetchRange
            )
          case 'REMOVE_ALL_EVENT_SOURCES':
            return {}
          default:
            return eventSources
        }
      }

      function reduceEventSourcesNewTimeZone(
        eventSources,
        dateProfile,
        context
      ) {
        var activeRange = dateProfile ? dateProfile.activeRange : null // need this check?
        return fetchSourcesByIds(
          eventSources,
          excludeStaticSources(eventSources, context),
          activeRange,
          true,
          context
        )
      }

      function computeEventSourcesLoading(eventSources) {
        for (var sourceId in eventSources) {
          if (eventSources[sourceId].isFetching) {
            return true
          }
        }
        return false
      }

      function addSources(eventSourceHash, sources, fetchRange, context) {
        var hash = {}
        for (var _i = 0, sources_1 = sources; _i < sources_1.length; _i++) {
          var source = sources_1[_i]
          hash[source.sourceId] = source
        }
        if (fetchRange) {
          hash = fetchDirtySources(hash, fetchRange, context)
        }
        return __assign(__assign({}, eventSourceHash), hash)
      }

      function removeSource(eventSourceHash, sourceId) {
        return filterHash(eventSourceHash, function (eventSource) {
          return eventSource.sourceId !== sourceId
        })
      }

      function fetchDirtySources(sourceHash, fetchRange, context) {
        return fetchSourcesByIds(
          sourceHash,
          filterHash(sourceHash, function (eventSource) {
            return isSourceDirty(eventSource, fetchRange, context)
          }),
          fetchRange,
          false,
          context
        )
      }

      function isSourceDirty(eventSource, fetchRange, context) {
        if (!doesSourceNeedRange(eventSource, context)) {
          return !eventSource.latestFetchId
        }
        return (
          !context.options.lazyFetching ||
          !eventSource.fetchRange ||
          eventSource.isFetching || // always cancel outdated in-progress fetches
          fetchRange.start < eventSource.fetchRange.start ||
          fetchRange.end > eventSource.fetchRange.end
        )
      }

      function fetchSourcesByIds(
        prevSources,
        sourceIdHash,
        fetchRange,
        isRefetch,
        context
      ) {
        var nextSources = {}
        for (var sourceId in prevSources) {
          var source = prevSources[sourceId]
          if (sourceIdHash[sourceId]) {
            nextSources[sourceId] = fetchSource(
              source,
              fetchRange,
              isRefetch,
              context
            )
          } else {
            nextSources[sourceId] = source
          }
        }
        return nextSources
      }

      function fetchSource(eventSource, fetchRange, isRefetch, context) {
        var options = context.options,
          calendarApi = context.calendarApi
        var sourceDef =
          context.pluginHooks.eventSourceDefs[eventSource.sourceDefId]
        var fetchId = guid()
        sourceDef.fetch(
          {
            eventSource: eventSource,
            range: fetchRange,
            isRefetch: isRefetch,
            context: context,
          },
          function (res) {
            var rawEvents = res.rawEvents
            if (options.eventSourceSuccess) {
              rawEvents =
                options.eventSourceSuccess.call(
                  calendarApi,
                  rawEvents,
                  res.xhr
                ) || rawEvents
            }
            if (eventSource.success) {
              rawEvents =
                eventSource.success.call(calendarApi, rawEvents, res.xhr) ||
                rawEvents
            }
            context.dispatch({
              type: 'RECEIVE_EVENTS',
              sourceId: eventSource.sourceId,
              fetchId: fetchId,
              fetchRange: fetchRange,
              rawEvents: rawEvents,
            })
          },
          function (error) {
            console.warn(error.message, error)
            if (options.eventSourceFailure) {
              options.eventSourceFailure.call(calendarApi, error)
            }
            if (eventSource.failure) {
              eventSource.failure(error)
            }
            context.dispatch({
              type: 'RECEIVE_EVENT_ERROR',
              sourceId: eventSource.sourceId,
              fetchId: fetchId,
              fetchRange: fetchRange,
              error: error,
            })
          }
        )
        return __assign(__assign({}, eventSource), {
          isFetching: true,
          latestFetchId: fetchId,
        })
      }

      function receiveResponse(sourceHash, sourceId, fetchId, fetchRange) {
        var _a
        var eventSource = sourceHash[sourceId]
        if (
          eventSource && // not already removed
          fetchId === eventSource.latestFetchId
        ) {
          return __assign(
            __assign({}, sourceHash),
            ((_a = {}),
            (_a[sourceId] = __assign(__assign({}, eventSource), {
              isFetching: false,
              fetchRange: fetchRange,
            })),
            _a)
          )
        }
        return sourceHash
      }

      function excludeStaticSources(eventSources, context) {
        return filterHash(eventSources, function (eventSource) {
          return doesSourceNeedRange(eventSource, context)
        })
      }

      function parseInitialSources(rawOptions, context) {
        var refiners = buildEventSourceRefiners(context)
        var rawSources = [].concat(rawOptions.eventSources || [])
        var sources = [] // parsed
        if (rawOptions.initialEvents) {
          rawSources.unshift(rawOptions.initialEvents)
        }
        if (rawOptions.events) {
          rawSources.unshift(rawOptions.events)
        }
        for (
          var _i = 0, rawSources_1 = rawSources;
          _i < rawSources_1.length;
          _i++
        ) {
          var rawSource = rawSources_1[_i]
          var source = parseEventSource(rawSource, context, refiners)
          if (source) {
            sources.push(source)
          }
        }
        return sources
      }

      function doesSourceNeedRange(eventSource, context) {
        var defs = context.pluginHooks.eventSourceDefs
        return !defs[eventSource.sourceDefId].ignoreRange
      }

      function reduceDateSelection(currentSelection, action) {
        switch (action.type) {
          case 'UNSELECT_DATES':
            return null
          case 'SELECT_DATES':
            return action.selection
          default:
            return currentSelection
        }
      }

      function reduceSelectedEvent(currentInstanceId, action) {
        switch (action.type) {
          case 'UNSELECT_EVENT':
            return ''
          case 'SELECT_EVENT':
            return action.eventInstanceId
          default:
            return currentInstanceId
        }
      }

      function reduceEventDrag(currentDrag, action) {
        var newDrag
        switch (action.type) {
          case 'UNSET_EVENT_DRAG':
            return null
          case 'SET_EVENT_DRAG':
            newDrag = action.state
            return {
              affectedEvents: newDrag.affectedEvents,
              mutatedEvents: newDrag.mutatedEvents,
              isEvent: newDrag.isEvent,
            }
          default:
            return currentDrag
        }
      }

      function reduceEventResize(currentResize, action) {
        var newResize
        switch (action.type) {
          case 'UNSET_EVENT_RESIZE':
            return null
          case 'SET_EVENT_RESIZE':
            newResize = action.state
            return {
              affectedEvents: newResize.affectedEvents,
              mutatedEvents: newResize.mutatedEvents,
              isEvent: newResize.isEvent,
            }
          default:
            return currentResize
        }
      }

      function parseToolbars(
        calendarOptions,
        calendarOptionOverrides,
        theme,
        viewSpecs,
        calendarApi
      ) {
        var viewsWithButtons = []
        var headerToolbar = calendarOptions.headerToolbar
          ? parseToolbar(
              calendarOptions.headerToolbar,
              calendarOptions,
              calendarOptionOverrides,
              theme,
              viewSpecs,
              calendarApi,
              viewsWithButtons
            )
          : null
        var footerToolbar = calendarOptions.footerToolbar
          ? parseToolbar(
              calendarOptions.footerToolbar,
              calendarOptions,
              calendarOptionOverrides,
              theme,
              viewSpecs,
              calendarApi,
              viewsWithButtons
            )
          : null
        return {
          headerToolbar: headerToolbar,
          footerToolbar: footerToolbar,
          viewsWithButtons: viewsWithButtons,
        }
      }

      function parseToolbar(
        sectionStrHash,
        calendarOptions,
        calendarOptionOverrides,
        theme,
        viewSpecs,
        calendarApi,
        viewsWithButtons
      ) {
        return mapHash(sectionStrHash, function (sectionStr) {
          return parseSection(
            sectionStr,
            calendarOptions,
            calendarOptionOverrides,
            theme,
            viewSpecs,
            calendarApi,
            viewsWithButtons
          )
        })
      }

      /*
    BAD: querying icons and text here. should be done at render time
    */
      function parseSection(
        sectionStr,
        calendarOptions,
        calendarOptionOverrides,
        theme,
        viewSpecs,
        calendarApi,
        viewsWithButtons
      ) {
        var isRtl = calendarOptions.direction === 'rtl'
        var calendarCustomButtons = calendarOptions.customButtons || {}
        var calendarButtonTextOverrides =
          calendarOptionOverrides.buttonText || {}
        var calendarButtonText = calendarOptions.buttonText || {}
        var sectionSubstrs = sectionStr ? sectionStr.split(' ') : []
        return sectionSubstrs.map(function (buttonGroupStr) {
          return buttonGroupStr.split(',').map(function (buttonName) {
            if (buttonName === 'title') {
              return { buttonName: buttonName }
            }
            var customButtonProps
            var viewSpec
            var buttonClick
            var buttonIcon // only one of these will be set
            var buttonText // "
            if ((customButtonProps = calendarCustomButtons[buttonName])) {
              buttonClick = function (ev) {
                if (customButtonProps.click) {
                  customButtonProps.click.call(ev.target, ev, ev.target)
                }
              }
              ;(buttonIcon =
                theme.getCustomButtonIconClass(customButtonProps)) ||
                (buttonIcon = theme.getIconClass(buttonName, isRtl)) ||
                (buttonText = customButtonProps.text)
            } else if ((viewSpec = viewSpecs[buttonName])) {
              viewsWithButtons.push(buttonName)
              buttonClick = function () {
                calendarApi.changeView(buttonName)
              }
              ;(buttonText = viewSpec.buttonTextOverride) ||
                (buttonIcon = theme.getIconClass(buttonName, isRtl)) ||
                (buttonText = viewSpec.buttonTextDefault)
            } else if (calendarApi[buttonName]) {
              // a calendarApi method
              buttonClick = function () {
                calendarApi[buttonName]()
              }
              ;(buttonText = calendarButtonTextOverrides[buttonName]) ||
                (buttonIcon = theme.getIconClass(buttonName, isRtl)) ||
                (buttonText = calendarButtonText[buttonName])
              //            ^ everything else is considered default
            }
            return {
              buttonName: buttonName,
              buttonClick: buttonClick,
              buttonIcon: buttonIcon,
              buttonText: buttonText,
            }
          })
        })
      }

      var eventSourceDef = {
        ignoreRange: true,
        parseMeta: function (refined) {
          if (Array.isArray(refined.events)) {
            return refined.events
          }
          return null
        },
        fetch: function (arg, success) {
          success({
            rawEvents: arg.eventSource.meta,
          })
        },
      }
      var arrayEventSourcePlugin = createPlugin({
        eventSourceDefs: [eventSourceDef],
      })

      var eventSourceDef$1 = {
        parseMeta: function (refined) {
          if (typeof refined.events === 'function') {
            return refined.events
          }
          return null
        },
        fetch: function (arg, success, failure) {
          var dateEnv = arg.context.dateEnv
          var func = arg.eventSource.meta
          unpromisify(
            func.bind(null, buildRangeApiWithTimeZone(arg.range, dateEnv)),
            function (rawEvents) {
              success({ rawEvents: rawEvents }) // needs an object response
            },
            failure
          )
        },
      }
      var funcEventSourcePlugin = createPlugin({
        eventSourceDefs: [eventSourceDef$1],
      })

      function requestJson(
        method,
        url,
        params,
        successCallback,
        failureCallback
      ) {
        method = method.toUpperCase()
        var body = null
        if (method === 'GET') {
          url = injectQueryStringParams(url, params)
        } else {
          body = encodeParams(params)
        }
        var xhr = new XMLHttpRequest()
        xhr.open(method, url, true)
        if (method !== 'GET') {
          xhr.setRequestHeader(
            'Content-Type',
            'application/x-www-form-urlencoded'
          )
        }
        xhr.onload = function () {
          if (xhr.status >= 200 && xhr.status < 400) {
            var parsed = false
            var res = void 0
            try {
              res = JSON.parse(xhr.responseText)
              parsed = true
            } catch (err) {
              // will handle parsed=false
            }
            if (parsed) {
              successCallback(res, xhr)
            } else {
              failureCallback('Failure parsing JSON', xhr)
            }
          } else {
            failureCallback('Request failed', xhr)
          }
        }
        xhr.onerror = function () {
          failureCallback('Request failed', xhr)
        }
        xhr.send(body)
      }

      function injectQueryStringParams(url, params) {
        return (
          url + (url.indexOf('?') === -1 ? '?' : '&') + encodeParams(params)
        )
      }

      function encodeParams(params) {
        var parts = []
        for (var key in params) {
          parts.push(
            encodeURIComponent(key) + '=' + encodeURIComponent(params[key])
          )
        }
        return parts.join('&')
      }

      var JSON_FEED_EVENT_SOURCE_REFINERS = {
        method: String,
        extraParams: identity,
        startParam: String,
        endParam: String,
        timeZoneParam: String,
      }

      var eventSourceDef$2 = {
        parseMeta: function (refined) {
          if (refined.url && (refined.format === 'json' || !refined.format)) {
            return {
              url: refined.url,
              format: 'json',
              method: (refined.method || 'GET').toUpperCase(),
              extraParams: refined.extraParams,
              startParam: refined.startParam,
              endParam: refined.endParam,
              timeZoneParam: refined.timeZoneParam,
            }
          }
          return null
        },
        fetch: function (arg, success, failure) {
          var meta = arg.eventSource.meta
          var requestParams = buildRequestParams(meta, arg.range, arg.context)
          requestJson(
            meta.method,
            meta.url,
            requestParams,
            function (rawEvents, xhr) {
              success({ rawEvents: rawEvents, xhr: xhr })
            },
            function (errorMessage, xhr) {
              failure({ message: errorMessage, xhr: xhr })
            }
          )
        },
      }
      var jsonFeedEventSourcePlugin = createPlugin({
        eventSourceRefiners: JSON_FEED_EVENT_SOURCE_REFINERS,
        eventSourceDefs: [eventSourceDef$2],
      })

      function buildRequestParams(meta, range, context) {
        var dateEnv = context.dateEnv,
          options = context.options
        var startParam
        var endParam
        var timeZoneParam
        var customRequestParams
        var params = {}
        startParam = meta.startParam
        if (startParam == null) {
          startParam = options.startParam
        }
        endParam = meta.endParam
        if (endParam == null) {
          endParam = options.endParam
        }
        timeZoneParam = meta.timeZoneParam
        if (timeZoneParam == null) {
          timeZoneParam = options.timeZoneParam
        }
        // retrieve any outbound GET/POST data from the options
        if (typeof meta.extraParams === 'function') {
          // supplied as a function that returns a key/value object
          customRequestParams = meta.extraParams()
        } else {
          // probably supplied as a straight key/value object
          customRequestParams = meta.extraParams || {}
        }
        __assign(params, customRequestParams)
        params[startParam] = dateEnv.formatIso(range.start)
        params[endParam] = dateEnv.formatIso(range.end)
        if (dateEnv.timeZone !== 'local') {
          params[timeZoneParam] = dateEnv.timeZone
        }
        return params
      }

      var SIMPLE_RECURRING_REFINERS = {
        daysOfWeek: identity,
        startTime: createDuration,
        endTime: createDuration,
        duration: createDuration,
        startRecur: identity,
        endRecur: identity,
      }

      var recurring = {
        parse: function (refined, dateEnv) {
          if (
            refined.daysOfWeek ||
            refined.startTime ||
            refined.endTime ||
            refined.startRecur ||
            refined.endRecur
          ) {
            var recurringData = {
              daysOfWeek: refined.daysOfWeek || null,
              startTime: refined.startTime || null,
              endTime: refined.endTime || null,
              startRecur: refined.startRecur
                ? dateEnv.createMarker(refined.startRecur)
                : null,
              endRecur: refined.endRecur
                ? dateEnv.createMarker(refined.endRecur)
                : null,
            }
            var duration = void 0
            if (refined.duration) {
              duration = refined.duration
            }
            if (!duration && refined.startTime && refined.endTime) {
              duration = subtractDurations(refined.endTime, refined.startTime)
            }
            return {
              allDayGuess: Boolean(!refined.startTime && !refined.endTime),
              duration: duration,
              typeData: recurringData,
            }
          }
          return null
        },
        expand: function (typeData, framingRange, dateEnv) {
          var clippedFramingRange = intersectRanges(framingRange, {
            start: typeData.startRecur,
            end: typeData.endRecur,
          })
          if (clippedFramingRange) {
            return expandRanges(
              typeData.daysOfWeek,
              typeData.startTime,
              clippedFramingRange,
              dateEnv
            )
          }
          return []
        },
      }
      var simpleRecurringEventsPlugin = createPlugin({
        recurringTypes: [recurring],
        eventRefiners: SIMPLE_RECURRING_REFINERS,
      })

      function expandRanges(daysOfWeek, startTime, framingRange, dateEnv) {
        var dowHash = daysOfWeek ? arrayToHash(daysOfWeek) : null
        var dayMarker = startOfDay(framingRange.start)
        var endMarker = framingRange.end
        var instanceStarts = []
        while (dayMarker < endMarker) {
          var instanceStart =
            // if everyday, or this particular day-of-week
            void 0
          // if everyday, or this particular day-of-week
          if (!dowHash || dowHash[dayMarker.getUTCDay()]) {
            if (startTime) {
              instanceStart = dateEnv.add(dayMarker, startTime)
            } else {
              instanceStart = dayMarker
            }
            instanceStarts.push(instanceStart)
          }
          dayMarker = addDays(dayMarker, 1)
        }
        return instanceStarts
      }

      var changeHandlerPlugin = createPlugin({
        optionChangeHandlers: {
          events: function (events, context) {
            handleEventSources([events], context)
          },
          eventSources: handleEventSources,
        },
      })

      /*
    BUG: if `event` was supplied, all previously-given `eventSources` will be wiped out
    */
      function handleEventSources(inputs, context) {
        var unfoundSources = hashValuesToArray(
          context.getCurrentData().eventSources
        )
        var newInputs = []
        for (var _i = 0, inputs_1 = inputs; _i < inputs_1.length; _i++) {
          var input = inputs_1[_i]
          var inputFound = false
          for (var i = 0; i < unfoundSources.length; i += 1) {
            if (unfoundSources[i]._raw === input) {
              unfoundSources.splice(i, 1) // delete
              inputFound = true
              break
            }
          }
          if (!inputFound) {
            newInputs.push(input)
          }
        }
        for (
          var _a = 0, unfoundSources_1 = unfoundSources;
          _a < unfoundSources_1.length;
          _a++
        ) {
          var unfoundSource = unfoundSources_1[_a]
          context.dispatch({
            type: 'REMOVE_EVENT_SOURCE',
            sourceId: unfoundSource.sourceId,
          })
        }
        for (
          var _b = 0, newInputs_1 = newInputs;
          _b < newInputs_1.length;
          _b++
        ) {
          var newInput = newInputs_1[_b]
          context.calendarApi.addEventSource(newInput)
        }
      }

      function handleDateProfile(dateProfile, context) {
        context.emitter.trigger(
          'datesSet',
          __assign(
            __assign(
              {},
              buildRangeApiWithTimeZone(
                dateProfile.activeRange,
                context.dateEnv
              )
            ),
            { view: context.viewApi }
          )
        )
      }

      function handleEventStore(eventStore, context) {
        var emitter = context.emitter
        if (emitter.hasHandlers('eventsSet')) {
          emitter.trigger('eventsSet', buildEventApis(eventStore, context))
        }
      }

      /*
    this array is exposed on the root namespace so that UMD plugins can add to it.
    see the rollup-bundles script.
    */
      var globalPlugins = [
        arrayEventSourcePlugin,
        funcEventSourcePlugin,
        jsonFeedEventSourcePlugin,
        simpleRecurringEventsPlugin,
        changeHandlerPlugin,
        createPlugin({
          isLoadingFuncs: [
            function (state) {
              return computeEventSourcesLoading(state.eventSources)
            },
          ],
          contentTypeHandlers: {
            html: function () {
              return { render: injectHtml }
            },
            domNodes: function () {
              return { render: injectDomNodes }
            },
          },
          propSetHandlers: {
            dateProfile: handleDateProfile,
            eventStore: handleEventStore,
          },
        }),
      ]

      function injectHtml(el, html) {
        el.innerHTML = html
      }

      function injectDomNodes(el, domNodes) {
        var oldNodes = Array.prototype.slice.call(el.childNodes) // TODO: use array util
        var newNodes = Array.prototype.slice.call(domNodes) // TODO: use array util
        if (!isArraysEqual(oldNodes, newNodes)) {
          for (
            var _i = 0, newNodes_1 = newNodes;
            _i < newNodes_1.length;
            _i++
          ) {
            var newNode = newNodes_1[_i]
            el.appendChild(newNode)
          }
          oldNodes.forEach(removeElement)
        }
      }

      var DelayedRunner = /** @class */ (function () {
        function DelayedRunner(drainedOption) {
          this.drainedOption = drainedOption
          this.isRunning = false
          this.isDirty = false
          this.pauseDepths = {}
          this.timeoutId = 0
        }

        DelayedRunner.prototype.request = function (delay) {
          this.isDirty = true
          if (!this.isPaused()) {
            this.clearTimeout()
            if (delay == null) {
              this.tryDrain()
            } else {
              this.timeoutId = setTimeout(
                // NOT OPTIMAL! TODO: look at debounce
                this.tryDrain.bind(this),
                delay
              )
            }
          }
        }
        DelayedRunner.prototype.pause = function (scope) {
          if (scope === void 0) {
            scope = ''
          }
          var pauseDepths = this.pauseDepths
          pauseDepths[scope] = (pauseDepths[scope] || 0) + 1
          this.clearTimeout()
        }
        DelayedRunner.prototype.resume = function (scope, force) {
          if (scope === void 0) {
            scope = ''
          }
          var pauseDepths = this.pauseDepths
          if (scope in pauseDepths) {
            if (force) {
              delete pauseDepths[scope]
            } else {
              pauseDepths[scope] -= 1
              var depth = pauseDepths[scope]
              if (depth <= 0) {
                delete pauseDepths[scope]
              }
            }
            this.tryDrain()
          }
        }
        DelayedRunner.prototype.isPaused = function () {
          return Object.keys(this.pauseDepths).length
        }
        DelayedRunner.prototype.tryDrain = function () {
          if (!this.isRunning && !this.isPaused()) {
            this.isRunning = true
            while (this.isDirty) {
              this.isDirty = false
              this.drained() // might set isDirty to true again
            }
            this.isRunning = false
          }
        }
        DelayedRunner.prototype.clear = function () {
          this.clearTimeout()
          this.isDirty = false
          this.pauseDepths = {}
        }
        DelayedRunner.prototype.clearTimeout = function () {
          if (this.timeoutId) {
            clearTimeout(this.timeoutId)
            this.timeoutId = 0
          }
        }
        DelayedRunner.prototype.drained = function () {
          if (this.drainedOption) {
            this.drainedOption()
          }
        }
        return DelayedRunner
      })()

      var TaskRunner = /** @class */ (function () {
        function TaskRunner(runTaskOption, drainedOption) {
          this.runTaskOption = runTaskOption
          this.drainedOption = drainedOption
          this.queue = []
          this.delayedRunner = new DelayedRunner(this.drain.bind(this))
        }

        TaskRunner.prototype.request = function (task, delay) {
          this.queue.push(task)
          this.delayedRunner.request(delay)
        }
        TaskRunner.prototype.pause = function (scope) {
          this.delayedRunner.pause(scope)
        }
        TaskRunner.prototype.resume = function (scope, force) {
          this.delayedRunner.resume(scope, force)
        }
        TaskRunner.prototype.drain = function () {
          var queue = this.queue
          while (queue.length) {
            var completedTasks = []
            var task = void 0
            while ((task = queue.shift())) {
              this.runTask(task)
              completedTasks.push(task)
            }
            this.drained(completedTasks)
          } // keep going, in case new tasks were added in the drained handler
        }
        TaskRunner.prototype.runTask = function (task) {
          if (this.runTaskOption) {
            this.runTaskOption(task)
          }
        }
        TaskRunner.prototype.drained = function (completedTasks) {
          if (this.drainedOption) {
            this.drainedOption(completedTasks)
          }
        }
        return TaskRunner
      })()

      // Computes what the title at the top of the calendarApi should be for this view
      function buildTitle(dateProfile, viewOptions, dateEnv) {
        var range
        // for views that span a large unit of time, show the proper interval, ignoring stray days before and after
        if (/^(year|month)$/.test(dateProfile.currentRangeUnit)) {
          range = dateProfile.currentRange
        } else {
          // for day units or smaller, use the actual day range
          range = dateProfile.activeRange
        }
        return dateEnv.formatRange(
          range.start,
          range.end,
          createFormatter(
            viewOptions.titleFormat || buildTitleFormat(dateProfile)
          ),
          {
            isEndExclusive: dateProfile.isRangeAllDay,
            defaultSeparator: viewOptions.titleRangeSeparator,
          }
        )
      }

      // Generates the format string that should be used to generate the title for the current date range.
      // Attempts to compute the most appropriate format if not explicitly specified with `titleFormat`.
      function buildTitleFormat(dateProfile) {
        var currentRangeUnit = dateProfile.currentRangeUnit
        if (currentRangeUnit === 'year') {
          return { year: 'numeric' }
        }
        if (currentRangeUnit === 'month') {
          return { year: 'numeric', month: 'long' } // like "September 2014"
        }
        var days = diffWholeDays(
          dateProfile.currentRange.start,
          dateProfile.currentRange.end
        )
        if (days !== null && days > 1) {
          // multi-day range. shorter, like "Sep 9 - 10 2014"
          return { year: 'numeric', month: 'short', day: 'numeric' }
        }
        // one day. longer, like "September 9 2014"
        return { year: 'numeric', month: 'long', day: 'numeric' }
      }

      // in future refactor, do the redux-style function(state=initial) for initial-state
      // also, whatever is happening in constructor, have it happen in action queue too
      var CalendarDataManager = /** @class */ (function () {
        function CalendarDataManager(props) {
          var _this = this
          this.computeOptionsData = memoize(this._computeOptionsData)
          this.computeCurrentViewData = memoize(this._computeCurrentViewData)
          this.organizeRawLocales = memoize(organizeRawLocales)
          this.buildLocale = memoize(buildLocale)
          this.buildPluginHooks = buildBuildPluginHooks()
          this.buildDateEnv = memoize(buildDateEnv$1)
          this.buildTheme = memoize(buildTheme)
          this.parseToolbars = memoize(parseToolbars)
          this.buildViewSpecs = memoize(buildViewSpecs)
          this.buildDateProfileGenerator = memoizeObjArg(
            buildDateProfileGenerator
          )
          this.buildViewApi = memoize(buildViewApi)
          this.buildViewUiProps = memoizeObjArg(buildViewUiProps)
          this.buildEventUiBySource = memoize(
            buildEventUiBySource,
            isPropsEqual
          )
          this.buildEventUiBases = memoize(buildEventUiBases)
          this.parseContextBusinessHours = memoizeObjArg(
            parseContextBusinessHours
          )
          this.buildTitle = memoize(buildTitle)
          this.emitter = new Emitter()
          this.actionRunner = new TaskRunner(
            this._handleAction.bind(this),
            this.updateData.bind(this)
          )
          this.currentCalendarOptionsInput = {}
          this.currentCalendarOptionsRefined = {}
          this.currentViewOptionsInput = {}
          this.currentViewOptionsRefined = {}
          this.currentCalendarOptionsRefiners = {}
          this.getCurrentData = function () {
            return _this.data
          }
          this.dispatch = function (action) {
            _this.actionRunner.request(action) // protects against recursive calls to _handleAction
          }
          this.props = props
          this.actionRunner.pause()
          var dynamicOptionOverrides = {}
          var optionsData = this.computeOptionsData(
            props.optionOverrides,
            dynamicOptionOverrides,
            props.calendarApi
          )
          var currentViewType =
            optionsData.calendarOptions.initialView ||
            optionsData.pluginHooks.initialView
          var currentViewData = this.computeCurrentViewData(
            currentViewType,
            optionsData,
            props.optionOverrides,
            dynamicOptionOverrides
          )
          // wire things up
          // TODO: not DRY
          props.calendarApi.currentDataManager = this
          this.emitter.setThisContext(props.calendarApi)
          this.emitter.setOptions(currentViewData.options)
          var currentDate = getInitialDate(
            optionsData.calendarOptions,
            optionsData.dateEnv
          )
          var dateProfile =
            currentViewData.dateProfileGenerator.build(currentDate)
          if (!rangeContainsMarker(dateProfile.activeRange, currentDate)) {
            currentDate = dateProfile.currentRange.start
          }
          var calendarContext = {
            dateEnv: optionsData.dateEnv,
            options: optionsData.calendarOptions,
            pluginHooks: optionsData.pluginHooks,
            calendarApi: props.calendarApi,
            dispatch: this.dispatch,
            emitter: this.emitter,
            getCurrentData: this.getCurrentData,
          }
          // needs to be after setThisContext
          for (
            var _i = 0, _a = optionsData.pluginHooks.contextInit;
            _i < _a.length;
            _i++
          ) {
            var callback = _a[_i]
            callback(calendarContext)
          }
          // NOT DRY
          var eventSources = initEventSources(
            optionsData.calendarOptions,
            dateProfile,
            calendarContext
          )
          var initialState = {
            dynamicOptionOverrides: dynamicOptionOverrides,
            currentViewType: currentViewType,
            currentDate: currentDate,
            dateProfile: dateProfile,
            businessHours: this.parseContextBusinessHours(calendarContext),
            eventSources: eventSources,
            eventUiBases: {},
            eventStore: createEmptyEventStore(),
            renderableEventStore: createEmptyEventStore(),
            dateSelection: null,
            eventSelection: '',
            eventDrag: null,
            eventResize: null,
            selectionConfig:
              this.buildViewUiProps(calendarContext).selectionConfig,
          }
          var contextAndState = __assign(
            __assign({}, calendarContext),
            initialState
          )
          for (
            var _b = 0, _c = optionsData.pluginHooks.reducers;
            _b < _c.length;
            _b++
          ) {
            var reducer = _c[_b]
            __assign(initialState, reducer(null, null, contextAndState))
          }
          if (computeIsLoading(initialState, calendarContext)) {
            this.emitter.trigger('loading', true) // NOT DRY
          }
          this.state = initialState
          this.updateData()
          this.actionRunner.resume()
        }

        CalendarDataManager.prototype.resetOptions = function (
          optionOverrides,
          append
        ) {
          var props = this.props
          props.optionOverrides = append
            ? __assign(__assign({}, props.optionOverrides), optionOverrides)
            : optionOverrides
          this.actionRunner.request({
            type: 'NOTHING',
          })
        }
        CalendarDataManager.prototype._handleAction = function (action) {
          var _a = this,
            props = _a.props,
            state = _a.state,
            emitter = _a.emitter
          var dynamicOptionOverrides = reduceDynamicOptionOverrides(
            state.dynamicOptionOverrides,
            action
          )
          var optionsData = this.computeOptionsData(
            props.optionOverrides,
            dynamicOptionOverrides,
            props.calendarApi
          )
          var currentViewType = reduceViewType(state.currentViewType, action)
          var currentViewData = this.computeCurrentViewData(
            currentViewType,
            optionsData,
            props.optionOverrides,
            dynamicOptionOverrides
          )
          // wire things up
          // TODO: not DRY
          props.calendarApi.currentDataManager = this
          emitter.setThisContext(props.calendarApi)
          emitter.setOptions(currentViewData.options)
          var calendarContext = {
            dateEnv: optionsData.dateEnv,
            options: optionsData.calendarOptions,
            pluginHooks: optionsData.pluginHooks,
            calendarApi: props.calendarApi,
            dispatch: this.dispatch,
            emitter: emitter,
            getCurrentData: this.getCurrentData,
          }
          var currentDate = state.currentDate,
            dateProfile = state.dateProfile
          if (
            this.data &&
            this.data.dateProfileGenerator !==
              currentViewData.dateProfileGenerator
          ) {
            // hack
            dateProfile =
              currentViewData.dateProfileGenerator.build(currentDate)
          }
          currentDate = reduceCurrentDate(currentDate, action)
          dateProfile = reduceDateProfile(
            dateProfile,
            action,
            currentDate,
            currentViewData.dateProfileGenerator
          )
          if (!rangeContainsMarker(dateProfile.currentRange, currentDate)) {
            currentDate = dateProfile.currentRange.start
          }
          var eventSources = reduceEventSources(
            state.eventSources,
            action,
            dateProfile,
            calendarContext
          )
          var eventStore = reduceEventStore(
            state.eventStore,
            action,
            eventSources,
            dateProfile,
            calendarContext
          )
          var isEventsLoading = computeEventSourcesLoading(eventSources) // BAD. also called in this func in computeIsLoading
          var renderableEventStore =
            isEventsLoading &&
            !currentViewData.options.progressiveEventRendering
              ? state.renderableEventStore || eventStore // try from previous state
              : eventStore
          var _b = this.buildViewUiProps(calendarContext),
            eventUiSingleBase = _b.eventUiSingleBase,
            selectionConfig = _b.selectionConfig // will memoize obj
          var eventUiBySource = this.buildEventUiBySource(eventSources)
          var eventUiBases = this.buildEventUiBases(
            renderableEventStore.defs,
            eventUiSingleBase,
            eventUiBySource
          )
          var newState = {
            dynamicOptionOverrides: dynamicOptionOverrides,
            currentViewType: currentViewType,
            currentDate: currentDate,
            dateProfile: dateProfile,
            eventSources: eventSources,
            eventStore: eventStore,
            renderableEventStore: renderableEventStore,
            selectionConfig: selectionConfig,
            eventUiBases: eventUiBases,
            businessHours: this.parseContextBusinessHours(calendarContext),
            dateSelection: reduceDateSelection(state.dateSelection, action),
            eventSelection: reduceSelectedEvent(state.eventSelection, action),
            eventDrag: reduceEventDrag(state.eventDrag, action),
            eventResize: reduceEventResize(state.eventResize, action),
          }
          var contextAndState = __assign(
            __assign({}, calendarContext),
            newState
          )
          for (
            var _i = 0, _c = optionsData.pluginHooks.reducers;
            _i < _c.length;
            _i++
          ) {
            var reducer = _c[_i]
            __assign(newState, reducer(state, action, contextAndState)) // give the OLD state, for old value
          }
          var wasLoading = computeIsLoading(state, calendarContext)
          var isLoading = computeIsLoading(newState, calendarContext)
          // TODO: use propSetHandlers in plugin system
          if (!wasLoading && isLoading) {
            emitter.trigger('loading', true)
          } else if (wasLoading && !isLoading) {
            emitter.trigger('loading', false)
          }
          this.state = newState
          if (props.onAction) {
            props.onAction(action)
          }
        }
        CalendarDataManager.prototype.updateData = function () {
          var _a = this,
            props = _a.props,
            state = _a.state
          var oldData = this.data
          var optionsData = this.computeOptionsData(
            props.optionOverrides,
            state.dynamicOptionOverrides,
            props.calendarApi
          )
          var currentViewData = this.computeCurrentViewData(
            state.currentViewType,
            optionsData,
            props.optionOverrides,
            state.dynamicOptionOverrides
          )
          var data = (this.data = __assign(
            __assign(
              __assign(
                {
                  viewTitle: this.buildTitle(
                    state.dateProfile,
                    currentViewData.options,
                    optionsData.dateEnv
                  ),
                  calendarApi: props.calendarApi,
                  dispatch: this.dispatch,
                  emitter: this.emitter,
                  getCurrentData: this.getCurrentData,
                },
                optionsData
              ),
              currentViewData
            ),
            state
          ))
          var changeHandlers = optionsData.pluginHooks.optionChangeHandlers
          var oldCalendarOptions = oldData && oldData.calendarOptions
          var newCalendarOptions = optionsData.calendarOptions
          if (oldCalendarOptions && oldCalendarOptions !== newCalendarOptions) {
            if (oldCalendarOptions.timeZone !== newCalendarOptions.timeZone) {
              // hack
              state.eventSources = data.eventSources =
                reduceEventSourcesNewTimeZone(
                  data.eventSources,
                  state.dateProfile,
                  data
                )
              state.eventStore = data.eventStore = rezoneEventStoreDates(
                data.eventStore,
                oldData.dateEnv,
                data.dateEnv
              )
            }
            for (var optionName in changeHandlers) {
              if (
                oldCalendarOptions[optionName] !==
                newCalendarOptions[optionName]
              ) {
                changeHandlers[optionName](newCalendarOptions[optionName], data)
              }
            }
          }
          if (props.onData) {
            props.onData(data)
          }
        }
        CalendarDataManager.prototype._computeOptionsData = function (
          optionOverrides,
          dynamicOptionOverrides,
          calendarApi
        ) {
          // TODO: blacklist options that are handled by optionChangeHandlers
          var _a = this.processRawCalendarOptions(
              optionOverrides,
              dynamicOptionOverrides
            ),
            refinedOptions = _a.refinedOptions,
            pluginHooks = _a.pluginHooks,
            localeDefaults = _a.localeDefaults,
            availableLocaleData = _a.availableLocaleData,
            extra = _a.extra
          warnUnknownOptions(extra)
          var dateEnv = this.buildDateEnv(
            refinedOptions.timeZone,
            refinedOptions.locale,
            refinedOptions.weekNumberCalculation,
            refinedOptions.firstDay,
            refinedOptions.weekText,
            pluginHooks,
            availableLocaleData,
            refinedOptions.defaultRangeSeparator
          )
          var viewSpecs = this.buildViewSpecs(
            pluginHooks.views,
            optionOverrides,
            dynamicOptionOverrides,
            localeDefaults
          )
          var theme = this.buildTheme(refinedOptions, pluginHooks)
          var toolbarConfig = this.parseToolbars(
            refinedOptions,
            optionOverrides,
            theme,
            viewSpecs,
            calendarApi
          )
          return {
            calendarOptions: refinedOptions,
            pluginHooks: pluginHooks,
            dateEnv: dateEnv,
            viewSpecs: viewSpecs,
            theme: theme,
            toolbarConfig: toolbarConfig,
            localeDefaults: localeDefaults,
            availableRawLocales: availableLocaleData.map,
          }
        }
        // always called from behind a memoizer
        CalendarDataManager.prototype.processRawCalendarOptions = function (
          optionOverrides,
          dynamicOptionOverrides
        ) {
          var _a = mergeRawOptions([
              BASE_OPTION_DEFAULTS,
              optionOverrides,
              dynamicOptionOverrides,
            ]),
            locales = _a.locales,
            locale = _a.locale
          var availableLocaleData = this.organizeRawLocales(locales)
          var availableRawLocales = availableLocaleData.map
          var localeDefaults = this.buildLocale(
            locale || availableLocaleData.defaultCode,
            availableRawLocales
          ).options
          var pluginHooks = this.buildPluginHooks(
            optionOverrides.plugins || [],
            globalPlugins
          )
          var refiners = (this.currentCalendarOptionsRefiners = __assign(
            __assign(
              __assign(
                __assign(
                  __assign({}, BASE_OPTION_REFINERS),
                  CALENDAR_LISTENER_REFINERS
                ),
                CALENDAR_OPTION_REFINERS
              ),
              pluginHooks.listenerRefiners
            ),
            pluginHooks.optionRefiners
          ))
          var extra = {}
          var raw = mergeRawOptions([
            BASE_OPTION_DEFAULTS,
            localeDefaults,
            optionOverrides,
            dynamicOptionOverrides,
          ])
          var refined = {}
          var currentRaw = this.currentCalendarOptionsInput
          var currentRefined = this.currentCalendarOptionsRefined
          var anyChanges = false
          for (var optionName in raw) {
            if (optionName !== 'plugins') {
              // because plugins is special-cased
              if (
                raw[optionName] === currentRaw[optionName] ||
                (COMPLEX_OPTION_COMPARATORS[optionName] &&
                  optionName in currentRaw &&
                  COMPLEX_OPTION_COMPARATORS[optionName](
                    currentRaw[optionName],
                    raw[optionName]
                  ))
              ) {
                refined[optionName] = currentRefined[optionName]
              } else if (refiners[optionName]) {
                refined[optionName] = refiners[optionName](raw[optionName])
                anyChanges = true
              } else {
                extra[optionName] = currentRaw[optionName]
              }
            }
          }
          if (anyChanges) {
            this.currentCalendarOptionsInput = raw
            this.currentCalendarOptionsRefined = refined
          }
          return {
            rawOptions: this.currentCalendarOptionsInput,
            refinedOptions: this.currentCalendarOptionsRefined,
            pluginHooks: pluginHooks,
            availableLocaleData: availableLocaleData,
            localeDefaults: localeDefaults,
            extra: extra,
          }
        }
        CalendarDataManager.prototype._computeCurrentViewData = function (
          viewType,
          optionsData,
          optionOverrides,
          dynamicOptionOverrides
        ) {
          var viewSpec = optionsData.viewSpecs[viewType]
          if (!viewSpec) {
            throw new Error(
              'viewType "' +
                viewType +
                '" is not available. Please make sure you\'ve loaded all neccessary plugins'
            )
          }
          var _a = this.processRawViewOptions(
              viewSpec,
              optionsData.pluginHooks,
              optionsData.localeDefaults,
              optionOverrides,
              dynamicOptionOverrides
            ),
            refinedOptions = _a.refinedOptions,
            extra = _a.extra
          warnUnknownOptions(extra)
          var dateProfileGenerator = this.buildDateProfileGenerator({
            dateProfileGeneratorClass:
              viewSpec.optionDefaults.dateProfileGeneratorClass,
            duration: viewSpec.duration,
            durationUnit: viewSpec.durationUnit,
            usesMinMaxTime: viewSpec.optionDefaults.usesMinMaxTime,
            dateEnv: optionsData.dateEnv,
            calendarApi: this.props.calendarApi,
            slotMinTime: refinedOptions.slotMinTime,
            slotMaxTime: refinedOptions.slotMaxTime,
            showNonCurrentDates: refinedOptions.showNonCurrentDates,
            dayCount: refinedOptions.dayCount,
            dateAlignment: refinedOptions.dateAlignment,
            dateIncrement: refinedOptions.dateIncrement,
            hiddenDays: refinedOptions.hiddenDays,
            weekends: refinedOptions.weekends,
            nowInput: refinedOptions.now,
            validRangeInput: refinedOptions.validRange,
            visibleRangeInput: refinedOptions.visibleRange,
            monthMode: refinedOptions.monthMode,
            fixedWeekCount: refinedOptions.fixedWeekCount,
          })
          var viewApi = this.buildViewApi(
            viewType,
            this.getCurrentData,
            optionsData.dateEnv
          )
          return {
            viewSpec: viewSpec,
            options: refinedOptions,
            dateProfileGenerator: dateProfileGenerator,
            viewApi: viewApi,
          }
        }
        CalendarDataManager.prototype.processRawViewOptions = function (
          viewSpec,
          pluginHooks,
          localeDefaults,
          optionOverrides,
          dynamicOptionOverrides
        ) {
          var raw = mergeRawOptions([
            BASE_OPTION_DEFAULTS,
            viewSpec.optionDefaults,
            localeDefaults,
            optionOverrides,
            viewSpec.optionOverrides,
            dynamicOptionOverrides,
          ])
          var refiners = __assign(
            __assign(
              __assign(
                __assign(
                  __assign(
                    __assign({}, BASE_OPTION_REFINERS),
                    CALENDAR_LISTENER_REFINERS
                  ),
                  CALENDAR_OPTION_REFINERS
                ),
                VIEW_OPTION_REFINERS
              ),
              pluginHooks.listenerRefiners
            ),
            pluginHooks.optionRefiners
          )
          var refined = {}
          var currentRaw = this.currentViewOptionsInput
          var currentRefined = this.currentViewOptionsRefined
          var anyChanges = false
          var extra = {}
          for (var optionName in raw) {
            if (raw[optionName] === currentRaw[optionName]) {
              refined[optionName] = currentRefined[optionName]
            } else {
              if (
                raw[optionName] === this.currentCalendarOptionsInput[optionName]
              ) {
                if (optionName in this.currentCalendarOptionsRefined) {
                  // might be an "extra" prop
                  refined[optionName] =
                    this.currentCalendarOptionsRefined[optionName]
                }
              } else if (refiners[optionName]) {
                refined[optionName] = refiners[optionName](raw[optionName])
              } else {
                extra[optionName] = raw[optionName]
              }
              anyChanges = true
            }
          }
          if (anyChanges) {
            this.currentViewOptionsInput = raw
            this.currentViewOptionsRefined = refined
          }
          return {
            rawOptions: this.currentViewOptionsInput,
            refinedOptions: this.currentViewOptionsRefined,
            extra: extra,
          }
        }
        return CalendarDataManager
      })()

      function buildDateEnv$1(
        timeZone,
        explicitLocale,
        weekNumberCalculation,
        firstDay,
        weekText,
        pluginHooks,
        availableLocaleData,
        defaultSeparator
      ) {
        var locale = buildLocale(
          explicitLocale || availableLocaleData.defaultCode,
          availableLocaleData.map
        )
        return new DateEnv({
          calendarSystem: 'gregory',
          timeZone: timeZone,
          namedTimeZoneImpl: pluginHooks.namedTimeZonedImpl,
          locale: locale,
          weekNumberCalculation: weekNumberCalculation,
          firstDay: firstDay,
          weekText: weekText,
          cmdFormatter: pluginHooks.cmdFormatter,
          defaultSeparator: defaultSeparator,
        })
      }

      function buildTheme(options, pluginHooks) {
        var ThemeClass =
          pluginHooks.themeClasses[options.themeSystem] || StandardTheme
        return new ThemeClass(options)
      }

      function buildDateProfileGenerator(props) {
        var DateProfileGeneratorClass =
          props.dateProfileGeneratorClass || DateProfileGenerator
        return new DateProfileGeneratorClass(props)
      }

      function buildViewApi(type, getCurrentData, dateEnv) {
        return new ViewApi(type, getCurrentData, dateEnv)
      }

      function buildEventUiBySource(eventSources) {
        return mapHash(eventSources, function (eventSource) {
          return eventSource.ui
        })
      }

      function buildEventUiBases(
        eventDefs,
        eventUiSingleBase,
        eventUiBySource
      ) {
        var eventUiBases = { '': eventUiSingleBase }
        for (var defId in eventDefs) {
          var def = eventDefs[defId]
          if (def.sourceId && eventUiBySource[def.sourceId]) {
            eventUiBases[defId] = eventUiBySource[def.sourceId]
          }
        }
        return eventUiBases
      }

      function buildViewUiProps(calendarContext) {
        var options = calendarContext.options
        return {
          eventUiSingleBase: createEventUi(
            {
              display: options.eventDisplay,
              editable: options.editable,
              startEditable: options.eventStartEditable,
              durationEditable: options.eventDurationEditable,
              constraint: options.eventConstraint,
              overlap:
                typeof options.eventOverlap === 'boolean'
                  ? options.eventOverlap
                  : undefined,
              allow: options.eventAllow,
              backgroundColor: options.eventBackgroundColor,
              borderColor: options.eventBorderColor,
              textColor: options.eventTextColor,
              color: options.eventColor,
            },
            calendarContext
          ),
          selectionConfig: createEventUi(
            {
              constraint: options.selectConstraint,
              overlap:
                typeof options.selectOverlap === 'boolean'
                  ? options.selectOverlap
                  : undefined,
              allow: options.selectAllow,
            },
            calendarContext
          ),
        }
      }

      function computeIsLoading(state, context) {
        for (
          var _i = 0, _a = context.pluginHooks.isLoadingFuncs;
          _i < _a.length;
          _i++
        ) {
          var isLoadingFunc = _a[_i]
          if (isLoadingFunc(state)) {
            return true
          }
        }
        return false
      }

      function parseContextBusinessHours(calendarContext) {
        return parseBusinessHours(
          calendarContext.options.businessHours,
          calendarContext
        )
      }

      function warnUnknownOptions(options, viewName) {
        for (var optionName in options) {
          console.warn(
            "Unknown option '" +
              optionName +
              "'" +
              (viewName ? " for view '" + viewName + "'" : '')
          )
        }
      }

      // TODO: move this to react plugin?
      var CalendarDataProvider = /** @class */ (function (_super) {
        __extends(CalendarDataProvider, _super)

        function CalendarDataProvider(props) {
          var _this = _super.call(this, props) || this
          _this.handleData = function (data) {
            if (!_this.dataManager) {
              // still within initial run, before assignment in constructor
              // eslint-disable-next-line react/no-direct-mutation-state
              _this.state = data // can't use setState yet
            } else {
              _this.setState(data)
            }
          }
          _this.dataManager = new CalendarDataManager({
            optionOverrides: props.optionOverrides,
            calendarApi: props.calendarApi,
            onData: _this.handleData,
          })
          return _this
        }

        CalendarDataProvider.prototype.render = function () {
          return this.props.children(this.state)
        }
        CalendarDataProvider.prototype.componentDidUpdate = function (
          prevProps
        ) {
          var newOptionOverrides = this.props.optionOverrides
          if (newOptionOverrides !== prevProps.optionOverrides) {
            // prevent recursive handleData
            this.dataManager.resetOptions(newOptionOverrides)
          }
        }
        return CalendarDataProvider
      })(Component)

      // HELPERS
      /*
    if nextDayThreshold is specified, slicing is done in an all-day fashion.
    you can get nextDayThreshold from context.nextDayThreshold
    */
      function sliceEvents(props, allDay) {
        return sliceEventStore(
          props.eventStore,
          props.eventUiBases,
          props.dateProfile.activeRange,
          allDay ? props.nextDayThreshold : null
        ).fg
      }

      var NamedTimeZoneImpl = /** @class */ (function () {
        function NamedTimeZoneImpl(timeZoneName) {
          this.timeZoneName = timeZoneName
        }

        return NamedTimeZoneImpl
      })()

      var Interaction = /** @class */ (function () {
        function Interaction(settings) {
          this.component = settings.component
        }

        Interaction.prototype.destroy = function () {}
        return Interaction
      })()

      function parseInteractionSettings(component, input) {
        return {
          component: component,
          el: input.el,
          useEventCenter:
            input.useEventCenter != null ? input.useEventCenter : true,
        }
      }

      function interactionSettingsToStore(settings) {
        var _a
        return (_a = {}), (_a[settings.component.uid] = settings), _a
      }

      // global state
      var interactionSettingsStore = {}

      /*
    An abstraction for a dragging interaction originating on an event.
    Does higher-level things than PointerDragger, such as possibly:
    - a "mirror" that moves with the pointer
    - a minimum number of pixels or other criteria for a true drag to begin

    subclasses must emit:
    - pointerdown
    - dragstart
    - dragmove
    - pointerup
    - dragend
    */
      var ElementDragging = /** @class */ (function () {
        function ElementDragging(el, selector) {
          this.emitter = new Emitter()
        }

        ElementDragging.prototype.destroy = function () {}
        ElementDragging.prototype.setMirrorIsVisible = function (bool) {
          // optional if subclass doesn't want to support a mirror
        }
        ElementDragging.prototype.setMirrorNeedsRevert = function (bool) {
          // optional if subclass doesn't want to support a mirror
        }
        ElementDragging.prototype.setAutoScrollEnabled = function (bool) {
          // optional
        }
        return ElementDragging
      })()

      // TODO: get rid of this in favor of options system,
      // tho it's really easy to access this globally rather than pass thru options.
      var config = {}

      /*
    Information about what will happen when an external element is dragged-and-dropped
    onto a calendar. Contains information for creating an event.
    */
      var DRAG_META_REFINERS = {
        startTime: createDuration,
        duration: createDuration,
        create: Boolean,
        sourceId: String,
      }

      function parseDragMeta(raw) {
        var _a = refineProps(raw, DRAG_META_REFINERS),
          refined = _a.refined,
          extra = _a.extra
        return {
          startTime: refined.startTime || null,
          duration: refined.duration || null,
          create: refined.create != null ? refined.create : true,
          sourceId: refined.sourceId,
          leftoverProps: extra,
        }
      }

      var ToolbarSection = /** @class */ (function (_super) {
        __extends(ToolbarSection, _super)

        function ToolbarSection() {
          return (_super !== null && _super.apply(this, arguments)) || this
        }

        ToolbarSection.prototype.render = function () {
          var _this = this
          var children = this.props.widgetGroups.map(function (widgetGroup) {
            return _this.renderWidgetGroup(widgetGroup)
          })
          return createElement.apply(
            void 0,
            __spreadArrays(['div', { className: 'fc-toolbar-chunk' }], children)
          )
        }
        ToolbarSection.prototype.renderWidgetGroup = function (widgetGroup) {
          var props = this.props
          var theme = this.context.theme
          var children = []
          var isOnlyButtons = true
          for (
            var _i = 0, widgetGroup_1 = widgetGroup;
            _i < widgetGroup_1.length;
            _i++
          ) {
            var widget = widgetGroup_1[_i]
            var buttonName = widget.buttonName,
              buttonClick = widget.buttonClick,
              buttonText = widget.buttonText,
              buttonIcon = widget.buttonIcon
            if (buttonName === 'title') {
              isOnlyButtons = false
              children.push(
                createElement(
                  'h2',
                  { className: 'fc-toolbar-title' },
                  props.title
                )
              )
            } else {
              var ariaAttrs = buttonIcon ? { 'aria-label': buttonName } : {}
              var buttonClasses = [
                'fc-' + buttonName + '-button',
                theme.getClass('button'),
              ]
              if (buttonName === props.activeButton) {
                buttonClasses.push(theme.getClass('buttonActive'))
              }
              var isDisabled =
                (!props.isTodayEnabled && buttonName === 'today') ||
                (!props.isPrevEnabled && buttonName === 'prev') ||
                (!props.isNextEnabled && buttonName === 'next')
              children.push(
                createElement(
                  'button',
                  __assign(
                    {
                      disabled: isDisabled,
                      className: buttonClasses.join(' '),
                      onClick: buttonClick,
                      type: 'button',
                    },
                    ariaAttrs
                  ),
                  buttonText ||
                    (buttonIcon
                      ? createElement('span', { className: buttonIcon })
                      : '')
                )
              )
            }
          }
          if (children.length > 1) {
            var groupClassName =
              (isOnlyButtons && theme.getClass('buttonGroup')) || ''
            return createElement.apply(
              void 0,
              __spreadArrays(['div', { className: groupClassName }], children)
            )
          }
          return children[0]
        }
        return ToolbarSection
      })(BaseComponent)

      var Toolbar = /** @class */ (function (_super) {
        __extends(Toolbar, _super)

        function Toolbar() {
          return (_super !== null && _super.apply(this, arguments)) || this
        }

        Toolbar.prototype.render = function () {
          var _a = this.props,
            model = _a.model,
            extraClassName = _a.extraClassName
          var forceLtr = false
          var startContent
          var endContent
          var centerContent = model.center
          if (model.left) {
            forceLtr = true
            startContent = model.left
          } else {
            startContent = model.start
          }
          if (model.right) {
            forceLtr = true
            endContent = model.right
          } else {
            endContent = model.end
          }
          var classNames = [
            extraClassName || '',
            'fc-toolbar',
            forceLtr ? 'fc-toolbar-ltr' : '',
          ]
          return createElement(
            'div',
            { className: classNames.join(' ') },
            this.renderSection('start', startContent || []),
            this.renderSection('center', centerContent || []),
            this.renderSection('end', endContent || [])
          )
        }
        Toolbar.prototype.renderSection = function (key, widgetGroups) {
          var props = this.props
          return createElement(ToolbarSection, {
            key: key,
            widgetGroups: widgetGroups,
            title: props.title,
            activeButton: props.activeButton,
            isTodayEnabled: props.isTodayEnabled,
            isPrevEnabled: props.isPrevEnabled,
            isNextEnabled: props.isNextEnabled,
          })
        }
        return Toolbar
      })(BaseComponent)

      // TODO: do function component?
      var ViewContainer = /** @class */ (function (_super) {
        __extends(ViewContainer, _super)

        function ViewContainer() {
          var _this = (_super !== null && _super.apply(this, arguments)) || this
          _this.state = {
            availableWidth: null,
          }
          _this.handleEl = function (el) {
            _this.el = el
            setRef(_this.props.elRef, el)
            _this.updateAvailableWidth()
          }
          _this.handleResize = function () {
            _this.updateAvailableWidth()
          }
          return _this
        }

        ViewContainer.prototype.render = function () {
          var _a = this,
            props = _a.props,
            state = _a.state
          var aspectRatio = props.aspectRatio
          var classNames = [
            'fc-view-harness',
            aspectRatio || props.liquid || props.height
              ? 'fc-view-harness-active' // harness controls the height
              : 'fc-view-harness-passive',
          ]
          var height = ''
          var paddingBottom = ''
          if (aspectRatio) {
            if (state.availableWidth !== null) {
              height = state.availableWidth / aspectRatio
            } else {
              // while waiting to know availableWidth, we can't set height to *zero*
              // because will cause lots of unnecessary scrollbars within scrollgrid.
              // BETTER: don't start rendering ANYTHING yet until we know container width
              // NOTE: why not always use paddingBottom? Causes height oscillation (issue 5606)
              paddingBottom = (1 / aspectRatio) * 100 + '%'
            }
          } else {
            height = props.height || ''
          }
          return createElement(
            'div',
            {
              ref: this.handleEl,
              onClick: props.onClick,
              className: classNames.join(' '),
              style: { height: height, paddingBottom: paddingBottom },
            },
            props.children
          )
        }
        ViewContainer.prototype.componentDidMount = function () {
          this.context.addResizeHandler(this.handleResize)
        }
        ViewContainer.prototype.componentWillUnmount = function () {
          this.context.removeResizeHandler(this.handleResize)
        }
        ViewContainer.prototype.updateAvailableWidth = function () {
          if (
            this.el && // needed. but why?
            this.props.aspectRatio // aspectRatio is the only height setting that needs availableWidth
          ) {
            this.setState({ availableWidth: this.el.offsetWidth })
          }
        }
        return ViewContainer
      })(BaseComponent)

      /*
    Detects when the user clicks on an event within a DateComponent
    */
      var EventClicking = /** @class */ (function (_super) {
        __extends(EventClicking, _super)

        function EventClicking(settings) {
          var _this = _super.call(this, settings) || this
          _this.handleSegClick = function (ev, segEl) {
            var component = _this.component
            var context = component.context
            var seg = getElSeg(segEl)
            if (
              seg && // might be the <div> surrounding the more link
              component.isValidSegDownEl(ev.target)
            ) {
              // our way to simulate a link click for elements that can't be <a> tags
              // grab before trigger fired in case trigger trashes DOM thru rerendering
              var hasUrlContainer = elementClosest(
                ev.target,
                '.fc-event-forced-url'
              )
              var url = hasUrlContainer
                ? hasUrlContainer.querySelector('a[href]').href
                : ''
              context.emitter.trigger('eventClick', {
                el: segEl,
                event: new EventApi(
                  component.context,
                  seg.eventRange.def,
                  seg.eventRange.instance
                ),
                jsEvent: ev,
                view: context.viewApi,
              })
              if (url && !ev.defaultPrevented) {
                window.location.href = url
              }
            }
          }
          _this.destroy = listenBySelector(
            settings.el,
            'click',
            '.fc-event', // on both fg and bg events
            _this.handleSegClick
          )
          return _this
        }

        return EventClicking
      })(Interaction)

      /*
    Triggers events and adds/removes core classNames when the user's pointer
    enters/leaves event-elements of a component.
    */
      var EventHovering = /** @class */ (function (_super) {
        __extends(EventHovering, _super)

        function EventHovering(settings) {
          var _this = _super.call(this, settings) || this
          // for simulating an eventMouseLeave when the event el is destroyed while mouse is over it
          _this.handleEventElRemove = function (el) {
            if (el === _this.currentSegEl) {
              _this.handleSegLeave(null, _this.currentSegEl)
            }
          }
          _this.handleSegEnter = function (ev, segEl) {
            if (getElSeg(segEl)) {
              // TODO: better way to make sure not hovering over more+ link or its wrapper
              _this.currentSegEl = segEl
              _this.triggerEvent('eventMouseEnter', ev, segEl)
            }
          }
          _this.handleSegLeave = function (ev, segEl) {
            if (_this.currentSegEl) {
              _this.currentSegEl = null
              _this.triggerEvent('eventMouseLeave', ev, segEl)
            }
          }
          _this.removeHoverListeners = listenToHoverBySelector(
            settings.el,
            '.fc-event', // on both fg and bg events
            _this.handleSegEnter,
            _this.handleSegLeave
          )
          return _this
        }

        EventHovering.prototype.destroy = function () {
          this.removeHoverListeners()
        }
        EventHovering.prototype.triggerEvent = function (
          publicEvName,
          ev,
          segEl
        ) {
          var component = this.component
          var context = component.context
          var seg = getElSeg(segEl)
          if (!ev || component.isValidSegDownEl(ev.target)) {
            context.emitter.trigger(publicEvName, {
              el: segEl,
              event: new EventApi(
                context,
                seg.eventRange.def,
                seg.eventRange.instance
              ),
              jsEvent: ev,
              view: context.viewApi,
            })
          }
        }
        return EventHovering
      })(Interaction)

      var CalendarContent = /** @class */ (function (_super) {
        __extends(CalendarContent, _super)

        function CalendarContent() {
          var _this = (_super !== null && _super.apply(this, arguments)) || this
          _this.buildViewContext = memoize(buildViewContext)
          _this.buildViewPropTransformers = memoize(buildViewPropTransformers)
          _this.buildToolbarProps = memoize(buildToolbarProps)
          _this.handleNavLinkClick = buildDelegationHandler(
            'a[data-navlink]',
            _this._handleNavLinkClick.bind(_this)
          )
          _this.headerRef = createRef()
          _this.footerRef = createRef()
          _this.interactionsStore = {}
          // Component Registration
          // -----------------------------------------------------------------------------------------------------------------
          _this.registerInteractiveComponent = function (
            component,
            settingsInput
          ) {
            var settings = parseInteractionSettings(component, settingsInput)
            var DEFAULT_INTERACTIONS = [EventClicking, EventHovering]
            var interactionClasses = DEFAULT_INTERACTIONS.concat(
              _this.props.pluginHooks.componentInteractions
            )
            var interactions = interactionClasses.map(function (
              TheInteractionClass
            ) {
              return new TheInteractionClass(settings)
            })
            _this.interactionsStore[component.uid] = interactions
            interactionSettingsStore[component.uid] = settings
          }
          _this.unregisterInteractiveComponent = function (component) {
            for (
              var _i = 0, _a = _this.interactionsStore[component.uid];
              _i < _a.length;
              _i++
            ) {
              var listener = _a[_i]
              listener.destroy()
            }
            delete _this.interactionsStore[component.uid]
            delete interactionSettingsStore[component.uid]
          }
          // Resizing
          // -----------------------------------------------------------------------------------------------------------------
          _this.resizeRunner = new DelayedRunner(function () {
            _this.props.emitter.trigger('_resize', true) // should window resizes be considered "forced" ?
            _this.props.emitter.trigger('windowResize', {
              view: _this.props.viewApi,
            })
          })
          _this.handleWindowResize = function (ev) {
            var options = _this.props.options
            if (
              options.handleWindowResize &&
              ev.target === window // avoid jqui events
            ) {
              _this.resizeRunner.request(options.windowResizeDelay)
            }
          }
          return _this
        }

        /*
        renders INSIDE of an outer div
        */
        CalendarContent.prototype.render = function () {
          var props = this.props
          var toolbarConfig = props.toolbarConfig,
            options = props.options
          var toolbarProps = this.buildToolbarProps(
            props.viewSpec,
            props.dateProfile,
            props.dateProfileGenerator,
            props.currentDate,
            getNow(props.options.now, props.dateEnv), // TODO: use NowTimer????
            props.viewTitle
          )
          var viewVGrow = false
          var viewHeight = ''
          var viewAspectRatio
          if (props.isHeightAuto || props.forPrint) {
            viewHeight = ''
          } else if (options.height != null) {
            viewVGrow = true
          } else if (options.contentHeight != null) {
            viewHeight = options.contentHeight
          } else {
            viewAspectRatio = Math.max(options.aspectRatio, 0.5) // prevent from getting too tall
          }
          var viewContext = this.buildViewContext(
            props.viewSpec,
            props.viewApi,
            props.options,
            props.dateProfileGenerator,
            props.dateEnv,
            props.theme,
            props.pluginHooks,
            props.dispatch,
            props.getCurrentData,
            props.emitter,
            props.calendarApi,
            this.registerInteractiveComponent,
            this.unregisterInteractiveComponent
          )
          return createElement(
            ViewContextType.Provider,
            { value: viewContext },
            toolbarConfig.headerToolbar &&
              createElement(
                Toolbar,
                __assign(
                  {
                    ref: this.headerRef,
                    extraClassName: 'fc-header-toolbar',
                    model: toolbarConfig.headerToolbar,
                  },
                  toolbarProps
                )
              ),
            createElement(
              ViewContainer,
              {
                liquid: viewVGrow,
                height: viewHeight,
                aspectRatio: viewAspectRatio,
                onClick: this.handleNavLinkClick,
              },
              this.renderView(props),
              this.buildAppendContent()
            ),
            toolbarConfig.footerToolbar &&
              createElement(
                Toolbar,
                __assign(
                  {
                    ref: this.footerRef,
                    extraClassName: 'fc-footer-toolbar',
                    model: toolbarConfig.footerToolbar,
                  },
                  toolbarProps
                )
              )
          )
        }
        CalendarContent.prototype.componentDidMount = function () {
          var props = this.props
          this.calendarInteractions =
            props.pluginHooks.calendarInteractions.map(function (
              CalendarInteractionClass
            ) {
              return new CalendarInteractionClass(props)
            })
          window.addEventListener('resize', this.handleWindowResize)
          var propSetHandlers = props.pluginHooks.propSetHandlers
          for (var propName in propSetHandlers) {
            propSetHandlers[propName](props[propName], props)
          }
        }
        CalendarContent.prototype.componentDidUpdate = function (prevProps) {
          var props = this.props
          var propSetHandlers = props.pluginHooks.propSetHandlers
          for (var propName in propSetHandlers) {
            if (props[propName] !== prevProps[propName]) {
              propSetHandlers[propName](props[propName], props)
            }
          }
        }
        CalendarContent.prototype.componentWillUnmount = function () {
          window.removeEventListener('resize', this.handleWindowResize)
          this.resizeRunner.clear()
          for (
            var _i = 0, _a = this.calendarInteractions;
            _i < _a.length;
            _i++
          ) {
            var interaction = _a[_i]
            interaction.destroy()
          }
          this.props.emitter.trigger('_unmount')
        }
        CalendarContent.prototype._handleNavLinkClick = function (
          ev,
          anchorEl
        ) {
          var _a = this.props,
            dateEnv = _a.dateEnv,
            options = _a.options,
            calendarApi = _a.calendarApi
          var navLinkOptions = anchorEl.getAttribute('data-navlink')
          navLinkOptions = navLinkOptions ? JSON.parse(navLinkOptions) : {}
          var dateMarker = dateEnv.createMarker(navLinkOptions.date)
          var viewType = navLinkOptions.type
          var customAction =
            viewType === 'day'
              ? options.navLinkDayClick
              : viewType === 'week'
              ? options.navLinkWeekClick
              : null
          if (typeof customAction === 'function') {
            customAction.call(calendarApi, dateEnv.toDate(dateMarker), ev)
          } else {
            if (typeof customAction === 'string') {
              viewType = customAction
            }
            calendarApi.zoomTo(dateMarker, viewType)
          }
        }
        CalendarContent.prototype.buildAppendContent = function () {
          var props = this.props
          var children = props.pluginHooks.viewContainerAppends.map(function (
            buildAppendContent
          ) {
            return buildAppendContent(props)
          })
          return createElement.apply(
            void 0,
            __spreadArrays([Fragment, {}], children)
          )
        }
        CalendarContent.prototype.renderView = function (props) {
          var pluginHooks = props.pluginHooks
          var viewSpec = props.viewSpec
          var viewProps = {
            dateProfile: props.dateProfile,
            businessHours: props.businessHours,
            eventStore: props.renderableEventStore,
            eventUiBases: props.eventUiBases,
            dateSelection: props.dateSelection,
            eventSelection: props.eventSelection,
            eventDrag: props.eventDrag,
            eventResize: props.eventResize,
            isHeightAuto: props.isHeightAuto,
            forPrint: props.forPrint,
          }
          var transformers = this.buildViewPropTransformers(
            pluginHooks.viewPropsTransformers
          )
          for (
            var _i = 0, transformers_1 = transformers;
            _i < transformers_1.length;
            _i++
          ) {
            var transformer = transformers_1[_i]
            __assign(viewProps, transformer.transform(viewProps, props))
          }
          var ViewComponent = viewSpec.component
          return createElement(ViewComponent, __assign({}, viewProps))
        }
        return CalendarContent
      })(PureComponent)

      function buildToolbarProps(
        viewSpec,
        dateProfile,
        dateProfileGenerator,
        currentDate,
        now,
        title
      ) {
        // don't force any date-profiles to valid date profiles (the `false`) so that we can tell if it's invalid
        var todayInfo = dateProfileGenerator.build(now, undefined, false) // TODO: need `undefined` or else INFINITE LOOP for some reason
        var prevInfo = dateProfileGenerator.buildPrev(
          dateProfile,
          currentDate,
          false
        )
        var nextInfo = dateProfileGenerator.buildNext(
          dateProfile,
          currentDate,
          false
        )
        return {
          title: title,
          activeButton: viewSpec.type,
          isTodayEnabled:
            todayInfo.isValid &&
            !rangeContainsMarker(dateProfile.currentRange, now),
          isPrevEnabled: prevInfo.isValid,
          isNextEnabled: nextInfo.isValid,
        }
      }

      // Plugin
      // -----------------------------------------------------------------------------------------------------------------
      function buildViewPropTransformers(theClasses) {
        return theClasses.map(function (TheClass) {
          return new TheClass()
        })
      }

      var CalendarRoot = /** @class */ (function (_super) {
        __extends(CalendarRoot, _super)

        function CalendarRoot() {
          var _this = (_super !== null && _super.apply(this, arguments)) || this
          _this.state = {
            forPrint: false,
          }
          _this.handleBeforePrint = function () {
            _this.setState({ forPrint: true })
          }
          _this.handleAfterPrint = function () {
            _this.setState({ forPrint: false })
          }
          return _this
        }

        CalendarRoot.prototype.render = function () {
          var props = this.props
          var options = props.options
          var forPrint = this.state.forPrint
          var isHeightAuto =
            forPrint ||
            options.height === 'auto' ||
            options.contentHeight === 'auto'
          var height =
            !isHeightAuto && options.height != null ? options.height : ''
          var classNames = [
            'fc',
            forPrint ? 'fc-media-print' : 'fc-media-screen',
            'fc-direction-' + options.direction,
            props.theme.getClass('root'),
          ]
          if (!getCanVGrowWithinCell()) {
            classNames.push('fc-liquid-hack')
          }
          return props.children(classNames, height, isHeightAuto, forPrint)
        }
        CalendarRoot.prototype.componentDidMount = function () {
          var emitter = this.props.emitter
          emitter.on('_beforeprint', this.handleBeforePrint)
          emitter.on('_afterprint', this.handleAfterPrint)
        }
        CalendarRoot.prototype.componentWillUnmount = function () {
          var emitter = this.props.emitter
          emitter.off('_beforeprint', this.handleBeforePrint)
          emitter.off('_afterprint', this.handleAfterPrint)
        }
        return CalendarRoot
      })(BaseComponent)

      // Computes a default column header formatting string if `colFormat` is not explicitly defined
      function computeFallbackHeaderFormat(datesRepDistinctDays, dayCnt) {
        // if more than one week row, or if there are a lot of columns with not much space,
        // put just the day numbers will be in each cell
        if (!datesRepDistinctDays || dayCnt > 10) {
          return createFormatter({ weekday: 'short' }) // "Sat"
        }
        if (dayCnt > 1) {
          return createFormatter({
            weekday: 'short',
            month: 'numeric',
            day: 'numeric',
            omitCommas: true,
          }) // "Sat 11/12"
        }
        return createFormatter({ weekday: 'long' }) // "Saturday"
      }

      var CLASS_NAME = 'fc-col-header-cell' // do the cushion too? no
      function renderInner(hookProps) {
        return hookProps.text
      }

      var TableDateCell = /** @class */ (function (_super) {
        __extends(TableDateCell, _super)

        function TableDateCell() {
          return (_super !== null && _super.apply(this, arguments)) || this
        }

        TableDateCell.prototype.render = function () {
          var _a = this.context,
            dateEnv = _a.dateEnv,
            options = _a.options,
            theme = _a.theme,
            viewApi = _a.viewApi
          var props = this.props
          var date = props.date,
            dateProfile = props.dateProfile
          var dayMeta = getDateMeta(date, props.todayRange, null, dateProfile)
          var classNames = [CLASS_NAME].concat(getDayClassNames(dayMeta, theme))
          var text = dateEnv.format(date, props.dayHeaderFormat)
          // if colCnt is 1, we are already in a day-view and don't need a navlink
          var navLinkAttrs =
            options.navLinks && !dayMeta.isDisabled && props.colCnt > 1
              ? {
                  'data-navlink': buildNavLinkData(date),
                  tabIndex: 0,
                }
              : {}
          var hookProps = __assign(
            __assign(
              __assign(
                {
                  date: dateEnv.toDate(date),
                  view: viewApi,
                },
                props.extraHookProps
              ),
              { text: text }
            ),
            dayMeta
          )
          return createElement(
            RenderHook,
            {
              hookProps: hookProps,
              classNames: options.dayHeaderClassNames,
              content: options.dayHeaderContent,
              defaultContent: renderInner,
              didMount: options.dayHeaderDidMount,
              willUnmount: options.dayHeaderWillUnmount,
            },
            function (rootElRef, customClassNames, innerElRef, innerContent) {
              return createElement(
                'th',
                __assign(
                  {
                    ref: rootElRef,
                    className: classNames.concat(customClassNames).join(' '),
                    'data-date': !dayMeta.isDisabled
                      ? formatDayString(date)
                      : undefined,
                    colSpan: props.colSpan,
                  },
                  props.extraDataAttrs
                ),
                createElement(
                  'div',
                  { className: 'fc-scrollgrid-sync-inner' },
                  !dayMeta.isDisabled &&
                    createElement(
                      'a',
                      __assign(
                        {
                          ref: innerElRef,
                          className: [
                            'fc-col-header-cell-cushion',
                            props.isSticky ? 'fc-sticky' : '',
                          ].join(' '),
                        },
                        navLinkAttrs
                      ),
                      innerContent
                    )
                )
              )
            }
          )
        }
        return TableDateCell
      })(BaseComponent)

      var TableDowCell = /** @class */ (function (_super) {
        __extends(TableDowCell, _super)

        function TableDowCell() {
          return (_super !== null && _super.apply(this, arguments)) || this
        }

        TableDowCell.prototype.render = function () {
          var props = this.props
          var _a = this.context,
            dateEnv = _a.dateEnv,
            theme = _a.theme,
            viewApi = _a.viewApi,
            options = _a.options
          var date = addDays(new Date(259200000), props.dow) // start with Sun, 04 Jan 1970 00:00:00 GMT
          var dateMeta = {
            dow: props.dow,
            isDisabled: false,
            isFuture: false,
            isPast: false,
            isToday: false,
            isOther: false,
          }
          var classNames = [CLASS_NAME].concat(
            getDayClassNames(dateMeta, theme),
            props.extraClassNames || []
          )
          var text = dateEnv.format(date, props.dayHeaderFormat)
          var hookProps = __assign(
            __assign(
              __assign(
                __assign(
                  {
                    // TODO: make this public?
                    date: date,
                  },
                  dateMeta
                ),
                { view: viewApi }
              ),
              props.extraHookProps
            ),
            { text: text }
          )
          return createElement(
            RenderHook,
            {
              hookProps: hookProps,
              classNames: options.dayHeaderClassNames,
              content: options.dayHeaderContent,
              defaultContent: renderInner,
              didMount: options.dayHeaderDidMount,
              willUnmount: options.dayHeaderWillUnmount,
            },
            function (rootElRef, customClassNames, innerElRef, innerContent) {
              return createElement(
                'th',
                __assign(
                  {
                    ref: rootElRef,
                    className: classNames.concat(customClassNames).join(' '),
                    colSpan: props.colSpan,
                  },
                  props.extraDataAttrs
                ),
                createElement(
                  'div',
                  { className: 'fc-scrollgrid-sync-inner' },
                  createElement(
                    'a',
                    {
                      className: [
                        'fc-col-header-cell-cushion',
                        props.isSticky ? 'fc-sticky' : '',
                      ].join(' '),
                      ref: innerElRef,
                    },
                    innerContent
                  )
                )
              )
            }
          )
        }
        return TableDowCell
      })(BaseComponent)

      var NowTimer = /** @class */ (function (_super) {
        __extends(NowTimer, _super)

        function NowTimer(props, context) {
          var _this = _super.call(this, props, context) || this
          _this.initialNowDate = getNow(context.options.now, context.dateEnv)
          _this.initialNowQueriedMs = new Date().valueOf()
          _this.state = _this.computeTiming().currentState
          return _this
        }

        NowTimer.prototype.render = function () {
          var _a = this,
            props = _a.props,
            state = _a.state
          return props.children(state.nowDate, state.todayRange)
        }
        NowTimer.prototype.componentDidMount = function () {
          this.setTimeout()
        }
        NowTimer.prototype.componentDidUpdate = function (prevProps) {
          if (prevProps.unit !== this.props.unit) {
            this.clearTimeout()
            this.setTimeout()
          }
        }
        NowTimer.prototype.componentWillUnmount = function () {
          this.clearTimeout()
        }
        NowTimer.prototype.computeTiming = function () {
          var _a = this,
            props = _a.props,
            context = _a.context
          var unroundedNow = addMs(
            this.initialNowDate,
            new Date().valueOf() - this.initialNowQueriedMs
          )
          var currentUnitStart = context.dateEnv.startOf(
            unroundedNow,
            props.unit
          )
          var nextUnitStart = context.dateEnv.add(
            currentUnitStart,
            createDuration(1, props.unit)
          )
          var waitMs = nextUnitStart.valueOf() - unroundedNow.valueOf()
          // there is a max setTimeout ms value (https://stackoverflow.com/a/3468650/96342)
          // ensure no longer than a day
          waitMs = Math.min(1000 * 60 * 60 * 24, waitMs)
          return {
            currentState: {
              nowDate: currentUnitStart,
              todayRange: buildDayRange(currentUnitStart),
            },
            nextState: {
              nowDate: nextUnitStart,
              todayRange: buildDayRange(nextUnitStart),
            },
            waitMs: waitMs,
          }
        }
        NowTimer.prototype.setTimeout = function () {
          var _this = this
          var _a = this.computeTiming(),
            nextState = _a.nextState,
            waitMs = _a.waitMs
          this.timeoutId = setTimeout(function () {
            _this.setState(nextState, function () {
              _this.setTimeout()
            })
          }, waitMs)
        }
        NowTimer.prototype.clearTimeout = function () {
          if (this.timeoutId) {
            clearTimeout(this.timeoutId)
          }
        }
        NowTimer.contextType = ViewContextType
        return NowTimer
      })(Component)

      function buildDayRange(date) {
        var start = startOfDay(date)
        var end = addDays(start, 1)
        return { start: start, end: end }
      }

      var DayHeader = /** @class */ (function (_super) {
        __extends(DayHeader, _super)

        function DayHeader() {
          var _this = (_super !== null && _super.apply(this, arguments)) || this
          _this.createDayHeaderFormatter = memoize(createDayHeaderFormatter)
          return _this
        }

        DayHeader.prototype.render = function () {
          var context = this.context
          var _a = this.props,
            dates = _a.dates,
            dateProfile = _a.dateProfile,
            datesRepDistinctDays = _a.datesRepDistinctDays,
            renderIntro = _a.renderIntro
          var dayHeaderFormat = this.createDayHeaderFormatter(
            context.options.dayHeaderFormat,
            datesRepDistinctDays,
            dates.length
          )
          return createElement(
            NowTimer,
            { unit: 'day' },
            function (nowDate, todayRange) {
              return createElement(
                'tr',
                null,
                renderIntro && renderIntro('day'),
                dates.map(function (date) {
                  return datesRepDistinctDays
                    ? createElement(TableDateCell, {
                        key: date.toISOString(),
                        date: date,
                        dateProfile: dateProfile,
                        todayRange: todayRange,
                        colCnt: dates.length,
                        dayHeaderFormat: dayHeaderFormat,
                      })
                    : createElement(TableDowCell, {
                        key: date.getUTCDay(),
                        dow: date.getUTCDay(),
                        dayHeaderFormat: dayHeaderFormat,
                      })
                })
              )
            }
          )
        }
        return DayHeader
      })(BaseComponent)

      function createDayHeaderFormatter(
        explicitFormat,
        datesRepDistinctDays,
        dateCnt
      ) {
        return (
          explicitFormat ||
          computeFallbackHeaderFormat(datesRepDistinctDays, dateCnt)
        )
      }

      var DaySeriesModel = /** @class */ (function () {
        function DaySeriesModel(range, dateProfileGenerator) {
          var date = range.start
          var end = range.end
          var indices = []
          var dates = []
          var dayIndex = -1
          while (date < end) {
            // loop each day from start to end
            if (dateProfileGenerator.isHiddenDay(date)) {
              indices.push(dayIndex + 0.5) // mark that it's between indices
            } else {
              dayIndex += 1
              indices.push(dayIndex)
              dates.push(date)
            }
            date = addDays(date, 1)
          }
          this.dates = dates
          this.indices = indices
          this.cnt = dates.length
        }

        DaySeriesModel.prototype.sliceRange = function (range) {
          var firstIndex = this.getDateDayIndex(range.start) // inclusive first index
          var lastIndex = this.getDateDayIndex(addDays(range.end, -1)) // inclusive last index
          var clippedFirstIndex = Math.max(0, firstIndex)
          var clippedLastIndex = Math.min(this.cnt - 1, lastIndex)
          // deal with in-between indices
          clippedFirstIndex = Math.ceil(clippedFirstIndex) // in-between starts round to next cell
          clippedLastIndex = Math.floor(clippedLastIndex) // in-between ends round to prev cell
          if (clippedFirstIndex <= clippedLastIndex) {
            return {
              firstIndex: clippedFirstIndex,
              lastIndex: clippedLastIndex,
              isStart: firstIndex === clippedFirstIndex,
              isEnd: lastIndex === clippedLastIndex,
            }
          }
          return null
        }
        // Given a date, returns its chronolocial cell-index from the first cell of the grid.
        // If the date lies between cells (because of hiddenDays), returns a floating-point value between offsets.
        // If before the first offset, returns a negative number.
        // If after the last offset, returns an offset past the last cell offset.
        // Only works for *start* dates of cells. Will not work for exclusive end dates for cells.
        DaySeriesModel.prototype.getDateDayIndex = function (date) {
          var indices = this.indices
          var dayOffset = Math.floor(diffDays(this.dates[0], date))
          if (dayOffset < 0) {
            return indices[0] - 1
          }
          if (dayOffset >= indices.length) {
            return indices[indices.length - 1] + 1
          }
          return indices[dayOffset]
        }
        return DaySeriesModel
      })()

      var DayTableModel = /** @class */ (function () {
        function DayTableModel(daySeries, breakOnWeeks) {
          var dates = daySeries.dates
          var daysPerRow
          var firstDay
          var rowCnt
          if (breakOnWeeks) {
            // count columns until the day-of-week repeats
            firstDay = dates[0].getUTCDay()
            for (daysPerRow = 1; daysPerRow < dates.length; daysPerRow += 1) {
              if (dates[daysPerRow].getUTCDay() === firstDay) {
                break
              }
            }
            rowCnt = Math.ceil(dates.length / daysPerRow)
          } else {
            rowCnt = 1
            daysPerRow = dates.length
          }
          this.rowCnt = rowCnt
          this.colCnt = daysPerRow
          this.daySeries = daySeries
          this.cells = this.buildCells()
          this.headerDates = this.buildHeaderDates()
        }

        DayTableModel.prototype.buildCells = function () {
          var rows = []
          for (var row = 0; row < this.rowCnt; row += 1) {
            var cells = []
            for (var col = 0; col < this.colCnt; col += 1) {
              cells.push(this.buildCell(row, col))
            }
            rows.push(cells)
          }
          return rows
        }
        DayTableModel.prototype.buildCell = function (row, col) {
          var date = this.daySeries.dates[row * this.colCnt + col]
          return {
            key: date.toISOString(),
            date: date,
          }
        }
        DayTableModel.prototype.buildHeaderDates = function () {
          var dates = []
          for (var col = 0; col < this.colCnt; col += 1) {
            dates.push(this.cells[0][col].date)
          }
          return dates
        }
        DayTableModel.prototype.sliceRange = function (range) {
          var colCnt = this.colCnt
          var seriesSeg = this.daySeries.sliceRange(range)
          var segs = []
          if (seriesSeg) {
            var firstIndex = seriesSeg.firstIndex,
              lastIndex = seriesSeg.lastIndex
            var index = firstIndex
            while (index <= lastIndex) {
              var row = Math.floor(index / colCnt)
              var nextIndex = Math.min((row + 1) * colCnt, lastIndex + 1)
              segs.push({
                row: row,
                firstCol: index % colCnt,
                lastCol: (nextIndex - 1) % colCnt,
                isStart: seriesSeg.isStart && index === firstIndex,
                isEnd: seriesSeg.isEnd && nextIndex - 1 === lastIndex,
              })
              index = nextIndex
            }
          }
          return segs
        }
        return DayTableModel
      })()

      var Slicer = /** @class */ (function () {
        function Slicer() {
          this.sliceBusinessHours = memoize(this._sliceBusinessHours)
          this.sliceDateSelection = memoize(this._sliceDateSpan)
          this.sliceEventStore = memoize(this._sliceEventStore)
          this.sliceEventDrag = memoize(this._sliceInteraction)
          this.sliceEventResize = memoize(this._sliceInteraction)
          this.forceDayIfListItem = false // hack
        }

        Slicer.prototype.sliceProps = function (
          props,
          dateProfile,
          nextDayThreshold,
          context
        ) {
          var extraArgs = []
          for (var _i = 4; _i < arguments.length; _i++) {
            extraArgs[_i - 4] = arguments[_i]
          }
          var eventUiBases = props.eventUiBases
          var eventSegs = this.sliceEventStore.apply(
            this,
            __spreadArrays(
              [props.eventStore, eventUiBases, dateProfile, nextDayThreshold],
              extraArgs
            )
          )
          return {
            dateSelectionSegs: this.sliceDateSelection.apply(
              this,
              __spreadArrays(
                [props.dateSelection, eventUiBases, context],
                extraArgs
              )
            ),
            businessHourSegs: this.sliceBusinessHours.apply(
              this,
              __spreadArrays(
                [props.businessHours, dateProfile, nextDayThreshold, context],
                extraArgs
              )
            ),
            fgEventSegs: eventSegs.fg,
            bgEventSegs: eventSegs.bg,
            eventDrag: this.sliceEventDrag.apply(
              this,
              __spreadArrays(
                [props.eventDrag, eventUiBases, dateProfile, nextDayThreshold],
                extraArgs
              )
            ),
            eventResize: this.sliceEventResize.apply(
              this,
              __spreadArrays(
                [
                  props.eventResize,
                  eventUiBases,
                  dateProfile,
                  nextDayThreshold,
                ],
                extraArgs
              )
            ),
            eventSelection: props.eventSelection,
          } // TODO: give interactionSegs?
        }
        Slicer.prototype.sliceNowDate = function (
          // does not memoize
          date,
          context
        ) {
          var extraArgs = []
          for (var _i = 2; _i < arguments.length; _i++) {
            extraArgs[_i - 2] = arguments[_i]
          }
          return this._sliceDateSpan.apply(
            this,
            __spreadArrays(
              [
                {
                  range: { start: date, end: addMs(date, 1) },
                  allDay: false,
                },
                {},
                context,
              ],
              extraArgs
            )
          )
        }
        Slicer.prototype._sliceBusinessHours = function (
          businessHours,
          dateProfile,
          nextDayThreshold,
          context
        ) {
          var extraArgs = []
          for (var _i = 4; _i < arguments.length; _i++) {
            extraArgs[_i - 4] = arguments[_i]
          }
          if (!businessHours) {
            return []
          }
          return this._sliceEventStore.apply(
            this,
            __spreadArrays(
              [
                expandRecurring(
                  businessHours,
                  computeActiveRange(dateProfile, Boolean(nextDayThreshold)),
                  context
                ),
                {},
                dateProfile,
                nextDayThreshold,
              ],
              extraArgs
            )
          ).bg
        }
        Slicer.prototype._sliceEventStore = function (
          eventStore,
          eventUiBases,
          dateProfile,
          nextDayThreshold
        ) {
          var extraArgs = []
          for (var _i = 4; _i < arguments.length; _i++) {
            extraArgs[_i - 4] = arguments[_i]
          }
          if (eventStore) {
            var rangeRes = sliceEventStore(
              eventStore,
              eventUiBases,
              computeActiveRange(dateProfile, Boolean(nextDayThreshold)),
              nextDayThreshold
            )
            return {
              bg: this.sliceEventRanges(rangeRes.bg, extraArgs),
              fg: this.sliceEventRanges(rangeRes.fg, extraArgs),
            }
          }
          return { bg: [], fg: [] }
        }
        Slicer.prototype._sliceInteraction = function (
          interaction,
          eventUiBases,
          dateProfile,
          nextDayThreshold
        ) {
          var extraArgs = []
          for (var _i = 4; _i < arguments.length; _i++) {
            extraArgs[_i - 4] = arguments[_i]
          }
          if (!interaction) {
            return null
          }
          var rangeRes = sliceEventStore(
            interaction.mutatedEvents,
            eventUiBases,
            computeActiveRange(dateProfile, Boolean(nextDayThreshold)),
            nextDayThreshold
          )
          return {
            segs: this.sliceEventRanges(rangeRes.fg, extraArgs),
            affectedInstances: interaction.affectedEvents.instances,
            isEvent: interaction.isEvent,
          }
        }
        Slicer.prototype._sliceDateSpan = function (
          dateSpan,
          eventUiBases,
          context
        ) {
          var extraArgs = []
          for (var _i = 3; _i < arguments.length; _i++) {
            extraArgs[_i - 3] = arguments[_i]
          }
          if (!dateSpan) {
            return []
          }
          var eventRange = fabricateEventRange(dateSpan, eventUiBases, context)
          var segs = this.sliceRange.apply(
            this,
            __spreadArrays([dateSpan.range], extraArgs)
          )
          for (var _a = 0, segs_1 = segs; _a < segs_1.length; _a++) {
            var seg = segs_1[_a]
            seg.eventRange = eventRange
          }
          return segs
        }
        /*
        "complete" seg means it has component and eventRange
        */
        Slicer.prototype.sliceEventRanges = function (eventRanges, extraArgs) {
          var segs = []
          for (
            var _i = 0, eventRanges_1 = eventRanges;
            _i < eventRanges_1.length;
            _i++
          ) {
            var eventRange = eventRanges_1[_i]
            segs.push.apply(segs, this.sliceEventRange(eventRange, extraArgs))
          }
          return segs
        }
        /*
        "complete" seg means it has component and eventRange
        */
        Slicer.prototype.sliceEventRange = function (eventRange, extraArgs) {
          var dateRange = eventRange.range
          // hack to make multi-day events that are being force-displayed as list-items to take up only one day
          if (
            this.forceDayIfListItem &&
            eventRange.ui.display === 'list-item'
          ) {
            dateRange = {
              start: dateRange.start,
              end: addDays(dateRange.start, 1),
            }
          }
          var segs = this.sliceRange.apply(
            this,
            __spreadArrays([dateRange], extraArgs)
          )
          for (var _i = 0, segs_2 = segs; _i < segs_2.length; _i++) {
            var seg = segs_2[_i]
            seg.eventRange = eventRange
            seg.isStart = eventRange.isStart && seg.isStart
            seg.isEnd = eventRange.isEnd && seg.isEnd
          }
          return segs
        }
        return Slicer
      })()

      /*
    for incorporating slotMinTime/slotMaxTime if appropriate
    TODO: should be part of DateProfile!
    TimelineDateProfile already does this btw
    */
      function computeActiveRange(dateProfile, isComponentAllDay) {
        var range = dateProfile.activeRange
        if (isComponentAllDay) {
          return range
        }
        return {
          start: addMs(range.start, dateProfile.slotMinTime.milliseconds),
          end: addMs(range.end, dateProfile.slotMaxTime.milliseconds - 864e5),
        }
      }

      var VISIBLE_HIDDEN_RE = /^(visible|hidden)$/
      var Scroller = /** @class */ (function (_super) {
        __extends(Scroller, _super)

        function Scroller() {
          var _this = (_super !== null && _super.apply(this, arguments)) || this
          _this.handleEl = function (el) {
            _this.el = el
            setRef(_this.props.elRef, el)
          }
          return _this
        }

        Scroller.prototype.render = function () {
          var props = this.props
          var liquid = props.liquid,
            liquidIsAbsolute = props.liquidIsAbsolute
          var isAbsolute = liquid && liquidIsAbsolute
          var className = ['fc-scroller']
          if (liquid) {
            if (liquidIsAbsolute) {
              className.push('fc-scroller-liquid-absolute')
            } else {
              className.push('fc-scroller-liquid')
            }
          }
          return createElement(
            'div',
            {
              ref: this.handleEl,
              className: className.join(' '),
              style: {
                overflowX: props.overflowX,
                overflowY: props.overflowY,
                left: (isAbsolute && -(props.overcomeLeft || 0)) || '',
                right: (isAbsolute && -(props.overcomeRight || 0)) || '',
                bottom: (isAbsolute && -(props.overcomeBottom || 0)) || '',
                marginLeft: (!isAbsolute && -(props.overcomeLeft || 0)) || '',
                marginRight: (!isAbsolute && -(props.overcomeRight || 0)) || '',
                marginBottom:
                  (!isAbsolute && -(props.overcomeBottom || 0)) || '',
                maxHeight: props.maxHeight || '',
              },
            },
            props.children
          )
        }
        Scroller.prototype.needsXScrolling = function () {
          if (VISIBLE_HIDDEN_RE.test(this.props.overflowX)) {
            return false
          }
          // testing scrollWidth>clientWidth is unreliable cross-browser when pixel heights aren't integers.
          // much more reliable to see if children are taller than the scroller, even tho doesn't account for
          // inner-child margins and absolute positioning
          var el = this.el
          var realClientWidth =
            this.el.getBoundingClientRect().width - this.getYScrollbarWidth()
          var children = el.children
          for (var i = 0; i < children.length; i += 1) {
            var childEl = children[i]
            if (childEl.getBoundingClientRect().width > realClientWidth) {
              return true
            }
          }
          return false
        }
        Scroller.prototype.needsYScrolling = function () {
          if (VISIBLE_HIDDEN_RE.test(this.props.overflowY)) {
            return false
          }
          // testing scrollHeight>clientHeight is unreliable cross-browser when pixel heights aren't integers.
          // much more reliable to see if children are taller than the scroller, even tho doesn't account for
          // inner-child margins and absolute positioning
          var el = this.el
          var realClientHeight =
            this.el.getBoundingClientRect().height - this.getXScrollbarWidth()
          var children = el.children
          for (var i = 0; i < children.length; i += 1) {
            var childEl = children[i]
            if (childEl.getBoundingClientRect().height > realClientHeight) {
              return true
            }
          }
          return false
        }
        Scroller.prototype.getXScrollbarWidth = function () {
          if (VISIBLE_HIDDEN_RE.test(this.props.overflowX)) {
            return 0
          }
          return this.el.offsetHeight - this.el.clientHeight // only works because we guarantee no borders. TODO: add to CSS with important?
        }
        Scroller.prototype.getYScrollbarWidth = function () {
          if (VISIBLE_HIDDEN_RE.test(this.props.overflowY)) {
            return 0
          }
          return this.el.offsetWidth - this.el.clientWidth // only works because we guarantee no borders. TODO: add to CSS with important?
        }
        return Scroller
      })(BaseComponent)

      /*
    TODO: somehow infer OtherArgs from masterCallback?
    TODO: infer RefType from masterCallback if provided
    */
      var RefMap = /** @class */ (function () {
        function RefMap(masterCallback) {
          var _this = this
          this.masterCallback = masterCallback
          this.currentMap = {}
          this.depths = {}
          this.callbackMap = {}
          this.handleValue = function (val, key) {
            var _a = _this,
              depths = _a.depths,
              currentMap = _a.currentMap
            var removed = false
            var added = false
            if (val !== null) {
              // for bug... ACTUALLY: can probably do away with this now that callers don't share numeric indices anymore
              removed = key in currentMap
              currentMap[key] = val
              depths[key] = (depths[key] || 0) + 1
              added = true
            } else {
              depths[key] -= 1
              if (!depths[key]) {
                delete currentMap[key]
                delete _this.callbackMap[key]
                removed = true
              }
            }
            if (_this.masterCallback) {
              if (removed) {
                _this.masterCallback(null, String(key))
              }
              if (added) {
                _this.masterCallback(val, String(key))
              }
            }
          }
        }

        RefMap.prototype.createRef = function (key) {
          var _this = this
          var refCallback = this.callbackMap[key]
          if (!refCallback) {
            refCallback = this.callbackMap[key] = function (val) {
              _this.handleValue(val, String(key))
            }
          }
          return refCallback
        }
        // TODO: check callers that don't care about order. should use getAll instead
        // NOTE: this method has become less valuable now that we are encouraged to map order by some other index
        // TODO: provide ONE array-export function, buildArray, which fails on non-numeric indexes. caller can manipulate and "collect"
        RefMap.prototype.collect = function (startIndex, endIndex, step) {
          return collectFromHash(this.currentMap, startIndex, endIndex, step)
        }
        RefMap.prototype.getAll = function () {
          return hashValuesToArray(this.currentMap)
        }
        return RefMap
      })()

      function computeShrinkWidth(chunkEls) {
        var shrinkCells = findElements(chunkEls, '.fc-scrollgrid-shrink')
        var largestWidth = 0
        for (
          var _i = 0, shrinkCells_1 = shrinkCells;
          _i < shrinkCells_1.length;
          _i++
        ) {
          var shrinkCell = shrinkCells_1[_i]
          largestWidth = Math.max(
            largestWidth,
            computeSmallestCellWidth(shrinkCell)
          )
        }
        return Math.ceil(largestWidth) // <table> elements work best with integers. round up to ensure contents fits
      }

      function getSectionHasLiquidHeight(props, sectionConfig) {
        return props.liquid && sectionConfig.liquid // does the section do liquid-height? (need to have whole scrollgrid liquid-height as well)
      }

      function getAllowYScrolling(props, sectionConfig) {
        return (
          sectionConfig.maxHeight != null || // if its possible for the height to max out, we might need scrollbars
          getSectionHasLiquidHeight(props, sectionConfig)
        ) // if the section is liquid height, it might condense enough to require scrollbars
      }

      // TODO: ONLY use `arg`. force out internal function to use same API
      function renderChunkContent(sectionConfig, chunkConfig, arg) {
        var expandRows = arg.expandRows
        var content =
          typeof chunkConfig.content === 'function'
            ? chunkConfig.content(arg)
            : createElement(
                'table',
                {
                  className: [
                    chunkConfig.tableClassName,
                    sectionConfig.syncRowHeights
                      ? 'fc-scrollgrid-sync-table'
                      : '',
                  ].join(' '),
                  style: {
                    minWidth: arg.tableMinWidth,
                    width: arg.clientWidth,
                    height: expandRows ? arg.clientHeight : '',
                  },
                },
                arg.tableColGroupNode,
                createElement(
                  'tbody',
                  {},
                  typeof chunkConfig.rowContent === 'function'
                    ? chunkConfig.rowContent(arg)
                    : chunkConfig.rowContent
                )
              )
        return content
      }

      function isColPropsEqual(cols0, cols1) {
        return isArraysEqual(cols0, cols1, isPropsEqual)
      }

      function renderMicroColGroup(cols, shrinkWidth) {
        var colNodes = []
        /*
        for ColProps with spans, it would have been great to make a single <col span="">
        HOWEVER, Chrome was getting messing up distributing the width to <td>/<th> elements with colspans.
        SOLUTION: making individual <col> elements makes Chrome behave.
        */
        for (var _i = 0, cols_1 = cols; _i < cols_1.length; _i++) {
          var colProps = cols_1[_i]
          var span = colProps.span || 1
          for (var i = 0; i < span; i += 1) {
            colNodes.push(
              createElement('col', {
                style: {
                  width:
                    colProps.width === 'shrink'
                      ? sanitizeShrinkWidth(shrinkWidth)
                      : colProps.width || '',
                  minWidth: colProps.minWidth || '',
                },
              })
            )
          }
        }
        return createElement.apply(
          void 0,
          __spreadArrays(['colgroup', {}], colNodes)
        )
      }

      function sanitizeShrinkWidth(shrinkWidth) {
        /* why 4? if we do 0, it will kill any border, which are needed for computeSmallestCellWidth
        4 accounts for 2 2-pixel borders. TODO: better solution? */
        return shrinkWidth == null ? 4 : shrinkWidth
      }

      function hasShrinkWidth(cols) {
        for (var _i = 0, cols_2 = cols; _i < cols_2.length; _i++) {
          var col = cols_2[_i]
          if (col.width === 'shrink') {
            return true
          }
        }
        return false
      }

      function getScrollGridClassNames(liquid, context) {
        var classNames = ['fc-scrollgrid', context.theme.getClass('table')]
        if (liquid) {
          classNames.push('fc-scrollgrid-liquid')
        }
        return classNames
      }

      function getSectionClassNames(sectionConfig, wholeTableVGrow) {
        var classNames = [
          'fc-scrollgrid-section',
          'fc-scrollgrid-section-' + sectionConfig.type,
          sectionConfig.className,
        ]
        if (
          wholeTableVGrow &&
          sectionConfig.liquid &&
          sectionConfig.maxHeight == null
        ) {
          classNames.push('fc-scrollgrid-section-liquid')
        }
        if (sectionConfig.isSticky) {
          classNames.push('fc-scrollgrid-section-sticky')
        }
        return classNames
      }

      function renderScrollShim(arg) {
        return createElement('div', {
          className: 'fc-scrollgrid-sticky-shim',
          style: {
            width: arg.clientWidth,
            minWidth: arg.tableMinWidth,
          },
        })
      }

      function getStickyHeaderDates(options) {
        var stickyHeaderDates = options.stickyHeaderDates
        if (stickyHeaderDates == null || stickyHeaderDates === 'auto') {
          stickyHeaderDates =
            options.height === 'auto' || options.viewHeight === 'auto'
        }
        return stickyHeaderDates
      }

      function getStickyFooterScrollbar(options) {
        var stickyFooterScrollbar = options.stickyFooterScrollbar
        if (stickyFooterScrollbar == null || stickyFooterScrollbar === 'auto') {
          stickyFooterScrollbar =
            options.height === 'auto' || options.viewHeight === 'auto'
        }
        return stickyFooterScrollbar
      }

      var SimpleScrollGrid = /** @class */ function (_super) {
        __extends(SimpleScrollGrid, _super)

        function SimpleScrollGrid() {
          var _this = (_super !== null && _super.apply(this, arguments)) || this
          _this.processCols = memoize(function (a) {
            return a
          }, isColPropsEqual) // so we get same `cols` props every time
          // yucky to memoize VNodes, but much more efficient for consumers
          _this.renderMicroColGroup = memoize(renderMicroColGroup)
          _this.scrollerRefs = new RefMap()
          _this.scrollerElRefs = new RefMap(_this._handleScrollerEl.bind(_this))
          _this.state = {
            shrinkWidth: null,
            forceYScrollbars: false,
            scrollerClientWidths: {},
            scrollerClientHeights: {},
          }
          // TODO: can do a really simple print-view. dont need to join rows
          _this.handleSizing = function () {
            _this.setState(
              __assign(
                { shrinkWidth: _this.computeShrinkWidth() },
                _this.computeScrollerDims()
              )
            )
          }
          return _this
        }

        SimpleScrollGrid.prototype.render = function () {
          var _a = this,
            props = _a.props,
            state = _a.state,
            context = _a.context
          var sectionConfigs = props.sections || []
          var cols = this.processCols(props.cols)
          var microColGroupNode = this.renderMicroColGroup(
            cols,
            state.shrinkWidth
          )
          var classNames = getScrollGridClassNames(props.liquid, context)
          if (props.collapsibleWidth) {
            classNames.push('fc-scrollgrid-collapsible')
          }
          // TODO: make DRY
          var configCnt = sectionConfigs.length
          var configI = 0
          var currentConfig
          var headSectionNodes = []
          var bodySectionNodes = []
          var footSectionNodes = []
          while (
            configI < configCnt &&
            (currentConfig = sectionConfigs[configI]).type === 'header'
          ) {
            headSectionNodes.push(
              this.renderSection(currentConfig, microColGroupNode)
            )
            configI += 1
          }
          while (
            configI < configCnt &&
            (currentConfig = sectionConfigs[configI]).type === 'body'
          ) {
            bodySectionNodes.push(
              this.renderSection(currentConfig, microColGroupNode)
            )
            configI += 1
          }
          while (
            configI < configCnt &&
            (currentConfig = sectionConfigs[configI]).type === 'footer'
          ) {
            footSectionNodes.push(
              this.renderSection(currentConfig, microColGroupNode)
            )
            configI += 1
          }
          // firefox bug: when setting height on table and there is a thead or tfoot,
          // the necessary height:100% on the liquid-height body section forces the *whole* table to be taller. (bug #5524)
          // use getCanVGrowWithinCell as a way to detect table-stupid firefox.
          // if so, use a simpler dom structure, jam everything into a lone tbody.
          var isBuggy = !getCanVGrowWithinCell()
          return createElement(
            'table',
            {
              className: classNames.join(' '),
              style: { height: props.height },
            },
            Boolean(!isBuggy && headSectionNodes.length) &&
              createElement.apply(
                void 0,
                __spreadArrays(['thead', {}], headSectionNodes)
              ),
            Boolean(!isBuggy && bodySectionNodes.length) &&
              createElement.apply(
                void 0,
                __spreadArrays(['tbody', {}], bodySectionNodes)
              ),
            Boolean(!isBuggy && footSectionNodes.length) &&
              createElement.apply(
                void 0,
                __spreadArrays(['tfoot', {}], footSectionNodes)
              ),
            isBuggy &&
              createElement.apply(
                void 0,
                __spreadArrays(
                  ['tbody', {}],
                  headSectionNodes,
                  bodySectionNodes,
                  footSectionNodes
                )
              )
          )
        }
        SimpleScrollGrid.prototype.renderSection = function (
          sectionConfig,
          microColGroupNode
        ) {
          if ('outerContent' in sectionConfig) {
            return createElement(
              Fragment,
              { key: sectionConfig.key },
              sectionConfig.outerContent
            )
          }
          return createElement(
            'tr',
            {
              key: sectionConfig.key,
              className: getSectionClassNames(
                sectionConfig,
                this.props.liquid
              ).join(' '),
            },
            this.renderChunkTd(
              sectionConfig,
              microColGroupNode,
              sectionConfig.chunk
            )
          )
        }
        ;(SimpleScrollGrid.prototype.renderChunkTd = function (
          sectionConfig,
          microColGroupNode,
          chunkConfig
        ) {
          if ('outerContent' in chunkConfig) {
            return chunkConfig.outerContent
          }
          var props = this.props
          var _a = this.state,
            forceYScrollbars = _a.forceYScrollbars,
            scrollerClientWidths = _a.scrollerClientWidths,
            scrollerClientHeights = _a.scrollerClientHeights
          var needsYScrolling = getAllowYScrolling(props, sectionConfig) // TODO: do lazily. do in section config?
          var isLiquid = getSectionHasLiquidHeight(props, sectionConfig)
          // for `!props.liquid` - is WHOLE scrollgrid natural height?
          // TODO: do same thing in advanced scrollgrid? prolly not b/c always has horizontal scrollbars
          var overflowY = !props.liquid
            ? 'visible'
            : forceYScrollbars
            ? 'scroll'
            : !needsYScrolling
            ? 'hidden'
            : 'auto'
          var sectionKey = sectionConfig.key
          var content = renderChunkContent(sectionConfig, chunkConfig, {
            tableColGroupNode: microColGroupNode,
            tableMinWidth: '',
            clientWidth:
              !props.collapsibleWidth &&
              scrollerClientWidths[sectionKey] !== undefined
                ? scrollerClientWidths[sectionKey]
                : null,
            clientHeight:
              scrollerClientHeights[sectionKey] !== undefined
                ? scrollerClientHeights[sectionKey]
                : null,
            expandRows: sectionConfig.expandRows,
            syncRowHeights: false,
            rowSyncHeights: [],
            reportRowHeightChange: function () {},
          })
          return createElement(
            'td',
            { ref: chunkConfig.elRef },
            createElement(
              'div',
              {
                className:
                  'fc-scroller-harness' +
                  (isLiquid ? ' fc-scroller-harness-liquid' : ''),
              },
              createElement(Scroller, {
                ref: this.scrollerRefs.createRef(sectionKey),
                elRef: this.scrollerElRefs.createRef(sectionKey),
                overflowY: overflowY,
                overflowX: !props.liquid
                  ? 'visible'
                  : 'hidden' /* natural height? */,
                maxHeight: sectionConfig.maxHeight,
                liquid: isLiquid,
                liquidIsAbsolute,
              })
            )
          ) // because its within a harness
        }),
          content
      }
      SimpleScrollGrid.prototype._handleScrollerEl = function (
        scrollerEl,
        key
      ) {
        var section = getSectionByKey(this.props.sections, key)
        if (section) {
          setRef(section.chunk.scrollerElRef, scrollerEl)
        }
      }
      SimpleScrollGrid.prototype.componentDidMount = function () {
        this.handleSizing()
        this.context.addResizeHandler(this.handleSizing)
      }
      SimpleScrollGrid.prototype.componentDidUpdate = function () {
        // TODO: need better solution when state contains non-sizing things
        this.handleSizing()
      }
      SimpleScrollGrid.prototype.componentWillUnmount = function () {
        this.context.removeResizeHandler(this.handleSizing)
      }
      SimpleScrollGrid.prototype.computeShrinkWidth = function () {
        return hasShrinkWidth(this.props.cols)
          ? computeShrinkWidth(this.scrollerElRefs.getAll())
          : 0
      }
      SimpleScrollGrid.prototype.computeScrollerDims = function () {
        var scrollbarWidth = getScrollbarWidths()
        var _a = this,
          scrollerRefs = _a.scrollerRefs,
          scrollerElRefs = _a.scrollerElRefs
        var forceYScrollbars = false
        var scrollerClientWidths = {}
        var scrollerClientHeights = {}
        for (var sectionKey in scrollerRefs.currentMap) {
          var scroller = scrollerRefs.currentMap[sectionKey]
          if (scroller && scroller.needsYScrolling()) {
            forceYScrollbars = true
            break
          }
        }
        for (var _i = 0, _b = this.props.sections; _i < _b.length; _i++) {
          var section = _b[_i]
          var sectionKey = section.key
          var scrollerEl = scrollerElRefs.currentMap[sectionKey]
          if (scrollerEl) {
            var harnessEl = scrollerEl.parentNode // TODO: weird way to get this. need harness b/c doesn't include table borders
            scrollerClientWidths[sectionKey] = Math.floor(
              harnessEl.getBoundingClientRect().width -
                (forceYScrollbars
                  ? scrollbarWidth.y // use global because scroller might not have scrollbars yet but will need them in future
                  : 0)
            )
            scrollerClientHeights[sectionKey] = Math.floor(
              harnessEl.getBoundingClientRect().height
            )
          }
        }
        return {
          forceYScrollbars: forceYScrollbars,
          scrollerClientWidths: scrollerClientWidths,
          scrollerClientHeights: scrollerClientHeights,
        }
      }
      return SimpleScrollGrid
    })(BaseComponent)
    SimpleScrollGrid.addStateEquality({
      scrollerClientWidths: isPropsEqual,
      scrollerClientHeights: isPropsEqual,
    })

    function getSectionByKey(sections, key) {
      for (var _i = 0, sections_1 = sections; _i < sections_1.length; _i++) {
        var section = sections_1[_i]
        if (section.key === key) {
          return section
        }
      }
      return null
    }

    var EventRoot = /** @class */ (function (_super) {
      __extends(EventRoot, _super)

      function EventRoot() {
        var _this = (_super !== null && _super.apply(this, arguments)) || this
        _this.elRef = createRef()
        return _this
      }

      EventRoot.prototype.render = function () {
        var _a = this,
          props = _a.props,
          context = _a.context
        var options = context.options
        var seg = props.seg
        var eventRange = seg.eventRange
        var ui = eventRange.ui
        var hookProps = {
          event: new EventApi(context, eventRange.def, eventRange.instance),
          view: context.viewApi,
          timeText: props.timeText,
          textColor: ui.textColor,
          backgroundColor: ui.backgroundColor,
          borderColor: ui.borderColor,
          isDraggable:
            !props.disableDragging && computeSegDraggable(seg, context),
          isStartResizable:
            !props.disableResizing && computeSegStartResizable(seg, context),
          isEndResizable: !props.disableResizing && computeSegEndResizable(seg),
          isMirror: Boolean(
            props.isDragging || props.isResizing || props.isDateSelecting
          ),
          isStart: Boolean(seg.isStart),
          isEnd: Boolean(seg.isEnd),
          isPast: Boolean(props.isPast),
          isFuture: Boolean(props.isFuture),
          isToday: Boolean(props.isToday),
          isSelected: Boolean(props.isSelected),
          isDragging: Boolean(props.isDragging),
          isResizing: Boolean(props.isResizing),
        }
        var standardClassNames = getEventClassNames(hookProps).concat(
          ui.classNames
        )
        return createElement(
          RenderHook,
          {
            hookProps: hookProps,
            classNames: options.eventClassNames,
            content: options.eventContent,
            defaultContent: props.defaultContent,
            didMount: options.eventDidMount,
            willUnmount: options.eventWillUnmount,
            elRef: this.elRef,
          },
          function (rootElRef, customClassNames, innerElRef, innerContent) {
            return props.children(
              rootElRef,
              standardClassNames.concat(customClassNames),
              innerElRef,
              innerContent,
              hookProps
            )
          }
        )
      }
      EventRoot.prototype.componentDidMount = function () {
        setElSeg(this.elRef.current, this.props.seg)
      }
      /*
        need to re-assign seg to the element if seg changes, even if the element is the same
        */
      EventRoot.prototype.componentDidUpdate = function (prevProps) {
        var seg = this.props.seg
        if (seg !== prevProps.seg) {
          setElSeg(this.elRef.current, seg)
        }
      }
      return EventRoot
    })(BaseComponent)

    // should not be a purecomponent
    var StandardEvent = /** @class */ (function (_super) {
      __extends(StandardEvent, _super)

      function StandardEvent() {
        return (_super !== null && _super.apply(this, arguments)) || this
      }

      StandardEvent.prototype.render = function () {
        var _a = this,
          props = _a.props,
          context = _a.context
        var seg = props.seg
        var timeFormat =
          context.options.eventTimeFormat || props.defaultTimeFormat
        var timeText = buildSegTimeText(
          seg,
          timeFormat,
          context,
          props.defaultDisplayEventTime,
          props.defaultDisplayEventEnd
        )
        return createElement(
          EventRoot,
          {
            seg: seg,
            timeText: timeText,
            disableDragging: props.disableDragging,
            disableResizing: props.disableResizing,
            defaultContent: props.defaultContent || renderInnerContent,
            isDragging: props.isDragging,
            isResizing: props.isResizing,
            isDateSelecting: props.isDateSelecting,
            isSelected: props.isSelected,
            isPast: props.isPast,
            isFuture: props.isFuture,
            isToday: props.isToday,
          },
          function (
            rootElRef,
            classNames,
            innerElRef,
            innerContent,
            hookProps
          ) {
            return createElement(
              'a',
              __assign(
                {
                  className: props.extraClassNames.concat(classNames).join(' '),
                  style: {
                    borderColor: hookProps.borderColor,
                    backgroundColor: hookProps.backgroundColor,
                  },
                  ref: rootElRef,
                },
                getSegAnchorAttrs(seg)
              ),
              createElement(
                'div',
                {
                  className: 'fc-event-main',
                  ref: innerElRef,
                  style: { color: hookProps.textColor },
                },
                innerContent
              ),
              hookProps.isStartResizable &&
                createElement('div', {
                  className: 'fc-event-resizer fc-event-resizer-start',
                }),
              hookProps.isEndResizable &&
                createElement('div', {
                  className: 'fc-event-resizer fc-event-resizer-end',
                })
            )
          }
        )
      }
      return StandardEvent
    })(BaseComponent)

    function renderInnerContent(innerProps) {
      return createElement(
        'div',
        { className: 'fc-event-main-frame' },
        innerProps.timeText &&
          createElement(
            'div',
            { className: 'fc-event-time' },
            innerProps.timeText
          ),
        createElement(
          'div',
          { className: 'fc-event-title-container' },
          createElement(
            'div',
            { className: 'fc-event-title fc-sticky' },
            innerProps.event.title || createElement(Fragment, null, '\u00A0')
          )
        )
      )
    }

    function getSegAnchorAttrs(seg) {
      var url = seg.eventRange.def.url
      return url ? { href: url } : {}
    }

    var NowIndicatorRoot = function (props) {
      return createElement(ViewContextType.Consumer, null, function (context) {
        var options = context.options
        var hookProps = {
          isAxis: props.isAxis,
          date: context.dateEnv.toDate(props.date),
          view: context.viewApi,
        }
        return createElement(
          RenderHook,
          {
            hookProps: hookProps,
            classNames: options.nowIndicatorClassNames,
            content: options.nowIndicatorContent,
            didMount: options.nowIndicatorDidMount,
            willUnmount: options.nowIndicatorWillUnmount,
          },
          props.children
        )
      })
    }

    var DAY_NUM_FORMAT = createFormatter({ day: 'numeric' })
    var DayCellContent = /** @class */ (function (_super) {
      __extends(DayCellContent, _super)

      function DayCellContent() {
        return (_super !== null && _super.apply(this, arguments)) || this
      }

      DayCellContent.prototype.render = function () {
        var _a = this,
          props = _a.props,
          context = _a.context
        var options = context.options
        var hookProps = refineDayCellHookProps({
          date: props.date,
          dateProfile: props.dateProfile,
          todayRange: props.todayRange,
          showDayNumber: props.showDayNumber,
          extraProps: props.extraHookProps,
          viewApi: context.viewApi,
          dateEnv: context.dateEnv,
        })
        return createElement(
          ContentHook,
          {
            hookProps: hookProps,
            content: options.dayCellContent,
            defaultContent: props.defaultContent,
          },
          props.children
        )
      }
      return DayCellContent
    })(BaseComponent)

    function refineDayCellHookProps(raw) {
      var date = raw.date,
        dateEnv = raw.dateEnv
      var dayMeta = getDateMeta(date, raw.todayRange, null, raw.dateProfile)
      return __assign(
        __assign(
          __assign(
            {
              date: dateEnv.toDate(date),
              view: raw.viewApi,
            },
            dayMeta
          ),
          {
            dayNumberText: raw.showDayNumber
              ? dateEnv.format(date, DAY_NUM_FORMAT)
              : '',
          }
        ),
        raw.extraProps
      )
    }

    var DayCellRoot = /** @class */ (function (_super) {
      __extends(DayCellRoot, _super)

      function DayCellRoot() {
        var _this = (_super !== null && _super.apply(this, arguments)) || this
        _this.refineHookProps = memoizeObjArg(refineDayCellHookProps)
        _this.normalizeClassNames = buildClassNameNormalizer()
        return _this
      }

      DayCellRoot.prototype.render = function () {
        var _a = this,
          props = _a.props,
          context = _a.context
        var options = context.options
        var hookProps = this.refineHookProps({
          date: props.date,
          dateProfile: props.dateProfile,
          todayRange: props.todayRange,
          showDayNumber: props.showDayNumber,
          extraProps: props.extraHookProps,
          viewApi: context.viewApi,
          dateEnv: context.dateEnv,
        })
        var classNames = getDayClassNames(hookProps, context.theme).concat(
          hookProps.isDisabled
            ? [] // don't use custom classNames if disabled
            : this.normalizeClassNames(options.dayCellClassNames, hookProps)
        )
        var dataAttrs = hookProps.isDisabled
          ? {}
          : {
              'data-date': formatDayString(props.date),
            }
        return createElement(
          MountHook,
          {
            hookProps: hookProps,
            didMount: options.dayCellDidMount,
            willUnmount: options.dayCellWillUnmount,
            elRef: props.elRef,
          },
          function (rootElRef) {
            return props.children(
              rootElRef,
              classNames,
              dataAttrs,
              hookProps.isDisabled
            )
          }
        )
      }
      return DayCellRoot
    })(BaseComponent)

    function renderFill(fillType) {
      return createElement('div', { className: 'fc-' + fillType })
    }

    var BgEvent = function (props) {
      return createElement(
        EventRoot,
        {
          defaultContent: renderInnerContent$1,
          seg: props.seg /* uselesss i think */,
          timeText: '',
          disableDragging: true,
          disableResizing: true,
          isDragging: false,
          isResizing: false,
          isDateSelecting: false,
          isSelected: false,
          isPast: props.isPast,
          isFuture: props.isFuture,
          isToday: props.isToday,
        },
        function (rootElRef, classNames, innerElRef, innerContent, hookProps) {
          return createElement(
            'div',
            {
              ref: rootElRef,
              className: ['fc-bg-event'].concat(classNames).join(' '),
              style: {
                backgroundColor: hookProps.backgroundColor,
              },
            },
            innerContent
          )
        }
      )
    }

    function renderInnerContent$1(props) {
      var title = props.event.title
      return (
        title &&
        createElement('div', { className: 'fc-event-title' }, props.event.title)
      )
    }

    var WeekNumberRoot = function (props) {
      return createElement(ViewContextType.Consumer, null, function (context) {
        var dateEnv = context.dateEnv,
          options = context.options
        var date = props.date
        var format = options.weekNumberFormat || props.defaultFormat
        var num = dateEnv.computeWeekNumber(date) // TODO: somehow use for formatting as well?
        var text = dateEnv.format(date, format)
        var hookProps = { num: num, text: text, date: date }
        return createElement(
          RenderHook,
          {
            hookProps: hookProps,
            classNames: options.weekNumberClassNames,
            content: options.weekNumberContent,
            defaultContent: renderInner$1,
            didMount: options.weekNumberDidMount,
            willUnmount: options.weekNumberWillUnmount,
          },
          props.children
        )
      })
    }

    function renderInner$1(innerProps) {
      return innerProps.text
    }

    // exports
    // --------------------------------------------------------------------------------------------------
    var version = '5.6.0' // important to type it, so .d.ts has generic string

    var Calendar = /** @class */ (function (_super) {
      __extends(Calendar, _super)

      function Calendar(el, optionOverrides) {
        if (optionOverrides === void 0) {
          optionOverrides = {}
        }
        var _this = _super.call(this) || this
        _this.isRendering = false
        _this.isRendered = false
        _this.currentClassNames = []
        _this.customContentRenderId = 0 // will affect custom generated classNames?
        _this.handleAction = function (action) {
          // actions we know we want to render immediately
          switch (action.type) {
            case 'SET_EVENT_DRAG':
            case 'SET_EVENT_RESIZE':
              _this.renderRunner.tryDrain()
          }
        }
        _this.handleData = function (data) {
          _this.currentData = data
          _this.renderRunner.request(data.calendarOptions.rerenderDelay)
        }
        _this.handleRenderRequest = function () {
          if (_this.isRendering) {
            _this.isRendered = true
            var currentData_1 = _this.currentData
            render(
              createElement(
                CalendarRoot,
                {
                  options: currentData_1.calendarOptions,
                  theme: currentData_1.theme,
                  emitter: currentData_1.emitter,
                },
                function (classNames, height, isHeightAuto, forPrint) {
                  _this.setClassNames(classNames)
                  _this.setHeight(height)
                  return createElement(
                    CustomContentRenderContext.Provider,
                    { value: _this.customContentRenderId },
                    createElement(
                      CalendarContent,
                      __assign(
                        {
                          isHeightAuto: isHeightAuto,
                          forPrint: forPrint,
                        },
                        currentData_1
                      )
                    )
                  )
                }
              ),
              _this.el
            )
          } else if (_this.isRendered) {
            _this.isRendered = false
            unmountComponentAtNode$1(_this.el)
            _this.setClassNames([])
            _this.setHeight('')
          }
          flushToDom$1()
        }
        _this.el = el
        _this.renderRunner = new DelayedRunner(_this.handleRenderRequest)
        new CalendarDataManager({
          optionOverrides: optionOverrides,
          calendarApi: _this,
          onAction: _this.handleAction,
          onData: _this.handleData,
        })
        return _this
      }

      Object.defineProperty(Calendar.prototype, 'view', {
        get: function () {
          return this.currentData.viewApi
        }, // for public API
        enumerable: false,
        configurable: true,
      })
      Calendar.prototype.render = function () {
        var wasRendering = this.isRendering
        if (!wasRendering) {
          this.isRendering = true
        } else {
          this.customContentRenderId += 1
        }
        this.renderRunner.request()
        if (wasRendering) {
          this.updateSize()
        }
      }
      Calendar.prototype.destroy = function () {
        if (this.isRendering) {
          this.isRendering = false
          this.renderRunner.request()
        }
      }
      Calendar.prototype.updateSize = function () {
        _super.prototype.updateSize.call(this)
        flushToDom$1()
      }
      Calendar.prototype.batchRendering = function (func) {
        this.renderRunner.pause('batchRendering')
        func()
        this.renderRunner.resume('batchRendering')
      }
      Calendar.prototype.pauseRendering = function () {
        this.renderRunner.pause('pauseRendering')
      }
      Calendar.prototype.resumeRendering = function () {
        this.renderRunner.resume('pauseRendering', true)
      }
      Calendar.prototype.resetOptions = function (optionOverrides, append) {
        this.currentDataManager.resetOptions(optionOverrides, append)
      }
      Calendar.prototype.setClassNames = function (classNames) {
        if (!isArraysEqual(classNames, this.currentClassNames)) {
          var classList = this.el.classList
          for (var _i = 0, _a = this.currentClassNames; _i < _a.length; _i++) {
            var className = _a[_i]
            classList.remove(className)
          }
          for (
            var _b = 0, classNames_1 = classNames;
            _b < classNames_1.length;
            _b++
          ) {
            var className = classNames_1[_b]
            classList.add(className)
          }
          this.currentClassNames = classNames
        }
      }
      Calendar.prototype.setHeight = function (height) {
        applyStyleProp(this.el, 'height', height)
      }
      return Calendar
    })(CalendarApi)

    config.touchMouseIgnoreWait = 500
    var ignoreMouseDepth = 0
    var listenerCnt = 0
    var isWindowTouchMoveCancelled = false
    /*
    Uses a "pointer" abstraction, which monitors UI events for both mouse and touch.
    Tracks when the pointer "drags" on a certain element, meaning down+move+up.

    Also, tracks if there was touch-scrolling.
    Also, can prevent touch-scrolling from happening.
    Also, can fire pointermove events when scrolling happens underneath, even when no real pointer movement.

    emits:
    - pointerdown
    - pointermove
    - pointerup
    */
    var PointerDragging = /** @class */ (function () {
      function PointerDragging(containerEl) {
        var _this = this
        this.subjectEl = null
        // options that can be directly assigned by caller
        this.selector = '' // will cause subjectEl in all emitted events to be this element
        this.handleSelector = ''
        this.shouldIgnoreMove = false
        this.shouldWatchScroll = true // for simulating pointermove on scroll
        // internal states
        this.isDragging = false
        this.isTouchDragging = false
        this.wasTouchScroll = false
        // Mouse
        // ----------------------------------------------------------------------------------------------------
        this.handleMouseDown = function (ev) {
          if (
            !_this.shouldIgnoreMouse() &&
            isPrimaryMouseButton(ev) &&
            _this.tryStart(ev)
          ) {
            var pev = _this.createEventFromMouse(ev, true)
            _this.emitter.trigger('pointerdown', pev)
            _this.initScrollWatch(pev)
            if (!_this.shouldIgnoreMove) {
              document.addEventListener('mousemove', _this.handleMouseMove)
            }
            document.addEventListener('mouseup', _this.handleMouseUp)
          }
        }
        this.handleMouseMove = function (ev) {
          var pev = _this.createEventFromMouse(ev)
          _this.recordCoords(pev)
          _this.emitter.trigger('pointermove', pev)
        }
        this.handleMouseUp = function (ev) {
          document.removeEventListener('mousemove', _this.handleMouseMove)
          document.removeEventListener('mouseup', _this.handleMouseUp)
          _this.emitter.trigger('pointerup', _this.createEventFromMouse(ev))
          _this.cleanup() // call last so that pointerup has access to props
        }
        // Touch
        // ----------------------------------------------------------------------------------------------------
        this.handleTouchStart = function (ev) {
          if (_this.tryStart(ev)) {
            _this.isTouchDragging = true
            var pev = _this.createEventFromTouch(ev, true)
            _this.emitter.trigger('pointerdown', pev)
            _this.initScrollWatch(pev)
            // unlike mouse, need to attach to target, not document
            // https://stackoverflow.com/a/45760014
            var targetEl = ev.target
            if (!_this.shouldIgnoreMove) {
              targetEl.addEventListener('touchmove', _this.handleTouchMove)
            }
            targetEl.addEventListener('touchend', _this.handleTouchEnd)
            targetEl.addEventListener('touchcancel', _this.handleTouchEnd) // treat it as a touch end
            // attach a handler to get called when ANY scroll action happens on the page.
            // this was impossible to do with normal on/off because 'scroll' doesn't bubble.
            // http://stackoverflow.com/a/32954565/96342
            window.addEventListener('scroll', _this.handleTouchScroll, true)
          }
        }
        this.handleTouchMove = function (ev) {
          var pev = _this.createEventFromTouch(ev)
          _this.recordCoords(pev)
          _this.emitter.trigger('pointermove', pev)
        }
        this.handleTouchEnd = function (ev) {
          if (_this.isDragging) {
            // done to guard against touchend followed by touchcancel
            var targetEl = ev.target
            targetEl.removeEventListener('touchmove', _this.handleTouchMove)
            targetEl.removeEventListener('touchend', _this.handleTouchEnd)
            targetEl.removeEventListener('touchcancel', _this.handleTouchEnd)
            window.removeEventListener('scroll', _this.handleTouchScroll, true) // useCaptured=true
            _this.emitter.trigger('pointerup', _this.createEventFromTouch(ev))
            _this.cleanup() // call last so that pointerup has access to props
            _this.isTouchDragging = false
            startIgnoringMouse()
          }
        }
        this.handleTouchScroll = function () {
          _this.wasTouchScroll = true
        }
        this.handleScroll = function (ev) {
          if (!_this.shouldIgnoreMove) {
            var pageX = window.pageXOffset - _this.prevScrollX + _this.prevPageX
            var pageY = window.pageYOffset - _this.prevScrollY + _this.prevPageY
            _this.emitter.trigger('pointermove', {
              origEvent: ev,
              isTouch: _this.isTouchDragging,
              subjectEl: _this.subjectEl,
              pageX: pageX,
              pageY: pageY,
              deltaX: pageX - _this.origPageX,
              deltaY: pageY - _this.origPageY,
            })
          }
        }
        this.containerEl = containerEl
        this.emitter = new Emitter()
        containerEl.addEventListener('mousedown', this.handleMouseDown)
        containerEl.addEventListener('touchstart', this.handleTouchStart, {
          passive: true,
        })
        listenerCreated()
      }

      PointerDragging.prototype.destroy = function () {
        this.containerEl.removeEventListener('mousedown', this.handleMouseDown)
        this.containerEl.removeEventListener(
          'touchstart',
          this.handleTouchStart,
          { passive: true }
        )
        listenerDestroyed()
      }
      PointerDragging.prototype.tryStart = function (ev) {
        var subjectEl = this.querySubjectEl(ev)
        var downEl = ev.target
        if (
          subjectEl &&
          (!this.handleSelector || elementClosest(downEl, this.handleSelector))
        ) {
          this.subjectEl = subjectEl
          this.isDragging = true // do this first so cancelTouchScroll will work
          this.wasTouchScroll = false
          return true
        }
        return false
      }
      PointerDragging.prototype.cleanup = function () {
        isWindowTouchMoveCancelled = false
        this.isDragging = false
        this.subjectEl = null
        // keep wasTouchScroll around for later access
        this.destroyScrollWatch()
      }
      PointerDragging.prototype.querySubjectEl = function (ev) {
        if (this.selector) {
          return elementClosest(ev.target, this.selector)
        }
        return this.containerEl
      }
      PointerDragging.prototype.shouldIgnoreMouse = function () {
        return ignoreMouseDepth || this.isTouchDragging
      }
      // can be called by user of this class, to cancel touch-based scrolling for the current drag
      PointerDragging.prototype.cancelTouchScroll = function () {
        if (this.isDragging) {
          isWindowTouchMoveCancelled = true
        }
      }
      // Scrolling that simulates pointermoves
      // ----------------------------------------------------------------------------------------------------
      PointerDragging.prototype.initScrollWatch = function (ev) {
        if (this.shouldWatchScroll) {
          this.recordCoords(ev)
          window.addEventListener('scroll', this.handleScroll, true) // useCapture=true
        }
      }
      PointerDragging.prototype.recordCoords = function (ev) {
        if (this.shouldWatchScroll) {
          this.prevPageX = ev.pageX
          this.prevPageY = ev.pageY
          this.prevScrollX = window.pageXOffset
          this.prevScrollY = window.pageYOffset
        }
      }
      PointerDragging.prototype.destroyScrollWatch = function () {
        if (this.shouldWatchScroll) {
          window.removeEventListener('scroll', this.handleScroll, true) // useCaptured=true
        }
      }
      // Event Normalization
      // ----------------------------------------------------------------------------------------------------
      PointerDragging.prototype.createEventFromMouse = function (ev, isFirst) {
        var deltaX = 0
        var deltaY = 0
        // TODO: repeat code
        if (isFirst) {
          this.origPageX = ev.pageX
          this.origPageY = ev.pageY
        } else {
          deltaX = ev.pageX - this.origPageX
          deltaY = ev.pageY - this.origPageY
        }
        return {
          origEvent: ev,
          isTouch: false,
          subjectEl: this.subjectEl,
          pageX: ev.pageX,
          pageY: ev.pageY,
          deltaX: deltaX,
          deltaY: deltaY,
        }
      }
      PointerDragging.prototype.createEventFromTouch = function (ev, isFirst) {
        var touches = ev.touches
        var pageX
        var pageY
        var deltaX = 0
        var deltaY = 0
        // if touch coords available, prefer,
        // because FF would give bad ev.pageX ev.pageY
        if (touches && touches.length) {
          pageX = touches[0].pageX
          pageY = touches[0].pageY
        } else {
          pageX = ev.pageX
          pageY = ev.pageY
        }
        // TODO: repeat code
        if (isFirst) {
          this.origPageX = pageX
          this.origPageY = pageY
        } else {
          deltaX = pageX - this.origPageX
          deltaY = pageY - this.origPageY
        }
        return {
          origEvent: ev,
          isTouch: true,
          subjectEl: this.subjectEl,
          pageX: pageX,
          pageY: pageY,
          deltaX: deltaX,
          deltaY: deltaY,
        }
      }
      return PointerDragging
    })()

    // Returns a boolean whether this was a left mouse click and no ctrl key (which means right click on Mac)
    function isPrimaryMouseButton(ev) {
      return ev.button === 0 && !ev.ctrlKey
    }

    // Ignoring fake mouse events generated by touch
    // ----------------------------------------------------------------------------------------------------
    function startIgnoringMouse() {
      ignoreMouseDepth += 1
      setTimeout(function () {
        ignoreMouseDepth -= 1
      }, config.touchMouseIgnoreWait)
    }

    // We want to attach touchmove as early as possible for Safari
    // ----------------------------------------------------------------------------------------------------
    function listenerCreated() {
      listenerCnt += 1
      if (listenerCnt === 1) {
        window.addEventListener('touchmove', onWindowTouchMove, {
          passive: false,
        })
      }
    }

    function listenerDestroyed() {
      listenerCnt -= 1
      if (!listenerCnt) {
        window.removeEventListener('touchmove', onWindowTouchMove, {
          passive: false,
        })
      }
    }

    function onWindowTouchMove(ev) {
      if (isWindowTouchMoveCancelled) {
        ev.preventDefault()
      }
    }

    /*
    An effect in which an element follows the movement of a pointer across the screen.
    The moving element is a clone of some other element.
    Must call start + handleMove + stop.
    */
    var ElementMirror = /** @class */ (function () {
      function ElementMirror() {
        this.isVisible = false // must be explicitly enabled
        this.sourceEl = null
        this.mirrorEl = null
        this.sourceElRect = null // screen coords relative to viewport
        // options that can be set directly by caller
        this.parentNode = document.body
        this.zIndex = 9999
        this.revertDuration = 0
      }

      ElementMirror.prototype.start = function (sourceEl, pageX, pageY) {
        this.sourceEl = sourceEl
        this.sourceElRect = this.sourceEl.getBoundingClientRect()
        this.origScreenX = pageX - window.pageXOffset
        this.origScreenY = pageY - window.pageYOffset
        this.deltaX = 0
        this.deltaY = 0
        this.updateElPosition()
      }
      ElementMirror.prototype.handleMove = function (pageX, pageY) {
        this.deltaX = pageX - window.pageXOffset - this.origScreenX
        this.deltaY = pageY - window.pageYOffset - this.origScreenY
        this.updateElPosition()
      }
      // can be called before start
      ElementMirror.prototype.setIsVisible = function (bool) {
        if (bool) {
          if (!this.isVisible) {
            if (this.mirrorEl) {
              this.mirrorEl.style.display = ''
            }
            this.isVisible = bool // needs to happen before updateElPosition
            this.updateElPosition() // because was not updating the position while invisible
          }
        } else if (this.isVisible) {
          if (this.mirrorEl) {
            this.mirrorEl.style.display = 'none'
          }
          this.isVisible = bool
        }
      }
      // always async
      ElementMirror.prototype.stop = function (needsRevertAnimation, callback) {
        var _this = this
        var done = function () {
          _this.cleanup()
          callback()
        }
        if (
          needsRevertAnimation &&
          this.mirrorEl &&
          this.isVisible &&
          this.revertDuration && // if 0, transition won't work
          (this.deltaX || this.deltaY) // if same coords, transition won't work
        ) {
          this.doRevertAnimation(done, this.revertDuration)
        } else {
          setTimeout(done, 0)
        }
      }
      ElementMirror.prototype.doRevertAnimation = function (
        callback,
        revertDuration
      ) {
        var mirrorEl = this.mirrorEl
        var finalSourceElRect = this.sourceEl.getBoundingClientRect() // because autoscrolling might have happened
        mirrorEl.style.transition =
          'top ' + revertDuration + 'ms,' + 'left ' + revertDuration + 'ms'
        applyStyle(mirrorEl, {
          left: finalSourceElRect.left,
          top: finalSourceElRect.top,
        })
        whenTransitionDone(mirrorEl, function () {
          mirrorEl.style.transition = ''
          callback()
        })
      }
      ElementMirror.prototype.cleanup = function () {
        if (this.mirrorEl) {
          removeElement(this.mirrorEl)
          this.mirrorEl = null
        }
        this.sourceEl = null
      }
      ElementMirror.prototype.updateElPosition = function () {
        if (this.sourceEl && this.isVisible) {
          applyStyle(this.getMirrorEl(), {
            left: this.sourceElRect.left + this.deltaX,
            top: this.sourceElRect.top + this.deltaY,
          })
        }
      }
      ElementMirror.prototype.getMirrorEl = function () {
        var sourceElRect = this.sourceElRect
        var mirrorEl = this.mirrorEl
        if (!mirrorEl) {
          mirrorEl = this.mirrorEl = this.sourceEl.cloneNode(true) // cloneChildren=true
          // we don't want long taps or any mouse interaction causing selection/menus.
          // would use preventSelection(), but that prevents selectstart, causing problems.
          mirrorEl.classList.add('fc-unselectable')
          mirrorEl.classList.add('fc-event-dragging')
          applyStyle(mirrorEl, {
            position: 'fixed',
            zIndex: this.zIndex,
            visibility: '',
            boxSizing: 'border-box',
            width: sourceElRect.right - sourceElRect.left,
            height: sourceElRect.bottom - sourceElRect.top,
            right: 'auto',
            bottom: 'auto',
            margin: 0,
          })
          this.parentNode.appendChild(mirrorEl)
        }
        return mirrorEl
      }
      return ElementMirror
    })()

    /*
    Is a cache for a given element's scroll information (all the info that ScrollController stores)
    in addition the "client rectangle" of the element.. the area within the scrollbars.

    The cache can be in one of two modes:
    - doesListening:false - ignores when the container is scrolled by someone else
    - doesListening:true - watch for scrolling and update the cache
    */
    var ScrollGeomCache = /** @class */ (function (_super) {
      __extends(ScrollGeomCache, _super)

      function ScrollGeomCache(scrollController, doesListening) {
        var _this = _super.call(this) || this
        _this.handleScroll = function () {
          _this.scrollTop = _this.scrollController.getScrollTop()
          _this.scrollLeft = _this.scrollController.getScrollLeft()
          _this.handleScrollChange()
        }
        _this.scrollController = scrollController
        _this.doesListening = doesListening
        _this.scrollTop = _this.origScrollTop = scrollController.getScrollTop()
        _this.scrollLeft = _this.origScrollLeft =
          scrollController.getScrollLeft()
        _this.scrollWidth = scrollController.getScrollWidth()
        _this.scrollHeight = scrollController.getScrollHeight()
        _this.clientWidth = scrollController.getClientWidth()
        _this.clientHeight = scrollController.getClientHeight()
        _this.clientRect = _this.computeClientRect() // do last in case it needs cached values
        if (_this.doesListening) {
          _this.getEventTarget().addEventListener('scroll', _this.handleScroll)
        }
        return _this
      }

      ScrollGeomCache.prototype.destroy = function () {
        if (this.doesListening) {
          this.getEventTarget().removeEventListener('scroll', this.handleScroll)
        }
      }
      ScrollGeomCache.prototype.getScrollTop = function () {
        return this.scrollTop
      }
      ScrollGeomCache.prototype.getScrollLeft = function () {
        return this.scrollLeft
      }
      ScrollGeomCache.prototype.setScrollTop = function (top) {
        this.scrollController.setScrollTop(top)
        if (!this.doesListening) {
          // we are not relying on the element to normalize out-of-bounds scroll values
          // so we need to sanitize ourselves
          this.scrollTop = Math.max(Math.min(top, this.getMaxScrollTop()), 0)
          this.handleScrollChange()
        }
      }
      ScrollGeomCache.prototype.setScrollLeft = function (top) {
        this.scrollController.setScrollLeft(top)
        if (!this.doesListening) {
          // we are not relying on the element to normalize out-of-bounds scroll values
          // so we need to sanitize ourselves
          this.scrollLeft = Math.max(Math.min(top, this.getMaxScrollLeft()), 0)
          this.handleScrollChange()
        }
      }
      ScrollGeomCache.prototype.getClientWidth = function () {
        return this.clientWidth
      }
      ScrollGeomCache.prototype.getClientHeight = function () {
        return this.clientHeight
      }
      ScrollGeomCache.prototype.getScrollWidth = function () {
        return this.scrollWidth
      }
      ScrollGeomCache.prototype.getScrollHeight = function () {
        return this.scrollHeight
      }
      ScrollGeomCache.prototype.handleScrollChange = function () {}
      return ScrollGeomCache
    })(ScrollController)

    var ElementScrollGeomCache = /** @class */ (function (_super) {
      __extends(ElementScrollGeomCache, _super)

      function ElementScrollGeomCache(el, doesListening) {
        return (
          _super.call(this, new ElementScrollController(el), doesListening) ||
          this
        )
      }

      ElementScrollGeomCache.prototype.getEventTarget = function () {
        return this.scrollController.el
      }
      ElementScrollGeomCache.prototype.computeClientRect = function () {
        return computeInnerRect(this.scrollController.el)
      }
      return ElementScrollGeomCache
    })(ScrollGeomCache)

    var WindowScrollGeomCache = /** @class */ (function (_super) {
      __extends(WindowScrollGeomCache, _super)

      function WindowScrollGeomCache(doesListening) {
        return (
          _super.call(this, new WindowScrollController(), doesListening) || this
        )
      }

      WindowScrollGeomCache.prototype.getEventTarget = function () {
        return window
      }
      WindowScrollGeomCache.prototype.computeClientRect = function () {
        return {
          left: this.scrollLeft,
          right: this.scrollLeft + this.clientWidth,
          top: this.scrollTop,
          bottom: this.scrollTop + this.clientHeight,
        }
      }
      // the window is the only scroll object that changes it's rectangle relative
      // to the document's topleft as it scrolls
      WindowScrollGeomCache.prototype.handleScrollChange = function () {
        this.clientRect = this.computeClientRect()
      }
      return WindowScrollGeomCache
    })(ScrollGeomCache)

    // If available we are using native "performance" API instead of "Date"
    // Read more about it on MDN:
    // https://developer.mozilla.org/en-US/docs/Web/API/Performance
    var getTime = typeof performance === 'function' ? performance.now : Date.now
    /*
    For a pointer interaction, automatically scrolls certain scroll containers when the pointer
    approaches the edge.

    The caller must call start + handleMove + stop.
    */
    var AutoScroller = /** @class */ (function () {
      function AutoScroller() {
        var _this = this
        // options that can be set by caller
        this.isEnabled = true
        this.scrollQuery = [window, '.fc-scroller']
        this.edgeThreshold = 50 // pixels
        this.maxVelocity = 300 // pixels per second
        // internal state
        this.pointerScreenX = null
        this.pointerScreenY = null
        this.isAnimating = false
        this.scrollCaches = null
        // protect against the initial pointerdown being too close to an edge and starting the scroll
        this.everMovedUp = false
        this.everMovedDown = false
        this.everMovedLeft = false
        this.everMovedRight = false
        this.animate = function () {
          if (_this.isAnimating) {
            // wasn't cancelled between animation calls
            var edge = _this.computeBestEdge(
              _this.pointerScreenX + window.pageXOffset,
              _this.pointerScreenY + window.pageYOffset
            )
            if (edge) {
              var now = getTime()
              _this.handleSide(edge, (now - _this.msSinceRequest) / 1000)
              _this.requestAnimation(now)
            } else {
              _this.isAnimating = false // will stop animation
            }
          }
        }
      }

      AutoScroller.prototype.start = function (pageX, pageY) {
        if (this.isEnabled) {
          this.scrollCaches = this.buildCaches()
          this.pointerScreenX = null
          this.pointerScreenY = null
          this.everMovedUp = false
          this.everMovedDown = false
          this.everMovedLeft = false
          this.everMovedRight = false
          this.handleMove(pageX, pageY)
        }
      }
      AutoScroller.prototype.handleMove = function (pageX, pageY) {
        if (this.isEnabled) {
          var pointerScreenX = pageX - window.pageXOffset
          var pointerScreenY = pageY - window.pageYOffset
          var yDelta =
            this.pointerScreenY === null
              ? 0
              : pointerScreenY - this.pointerScreenY
          var xDelta =
            this.pointerScreenX === null
              ? 0
              : pointerScreenX - this.pointerScreenX
          if (yDelta < 0) {
            this.everMovedUp = true
          } else if (yDelta > 0) {
            this.everMovedDown = true
          }
          if (xDelta < 0) {
            this.everMovedLeft = true
          } else if (xDelta > 0) {
            this.everMovedRight = true
          }
          this.pointerScreenX = pointerScreenX
          this.pointerScreenY = pointerScreenY
          if (!this.isAnimating) {
            this.isAnimating = true
            this.requestAnimation(getTime())
          }
        }
      }
      AutoScroller.prototype.stop = function () {
        if (this.isEnabled) {
          this.isAnimating = false // will stop animation
          for (var _i = 0, _a = this.scrollCaches; _i < _a.length; _i++) {
            var scrollCache = _a[_i]
            scrollCache.destroy()
          }
          this.scrollCaches = null
        }
      }
      AutoScroller.prototype.requestAnimation = function (now) {
        this.msSinceRequest = now
        requestAnimationFrame(this.animate)
      }
      AutoScroller.prototype.handleSide = function (edge, seconds) {
        var scrollCache = edge.scrollCache
        var edgeThreshold = this.edgeThreshold
        var invDistance = edgeThreshold - edge.distance
        var velocity = // the closer to the edge, the faster we scroll
          ((invDistance * invDistance) / (edgeThreshold * edgeThreshold)) * // quadratic
          this.maxVelocity *
          seconds
        var sign = 1
        switch (edge.name) {
          case 'left':
            sign = -1
          // falls through
          case 'right':
            scrollCache.setScrollLeft(
              scrollCache.getScrollLeft() + velocity * sign
            )
            break
          case 'top':
            sign = -1
          // falls through
          case 'bottom':
            scrollCache.setScrollTop(
              scrollCache.getScrollTop() + velocity * sign
            )
            break
        }
      }
      // left/top are relative to document topleft
      AutoScroller.prototype.computeBestEdge = function (left, top) {
        var edgeThreshold = this.edgeThreshold
        var bestSide = null
        for (var _i = 0, _a = this.scrollCaches; _i < _a.length; _i++) {
          var scrollCache = _a[_i]
          var rect = scrollCache.clientRect
          var leftDist = left - rect.left
          var rightDist = rect.right - left
          var topDist = top - rect.top
          var bottomDist = rect.bottom - top
          // completely within the rect?
          if (
            leftDist >= 0 &&
            rightDist >= 0 &&
            topDist >= 0 &&
            bottomDist >= 0
          ) {
            if (
              topDist <= edgeThreshold &&
              this.everMovedUp &&
              scrollCache.canScrollUp() &&
              (!bestSide || bestSide.distance > topDist)
            ) {
              bestSide = {
                scrollCache: scrollCache,
                name: 'top',
                distance: topDist,
              }
            }
            if (
              bottomDist <= edgeThreshold &&
              this.everMovedDown &&
              scrollCache.canScrollDown() &&
              (!bestSide || bestSide.distance > bottomDist)
            ) {
              bestSide = {
                scrollCache: scrollCache,
                name: 'bottom',
                distance: bottomDist,
              }
            }
            if (
              leftDist <= edgeThreshold &&
              this.everMovedLeft &&
              scrollCache.canScrollLeft() &&
              (!bestSide || bestSide.distance > leftDist)
            ) {
              bestSide = {
                scrollCache: scrollCache,
                name: 'left',
                distance: leftDist,
              }
            }
            if (
              rightDist <= edgeThreshold &&
              this.everMovedRight &&
              scrollCache.canScrollRight() &&
              (!bestSide || bestSide.distance > rightDist)
            ) {
              bestSide = {
                scrollCache: scrollCache,
                name: 'right',
                distance: rightDist,
              }
            }
          }
        }
        return bestSide
      }
      AutoScroller.prototype.buildCaches = function () {
        return this.queryScrollEls().map(function (el) {
          if (el === window) {
            return new WindowScrollGeomCache(false) // false = don't listen to user-generated scrolls
          }
          return new ElementScrollGeomCache(el, false) // false = don't listen to user-generated scrolls
        })
      }
      AutoScroller.prototype.queryScrollEls = function () {
        var els = []
        for (var _i = 0, _a = this.scrollQuery; _i < _a.length; _i++) {
          var query = _a[_i]
          if (typeof query === 'object') {
            els.push(query)
          } else {
            els.push.apply(
              els,
              Array.prototype.slice.call(document.querySelectorAll(query))
            )
          }
        }
        return els
      }
      return AutoScroller
    })()

    /*
    Monitors dragging on an element. Has a number of high-level features:
    - minimum distance required before dragging
    - minimum wait time ("delay") before dragging
    - a mirror element that follows the pointer
    */
    var FeaturefulElementDragging = /** @class */ (function (_super) {
      __extends(FeaturefulElementDragging, _super)

      function FeaturefulElementDragging(containerEl, selector) {
        var _this = _super.call(this, containerEl) || this
        // options that can be directly set by caller
        // the caller can also set the PointerDragging's options as well
        _this.delay = null
        _this.minDistance = 0
        _this.touchScrollAllowed = true // prevents drag from starting and blocks scrolling during drag
        _this.mirrorNeedsRevert = false
        _this.isInteracting = false // is the user validly moving the pointer? lasts until pointerup
        _this.isDragging = false // is it INTENTFULLY dragging? lasts until after revert animation
        _this.isDelayEnded = false
        _this.isDistanceSurpassed = false
        _this.delayTimeoutId = null
        _this.onPointerDown = function (ev) {
          if (!_this.isDragging) {
            // so new drag doesn't happen while revert animation is going
            _this.isInteracting = true
            _this.isDelayEnded = false
            _this.isDistanceSurpassed = false
            preventSelection(document.body)
            preventContextMenu(document.body)
            // prevent links from being visited if there's an eventual drag.
            // also prevents selection in older browsers (maybe?).
            // not necessary for touch, besides, browser would complain about passiveness.
            if (!ev.isTouch) {
              ev.origEvent.preventDefault()
            }
            _this.emitter.trigger('pointerdown', ev)
            if (
              _this.isInteracting && // not destroyed via pointerdown handler
              !_this.pointer.shouldIgnoreMove
            ) {
              // actions related to initiating dragstart+dragmove+dragend...
              _this.mirror.setIsVisible(false) // reset. caller must set-visible
              _this.mirror.start(ev.subjectEl, ev.pageX, ev.pageY) // must happen on first pointer down
              _this.startDelay(ev)
              if (!_this.minDistance) {
                _this.handleDistanceSurpassed(ev)
              }
            }
          }
        }
        _this.onPointerMove = function (ev) {
          if (_this.isInteracting) {
            _this.emitter.trigger('pointermove', ev)
            if (!_this.isDistanceSurpassed) {
              var minDistance = _this.minDistance
              var distanceSq = void 0 // current distance from the origin, squared
              var deltaX = ev.deltaX,
                deltaY = ev.deltaY
              distanceSq = deltaX * deltaX + deltaY * deltaY
              if (distanceSq >= minDistance * minDistance) {
                // use pythagorean theorem
                _this.handleDistanceSurpassed(ev)
              }
            }
            if (_this.isDragging) {
              // a real pointer move? (not one simulated by scrolling)
              if (ev.origEvent.type !== 'scroll') {
                _this.mirror.handleMove(ev.pageX, ev.pageY)
                _this.autoScroller.handleMove(ev.pageX, ev.pageY)
              }
              _this.emitter.trigger('dragmove', ev)
            }
          }
        }
        _this.onPointerUp = function (ev) {
          if (_this.isInteracting) {
            _this.isInteracting = false
            allowSelection(document.body)
            allowContextMenu(document.body)
            _this.emitter.trigger('pointerup', ev) // can potentially set mirrorNeedsRevert
            if (_this.isDragging) {
              _this.autoScroller.stop()
              _this.tryStopDrag(ev) // which will stop the mirror
            }
            if (_this.delayTimeoutId) {
              clearTimeout(_this.delayTimeoutId)
              _this.delayTimeoutId = null
            }
          }
        }
        var pointer = (_this.pointer = new PointerDragging(containerEl))
        pointer.emitter.on('pointerdown', _this.onPointerDown)
        pointer.emitter.on('pointermove', _this.onPointerMove)
        pointer.emitter.on('pointerup', _this.onPointerUp)
        if (selector) {
          pointer.selector = selector
        }
        _this.mirror = new ElementMirror()
        _this.autoScroller = new AutoScroller()
        return _this
      }

      FeaturefulElementDragging.prototype.destroy = function () {
        this.pointer.destroy()
        // HACK: simulate a pointer-up to end the current drag
        // TODO: fire 'dragend' directly and stop interaction. discourage use of pointerup event (b/c might not fire)
        this.onPointerUp({})
      }
      FeaturefulElementDragging.prototype.startDelay = function (ev) {
        var _this = this
        if (typeof this.delay === 'number') {
          this.delayTimeoutId = setTimeout(function () {
            _this.delayTimeoutId = null
            _this.handleDelayEnd(ev)
          }, this.delay) // not assignable to number!
        } else {
          this.handleDelayEnd(ev)
        }
      }
      FeaturefulElementDragging.prototype.handleDelayEnd = function (ev) {
        this.isDelayEnded = true
        this.tryStartDrag(ev)
      }
      FeaturefulElementDragging.prototype.handleDistanceSurpassed = function (
        ev
      ) {
        this.isDistanceSurpassed = true
        this.tryStartDrag(ev)
      }
      FeaturefulElementDragging.prototype.tryStartDrag = function (ev) {
        if (this.isDelayEnded && this.isDistanceSurpassed) {
          if (!this.pointer.wasTouchScroll || this.touchScrollAllowed) {
            this.isDragging = true
            this.mirrorNeedsRevert = false
            this.autoScroller.start(ev.pageX, ev.pageY)
            this.emitter.trigger('dragstart', ev)
            if (this.touchScrollAllowed === false) {
              this.pointer.cancelTouchScroll()
            }
          }
        }
      }
      FeaturefulElementDragging.prototype.tryStopDrag = function (ev) {
        // .stop() is ALWAYS asynchronous, which we NEED because we want all pointerup events
        // that come from the document to fire beforehand. much more convenient this way.
        this.mirror.stop(this.mirrorNeedsRevert, this.stopDrag.bind(this, ev))
      }
      FeaturefulElementDragging.prototype.stopDrag = function (ev) {
        this.isDragging = false
        this.emitter.trigger('dragend', ev)
      }
      // fill in the implementations...
      FeaturefulElementDragging.prototype.setIgnoreMove = function (bool) {
        this.pointer.shouldIgnoreMove = bool
      }
      FeaturefulElementDragging.prototype.setMirrorIsVisible = function (bool) {
        this.mirror.setIsVisible(bool)
      }
      FeaturefulElementDragging.prototype.setMirrorNeedsRevert = function (
        bool
      ) {
        this.mirrorNeedsRevert = bool
      }
      FeaturefulElementDragging.prototype.setAutoScrollEnabled = function (
        bool
      ) {
        this.autoScroller.isEnabled = bool
      }
      return FeaturefulElementDragging
    })(ElementDragging)

    /*
    When this class is instantiated, it records the offset of an element (relative to the document topleft),
    and continues to monitor scrolling, updating the cached coordinates if it needs to.
    Does not access the DOM after instantiation, so highly performant.

    Also keeps track of all scrolling/overflow:hidden containers that are parents of the given element
    and an determine if a given point is inside the combined clipping rectangle.
    */
    var OffsetTracker = /** @class */ (function () {
      function OffsetTracker(el) {
        this.origRect = computeRect(el)
        // will work fine for divs that have overflow:hidden
        this.scrollCaches = getClippingParents(el).map(function (scrollEl) {
          return new ElementScrollGeomCache(scrollEl, true)
        })
      }

      OffsetTracker.prototype.destroy = function () {
        for (var _i = 0, _a = this.scrollCaches; _i < _a.length; _i++) {
          var scrollCache = _a[_i]
          scrollCache.destroy()
        }
      }
      OffsetTracker.prototype.computeLeft = function () {
        var left = this.origRect.left
        for (var _i = 0, _a = this.scrollCaches; _i < _a.length; _i++) {
          var scrollCache = _a[_i]
          left += scrollCache.origScrollLeft - scrollCache.getScrollLeft()
        }
        return left
      }
      OffsetTracker.prototype.computeTop = function () {
        var top = this.origRect.top
        for (var _i = 0, _a = this.scrollCaches; _i < _a.length; _i++) {
          var scrollCache = _a[_i]
          top += scrollCache.origScrollTop - scrollCache.getScrollTop()
        }
        return top
      }
      OffsetTracker.prototype.isWithinClipping = function (pageX, pageY) {
        var point = { left: pageX, top: pageY }
        for (var _i = 0, _a = this.scrollCaches; _i < _a.length; _i++) {
          var scrollCache = _a[_i]
          if (
            !isIgnoredClipping(scrollCache.getEventTarget()) &&
            !pointInsideRect(point, scrollCache.clientRect)
          ) {
            return false
          }
        }
        return true
      }
      return OffsetTracker
    })()
    // certain clipping containers should never constrain interactions, like <html> and <body>
    // https://github.com/fullcalendar/fullcalendar/issues/3615
    function isIgnoredClipping(node) {
      var tagName = node.tagName
      return tagName === 'HTML' || tagName === 'BODY'
    }

    /*
    Tracks movement over multiple droppable areas (aka "hits")
    that exist in one or more DateComponents.
    Relies on an existing draggable.

    emits:
    - pointerdown
    - dragstart
    - hitchange - fires initially, even if not over a hit
    - pointerup
    - (hitchange - again, to null, if ended over a hit)
    - dragend
    */
    var HitDragging = /** @class */ (function () {
      function HitDragging(dragging, droppableStore) {
        var _this = this
        // options that can be set by caller
        this.useSubjectCenter = false
        this.requireInitial = true // if doesn't start out on a hit, won't emit any events
        this.initialHit = null
        this.movingHit = null
        this.finalHit = null // won't ever be populated if shouldIgnoreMove
        this.handlePointerDown = function (ev) {
          var dragging = _this.dragging
          _this.initialHit = null
          _this.movingHit = null
          _this.finalHit = null
          _this.prepareHits()
          _this.processFirstCoord(ev)
          if (_this.initialHit || !_this.requireInitial) {
            dragging.setIgnoreMove(false)
            // TODO: fire this before computing processFirstCoord, so listeners can cancel. this gets fired by almost every handler :(
            _this.emitter.trigger('pointerdown', ev)
          } else {
            dragging.setIgnoreMove(true)
          }
        }
        this.handleDragStart = function (ev) {
          _this.emitter.trigger('dragstart', ev)
          _this.handleMove(ev, true) // force = fire even if initially null
        }
        this.handleDragMove = function (ev) {
          _this.emitter.trigger('dragmove', ev)
          _this.handleMove(ev)
        }
        this.handlePointerUp = function (ev) {
          _this.releaseHits()
          _this.emitter.trigger('pointerup', ev)
        }
        this.handleDragEnd = function (ev) {
          if (_this.movingHit) {
            _this.emitter.trigger('hitupdate', null, true, ev)
          }
          _this.finalHit = _this.movingHit
          _this.movingHit = null
          _this.emitter.trigger('dragend', ev)
        }
        this.droppableStore = droppableStore
        dragging.emitter.on('pointerdown', this.handlePointerDown)
        dragging.emitter.on('dragstart', this.handleDragStart)
        dragging.emitter.on('dragmove', this.handleDragMove)
        dragging.emitter.on('pointerup', this.handlePointerUp)
        dragging.emitter.on('dragend', this.handleDragEnd)
        this.dragging = dragging
        this.emitter = new Emitter()
      }

      // sets initialHit
      // sets coordAdjust
      HitDragging.prototype.processFirstCoord = function (ev) {
        var origPoint = { left: ev.pageX, top: ev.pageY }
        var adjustedPoint = origPoint
        var subjectEl = ev.subjectEl
        var subjectRect
        if (subjectEl !== document) {
          subjectRect = computeRect(subjectEl)
          adjustedPoint = constrainPoint(adjustedPoint, subjectRect)
        }
        var initialHit = (this.initialHit = this.queryHitForOffset(
          adjustedPoint.left,
          adjustedPoint.top
        ))
        if (initialHit) {
          if (this.useSubjectCenter && subjectRect) {
            var slicedSubjectRect = intersectRects(subjectRect, initialHit.rect)
            if (slicedSubjectRect) {
              adjustedPoint = getRectCenter(slicedSubjectRect)
            }
          }
          this.coordAdjust = diffPoints(adjustedPoint, origPoint)
        } else {
          this.coordAdjust = { left: 0, top: 0 }
        }
      }
      HitDragging.prototype.handleMove = function (ev, forceHandle) {
        var hit = this.queryHitForOffset(
          ev.pageX + this.coordAdjust.left,
          ev.pageY + this.coordAdjust.top
        )
        if (forceHandle || !isHitsEqual(this.movingHit, hit)) {
          this.movingHit = hit
          this.emitter.trigger('hitupdate', hit, false, ev)
        }
      }
      HitDragging.prototype.prepareHits = function () {
        this.offsetTrackers = mapHash(
          this.droppableStore,
          function (interactionSettings) {
            interactionSettings.component.prepareHits()
            return new OffsetTracker(interactionSettings.el)
          }
        )
      }
      HitDragging.prototype.releaseHits = function () {
        var offsetTrackers = this.offsetTrackers
        for (var id in offsetTrackers) {
          offsetTrackers[id].destroy()
        }
        this.offsetTrackers = {}
      }
      HitDragging.prototype.queryHitForOffset = function (
        offsetLeft,
        offsetTop
      ) {
        var _a = this,
          droppableStore = _a.droppableStore,
          offsetTrackers = _a.offsetTrackers
        var bestHit = null
        for (var id in droppableStore) {
          var component = droppableStore[id].component
          var offsetTracker = offsetTrackers[id]
          if (
            offsetTracker && // wasn't destroyed mid-drag
            offsetTracker.isWithinClipping(offsetLeft, offsetTop)
          ) {
            var originLeft = offsetTracker.computeLeft()
            var originTop = offsetTracker.computeTop()
            var positionLeft = offsetLeft - originLeft
            var positionTop = offsetTop - originTop
            var origRect = offsetTracker.origRect
            var width = origRect.right - origRect.left
            var height = origRect.bottom - origRect.top
            if (
              // must be within the element's bounds
              positionLeft >= 0 &&
              positionLeft < width &&
              positionTop >= 0 &&
              positionTop < height
            ) {
              var hit = component.queryHit(
                positionLeft,
                positionTop,
                width,
                height
              )
              var dateProfile = component.context.getCurrentData().dateProfile
              if (
                hit && // make sure the hit is within activeRange, meaning it's not a deal cell
                rangeContainsRange(
                  dateProfile.activeRange,
                  hit.dateSpan.range
                ) &&
                (!bestHit || hit.layer > bestHit.layer)
              ) {
                // TODO: better way to re-orient rectangle
                hit.rect.left += originLeft
                hit.rect.right += originLeft
                hit.rect.top += originTop
                hit.rect.bottom += originTop
                bestHit = hit
              }
            }
          }
        }
        return bestHit
      }
      return HitDragging
    })()

    function isHitsEqual(hit0, hit1) {
      if (!hit0 && !hit1) {
        return true
      }
      if (Boolean(hit0) !== Boolean(hit1)) {
        return false
      }
      return isDateSpansEqual(hit0.dateSpan, hit1.dateSpan)
    }

    function buildDatePointApiWithContext(dateSpan, context) {
      var props = {}
      for (
        var _i = 0, _a = context.pluginHooks.datePointTransforms;
        _i < _a.length;
        _i++
      ) {
        var transform = _a[_i]
        __assign(props, transform(dateSpan, context))
      }
      __assign(props, buildDatePointApi(dateSpan, context.dateEnv))
      return props
    }

    function buildDatePointApi(span, dateEnv) {
      return {
        date: dateEnv.toDate(span.range.start),
        dateStr: dateEnv.formatIso(span.range.start, { omitTime: span.allDay }),
        allDay: span.allDay,
      }
    }

    /*
    Monitors when the user clicks on a specific date/time of a component.
    A pointerdown+pointerup on the same "hit" constitutes a click.
    */
    var DateClicking = /** @class */ (function (_super) {
      __extends(DateClicking, _super)

      function DateClicking(settings) {
        var _this = _super.call(this, settings) || this
        _this.handlePointerDown = function (pev) {
          var dragging = _this.dragging
          var downEl = pev.origEvent.target
          // do this in pointerdown (not dragend) because DOM might be mutated by the time dragend is fired
          dragging.setIgnoreMove(!_this.component.isValidDateDownEl(downEl))
        }
        // won't even fire if moving was ignored
        _this.handleDragEnd = function (ev) {
          var component = _this.component
          var pointer = _this.dragging.pointer
          if (!pointer.wasTouchScroll) {
            var _a = _this.hitDragging,
              initialHit = _a.initialHit,
              finalHit = _a.finalHit
            if (initialHit && finalHit && isHitsEqual(initialHit, finalHit)) {
              var context = component.context
              var arg = __assign(
                __assign(
                  {},
                  buildDatePointApiWithContext(initialHit.dateSpan, context)
                ),
                {
                  dayEl: initialHit.dayEl,
                  jsEvent: ev.origEvent,
                  view: context.viewApi || context.calendarApi.view,
                }
              )
              context.emitter.trigger('dateClick', arg)
            }
          }
        }
        // we DO want to watch pointer moves because otherwise finalHit won't get populated
        _this.dragging = new FeaturefulElementDragging(settings.el)
        _this.dragging.autoScroller.isEnabled = false
        var hitDragging = (_this.hitDragging = new HitDragging(
          _this.dragging,
          interactionSettingsToStore(settings)
        ))
        hitDragging.emitter.on('pointerdown', _this.handlePointerDown)
        hitDragging.emitter.on('dragend', _this.handleDragEnd)
        return _this
      }

      DateClicking.prototype.destroy = function () {
        this.dragging.destroy()
      }
      return DateClicking
    })(Interaction)

    /*
    Tracks when the user selects a portion of time of a component,
    constituted by a drag over date cells, with a possible delay at the beginning of the drag.
    */
    var DateSelecting = /** @class */ (function (_super) {
      __extends(DateSelecting, _super)

      function DateSelecting(settings) {
        var _this = _super.call(this, settings) || this
        _this.dragSelection = null
        _this.handlePointerDown = function (ev) {
          var _a = _this,
            component = _a.component,
            dragging = _a.dragging
          var options = component.context.options
          var canSelect =
            options.selectable &&
            component.isValidDateDownEl(ev.origEvent.target)
          // don't bother to watch expensive moves if component won't do selection
          dragging.setIgnoreMove(!canSelect)
          // if touch, require user to hold down
          dragging.delay = ev.isTouch ? getComponentTouchDelay(component) : null
        }
        _this.handleDragStart = function (ev) {
          _this.component.context.calendarApi.unselect(ev) // unselect previous selections
        }
        _this.handleHitUpdate = function (hit, isFinal) {
          var context = _this.component.context
          var dragSelection = null
          var isInvalid = false
          if (hit) {
            dragSelection = joinHitsIntoSelection(
              _this.hitDragging.initialHit,
              hit,
              context.pluginHooks.dateSelectionTransformers
            )
            if (
              !dragSelection ||
              !_this.component.isDateSelectionValid(dragSelection)
            ) {
              isInvalid = true
              dragSelection = null
            }
          }
          if (dragSelection) {
            context.dispatch({ type: 'SELECT_DATES', selection: dragSelection })
          } else if (!isFinal) {
            // only unselect if moved away while dragging
            context.dispatch({ type: 'UNSELECT_DATES' })
          }
          if (!isInvalid) {
            enableCursor()
          } else {
            disableCursor()
          }
          if (!isFinal) {
            _this.dragSelection = dragSelection // only clear if moved away from all hits while dragging
          }
        }
        _this.handlePointerUp = function (pev) {
          if (_this.dragSelection) {
            // selection is already rendered, so just need to report selection
            triggerDateSelect(_this.dragSelection, pev, _this.component.context)
            _this.dragSelection = null
          }
        }
        var component = settings.component
        var options = component.context.options
        var dragging = (_this.dragging = new FeaturefulElementDragging(
          settings.el
        ))
        dragging.touchScrollAllowed = false
        dragging.minDistance = options.selectMinDistance || 0
        dragging.autoScroller.isEnabled = options.dragScroll
        var hitDragging = (_this.hitDragging = new HitDragging(
          _this.dragging,
          interactionSettingsToStore(settings)
        ))
        hitDragging.emitter.on('pointerdown', _this.handlePointerDown)
        hitDragging.emitter.on('dragstart', _this.handleDragStart)
        hitDragging.emitter.on('hitupdate', _this.handleHitUpdate)
        hitDragging.emitter.on('pointerup', _this.handlePointerUp)
        return _this
      }

      DateSelecting.prototype.destroy = function () {
        this.dragging.destroy()
      }
      return DateSelecting
    })(Interaction)

    function getComponentTouchDelay(component) {
      var options = component.context.options
      var delay = options.selectLongPressDelay
      if (delay == null) {
        delay = options.longPressDelay
      }
      return delay
    }

    function joinHitsIntoSelection(hit0, hit1, dateSelectionTransformers) {
      var dateSpan0 = hit0.dateSpan
      var dateSpan1 = hit1.dateSpan
      var ms = [
        dateSpan0.range.start,
        dateSpan0.range.end,
        dateSpan1.range.start,
        dateSpan1.range.end,
      ]
      ms.sort(compareNumbers)
      var props = {}
      for (
        var _i = 0, dateSelectionTransformers_1 = dateSelectionTransformers;
        _i < dateSelectionTransformers_1.length;
        _i++
      ) {
        var transformer = dateSelectionTransformers_1[_i]
        var res = transformer(hit0, hit1)
        if (res === false) {
          return null
        }
        if (res) {
          __assign(props, res)
        }
      }
      props.range = { start: ms[0], end: ms[3] }
      props.allDay = dateSpan0.allDay
      return props
    }

    var EventDragging = /** @class */ (function (_super) {
      __extends(EventDragging, _super)

      function EventDragging(settings) {
        var _this = _super.call(this, settings) || this
        // internal state
        _this.subjectEl = null
        _this.subjectSeg = null // the seg being selected/dragged
        _this.isDragging = false
        _this.eventRange = null
        _this.relevantEvents = null // the events being dragged
        _this.receivingContext = null
        _this.validMutation = null
        _this.mutatedRelevantEvents = null
        _this.handlePointerDown = function (ev) {
          var origTarget = ev.origEvent.target
          var _a = _this,
            component = _a.component,
            dragging = _a.dragging
          var mirror = dragging.mirror
          var options = component.context.options
          var initialContext = component.context
          _this.subjectEl = ev.subjectEl
          var subjectSeg = (_this.subjectSeg = getElSeg(ev.subjectEl))
          var eventRange = (_this.eventRange = subjectSeg.eventRange)
          var eventInstanceId = eventRange.instance.instanceId
          _this.relevantEvents = getRelevantEvents(
            initialContext.getCurrentData().eventStore,
            eventInstanceId
          )
          dragging.minDistance = ev.isTouch ? 0 : options.eventDragMinDistance
          dragging.delay = // only do a touch delay if touch and this event hasn't been selected yet
            ev.isTouch && eventInstanceId !== component.props.eventSelection
              ? getComponentTouchDelay$1(component)
              : null
          if (options.fixedMirrorParent) {
            mirror.parentNode = options.fixedMirrorParent
          } else {
            mirror.parentNode = elementClosest(origTarget, '.fc')
          }
          mirror.revertDuration = options.dragRevertDuration
          var isValid =
            component.isValidSegDownEl(origTarget) &&
            !elementClosest(origTarget, '.fc-event-resizer') // NOT on a resizer
          dragging.setIgnoreMove(!isValid)
          // disable dragging for elements that are resizable (ie, selectable)
          // but are not draggable
          _this.isDragging =
            isValid && ev.subjectEl.classList.contains('fc-event-draggable')
        }
        _this.handleDragStart = function (ev) {
          var initialContext = _this.component.context
          var eventRange = _this.eventRange
          var eventInstanceId = eventRange.instance.instanceId
          if (ev.isTouch) {
            // need to select a different event?
            if (eventInstanceId !== _this.component.props.eventSelection) {
              initialContext.dispatch({
                type: 'SELECT_EVENT',
                eventInstanceId: eventInstanceId,
              })
            }
          } else {
            // if now using mouse, but was previous touch interaction, clear selected event
            initialContext.dispatch({ type: 'UNSELECT_EVENT' })
          }
          if (_this.isDragging) {
            initialContext.calendarApi.unselect(ev) // unselect *date* selection
            initialContext.emitter.trigger('eventDragStart', {
              el: _this.subjectEl,
              event: new EventApi(
                initialContext,
                eventRange.def,
                eventRange.instance
              ),
              jsEvent: ev.origEvent,
              view: initialContext.viewApi,
            })
          }
        }
        _this.handleHitUpdate = function (hit, isFinal) {
          if (!_this.isDragging) {
            return
          }
          var relevantEvents = _this.relevantEvents
          var initialHit = _this.hitDragging.initialHit
          var initialContext = _this.component.context
          // states based on new hit
          var receivingContext = null
          var mutation = null
          var mutatedRelevantEvents = null
          var isInvalid = false
          var interaction = {
            affectedEvents: relevantEvents,
            mutatedEvents: createEmptyEventStore(),
            isEvent: true,
          }
          if (hit) {
            var receivingComponent = hit.component
            receivingContext = receivingComponent.context
            var receivingOptions = receivingContext.options
            if (
              initialContext === receivingContext ||
              (receivingOptions.editable && receivingOptions.droppable)
            ) {
              mutation = computeEventMutation(
                initialHit,
                hit,
                receivingContext.getCurrentData().pluginHooks
                  .eventDragMutationMassagers
              )
              if (mutation) {
                mutatedRelevantEvents = applyMutationToEventStore(
                  relevantEvents,
                  receivingContext.getCurrentData().eventUiBases,
                  mutation,
                  receivingContext
                )
                interaction.mutatedEvents = mutatedRelevantEvents
                if (!receivingComponent.isInteractionValid(interaction)) {
                  isInvalid = true
                  mutation = null
                  mutatedRelevantEvents = null
                  interaction.mutatedEvents = createEmptyEventStore()
                }
              }
            } else {
              receivingContext = null
            }
          }
          _this.displayDrag(receivingContext, interaction)
          if (!isInvalid) {
            enableCursor()
          } else {
            disableCursor()
          }
          if (!isFinal) {
            if (
              initialContext === receivingContext && // TODO: write test for this
              isHitsEqual(initialHit, hit)
            ) {
              mutation = null
            }
            _this.dragging.setMirrorNeedsRevert(!mutation)
            // render the mirror if no already-rendered mirror
            // TODO: wish we could somehow wait for dispatch to guarantee render
            _this.dragging.setMirrorIsVisible(
              !hit || !document.querySelector('.fc-event-mirror')
            )
            // assign states based on new hit
            _this.receivingContext = receivingContext
            _this.validMutation = mutation
            _this.mutatedRelevantEvents = mutatedRelevantEvents
          }
        }
        _this.handlePointerUp = function () {
          if (!_this.isDragging) {
            _this.cleanup() // because handleDragEnd won't fire
          }
        }
        _this.handleDragEnd = function (ev) {
          if (_this.isDragging) {
            var initialContext_1 = _this.component.context
            var initialView = initialContext_1.viewApi
            var _a = _this,
              receivingContext_1 = _a.receivingContext,
              validMutation = _a.validMutation
            var eventDef = _this.eventRange.def
            var eventInstance = _this.eventRange.instance
            var eventApi = new EventApi(
              initialContext_1,
              eventDef,
              eventInstance
            )
            var relevantEvents_1 = _this.relevantEvents
            var mutatedRelevantEvents_1 = _this.mutatedRelevantEvents
            var finalHit = _this.hitDragging.finalHit
            _this.clearDrag() // must happen after revert animation
            initialContext_1.emitter.trigger('eventDragStop', {
              el: _this.subjectEl,
              event: eventApi,
              jsEvent: ev.origEvent,
              view: initialView,
            })
            if (validMutation) {
              // dropped within same calendar
              if (receivingContext_1 === initialContext_1) {
                var updatedEventApi = new EventApi(
                  initialContext_1,
                  mutatedRelevantEvents_1.defs[eventDef.defId],
                  eventInstance
                    ? mutatedRelevantEvents_1.instances[
                        eventInstance.instanceId
                      ]
                    : null
                )
                initialContext_1.dispatch({
                  type: 'MERGE_EVENTS',
                  eventStore: mutatedRelevantEvents_1,
                })
                var eventChangeArg = {
                  oldEvent: eventApi,
                  event: updatedEventApi,
                  relatedEvents: buildEventApis(
                    mutatedRelevantEvents_1,
                    initialContext_1,
                    eventInstance
                  ),
                  revert: function () {
                    initialContext_1.dispatch({
                      type: 'MERGE_EVENTS',
                      eventStore: relevantEvents_1,
                    })
                  },
                }
                var transformed = {}
                for (
                  var _i = 0,
                    _b =
                      initialContext_1.getCurrentData().pluginHooks
                        .eventDropTransformers;
                  _i < _b.length;
                  _i++
                ) {
                  var transformer = _b[_i]
                  __assign(
                    transformed,
                    transformer(validMutation, initialContext_1)
                  )
                }
                initialContext_1.emitter.trigger(
                  'eventDrop',
                  __assign(
                    __assign(__assign({}, eventChangeArg), transformed),
                    {
                      el: ev.subjectEl,
                      delta: validMutation.datesDelta,
                      jsEvent: ev.origEvent,
                      view: initialView,
                    }
                  )
                )
                initialContext_1.emitter.trigger('eventChange', eventChangeArg)
                // dropped in different calendar
              } else if (receivingContext_1) {
                var eventRemoveArg = {
                  event: eventApi,
                  relatedEvents: buildEventApis(
                    relevantEvents_1,
                    initialContext_1,
                    eventInstance
                  ),
                  revert: function () {
                    initialContext_1.dispatch({
                      type: 'MERGE_EVENTS',
                      eventStore: relevantEvents_1,
                    })
                  },
                }
                initialContext_1.emitter.trigger(
                  'eventLeave',
                  __assign(__assign({}, eventRemoveArg), {
                    draggedEl: ev.subjectEl,
                    view: initialView,
                  })
                )
                initialContext_1.dispatch({
                  type: 'REMOVE_EVENTS',
                  eventStore: relevantEvents_1,
                })
                initialContext_1.emitter.trigger('eventRemove', eventRemoveArg)
                var addedEventDef = mutatedRelevantEvents_1.defs[eventDef.defId]
                var addedEventInstance =
                  mutatedRelevantEvents_1.instances[eventInstance.instanceId]
                var addedEventApi = new EventApi(
                  receivingContext_1,
                  addedEventDef,
                  addedEventInstance
                )
                receivingContext_1.dispatch({
                  type: 'MERGE_EVENTS',
                  eventStore: mutatedRelevantEvents_1,
                })
                var eventAddArg = {
                  event: addedEventApi,
                  relatedEvents: buildEventApis(
                    mutatedRelevantEvents_1,
                    receivingContext_1,
                    addedEventInstance
                  ),
                  revert: function () {
                    receivingContext_1.dispatch({
                      type: 'REMOVE_EVENTS',
                      eventStore: mutatedRelevantEvents_1,
                    })
                  },
                }
                receivingContext_1.emitter.trigger('eventAdd', eventAddArg)
                if (ev.isTouch) {
                  receivingContext_1.dispatch({
                    type: 'SELECT_EVENT',
                    eventInstanceId: eventInstance.instanceId,
                  })
                }
                receivingContext_1.emitter.trigger(
                  'drop',
                  __assign(
                    __assign(
                      {},
                      buildDatePointApiWithContext(
                        finalHit.dateSpan,
                        receivingContext_1
                      )
                    ),
                    {
                      draggedEl: ev.subjectEl,
                      jsEvent: ev.origEvent,
                      view: finalHit.component.context.viewApi,
                    }
                  )
                )
                receivingContext_1.emitter.trigger(
                  'eventReceive',
                  __assign(__assign({}, eventAddArg), {
                    draggedEl: ev.subjectEl,
                    view: finalHit.component.context.viewApi,
                  })
                )
              }
            } else {
              initialContext_1.emitter.trigger('_noEventDrop')
            }
          }
          _this.cleanup()
        }
        var component = _this.component
        var options = component.context.options
        var dragging = (_this.dragging = new FeaturefulElementDragging(
          settings.el
        ))
        dragging.pointer.selector = EventDragging.SELECTOR
        dragging.touchScrollAllowed = false
        dragging.autoScroller.isEnabled = options.dragScroll
        var hitDragging = (_this.hitDragging = new HitDragging(
          _this.dragging,
          interactionSettingsStore
        ))
        hitDragging.useSubjectCenter = settings.useEventCenter
        hitDragging.emitter.on('pointerdown', _this.handlePointerDown)
        hitDragging.emitter.on('dragstart', _this.handleDragStart)
        hitDragging.emitter.on('hitupdate', _this.handleHitUpdate)
        hitDragging.emitter.on('pointerup', _this.handlePointerUp)
        hitDragging.emitter.on('dragend', _this.handleDragEnd)
        return _this
      }

      EventDragging.prototype.destroy = function () {
        this.dragging.destroy()
      }
      // render a drag state on the next receivingCalendar
      EventDragging.prototype.displayDrag = function (nextContext, state) {
        var initialContext = this.component.context
        var prevContext = this.receivingContext
        // does the previous calendar need to be cleared?
        if (prevContext && prevContext !== nextContext) {
          // does the initial calendar need to be cleared?
          // if so, don't clear all the way. we still need to to hide the affectedEvents
          if (prevContext === initialContext) {
            prevContext.dispatch({
              type: 'SET_EVENT_DRAG',
              state: {
                affectedEvents: state.affectedEvents,
                mutatedEvents: createEmptyEventStore(),
                isEvent: true,
              },
            })
            // completely clear the old calendar if it wasn't the initial
          } else {
            prevContext.dispatch({ type: 'UNSET_EVENT_DRAG' })
          }
        }
        if (nextContext) {
          nextContext.dispatch({ type: 'SET_EVENT_DRAG', state: state })
        }
      }
      EventDragging.prototype.clearDrag = function () {
        var initialCalendar = this.component.context
        var receivingContext = this.receivingContext
        if (receivingContext) {
          receivingContext.dispatch({ type: 'UNSET_EVENT_DRAG' })
        }
        // the initial calendar might have an dummy drag state from displayDrag
        if (initialCalendar !== receivingContext) {
          initialCalendar.dispatch({ type: 'UNSET_EVENT_DRAG' })
        }
      }
      EventDragging.prototype.cleanup = function () {
        this.subjectSeg = null
        this.isDragging = false
        this.eventRange = null
        this.relevantEvents = null
        this.receivingContext = null
        this.validMutation = null
        this.mutatedRelevantEvents = null
      }
      // TODO: test this in IE11
      // QUESTION: why do we need it on the resizable???
      EventDragging.SELECTOR = '.fc-event-draggable, .fc-event-resizable'
      return EventDragging
    })(Interaction)

    function computeEventMutation(hit0, hit1, massagers) {
      var dateSpan0 = hit0.dateSpan
      var dateSpan1 = hit1.dateSpan
      var date0 = dateSpan0.range.start
      var date1 = dateSpan1.range.start
      var standardProps = {}
      if (dateSpan0.allDay !== dateSpan1.allDay) {
        standardProps.allDay = dateSpan1.allDay
        standardProps.hasEnd =
          hit1.component.context.options.allDayMaintainDuration
        if (dateSpan1.allDay) {
          // means date1 is already start-of-day,
          // but date0 needs to be converted
          date0 = startOfDay(date0)
        }
      }
      var delta = diffDates(
        date0,
        date1,
        hit0.component.context.dateEnv,
        hit0.component === hit1.component ? hit0.component.largeUnit : null
      )
      if (delta.milliseconds) {
        // has hours/minutes/seconds
        standardProps.allDay = false
      }
      var mutation = {
        datesDelta: delta,
        standardProps: standardProps,
      }
      for (var _i = 0, massagers_1 = massagers; _i < massagers_1.length; _i++) {
        var massager = massagers_1[_i]
        massager(mutation, hit0, hit1)
      }
      return mutation
    }

    function getComponentTouchDelay$1(component) {
      var options = component.context.options
      var delay = options.eventLongPressDelay
      if (delay == null) {
        delay = options.longPressDelay
      }
      return delay
    }

    var EventResizing = /** @class */ (function (_super) {
      __extends(EventResizing, _super)

      function EventResizing(settings) {
        var _this = _super.call(this, settings) || this
        // internal state
        _this.draggingSegEl = null
        _this.draggingSeg = null // TODO: rename to resizingSeg? subjectSeg?
        _this.eventRange = null
        _this.relevantEvents = null
        _this.validMutation = null
        _this.mutatedRelevantEvents = null
        _this.handlePointerDown = function (ev) {
          var component = _this.component
          var segEl = _this.querySegEl(ev)
          var seg = getElSeg(segEl)
          var eventRange = (_this.eventRange = seg.eventRange)
          _this.dragging.minDistance =
            component.context.options.eventDragMinDistance
          // if touch, need to be working with a selected event
          _this.dragging.setIgnoreMove(
            !_this.component.isValidSegDownEl(ev.origEvent.target) ||
              (ev.isTouch &&
                _this.component.props.eventSelection !==
                  eventRange.instance.instanceId)
          )
        }
        _this.handleDragStart = function (ev) {
          var context = _this.component.context
          var eventRange = _this.eventRange
          _this.relevantEvents = getRelevantEvents(
            context.getCurrentData().eventStore,
            _this.eventRange.instance.instanceId
          )
          var segEl = _this.querySegEl(ev)
          _this.draggingSegEl = segEl
          _this.draggingSeg = getElSeg(segEl)
          context.calendarApi.unselect()
          context.emitter.trigger('eventResizeStart', {
            el: segEl,
            event: new EventApi(context, eventRange.def, eventRange.instance),
            jsEvent: ev.origEvent,
            view: context.viewApi,
          })
        }
        _this.handleHitUpdate = function (hit, isFinal, ev) {
          var context = _this.component.context
          var relevantEvents = _this.relevantEvents
          var initialHit = _this.hitDragging.initialHit
          var eventInstance = _this.eventRange.instance
          var mutation = null
          var mutatedRelevantEvents = null
          var isInvalid = false
          var interaction = {
            affectedEvents: relevantEvents,
            mutatedEvents: createEmptyEventStore(),
            isEvent: true,
          }
          if (hit) {
            mutation = computeMutation(
              initialHit,
              hit,
              ev.subjectEl.classList.contains('fc-event-resizer-start'),
              eventInstance.range,
              context.pluginHooks.eventResizeJoinTransforms
            )
          }
          if (mutation) {
            mutatedRelevantEvents = applyMutationToEventStore(
              relevantEvents,
              context.getCurrentData().eventUiBases,
              mutation,
              context
            )
            interaction.mutatedEvents = mutatedRelevantEvents
            if (!_this.component.isInteractionValid(interaction)) {
              isInvalid = true
              mutation = null
              mutatedRelevantEvents = null
              interaction.mutatedEvents = null
            }
          }
          if (mutatedRelevantEvents) {
            context.dispatch({
              type: 'SET_EVENT_RESIZE',
              state: interaction,
            })
          } else {
            context.dispatch({ type: 'UNSET_EVENT_RESIZE' })
          }
          if (!isInvalid) {
            enableCursor()
          } else {
            disableCursor()
          }
          if (!isFinal) {
            if (mutation && isHitsEqual(initialHit, hit)) {
              mutation = null
            }
            _this.validMutation = mutation
            _this.mutatedRelevantEvents = mutatedRelevantEvents
          }
        }
        _this.handleDragEnd = function (ev) {
          var context = _this.component.context
          var eventDef = _this.eventRange.def
          var eventInstance = _this.eventRange.instance
          var eventApi = new EventApi(context, eventDef, eventInstance)
          var relevantEvents = _this.relevantEvents
          var mutatedRelevantEvents = _this.mutatedRelevantEvents
          context.emitter.trigger('eventResizeStop', {
            el: _this.draggingSegEl,
            event: eventApi,
            jsEvent: ev.origEvent,
            view: context.viewApi,
          })
          if (_this.validMutation) {
            var updatedEventApi = new EventApi(
              context,
              mutatedRelevantEvents.defs[eventDef.defId],
              eventInstance
                ? mutatedRelevantEvents.instances[eventInstance.instanceId]
                : null
            )
            context.dispatch({
              type: 'MERGE_EVENTS',
              eventStore: mutatedRelevantEvents,
            })
            var eventChangeArg = {
              oldEvent: eventApi,
              event: updatedEventApi,
              relatedEvents: buildEventApis(
                mutatedRelevantEvents,
                context,
                eventInstance
              ),
              revert: function () {
                context.dispatch({
                  type: 'MERGE_EVENTS',
                  eventStore: relevantEvents,
                })
              },
            }
            context.emitter.trigger(
              'eventResize',
              __assign(__assign({}, eventChangeArg), {
                el: _this.draggingSegEl,
                startDelta: _this.validMutation.startDelta || createDuration(0),
                endDelta: _this.validMutation.endDelta || createDuration(0),
                jsEvent: ev.origEvent,
                view: context.viewApi,
              })
            )
            context.emitter.trigger('eventChange', eventChangeArg)
          } else {
            context.emitter.trigger('_noEventResize')
          }
          // reset all internal state
          _this.draggingSeg = null
          _this.relevantEvents = null
          _this.validMutation = null
          // okay to keep eventInstance around. useful to set it in handlePointerDown
        }
        var component = settings.component
        var dragging = (_this.dragging = new FeaturefulElementDragging(
          settings.el
        ))
        dragging.pointer.selector = '.fc-event-resizer'
        dragging.touchScrollAllowed = false
        dragging.autoScroller.isEnabled = component.context.options.dragScroll
        var hitDragging = (_this.hitDragging = new HitDragging(
          _this.dragging,
          interactionSettingsToStore(settings)
        ))
        hitDragging.emitter.on('pointerdown', _this.handlePointerDown)
        hitDragging.emitter.on('dragstart', _this.handleDragStart)
        hitDragging.emitter.on('hitupdate', _this.handleHitUpdate)
        hitDragging.emitter.on('dragend', _this.handleDragEnd)
        return _this
      }

      EventResizing.prototype.destroy = function () {
        this.dragging.destroy()
      }
      EventResizing.prototype.querySegEl = function (ev) {
        return elementClosest(ev.subjectEl, '.fc-event')
      }
      return EventResizing
    })(Interaction)

    function computeMutation(
      hit0,
      hit1,
      isFromStart,
      instanceRange,
      transforms
    ) {
      var dateEnv = hit0.component.context.dateEnv
      var date0 = hit0.dateSpan.range.start
      var date1 = hit1.dateSpan.range.start
      var delta = diffDates(date0, date1, dateEnv, hit0.component.largeUnit)
      var props = {}
      for (
        var _i = 0, transforms_1 = transforms;
        _i < transforms_1.length;
        _i++
      ) {
        var transform = transforms_1[_i]
        var res = transform(hit0, hit1)
        if (res === false) {
          return null
        }
        if (res) {
          __assign(props, res)
        }
      }
      if (isFromStart) {
        if (dateEnv.add(instanceRange.start, delta) < instanceRange.end) {
          props.startDelta = delta
          return props
        }
      } else if (dateEnv.add(instanceRange.end, delta) > instanceRange.start) {
        props.endDelta = delta
        return props
      }
      return null
    }

    var UnselectAuto = /** @class */ (function () {
      function UnselectAuto(context) {
        var _this = this
        this.context = context
        this.isRecentPointerDateSelect = false // wish we could use a selector to detect date selection, but uses hit system
        this.matchesCancel = false
        this.matchesEvent = false
        this.onSelect = function (selectInfo) {
          if (selectInfo.jsEvent) {
            _this.isRecentPointerDateSelect = true
          }
        }
        this.onDocumentPointerDown = function (pev) {
          var unselectCancel = _this.context.options.unselectCancel
          var downEl = pev.origEvent.target
          _this.matchesCancel = !!elementClosest(downEl, unselectCancel)
          _this.matchesEvent = !!elementClosest(downEl, EventDragging.SELECTOR) // interaction started on an event?
        }
        this.onDocumentPointerUp = function (pev) {
          var context = _this.context
          var documentPointer = _this.documentPointer
          var calendarState = context.getCurrentData()
          // touch-scrolling should never unfocus any type of selection
          if (!documentPointer.wasTouchScroll) {
            if (
              calendarState.dateSelection && // an existing date selection?
              !_this.isRecentPointerDateSelect // a new pointer-initiated date selection since last onDocumentPointerUp?
            ) {
              var unselectAuto = context.options.unselectAuto
              if (unselectAuto && (!unselectAuto || !_this.matchesCancel)) {
                context.calendarApi.unselect(pev)
              }
            }
            if (
              calendarState.eventSelection && // an existing event selected?
              !_this.matchesEvent // interaction DIDN'T start on an event
            ) {
              context.dispatch({ type: 'UNSELECT_EVENT' })
            }
          }
          _this.isRecentPointerDateSelect = false
        }
        var documentPointer = (this.documentPointer = new PointerDragging(
          document
        ))
        documentPointer.shouldIgnoreMove = true
        documentPointer.shouldWatchScroll = false
        documentPointer.emitter.on('pointerdown', this.onDocumentPointerDown)
        documentPointer.emitter.on('pointerup', this.onDocumentPointerUp)
        /*
            TODO: better way to know about whether there was a selection with the pointer
            */
        context.emitter.on('select', this.onSelect)
      }

      UnselectAuto.prototype.destroy = function () {
        this.context.emitter.off('select', this.onSelect)
        this.documentPointer.destroy()
      }
      return UnselectAuto
    })()

    var OPTION_REFINERS = {
      fixedMirrorParent: identity,
    }
    var LISTENER_REFINERS = {
      dateClick: identity,
      eventDragStart: identity,
      eventDragStop: identity,
      eventDrop: identity,
      eventResizeStart: identity,
      eventResizeStop: identity,
      eventResize: identity,
      drop: identity,
      eventReceive: identity,
      eventLeave: identity,
    }

    /*
    Given an already instantiated draggable object for one-or-more elements,
    Interprets any dragging as an attempt to drag an events that lives outside
    of a calendar onto a calendar.
    */
    var ExternalElementDragging = /** @class */ (function () {
      function ExternalElementDragging(dragging, suppliedDragMeta) {
        var _this = this
        this.receivingContext = null
        this.droppableEvent = null // will exist for all drags, even if create:false
        this.suppliedDragMeta = null
        this.dragMeta = null
        this.handleDragStart = function (ev) {
          _this.dragMeta = _this.buildDragMeta(ev.subjectEl)
        }
        this.handleHitUpdate = function (hit, isFinal, ev) {
          var dragging = _this.hitDragging.dragging
          var receivingContext = null
          var droppableEvent = null
          var isInvalid = false
          var interaction = {
            affectedEvents: createEmptyEventStore(),
            mutatedEvents: createEmptyEventStore(),
            isEvent: _this.dragMeta.create,
          }
          if (hit) {
            receivingContext = hit.component.context
            if (_this.canDropElOnCalendar(ev.subjectEl, receivingContext)) {
              droppableEvent = computeEventForDateSpan(
                hit.dateSpan,
                _this.dragMeta,
                receivingContext
              )
              interaction.mutatedEvents = eventTupleToStore(droppableEvent)
              isInvalid = !isInteractionValid(interaction, receivingContext)
              if (isInvalid) {
                interaction.mutatedEvents = createEmptyEventStore()
                droppableEvent = null
              }
            }
          }
          _this.displayDrag(receivingContext, interaction)
          // show mirror if no already-rendered mirror element OR if we are shutting down the mirror (?)
          // TODO: wish we could somehow wait for dispatch to guarantee render
          dragging.setMirrorIsVisible(
            isFinal ||
              !droppableEvent ||
              !document.querySelector('.fc-event-mirror')
          )
          if (!isInvalid) {
            enableCursor()
          } else {
            disableCursor()
          }
          if (!isFinal) {
            dragging.setMirrorNeedsRevert(!droppableEvent)
            _this.receivingContext = receivingContext
            _this.droppableEvent = droppableEvent
          }
        }
        this.handleDragEnd = function (pev) {
          var _a = _this,
            receivingContext = _a.receivingContext,
            droppableEvent = _a.droppableEvent
          _this.clearDrag()
          if (receivingContext && droppableEvent) {
            var finalHit = _this.hitDragging.finalHit
            var finalView = finalHit.component.context.viewApi
            var dragMeta = _this.dragMeta
            receivingContext.emitter.trigger(
              'drop',
              __assign(
                __assign(
                  {},
                  buildDatePointApiWithContext(
                    finalHit.dateSpan,
                    receivingContext
                  )
                ),
                {
                  draggedEl: pev.subjectEl,
                  jsEvent: pev.origEvent,
                  view: finalView,
                }
              )
            )
            if (dragMeta.create) {
              var addingEvents_1 = eventTupleToStore(droppableEvent)
              receivingContext.dispatch({
                type: 'MERGE_EVENTS',
                eventStore: addingEvents_1,
              })
              if (pev.isTouch) {
                receivingContext.dispatch({
                  type: 'SELECT_EVENT',
                  eventInstanceId: droppableEvent.instance.instanceId,
                })
              }
              // signal that an external event landed
              receivingContext.emitter.trigger('eventReceive', {
                event: new EventApi(
                  receivingContext,
                  droppableEvent.def,
                  droppableEvent.instance
                ),
                relatedEvents: [],
                revert: function () {
                  receivingContext.dispatch({
                    type: 'REMOVE_EVENTS',
                    eventStore: addingEvents_1,
                  })
                },
                draggedEl: pev.subjectEl,
                view: finalView,
              })
            }
          }
          _this.receivingContext = null
          _this.droppableEvent = null
        }
        var hitDragging = (this.hitDragging = new HitDragging(
          dragging,
          interactionSettingsStore
        ))
        hitDragging.requireInitial = false // will start outside of a component
        hitDragging.emitter.on('dragstart', this.handleDragStart)
        hitDragging.emitter.on('hitupdate', this.handleHitUpdate)
        hitDragging.emitter.on('dragend', this.handleDragEnd)
        this.suppliedDragMeta = suppliedDragMeta
      }

      ExternalElementDragging.prototype.buildDragMeta = function (subjectEl) {
        if (typeof this.suppliedDragMeta === 'object') {
          return parseDragMeta(this.suppliedDragMeta)
        }
        if (typeof this.suppliedDragMeta === 'function') {
          return parseDragMeta(this.suppliedDragMeta(subjectEl))
        }
        return getDragMetaFromEl(subjectEl)
      }
      ExternalElementDragging.prototype.displayDrag = function (
        nextContext,
        state
      ) {
        var prevContext = this.receivingContext
        if (prevContext && prevContext !== nextContext) {
          prevContext.dispatch({ type: 'UNSET_EVENT_DRAG' })
        }
        if (nextContext) {
          nextContext.dispatch({ type: 'SET_EVENT_DRAG', state: state })
        }
      }
      ExternalElementDragging.prototype.clearDrag = function () {
        if (this.receivingContext) {
          this.receivingContext.dispatch({ type: 'UNSET_EVENT_DRAG' })
        }
      }
      ExternalElementDragging.prototype.canDropElOnCalendar = function (
        el,
        receivingContext
      ) {
        var dropAccept = receivingContext.options.dropAccept
        if (typeof dropAccept === 'function') {
          return dropAccept.call(receivingContext.calendarApi, el)
        }
        if (typeof dropAccept === 'string' && dropAccept) {
          return Boolean(elementMatches(el, dropAccept))
        }
        return true
      }
      return ExternalElementDragging
    })()
    // Utils for computing event store from the DragMeta
    // ----------------------------------------------------------------------------------------------------
    function computeEventForDateSpan(dateSpan, dragMeta, context) {
      var defProps = __assign({}, dragMeta.leftoverProps)
      for (
        var _i = 0, _a = context.pluginHooks.externalDefTransforms;
        _i < _a.length;
        _i++
      ) {
        var transform = _a[_i]
        __assign(defProps, transform(dateSpan, dragMeta))
      }
      var _b = refineEventDef(defProps, context),
        refined = _b.refined,
        extra = _b.extra
      var def = parseEventDef(
        refined,
        extra,
        dragMeta.sourceId,
        dateSpan.allDay,
        context.options.forceEventDuration || Boolean(dragMeta.duration), // hasEnd
        context
      )
      var start = dateSpan.range.start
      // only rely on time info if drop zone is all-day,
      // otherwise, we already know the time
      if (dateSpan.allDay && dragMeta.startTime) {
        start = context.dateEnv.add(start, dragMeta.startTime)
      }
      var end = dragMeta.duration
        ? context.dateEnv.add(start, dragMeta.duration)
        : getDefaultEventEnd(dateSpan.allDay, start, context)
      var instance = createEventInstance(def.defId, { start: start, end: end })
      return { def: def, instance: instance }
    }

    // Utils for extracting data from element
    // ----------------------------------------------------------------------------------------------------
    function getDragMetaFromEl(el) {
      var str = getEmbeddedElData(el, 'event')
      var obj = str ? JSON.parse(str) : { create: false } // if no embedded data, assume no event creation
      return parseDragMeta(obj)
    }

    config.dataAttrPrefix = ''

    function getEmbeddedElData(el, name) {
      var prefix = config.dataAttrPrefix
      var prefixedName = (prefix ? prefix + '-' : '') + name
      return el.getAttribute('data-' + prefixedName) || ''
    }

    /*
    Makes an element (that is *external* to any calendar) draggable.
    Can pass in data that determines how an event will be created when dropped onto a calendar.
    Leverages FullCalendar's internal drag-n-drop functionality WITHOUT a third-party drag system.
    */
    var ExternalDraggable = /** @class */ (function () {
      function ExternalDraggable(el, settings) {
        var _this = this
        if (settings === void 0) {
          settings = {}
        }
        this.handlePointerDown = function (ev) {
          var dragging = _this.dragging
          var _a = _this.settings,
            minDistance = _a.minDistance,
            longPressDelay = _a.longPressDelay
          dragging.minDistance =
            minDistance != null
              ? minDistance
              : ev.isTouch
              ? 0
              : BASE_OPTION_DEFAULTS.eventDragMinDistance
          dragging.delay = ev.isTouch // TODO: eventually read eventLongPressDelay instead vvv
            ? longPressDelay != null
              ? longPressDelay
              : BASE_OPTION_DEFAULTS.longPressDelay
            : 0
        }
        this.handleDragStart = function (ev) {
          if (
            ev.isTouch &&
            _this.dragging.delay &&
            ev.subjectEl.classList.contains('fc-event')
          ) {
            _this.dragging.mirror
              .getMirrorEl()
              .classList.add('fc-event-selected')
          }
        }
        this.settings = settings
        var dragging = (this.dragging = new FeaturefulElementDragging(el))
        dragging.touchScrollAllowed = false
        if (settings.itemSelector != null) {
          dragging.pointer.selector = settings.itemSelector
        }
        if (settings.appendTo != null) {
          dragging.mirror.parentNode = settings.appendTo // TODO: write tests
        }
        dragging.emitter.on('pointerdown', this.handlePointerDown)
        dragging.emitter.on('dragstart', this.handleDragStart)
        new ExternalElementDragging(dragging, settings.eventData) // eslint-disable-line no-new
      }

      ExternalDraggable.prototype.destroy = function () {
        this.dragging.destroy()
      }
      return ExternalDraggable
    })()

    /*
    Detects when a *THIRD-PARTY* drag-n-drop system interacts with elements.
    The third-party system is responsible for drawing the visuals effects of the drag.
    This class simply monitors for pointer movements and fires events.
    It also has the ability to hide the moving element (the "mirror") during the drag.
    */
    var InferredElementDragging = /** @class */ (function (_super) {
      __extends(InferredElementDragging, _super)

      function InferredElementDragging(containerEl) {
        var _this = _super.call(this, containerEl) || this
        _this.shouldIgnoreMove = false
        _this.mirrorSelector = ''
        _this.currentMirrorEl = null
        _this.handlePointerDown = function (ev) {
          _this.emitter.trigger('pointerdown', ev)
          if (!_this.shouldIgnoreMove) {
            // fire dragstart right away. does not support delay or min-distance
            _this.emitter.trigger('dragstart', ev)
          }
        }
        _this.handlePointerMove = function (ev) {
          if (!_this.shouldIgnoreMove) {
            _this.emitter.trigger('dragmove', ev)
          }
        }
        _this.handlePointerUp = function (ev) {
          _this.emitter.trigger('pointerup', ev)
          if (!_this.shouldIgnoreMove) {
            // fire dragend right away. does not support a revert animation
            _this.emitter.trigger('dragend', ev)
          }
        }
        var pointer = (_this.pointer = new PointerDragging(containerEl))
        pointer.emitter.on('pointerdown', _this.handlePointerDown)
        pointer.emitter.on('pointermove', _this.handlePointerMove)
        pointer.emitter.on('pointerup', _this.handlePointerUp)
        return _this
      }

      InferredElementDragging.prototype.destroy = function () {
        this.pointer.destroy()
      }
      InferredElementDragging.prototype.setIgnoreMove = function (bool) {
        this.shouldIgnoreMove = bool
      }
      InferredElementDragging.prototype.setMirrorIsVisible = function (bool) {
        if (bool) {
          // restore a previously hidden element.
          // use the reference in case the selector class has already been removed.
          if (this.currentMirrorEl) {
            this.currentMirrorEl.style.visibility = ''
            this.currentMirrorEl = null
          }
        } else {
          var mirrorEl = this.mirrorSelector
            ? document.querySelector(this.mirrorSelector)
            : null
          if (mirrorEl) {
            this.currentMirrorEl = mirrorEl
            mirrorEl.style.visibility = 'hidden'
          }
        }
      }
      return InferredElementDragging
    })(ElementDragging)

    /*
    Bridges third-party drag-n-drop systems with FullCalendar.
    Must be instantiated and destroyed by caller.
    */
    var ThirdPartyDraggable = /** @class */ (function () {
      function ThirdPartyDraggable(containerOrSettings, settings) {
        var containerEl = document
        if (
          // wish we could just test instanceof EventTarget, but doesn't work in IE11
          containerOrSettings === document ||
          containerOrSettings instanceof Element
        ) {
          containerEl = containerOrSettings
          settings = settings || {}
        } else {
          settings = containerOrSettings || {}
        }
        var dragging = (this.dragging = new InferredElementDragging(
          containerEl
        ))
        if (typeof settings.itemSelector === 'string') {
          dragging.pointer.selector = settings.itemSelector
        } else if (containerEl === document) {
          dragging.pointer.selector = '[data-event]'
        }
        if (typeof settings.mirrorSelector === 'string') {
          dragging.mirrorSelector = settings.mirrorSelector
        }
        new ExternalElementDragging(dragging, settings.eventData) // eslint-disable-line no-new
      }

      ThirdPartyDraggable.prototype.destroy = function () {
        this.dragging.destroy()
      }
      return ThirdPartyDraggable
    })()

    var interactionPlugin = createPlugin({
      componentInteractions: [
        DateClicking,
        DateSelecting,
        EventDragging,
        EventResizing,
      ],
      calendarInteractions: [UnselectAuto],
      elementDraggingImpl: FeaturefulElementDragging,
      optionRefiners: OPTION_REFINERS,
      listenerRefiners: LISTENER_REFINERS,
    })

    /* An abstract class for the daygrid views, as well as month view. Renders one or more rows of day cells.
    ----------------------------------------------------------------------------------------------------------------------*/
    // It is a manager for a Table subcomponent, which does most of the heavy lifting.
    // It is responsible for managing width/height.
    var TableView = /** @class */ (function (_super) {
      __extends(TableView, _super)

      function TableView() {
        var _this = (_super !== null && _super.apply(this, arguments)) || this
        _this.headerElRef = createRef()
        return _this
      }

      TableView.prototype.renderSimpleLayout = function (
        headerRowContent,
        bodyContent
      ) {
        var _a = this,
          props = _a.props,
          context = _a.context
        var sections = []
        var stickyHeaderDates = getStickyHeaderDates(context.options)
        if (headerRowContent) {
          sections.push({
            type: 'header',
            key: 'header',
            isSticky: stickyHeaderDates,
            chunk: {
              elRef: this.headerElRef,
              tableClassName: 'fc-col-header',
              rowContent: headerRowContent,
            },
          })
        }
        sections.push({
          type: 'body',
          key: 'body',
          liquid: true,
          chunk: { content: bodyContent },
        })
        return createElement(
          ViewRoot,
          { viewSpec: context.viewSpec },
          function (rootElRef, classNames) {
            return createElement(
              'div',
              {
                ref: rootElRef,
                className: ['fc-daygrid'].concat(classNames).join(' '),
              },
              createElement(SimpleScrollGrid, {
                liquid: !props.isHeightAuto && !props.forPrint,
                collapsibleWidth: props.forPrint,
                cols: [] /* TODO: make optional? */,
                sections: sections,
              })
            )
          }
        )
      }
      TableView.prototype.renderHScrollLayout = function (
        headerRowContent,
        bodyContent,
        colCnt,
        dayMinWidth
      ) {
        var ScrollGrid = this.context.pluginHooks.scrollGridImpl
        if (!ScrollGrid) {
          throw new Error('No ScrollGrid implementation')
        }
        var _a = this,
          props = _a.props,
          context = _a.context
        var stickyHeaderDates =
          !props.forPrint && getStickyHeaderDates(context.options)
        var stickyFooterScrollbar =
          !props.forPrint && getStickyFooterScrollbar(context.options)
        var sections = []
        if (headerRowContent) {
          sections.push({
            type: 'header',
            key: 'header',
            isSticky: stickyHeaderDates,
            chunks: [
              {
                key: 'main',
                elRef: this.headerElRef,
                tableClassName: 'fc-col-header',
                rowContent: headerRowContent,
              },
            ],
          })
        }
        sections.push({
          type: 'body',
          key: 'body',
          liquid: true,
          chunks: [
            {
              key: 'main',
              content: bodyContent,
            },
          ],
        })
        if (stickyFooterScrollbar) {
          sections.push({
            type: 'footer',
            key: 'footer',
            isSticky: true,
            chunks: [
              {
                key: 'main',
                content: renderScrollShim,
              },
            ],
          })
        }
        return createElement(
          ViewRoot,
          { viewSpec: context.viewSpec },
          function (rootElRef, classNames) {
            return createElement(
              'div',
              {
                ref: rootElRef,
                className: ['fc-daygrid'].concat(classNames).join(' '),
              },
              createElement(ScrollGrid, {
                liquid: !props.isHeightAuto && !props.forPrint,
                collapsibleWidth: props.forPrint,
                colGroups: [
                  { cols: [{ span: colCnt, minWidth: dayMinWidth }] },
                ],
                sections: sections,
              })
            )
          }
        )
      }
      return TableView
    })(DateComponent)

    function splitSegsByRow(segs, rowCnt) {
      var byRow = []
      for (var i = 0; i < rowCnt; i += 1) {
        byRow[i] = []
      }
      for (var _i = 0, segs_1 = segs; _i < segs_1.length; _i++) {
        var seg = segs_1[_i]
        byRow[seg.row].push(seg)
      }
      return byRow
    }

    function splitSegsByFirstCol(segs, colCnt) {
      var byCol = []
      for (var i = 0; i < colCnt; i += 1) {
        byCol[i] = []
      }
      for (var _i = 0, segs_2 = segs; _i < segs_2.length; _i++) {
        var seg = segs_2[_i]
        byCol[seg.firstCol].push(seg)
      }
      return byCol
    }

    function splitInteractionByRow(ui, rowCnt) {
      var byRow = []
      if (!ui) {
        for (var i = 0; i < rowCnt; i += 1) {
          byRow[i] = null
        }
      } else {
        for (var i = 0; i < rowCnt; i += 1) {
          byRow[i] = {
            affectedInstances: ui.affectedInstances,
            isEvent: ui.isEvent,
            segs: [],
          }
        }
        for (var _i = 0, _a = ui.segs; _i < _a.length; _i++) {
          var seg = _a[_i]
          byRow[seg.row].segs.push(seg)
        }
      }
      return byRow
    }

    var TableCellTop = /** @class */ (function (_super) {
      __extends(TableCellTop, _super)

      function TableCellTop() {
        return (_super !== null && _super.apply(this, arguments)) || this
      }

      TableCellTop.prototype.render = function () {
        var props = this.props
        var navLinkAttrs = this.context.options.navLinks
          ? {
              'data-navlink': buildNavLinkData(props.date),
              tabIndex: 0,
            }
          : {}
        return createElement(
          DayCellContent,
          {
            date: props.date,
            dateProfile: props.dateProfile,
            todayRange: props.todayRange,
            showDayNumber: props.showDayNumber,
            extraHookProps: props.extraHookProps,
            defaultContent: renderTopInner,
          },
          function (innerElRef, innerContent) {
            return (
              (innerContent || props.forceDayTop) &&
              createElement(
                'div',
                {
                  className: 'fc-daygrid-day-top',
                  ref: innerElRef,
                },
                createElement(
                  'a',
                  __assign(
                    { className: 'fc-daygrid-day-number' },
                    navLinkAttrs
                  ),
                  innerContent || createElement(Fragment, null, '\u00A0')
                )
              )
            )
          }
        )
      }
      return TableCellTop
    })(BaseComponent)

    function renderTopInner(props) {
      return props.dayNumberText
    }

    var DEFAULT_WEEK_NUM_FORMAT = createFormatter({ week: 'narrow' })
    var TableCell = /** @class */ (function (_super) {
      __extends(TableCell, _super)

      function TableCell() {
        var _this = (_super !== null && _super.apply(this, arguments)) || this
        _this.handleRootEl = function (el) {
          _this.rootEl = el
          setRef(_this.props.elRef, el)
        }
        _this.handleMoreLinkClick = function (ev) {
          var props = _this.props
          if (props.onMoreClick) {
            var allSegs = props.segsByEachCol
            var hiddenSegs = allSegs.filter(function (seg) {
              return props.segIsHidden[seg.eventRange.instance.instanceId]
            })
            props.onMoreClick({
              date: props.date,
              allSegs: allSegs,
              hiddenSegs: hiddenSegs,
              moreCnt: props.moreCnt,
              dayEl: _this.rootEl,
              ev: ev,
            })
          }
        }
        return _this
      }

      TableCell.prototype.render = function () {
        var _this = this
        var _a = this.context,
          options = _a.options,
          viewApi = _a.viewApi
        var props = this.props
        var date = props.date,
          dateProfile = props.dateProfile
        var hookProps = {
          num: props.moreCnt,
          text: props.buildMoreLinkText(props.moreCnt),
          view: viewApi,
        }
        var navLinkAttrs = options.navLinks
          ? { 'data-navlink': buildNavLinkData(date, 'week'), tabIndex: 0 }
          : {}
        return createElement(
          DayCellRoot,
          {
            date: date,
            dateProfile: dateProfile,
            todayRange: props.todayRange,
            showDayNumber: props.showDayNumber,
            extraHookProps: props.extraHookProps,
            elRef: this.handleRootEl,
          },
          function (dayElRef, dayClassNames, rootDataAttrs, isDisabled) {
            return createElement(
              'td',
              __assign(
                {
                  ref: dayElRef,
                  className: ['fc-daygrid-day']
                    .concat(dayClassNames, props.extraClassNames || [])
                    .join(' '),
                },
                rootDataAttrs,
                props.extraDataAttrs
              ),
              createElement(
                'div',
                {
                  className: 'fc-daygrid-day-frame fc-scrollgrid-sync-inner',
                  ref: props.innerElRef /* different from hook system! RENAME */,
                },
                props.showWeekNumber &&
                  createElement(
                    WeekNumberRoot,
                    {
                      date: date,
                      defaultFormat: DEFAULT_WEEK_NUM_FORMAT,
                    },
                    function (
                      weekElRef,
                      weekClassNames,
                      innerElRef,
                      innerContent
                    ) {
                      return createElement(
                        'a',
                        __assign(
                          {
                            ref: weekElRef,
                            className: ['fc-daygrid-week-number']
                              .concat(weekClassNames)
                              .join(' '),
                          },
                          navLinkAttrs
                        ),
                        innerContent
                      )
                    }
                  ),
                !isDisabled &&
                  createElement(TableCellTop, {
                    date: date,
                    dateProfile: dateProfile,
                    showDayNumber: props.showDayNumber,
                    forceDayTop: props.forceDayTop,
                    todayRange: props.todayRange,
                    extraHookProps: props.extraHookProps,
                  }),
                createElement(
                  'div',
                  {
                    className: 'fc-daygrid-day-events',
                    ref: props.fgContentElRef,
                    style: { paddingBottom: props.fgPaddingBottom },
                  },
                  props.fgContent,
                  Boolean(props.moreCnt) &&
                    createElement(
                      'div',
                      {
                        className: 'fc-daygrid-day-bottom',
                        style: { marginTop: props.moreMarginTop },
                      },
                      createElement(
                        RenderHook,
                        {
                          hookProps: hookProps,
                          classNames: options.moreLinkClassNames,
                          content: options.moreLinkContent,
                          defaultContent: renderMoreLinkInner,
                          didMount: options.moreLinkDidMount,
                          willUnmount: options.moreLinkWillUnmount,
                        },
                        function (
                          rootElRef,
                          classNames,
                          innerElRef,
                          innerContent
                        ) {
                          return createElement(
                            'a',
                            {
                              ref: rootElRef,
                              className: ['fc-daygrid-more-link']
                                .concat(classNames)
                                .join(' '),
                              onClick: _this.handleMoreLinkClick,
                            },
                            innerContent
                          )
                        }
                      )
                    )
                ),
                createElement(
                  'div',
                  { className: 'fc-daygrid-day-bg' },
                  props.bgContent
                )
              )
            )
          }
        )
      }
      return TableCell
    })(DateComponent)
    TableCell.addPropsEquality({
      onMoreClick: true,
    })

    function renderMoreLinkInner(props) {
      return props.text
    }

    var DEFAULT_TABLE_EVENT_TIME_FORMAT = createFormatter({
      hour: 'numeric',
      minute: '2-digit',
      omitZeroMinute: true,
      meridiem: 'narrow',
    })

    function hasListItemDisplay(seg) {
      var display = seg.eventRange.ui.display
      return (
        display === 'list-item' ||
        (display === 'auto' &&
          !seg.eventRange.def.allDay &&
          seg.firstCol === seg.lastCol && // can't be multi-day
          seg.isStart && // "
          seg.isEnd) // "
      )
    }

    var TableListItemEvent = /** @class */ (function (_super) {
      __extends(TableListItemEvent, _super)

      function TableListItemEvent() {
        return (_super !== null && _super.apply(this, arguments)) || this
      }

      TableListItemEvent.prototype.render = function () {
        var _a = this,
          props = _a.props,
          context = _a.context
        var timeFormat =
          context.options.eventTimeFormat || DEFAULT_TABLE_EVENT_TIME_FORMAT
        var timeText = buildSegTimeText(
          props.seg,
          timeFormat,
          context,
          true,
          props.defaultDisplayEventEnd
        )
        return createElement(
          EventRoot,
          {
            seg: props.seg,
            timeText: timeText,
            defaultContent: renderInnerContent$2,
            isDragging: props.isDragging,
            isResizing: false,
            isDateSelecting: false,
            isSelected: props.isSelected,
            isPast: props.isPast,
            isFuture: props.isFuture,
            isToday: props.isToday,
          },
          function (rootElRef, classNames, innerElRef, innerContent) {
            return (
              // we don't use styles!
              createElement(
                'a',
                __assign(
                  {
                    className: ['fc-daygrid-event', 'fc-daygrid-dot-event']
                      .concat(classNames)
                      .join(' '),
                    ref: rootElRef,
                  },
                  getSegAnchorAttrs$1(props.seg)
                ),
                innerContent
              )
            )
          }
        )
      }
      return TableListItemEvent
    })(BaseComponent)

    function renderInnerContent$2(innerProps) {
      return createElement(
        Fragment,
        null,
        createElement('div', {
          className: 'fc-daygrid-event-dot',
          style: {
            borderColor: innerProps.borderColor || innerProps.backgroundColor,
          },
        }),
        innerProps.timeText &&
          createElement(
            'div',
            { className: 'fc-event-time' },
            innerProps.timeText
          ),
        createElement(
          'div',
          { className: 'fc-event-title' },
          innerProps.event.title || createElement(Fragment, null, '\u00A0')
        )
      )
    }

    function getSegAnchorAttrs$1(seg) {
      var url = seg.eventRange.def.url
      return url ? { href: url } : {}
    }

    var TableBlockEvent = /** @class */ (function (_super) {
      __extends(TableBlockEvent, _super)

      function TableBlockEvent() {
        return (_super !== null && _super.apply(this, arguments)) || this
      }

      TableBlockEvent.prototype.render = function () {
        var props = this.props
        return createElement(
          StandardEvent,
          __assign({}, props, {
            extraClassNames: [
              'fc-daygrid-event',
              'fc-daygrid-block-event',
              'fc-h-event',
            ],
            defaultTimeFormat: DEFAULT_TABLE_EVENT_TIME_FORMAT,
            defaultDisplayEventEnd: props.defaultDisplayEventEnd,
            disableResizing: !props.seg.eventRange.def.allDay,
          })
        )
      }
      return TableBlockEvent
    })(BaseComponent)

    function computeFgSegPlacement( // for one row. TODO: print mode?
      cellModels,
      segs,
      dayMaxEvents,
      dayMaxEventRows,
      eventHeights,
      maxContentHeight,
      colCnt,
      eventOrderSpecs
    ) {
      var colPlacements = [] // if event spans multiple cols, its present in each col
      var moreCnts = [] // by-col
      var segIsHidden = {}
      var segTops = {} // always populated for each seg
      var segMarginTops = {} // simetimes populated for each seg
      var moreTops = {}
      var paddingBottoms = {} // for each cell's inner-wrapper div
      for (var i = 0; i < colCnt; i += 1) {
        colPlacements.push([])
        moreCnts.push(0)
      }
      segs = sortEventSegs(segs, eventOrderSpecs)
      for (var _i = 0, segs_1 = segs; _i < segs_1.length; _i++) {
        var seg = segs_1[_i]
        var instanceId = seg.eventRange.instance.instanceId
        var eventHeight = eventHeights[instanceId + ':' + seg.firstCol]
        placeSeg(seg, eventHeight || 0) // will keep colPlacements sorted by top
      }
      if (dayMaxEvents === true || dayMaxEventRows === true) {
        limitByMaxHeight(moreCnts, segIsHidden, colPlacements, maxContentHeight) // populates moreCnts/segIsHidden
      } else if (typeof dayMaxEvents === 'number') {
        limitByMaxEvents(moreCnts, segIsHidden, colPlacements, dayMaxEvents) // populates moreCnts/segIsHidden
      } else if (typeof dayMaxEventRows === 'number') {
        limitByMaxRows(moreCnts, segIsHidden, colPlacements, dayMaxEventRows) // populates moreCnts/segIsHidden
      }
      // computes segTops/segMarginTops/moreTops/paddingBottoms
      for (var col = 0; col < colCnt; col += 1) {
        var placements = colPlacements[col]
        var currentNonAbsBottom = 0
        var currentAbsHeight = 0
        for (
          var _a = 0, placements_1 = placements;
          _a < placements_1.length;
          _a++
        ) {
          var placement = placements_1[_a]
          var seg = placement.seg
          if (!segIsHidden[seg.eventRange.instance.instanceId]) {
            segTops[seg.eventRange.instance.instanceId] = placement.top // from top of container
            if (seg.firstCol === seg.lastCol && seg.isStart && seg.isEnd) {
              // TODO: simpler way? NOT DRY
              segMarginTops[seg.eventRange.instance.instanceId] =
                placement.top - currentNonAbsBottom // from previous seg bottom
              currentAbsHeight = 0
              currentNonAbsBottom = placement.bottom
            } else {
              // multi-col event, abs positioned
              currentAbsHeight = placement.bottom - currentNonAbsBottom
            }
          }
        }
        if (currentAbsHeight) {
          if (moreCnts[col]) {
            moreTops[col] = currentAbsHeight
          } else {
            paddingBottoms[col] = currentAbsHeight
          }
        }
      }

      function placeSeg(seg, segHeight) {
        if (!tryPlaceSegAt(seg, segHeight, 0)) {
          for (var col = seg.firstCol; col <= seg.lastCol; col += 1) {
            for (var _i = 0, _a = colPlacements[col]; _i < _a.length; _i++) {
              // will repeat multi-day segs!!!!!!! bad!!!!!!
              var placement = _a[_i]
              if (tryPlaceSegAt(seg, segHeight, placement.bottom)) {
                return
              }
            }
          }
        }
      }

      function tryPlaceSegAt(seg, segHeight, top) {
        if (canPlaceSegAt(seg, segHeight, top)) {
          for (var col = seg.firstCol; col <= seg.lastCol; col += 1) {
            var placements = colPlacements[col]
            var insertionIndex = 0
            while (
              insertionIndex < placements.length &&
              top >= placements[insertionIndex].top
            ) {
              insertionIndex += 1
            }
            placements.splice(insertionIndex, 0, {
              seg: seg,
              top: top,
              bottom: top + segHeight,
            })
          }
          return true
        }
        return false
      }

      function canPlaceSegAt(seg, segHeight, top) {
        for (var col = seg.firstCol; col <= seg.lastCol; col += 1) {
          for (var _i = 0, _a = colPlacements[col]; _i < _a.length; _i++) {
            var placement = _a[_i]
            if (top < placement.bottom && top + segHeight > placement.top) {
              // collide?
              return false
            }
          }
        }
        return true
      }

      // what does this do!?
      for (var instanceIdAndFirstCol in eventHeights) {
        if (!eventHeights[instanceIdAndFirstCol]) {
          segIsHidden[instanceIdAndFirstCol.split(':')[0]] = true
        }
      }
      var segsByFirstCol = colPlacements.map(extractFirstColSegs) // operates on the sorted cols
      var segsByEachCol = colPlacements.map(function (placements, col) {
        var segsForCols = extractAllColSegs(placements)
        segsForCols = resliceDaySegs(segsForCols, cellModels[col].date, col)
        return segsForCols
      })
      return {
        segsByFirstCol: segsByFirstCol,
        segsByEachCol: segsByEachCol,
        segIsHidden: segIsHidden,
        segTops: segTops,
        segMarginTops: segMarginTops,
        moreCnts: moreCnts,
        moreTops: moreTops,
        paddingBottoms: paddingBottoms,
      }
    }

    function extractFirstColSegs(oneColPlacements, col) {
      var segs = []
      for (
        var _i = 0, oneColPlacements_1 = oneColPlacements;
        _i < oneColPlacements_1.length;
        _i++
      ) {
        var placement = oneColPlacements_1[_i]
        if (placement.seg.firstCol === col) {
          segs.push(placement.seg)
        }
      }
      return segs
    }

    function extractAllColSegs(oneColPlacements) {
      var segs = []
      for (
        var _i = 0, oneColPlacements_2 = oneColPlacements;
        _i < oneColPlacements_2.length;
        _i++
      ) {
        var placement = oneColPlacements_2[_i]
        segs.push(placement.seg)
      }
      return segs
    }

    function limitByMaxHeight(
      hiddenCnts,
      segIsHidden,
      colPlacements,
      maxContentHeight
    ) {
      limitEvents(
        hiddenCnts,
        segIsHidden,
        colPlacements,
        true,
        function (placement) {
          return placement.bottom <= maxContentHeight
        }
      )
    }

    function limitByMaxEvents(
      hiddenCnts,
      segIsHidden,
      colPlacements,
      dayMaxEvents
    ) {
      limitEvents(
        hiddenCnts,
        segIsHidden,
        colPlacements,
        false,
        function (placement, levelIndex) {
          return levelIndex < dayMaxEvents
        }
      )
    }

    function limitByMaxRows(
      hiddenCnts,
      segIsHidden,
      colPlacements,
      dayMaxEventRows
    ) {
      limitEvents(
        hiddenCnts,
        segIsHidden,
        colPlacements,
        true,
        function (placement, levelIndex) {
          return levelIndex < dayMaxEventRows
        }
      )
    }

    /*
    populates the given hiddenCnts/segIsHidden, which are supplied empty.
    TODO: return them instead
    */
    function limitEvents(
      hiddenCnts,
      segIsHidden,
      colPlacements,
      _moreLinkConsumesLevel,
      isPlacementInBounds
    ) {
      var colCnt = hiddenCnts.length
      var segIsVisible = {} // TODO: instead, use segIsHidden with true/false?
      var visibleColPlacements = [] // will mirror colPlacements
      for (var col = 0; col < colCnt; col += 1) {
        visibleColPlacements.push([])
      }
      for (var col = 0; col < colCnt; col += 1) {
        var placements = colPlacements[col]
        var level = 0
        for (
          var _i = 0, placements_2 = placements;
          _i < placements_2.length;
          _i++
        ) {
          var placement = placements_2[_i]
          if (isPlacementInBounds(placement, level)) {
            recordVisible(placement)
          } else {
            recordHidden(placement, level, _moreLinkConsumesLevel)
          }
          // only considered a level if the seg had height
          if (placement.top !== placement.bottom) {
            level += 1
          }
        }
      }

      function recordVisible(placement) {
        var seg = placement.seg
        var instanceId = seg.eventRange.instance.instanceId
        if (!segIsVisible[instanceId]) {
          segIsVisible[instanceId] = true
          for (var col = seg.firstCol; col <= seg.lastCol; col += 1) {
            var destPlacements = visibleColPlacements[col]
            var newPosition = 0
            // insert while keeping top sorted in each column
            while (
              newPosition < destPlacements.length &&
              placement.top >= destPlacements[newPosition].top
            ) {
              newPosition += 1
            }
            destPlacements.splice(newPosition, 0, placement)
          }
        }
      }

      function recordHidden(placement, currentLevel, moreLinkConsumesLevel) {
        var seg = placement.seg
        var instanceId = seg.eventRange.instance.instanceId
        if (!segIsHidden[instanceId]) {
          segIsHidden[instanceId] = true
          for (var col = seg.firstCol; col <= seg.lastCol; col += 1) {
            hiddenCnts[col] += 1
            var hiddenCnt = hiddenCnts[col]
            if (moreLinkConsumesLevel && hiddenCnt === 1 && currentLevel > 0) {
              var doomedLevel = currentLevel - 1
              while (visibleColPlacements[col].length > doomedLevel) {
                recordHidden(
                  visibleColPlacements[col].pop(), // removes
                  visibleColPlacements[col].length, // will execute after the pop. will be the index of the removed placement
                  false
                )
              }
            }
          }
        }
      }
    }

    // Given the events within an array of segment objects, reslice them to be in a single day
    function resliceDaySegs(segs, dayDate, colIndex) {
      var dayStart = dayDate
      var dayEnd = addDays(dayStart, 1)
      var dayRange = { start: dayStart, end: dayEnd }
      var newSegs = []
      for (var _i = 0, segs_2 = segs; _i < segs_2.length; _i++) {
        var seg = segs_2[_i]
        var eventRange = seg.eventRange
        var origRange = eventRange.range
        var slicedRange = intersectRanges(origRange, dayRange)
        if (slicedRange) {
          newSegs.push(
            __assign(__assign({}, seg), {
              firstCol: colIndex,
              lastCol: colIndex,
              eventRange: {
                def: eventRange.def,
                ui: __assign(__assign({}, eventRange.ui), {
                  durationEditable: false,
                }),
                instance: eventRange.instance,
                range: slicedRange,
              },
              isStart:
                seg.isStart &&
                slicedRange.start.valueOf() === origRange.start.valueOf(),
              isEnd:
                seg.isEnd &&
                slicedRange.end.valueOf() === origRange.end.valueOf(),
            })
          )
        }
      }
      return newSegs
    }

    var TableRow = /** @class */ (function (_super) {
      __extends(TableRow, _super)

      function TableRow() {
        var _this = (_super !== null && _super.apply(this, arguments)) || this
        _this.cellElRefs = new RefMap() // the <td>
        _this.frameElRefs = new RefMap() // the fc-daygrid-day-frame
        _this.fgElRefs = new RefMap() // the fc-daygrid-day-events
        _this.segHarnessRefs = new RefMap() // indexed by "instanceId:firstCol"
        _this.rootElRef = createRef()
        _this.state = {
          framePositions: null,
          maxContentHeight: null,
          segHeights: {},
        }
        return _this
      }

      TableRow.prototype.render = function () {
        var _this = this
        var _a = this,
          props = _a.props,
          state = _a.state,
          context = _a.context
        var colCnt = props.cells.length
        var businessHoursByCol = splitSegsByFirstCol(
          props.businessHourSegs,
          colCnt
        )
        var bgEventSegsByCol = splitSegsByFirstCol(props.bgEventSegs, colCnt)
        var highlightSegsByCol = splitSegsByFirstCol(
          this.getHighlightSegs(),
          colCnt
        )
        var mirrorSegsByCol = splitSegsByFirstCol(this.getMirrorSegs(), colCnt)
        var _b = computeFgSegPlacement(
            props.cells,
            props.fgEventSegs,
            props.dayMaxEvents,
            props.dayMaxEventRows,
            state.segHeights,
            state.maxContentHeight,
            colCnt,
            context.options.eventOrder
          ),
          paddingBottoms = _b.paddingBottoms,
          segsByFirstCol = _b.segsByFirstCol,
          segsByEachCol = _b.segsByEachCol,
          segIsHidden = _b.segIsHidden,
          segTops = _b.segTops,
          segMarginTops = _b.segMarginTops,
          moreCnts = _b.moreCnts,
          moreTops = _b.moreTops
        var selectedInstanceHash = // TODO: messy way to compute this
          (props.eventDrag && props.eventDrag.affectedInstances) ||
          (props.eventResize && props.eventResize.affectedInstances) ||
          {}
        return createElement(
          'tr',
          { ref: this.rootElRef },
          props.renderIntro && props.renderIntro(),
          props.cells.map(function (cell, col) {
            var normalFgNodes = _this.renderFgSegs(
              segsByFirstCol[col],
              segIsHidden,
              segTops,
              segMarginTops,
              selectedInstanceHash,
              props.todayRange
            )
            var mirrorFgNodes = _this.renderFgSegs(
              mirrorSegsByCol[col],
              {},
              segTops, // use same tops as real rendering
              {},
              {},
              props.todayRange,
              Boolean(props.eventDrag),
              Boolean(props.eventResize),
              false
            )
            return createElement(TableCell, {
              key: cell.key,
              elRef: _this.cellElRefs.createRef(cell.key),
              innerElRef: _this.frameElRefs.createRef(
                cell.key
              ) /* FF <td> problem, but okay to use for left/right. TODO: rename prop */,
              dateProfile: props.dateProfile,
              date: cell.date,
              showDayNumber: props.showDayNumbers,
              showWeekNumber: props.showWeekNumbers && col === 0,
              forceDayTop:
                props.showWeekNumbers /* even displaying weeknum for row, not necessarily day */,
              todayRange: props.todayRange,
              extraHookProps: cell.extraHookProps,
              extraDataAttrs: cell.extraDataAttrs,
              extraClassNames: cell.extraClassNames,
              moreCnt: moreCnts[col],
              buildMoreLinkText: props.buildMoreLinkText,
              onMoreClick: function (arg) {
                props.onMoreClick(__assign(__assign({}, arg), { fromCol: col }))
              },
              segIsHidden: segIsHidden,
              moreMarginTop: moreTops[col] /* rename */,
              segsByEachCol: segsByEachCol[col],
              fgPaddingBottom: paddingBottoms[col],
              fgContentElRef: _this.fgElRefs.createRef(cell.key),
              // Fragment scopes the keys
              fgContent: createElement(
                Fragment,
                null,
                createElement(Fragment, null, normalFgNodes),
                createElement(Fragment, null, mirrorFgNodes)
              ),
              // Fragment scopes the keys
              bgContent: createElement(
                Fragment,
                null,
                _this.renderFillSegs(highlightSegsByCol[col], 'highlight'),
                _this.renderFillSegs(businessHoursByCol[col], 'non-business'),
                _this.renderFillSegs(bgEventSegsByCol[col], 'bg-event')
              ),
            })
          })
        )
      }
      TableRow.prototype.componentDidMount = function () {
        this.updateSizing(true)
      }
      TableRow.prototype.componentDidUpdate = function (prevProps, prevState) {
        var currentProps = this.props
        this.updateSizing(!isPropsEqual(prevProps, currentProps))
      }
      TableRow.prototype.getHighlightSegs = function () {
        var props = this.props
        if (props.eventDrag && props.eventDrag.segs.length) {
          // messy check
          return props.eventDrag.segs
        }
        if (props.eventResize && props.eventResize.segs.length) {
          // messy check
          return props.eventResize.segs
        }
        return props.dateSelectionSegs
      }
      TableRow.prototype.getMirrorSegs = function () {
        var props = this.props
        if (props.eventResize && props.eventResize.segs.length) {
          // messy check
          return props.eventResize.segs
        }
        return []
      }
      TableRow.prototype.renderFgSegs = function (
        segs,
        segIsHidden, // does NOT mean display:hidden
        segTops,
        segMarginTops,
        selectedInstanceHash,
        todayRange,
        isDragging,
        isResizing,
        isDateSelecting
      ) {
        var context = this.context
        var eventSelection = this.props.eventSelection
        var framePositions = this.state.framePositions
        var defaultDisplayEventEnd = this.props.cells.length === 1 // colCnt === 1
        var nodes = []
        if (framePositions) {
          for (var _i = 0, segs_1 = segs; _i < segs_1.length; _i++) {
            var seg = segs_1[_i]
            var instanceId = seg.eventRange.instance.instanceId
            var isMirror = isDragging || isResizing || isDateSelecting
            var isSelected = selectedInstanceHash[instanceId]
            var isInvisible = segIsHidden[instanceId] || isSelected
            // TODO: simpler way? NOT DRY
            var isAbsolute =
              segIsHidden[instanceId] ||
              isMirror ||
              seg.firstCol !== seg.lastCol ||
              !seg.isStart ||
              !seg.isEnd
            var marginTop = void 0
            var top_1 = void 0
            var left = void 0
            var right = void 0
            if (isAbsolute) {
              top_1 = segTops[instanceId]
              if (context.isRtl) {
                right = 0
                left =
                  framePositions.lefts[seg.lastCol] -
                  framePositions.lefts[seg.firstCol]
              } else {
                left = 0
                right =
                  framePositions.rights[seg.firstCol] -
                  framePositions.rights[seg.lastCol]
              }
            } else {
              marginTop = segMarginTops[instanceId]
            }
            /*
                    known bug: events that are force to be list-item but span multiple days still take up space in later columns
                    */
            nodes.push(
              createElement(
                'div',
                {
                  className:
                    'fc-daygrid-event-harness' +
                    (isAbsolute ? ' fc-daygrid-event-harness-abs' : ''),
                  key: instanceId, // in print mode when in mult cols, could collide
                  ref: isMirror
                    ? null
                    : this.segHarnessRefs.createRef(
                        instanceId + ':' + seg.firstCol
                      ),
                  style: {
                    visibility: isInvisible ? 'hidden' : '',
                    marginTop: marginTop || '',
                    top: top_1 || '',
                    left: left || '',
                    right: right || '',
                  },
                },
                hasListItemDisplay(seg)
                  ? createElement(
                      TableListItemEvent,
                      __assign(
                        {
                          seg: seg,
                          isDragging: isDragging,
                          isSelected: instanceId === eventSelection,
                          defaultDisplayEventEnd: defaultDisplayEventEnd,
                        },
                        getSegMeta(seg, todayRange)
                      )
                    )
                  : createElement(
                      TableBlockEvent,
                      __assign(
                        {
                          seg: seg,
                          isDragging: isDragging,
                          isResizing: isResizing,
                          isDateSelecting: isDateSelecting,
                          isSelected: instanceId === eventSelection,
                          defaultDisplayEventEnd: defaultDisplayEventEnd,
                        },
                        getSegMeta(seg, todayRange)
                      )
                    )
              )
            )
          }
        }
        return nodes
      }
      TableRow.prototype.renderFillSegs = function (segs, fillType) {
        var isRtl = this.context.isRtl
        var todayRange = this.props.todayRange
        var framePositions = this.state.framePositions
        var nodes = []
        if (framePositions) {
          for (var _i = 0, segs_2 = segs; _i < segs_2.length; _i++) {
            var seg = segs_2[_i]
            var leftRightCss = isRtl
              ? {
                  right: 0,
                  left:
                    framePositions.lefts[seg.lastCol] -
                    framePositions.lefts[seg.firstCol],
                }
              : {
                  left: 0,
                  right:
                    framePositions.rights[seg.firstCol] -
                    framePositions.rights[seg.lastCol],
                }
            nodes.push(
              createElement(
                'div',
                {
                  key: buildEventRangeKey(seg.eventRange),
                  className: 'fc-daygrid-bg-harness',
                  style: leftRightCss,
                },
                fillType === 'bg-event'
                  ? createElement(
                      BgEvent,
                      __assign({ seg: seg }, getSegMeta(seg, todayRange))
                    )
                  : renderFill(fillType)
              )
            )
          }
        }
        return createElement.apply(
          void 0,
          __spreadArrays([Fragment, {}], nodes)
        )
      }
      TableRow.prototype.updateSizing = function (isExternalSizingChange) {
        var _a = this,
          props = _a.props,
          frameElRefs = _a.frameElRefs
        if (props.clientWidth !== null) {
          // positioning ready?
          if (isExternalSizingChange) {
            var frameEls = props.cells.map(function (cell) {
              return frameElRefs.currentMap[cell.key]
            })
            if (frameEls.length) {
              var originEl = this.rootElRef.current
              this.setState({
                framePositions: new PositionCache(
                  originEl,
                  frameEls,
                  true, // isHorizontal
                  false
                ),
              })
            }
          }
          var limitByContentHeight =
            props.dayMaxEvents === true || props.dayMaxEventRows === true
          this.setState({
            segHeights: this.computeSegHeights(),
            maxContentHeight: limitByContentHeight
              ? this.computeMaxContentHeight()
              : null,
          })
        }
      }
      TableRow.prototype.computeSegHeights = function () {
        return mapHash(
          this.segHarnessRefs.currentMap,
          function (eventHarnessEl) {
            return eventHarnessEl.getBoundingClientRect().height
          }
        )
      }
      TableRow.prototype.computeMaxContentHeight = function () {
        var firstKey = this.props.cells[0].key
        var cellEl = this.cellElRefs.currentMap[firstKey]
        var fcContainerEl = this.fgElRefs.currentMap[firstKey]
        return (
          cellEl.getBoundingClientRect().bottom -
          fcContainerEl.getBoundingClientRect().top
        )
      }
      TableRow.prototype.getCellEls = function () {
        var elMap = this.cellElRefs.currentMap
        return this.props.cells.map(function (cell) {
          return elMap[cell.key]
        })
      }
      return TableRow
    })(DateComponent)
    TableRow.addPropsEquality({
      onMoreClick: true,
    })
    TableRow.addStateEquality({
      segHeights: isPropsEqual,
    })

    var PADDING_FROM_VIEWPORT = 10
    var SCROLL_DEBOUNCE = 10
    var Popover = /** @class */ (function (_super) {
      __extends(Popover, _super)

      function Popover() {
        var _this = (_super !== null && _super.apply(this, arguments)) || this
        _this.repositioner = new DelayedRunner(_this.updateSize.bind(_this))
        _this.handleRootEl = function (el) {
          _this.rootEl = el
          if (_this.props.elRef) {
            setRef(_this.props.elRef, el)
          }
        }
        // Triggered when the user clicks *anywhere* in the document, for the autoHide feature
        _this.handleDocumentMousedown = function (ev) {
          var onClose = _this.props.onClose
          // only hide the popover if the click happened outside the popover
          if (onClose && !_this.rootEl.contains(ev.target)) {
            onClose()
          }
        }
        _this.handleDocumentScroll = function () {
          _this.repositioner.request(SCROLL_DEBOUNCE)
        }
        _this.handleCloseClick = function () {
          var onClose = _this.props.onClose
          if (onClose) {
            onClose()
          }
        }
        return _this
      }

      Popover.prototype.render = function () {
        var theme = this.context.theme
        var props = this.props
        var classNames = ['fc-popover', theme.getClass('popover')].concat(
          props.extraClassNames || []
        )
        return createElement(
          'div',
          __assign({ className: classNames.join(' ') }, props.extraAttrs, {
            ref: this.handleRootEl,
          }),
          createElement(
            'div',
            {
              className: 'fc-popover-header ' + theme.getClass('popoverHeader'),
            },
            createElement(
              'span',
              { className: 'fc-popover-title' },
              props.title
            ),
            createElement('span', {
              className: 'fc-popover-close ' + theme.getIconClass('close'),
              onClick: this.handleCloseClick,
            })
          ),
          createElement(
            'div',
            {
              className: 'fc-popover-body ' + theme.getClass('popoverContent'),
            },
            props.children
          )
        )
      }
      Popover.prototype.componentDidMount = function () {
        document.addEventListener('mousedown', this.handleDocumentMousedown)
        document.addEventListener('scroll', this.handleDocumentScroll)
        this.updateSize()
      }
      Popover.prototype.componentWillUnmount = function () {
        document.removeEventListener('mousedown', this.handleDocumentMousedown)
        document.removeEventListener('scroll', this.handleDocumentScroll)
      }
      // TODO: adjust on window resize
      /*
        NOTE: the popover is position:fixed, so coordinates are relative to the viewport
        NOTE: the PARENT calls this as well, on window resize. we would have wanted to use the repositioner,
              but need to ensure that all other components have updated size first (for alignmentEl)
        */
      Popover.prototype.updateSize = function () {
        var _a = this.props,
          alignmentEl = _a.alignmentEl,
          topAlignmentEl = _a.topAlignmentEl
        var rootEl = this.rootEl
        if (!rootEl) {
          return // not sure why this was null, but we shouldn't let external components call updateSize() anyway
        }
        var dims = rootEl.getBoundingClientRect() // only used for width,height
        var alignment = alignmentEl.getBoundingClientRect()
        var top = topAlignmentEl
          ? topAlignmentEl.getBoundingClientRect().top
          : alignment.top
        top = Math.min(
          top,
          window.innerHeight - dims.height - PADDING_FROM_VIEWPORT
        )
        top = Math.max(top, PADDING_FROM_VIEWPORT)
        var left
        if (this.context.isRtl) {
          left = alignment.right - dims.width
        } else {
          left = alignment.left
        }
        left = Math.min(
          left,
          window.innerWidth - dims.width - PADDING_FROM_VIEWPORT
        )
        left = Math.max(left, PADDING_FROM_VIEWPORT)
        applyStyle(rootEl, { top: top, left: left })
      }
      return Popover
    })(BaseComponent)

    var MorePopover = /** @class */ (function (_super) {
      __extends(MorePopover, _super)

      function MorePopover() {
        var _this = (_super !== null && _super.apply(this, arguments)) || this
        _this.rootElRef = createRef()
        return _this
      }

      MorePopover.prototype.render = function () {
        var _a = this.context,
          options = _a.options,
          dateEnv = _a.dateEnv
        var props = this.props
        var date = props.date,
          hiddenInstances = props.hiddenInstances,
          todayRange = props.todayRange,
          dateProfile = props.dateProfile,
          selectedInstanceId = props.selectedInstanceId
        var title = dateEnv.format(date, options.dayPopoverFormat)
        return createElement(
          DayCellRoot,
          {
            date: date,
            dateProfile: dateProfile,
            todayRange: todayRange,
            elRef: this.rootElRef,
          },
          function (rootElRef, dayClassNames, dataAttrs) {
            return createElement(
              Popover,
              {
                elRef: rootElRef,
                title: title,
                extraClassNames: ['fc-more-popover'].concat(dayClassNames),
                extraAttrs: dataAttrs,
                onClose: props.onCloseClick,
                alignmentEl: props.alignmentEl,
                topAlignmentEl: props.topAlignmentEl,
              },
              createElement(
                DayCellContent,
                {
                  date: date,
                  dateProfile: dateProfile,
                  todayRange: todayRange,
                },
                function (innerElRef, innerContent) {
                  return (
                    innerContent &&
                    createElement(
                      'div',
                      {
                        className: 'fc-more-popover-misc',
                        ref: innerElRef,
                      },
                      innerContent
                    )
                  )
                }
              ),
              props.segs.map(function (seg) {
                var instanceId = seg.eventRange.instance.instanceId
                return createElement(
                  'div',
                  {
                    className: 'fc-daygrid-event-harness',
                    key: instanceId,
                    style: {
                      visibility: hiddenInstances[instanceId] ? 'hidden' : '',
                    },
                  },
                  hasListItemDisplay(seg)
                    ? createElement(
                        TableListItemEvent,
                        __assign(
                          {
                            seg: seg,
                            isDragging: false,
                            isSelected: instanceId === selectedInstanceId,
                            defaultDisplayEventEnd: false,
                          },
                          getSegMeta(seg, todayRange)
                        )
                      )
                    : createElement(
                        TableBlockEvent,
                        __assign(
                          {
                            seg: seg,
                            isDragging: false,
                            isResizing: false,
                            isDateSelecting: false,
                            isSelected: instanceId === selectedInstanceId,
                            defaultDisplayEventEnd: false,
                          },
                          getSegMeta(seg, todayRange)
                        )
                      )
                )
              })
            )
          }
        )
      }
      MorePopover.prototype.positionToHit = function (
        positionLeft,
        positionTop,
        originEl
      ) {
        var rootEl = this.rootElRef.current
        if (!originEl || !rootEl) {
          // why?
          return null
        }
        var originRect = originEl.getBoundingClientRect()
        var elRect = rootEl.getBoundingClientRect()
        var newOriginLeft = elRect.left - originRect.left
        var newOriginTop = elRect.top - originRect.top
        var localLeft = positionLeft - newOriginLeft
        var localTop = positionTop - newOriginTop
        var date = this.props.date
        if (
          // ugly way to detect intersection
          localLeft >= 0 &&
          localLeft < elRect.width &&
          localTop >= 0 &&
          localTop < elRect.height
        ) {
          return {
            dateSpan: {
              allDay: true,
              range: { start: date, end: addDays(date, 1) },
            },
            dayEl: rootEl,
            relativeRect: {
              left: newOriginLeft,
              top: newOriginTop,
              right: elRect.width,
              bottom: elRect.height,
            },
            layer: 1,
          }
        }
        return null
      }
      return MorePopover
    })(DateComponent)

    var Table = /** @class */ (function (_super) {
      __extends(Table, _super)

      function Table() {
        var _this = (_super !== null && _super.apply(this, arguments)) || this
        _this.splitBusinessHourSegs = memoize(splitSegsByRow)
        _this.splitBgEventSegs = memoize(splitSegsByRow)
        _this.splitFgEventSegs = memoize(splitSegsByRow)
        _this.splitDateSelectionSegs = memoize(splitSegsByRow)
        _this.splitEventDrag = memoize(splitInteractionByRow)
        _this.splitEventResize = memoize(splitInteractionByRow)
        _this.buildBuildMoreLinkText = memoize(buildBuildMoreLinkText)
        _this.morePopoverRef = createRef()
        _this.rowRefs = new RefMap()
        _this.state = {
          morePopoverState: null,
        }
        _this.handleRootEl = function (rootEl) {
          _this.rootEl = rootEl
          setRef(_this.props.elRef, rootEl)
        }
        // TODO: bad names "more link click" versus "more click"
        _this.handleMoreLinkClick = function (arg) {
          var context = _this.context
          var dateEnv = context.dateEnv
          var clickOption = context.options.moreLinkClick

          function segForPublic(seg) {
            var _a = seg.eventRange,
              def = _a.def,
              instance = _a.instance,
              range = _a.range
            return {
              event: new EventApi(context, def, instance),
              start: dateEnv.toDate(range.start),
              end: dateEnv.toDate(range.end),
              isStart: seg.isStart,
              isEnd: seg.isEnd,
            }
          }

          if (typeof clickOption === 'function') {
            clickOption = clickOption({
              date: dateEnv.toDate(arg.date),
              allDay: true,
              allSegs: arg.allSegs.map(segForPublic),
              hiddenSegs: arg.hiddenSegs.map(segForPublic),
              jsEvent: arg.ev,
              view: context.viewApi,
            }) // hack to handle void
          }
          if (!clickOption || clickOption === 'popover') {
            _this.setState({
              morePopoverState: __assign(__assign({}, arg), {
                currentFgEventSegs: _this.props.fgEventSegs,
                fromRow: arg.fromRow,
                fromCol: arg.fromCol,
              }),
            })
          } else if (typeof clickOption === 'string') {
            // a view name
            context.calendarApi.zoomTo(arg.date, clickOption)
          }
        }
        _this.handleMorePopoverClose = function () {
          _this.setState({
            morePopoverState: null,
          })
        }
        return _this
      }

      Table.prototype.render = function () {
        var _this = this
        var props = this.props
        var dateProfile = props.dateProfile,
          dayMaxEventRows = props.dayMaxEventRows,
          dayMaxEvents = props.dayMaxEvents,
          expandRows = props.expandRows
        var morePopoverState = this.state.morePopoverState
        var rowCnt = props.cells.length
        var businessHourSegsByRow = this.splitBusinessHourSegs(
          props.businessHourSegs,
          rowCnt
        )
        var bgEventSegsByRow = this.splitBgEventSegs(props.bgEventSegs, rowCnt)
        var fgEventSegsByRow = this.splitFgEventSegs(props.fgEventSegs, rowCnt)
        var dateSelectionSegsByRow = this.splitDateSelectionSegs(
          props.dateSelectionSegs,
          rowCnt
        )
        var eventDragByRow = this.splitEventDrag(props.eventDrag, rowCnt)
        var eventResizeByRow = this.splitEventResize(props.eventResize, rowCnt)
        var buildMoreLinkText = this.buildBuildMoreLinkText(
          this.context.options.moreLinkText
        )
        var limitViaBalanced = dayMaxEvents === true || dayMaxEventRows === true
        // if rows can't expand to fill fixed height, can't do balanced-height event limit
        // TODO: best place to normalize these options?
        if (limitViaBalanced && !expandRows) {
          limitViaBalanced = false
          dayMaxEventRows = null
          dayMaxEvents = null
        }
        var classNames = [
          'fc-daygrid-body',
          limitViaBalanced
            ? 'fc-daygrid-body-balanced'
            : 'fc-daygrid-body-unbalanced',
          expandRows ? '' : 'fc-daygrid-body-natural',
        ]
        return createElement(
          'div',
          {
            className: classNames.join(' '),
            ref: this.handleRootEl,
            style: {
              // these props are important to give this wrapper correct dimensions for interactions
              // TODO: if we set it here, can we avoid giving to inner tables?
              width: props.clientWidth,
              minWidth: props.tableMinWidth,
            },
          },
          createElement(
            NowTimer,
            { unit: 'day' },
            function (nowDate, todayRange) {
              return createElement(
                Fragment,
                null,
                createElement(
                  'table',
                  {
                    className: 'fc-scrollgrid-sync-table',
                    style: {
                      width: props.clientWidth,
                      minWidth: props.tableMinWidth,
                      height: expandRows ? props.clientHeight : '',
                    },
                  },
                  props.colGroupNode,
                  createElement(
                    'tbody',
                    null,
                    props.cells.map(function (cells, row) {
                      return createElement(TableRow, {
                        ref: _this.rowRefs.createRef(row),
                        key: cells.length
                          ? cells[0].date.toISOString() /* best? or put key on cell? or use diff formatter? */
                          : row, // in case there are no cells (like when resource view is loading)
                        showDayNumbers: rowCnt > 1,
                        showWeekNumbers: props.showWeekNumbers,
                        todayRange: todayRange,
                        dateProfile: dateProfile,
                        cells: cells,
                        renderIntro: props.renderRowIntro,
                        businessHourSegs: businessHourSegsByRow[row],
                        eventSelection: props.eventSelection,
                        bgEventSegs:
                          bgEventSegsByRow[row].filter(isSegAllDay) /* hack */,
                        fgEventSegs: fgEventSegsByRow[row],
                        dateSelectionSegs: dateSelectionSegsByRow[row],
                        eventDrag: eventDragByRow[row],
                        eventResize: eventResizeByRow[row],
                        dayMaxEvents: dayMaxEvents,
                        dayMaxEventRows: dayMaxEventRows,
                        clientWidth: props.clientWidth,
                        clientHeight: props.clientHeight,
                        buildMoreLinkText: buildMoreLinkText,
                        onMoreClick: function (arg) {
                          _this.handleMoreLinkClick(
                            __assign(__assign({}, arg), { fromRow: row })
                          )
                        },
                      })
                    })
                  )
                ),
                !props.forPrint &&
                  morePopoverState &&
                  morePopoverState.currentFgEventSegs === props.fgEventSegs &&
                  createElement(MorePopover, {
                    ref: _this.morePopoverRef,
                    date: morePopoverState.date,
                    dateProfile: dateProfile,
                    segs: morePopoverState.allSegs,
                    alignmentEl: morePopoverState.dayEl,
                    topAlignmentEl:
                      rowCnt === 1 ? props.headerAlignElRef.current : null,
                    onCloseClick: _this.handleMorePopoverClose,
                    selectedInstanceId: props.eventSelection,
                    // yuck
                    hiddenInstances:
                      (props.eventDrag
                        ? props.eventDrag.affectedInstances
                        : null) ||
                      (props.eventResize
                        ? props.eventResize.affectedInstances
                        : null) ||
                      {},
                    todayRange: todayRange,
                  })
              )
            }
          )
        )
      }
      // Hit System
      // ----------------------------------------------------------------------------------------------------
      Table.prototype.prepareHits = function () {
        this.rowPositions = new PositionCache(
          this.rootEl,
          this.rowRefs.collect().map(function (rowObj) {
            return rowObj.getCellEls()[0]
          }), // first cell el in each row. TODO: not optimal
          false,
          true
        )
        this.colPositions = new PositionCache(
          this.rootEl,
          this.rowRefs.currentMap[0].getCellEls(), // cell els in first row
          true, // horizontal
          false
        )
      }
      Table.prototype.positionToHit = function (leftPosition, topPosition) {
        var morePopover = this.morePopoverRef.current
        var morePopoverHit = morePopover
          ? morePopover.positionToHit(leftPosition, topPosition, this.rootEl)
          : null
        var morePopoverState = this.state.morePopoverState
        if (morePopoverHit) {
          return __assign(
            { row: morePopoverState.fromRow, col: morePopoverState.fromCol },
            morePopoverHit
          )
        }
        var _a = this,
          colPositions = _a.colPositions,
          rowPositions = _a.rowPositions
        var col = colPositions.leftToIndex(leftPosition)
        var row = rowPositions.topToIndex(topPosition)
        if (row != null && col != null) {
          return {
            row: row,
            col: col,
            dateSpan: {
              range: this.getCellRange(row, col),
              allDay: true,
            },
            dayEl: this.getCellEl(row, col),
            relativeRect: {
              left: colPositions.lefts[col],
              right: colPositions.rights[col],
              top: rowPositions.tops[row],
              bottom: rowPositions.bottoms[row],
            },
          }
        }
        return null
      }
      Table.prototype.getCellEl = function (row, col) {
        return this.rowRefs.currentMap[row].getCellEls()[col] // TODO: not optimal
      }
      Table.prototype.getCellRange = function (row, col) {
        var start = this.props.cells[row][col].date
        var end = addDays(start, 1)
        return { start: start, end: end }
      }
      return Table
    })(DateComponent)

    function buildBuildMoreLinkText(moreLinkTextInput) {
      if (typeof moreLinkTextInput === 'function') {
        return moreLinkTextInput
      }
      return function (num) {
        return '+' + num + ' ' + moreLinkTextInput
      }
    }

    function isSegAllDay(seg) {
      return seg.eventRange.def.allDay
    }

    var DayTableSlicer = /** @class */ (function (_super) {
      __extends(DayTableSlicer, _super)

      function DayTableSlicer() {
        var _this = (_super !== null && _super.apply(this, arguments)) || this
        _this.forceDayIfListItem = true
        return _this
      }

      DayTableSlicer.prototype.sliceRange = function (
        dateRange,
        dayTableModel
      ) {
        return dayTableModel.sliceRange(dateRange)
      }
      return DayTableSlicer
    })(Slicer)

    var DayTable = /** @class */ (function (_super) {
      __extends(DayTable, _super)

      function DayTable() {
        var _this = (_super !== null && _super.apply(this, arguments)) || this
        _this.slicer = new DayTableSlicer()
        _this.tableRef = createRef()
        _this.handleRootEl = function (rootEl) {
          if (rootEl) {
            _this.context.registerInteractiveComponent(_this, { el: rootEl })
          } else {
            _this.context.unregisterInteractiveComponent(_this)
          }
        }
        return _this
      }

      DayTable.prototype.render = function () {
        var _a = this,
          props = _a.props,
          context = _a.context
        return createElement(
          Table,
          __assign(
            {
              ref: this.tableRef,
              elRef: this.handleRootEl,
            },
            this.slicer.sliceProps(
              props,
              props.dateProfile,
              props.nextDayThreshold,
              context,
              props.dayTableModel
            ),
            {
              dateProfile: props.dateProfile,
              cells: props.dayTableModel.cells,
              colGroupNode: props.colGroupNode,
              tableMinWidth: props.tableMinWidth,
              renderRowIntro: props.renderRowIntro,
              dayMaxEvents: props.dayMaxEvents,
              dayMaxEventRows: props.dayMaxEventRows,
              showWeekNumbers: props.showWeekNumbers,
              expandRows: props.expandRows,
              headerAlignElRef: props.headerAlignElRef,
              clientWidth: props.clientWidth,
              clientHeight: props.clientHeight,
              forPrint: props.forPrint,
            }
          )
        )
      }
      DayTable.prototype.prepareHits = function () {
        this.tableRef.current.prepareHits()
      }
      DayTable.prototype.queryHit = function (positionLeft, positionTop) {
        var rawHit = this.tableRef.current.positionToHit(
          positionLeft,
          positionTop
        )
        if (rawHit) {
          return {
            component: this,
            dateSpan: rawHit.dateSpan,
            dayEl: rawHit.dayEl,
            rect: {
              left: rawHit.relativeRect.left,
              right: rawHit.relativeRect.right,
              top: rawHit.relativeRect.top,
              bottom: rawHit.relativeRect.bottom,
            },
            layer: 0,
          }
        }
        return null
      }
      return DayTable
    })(DateComponent)

    var DayTableView = /** @class */ (function (_super) {
      __extends(DayTableView, _super)

      function DayTableView() {
        var _this = (_super !== null && _super.apply(this, arguments)) || this
        _this.buildDayTableModel = memoize(buildDayTableModel)
        _this.headerRef = createRef()
        _this.tableRef = createRef()
        return _this
      }

      DayTableView.prototype.render = function () {
        var _this = this
        var _a = this.context,
          options = _a.options,
          dateProfileGenerator = _a.dateProfileGenerator
        var props = this.props
        var dayTableModel = this.buildDayTableModel(
          props.dateProfile,
          dateProfileGenerator
        )
        var headerContent =
          options.dayHeaders &&
          createElement(DayHeader, {
            ref: this.headerRef,
            dateProfile: props.dateProfile,
            dates: dayTableModel.headerDates,
            datesRepDistinctDays: dayTableModel.rowCnt === 1,
          })
        var bodyContent = function (contentArg) {
          return createElement(DayTable, {
            ref: _this.tableRef,
            dateProfile: props.dateProfile,
            dayTableModel: dayTableModel,
            businessHours: props.businessHours,
            dateSelection: props.dateSelection,
            eventStore: props.eventStore,
            eventUiBases: props.eventUiBases,
            eventSelection: props.eventSelection,
            eventDrag: props.eventDrag,
            eventResize: props.eventResize,
            nextDayThreshold: options.nextDayThreshold,
            colGroupNode: contentArg.tableColGroupNode,
            tableMinWidth: contentArg.tableMinWidth,
            dayMaxEvents: options.dayMaxEvents,
            dayMaxEventRows: options.dayMaxEventRows,
            showWeekNumbers: options.weekNumbers,
            expandRows: !props.isHeightAuto,
            headerAlignElRef: _this.headerElRef,
            clientWidth: contentArg.clientWidth,
            clientHeight: contentArg.clientHeight,
            forPrint: props.forPrint,
          })
        }
        return options.dayMinWidth
          ? this.renderHScrollLayout(
              headerContent,
              bodyContent,
              dayTableModel.colCnt,
              options.dayMinWidth
            )
          : this.renderSimpleLayout(headerContent, bodyContent)
      }
      return DayTableView
    })(TableView)

    function buildDayTableModel(dateProfile, dateProfileGenerator) {
      var daySeries = new DaySeriesModel(
        dateProfile.renderRange,
        dateProfileGenerator
      )
      return new DayTableModel(
        daySeries,
        /year|month|week/.test(dateProfile.currentRangeUnit)
      )
    }

    var TableDateProfileGenerator = /** @class */ (function (_super) {
      __extends(TableDateProfileGenerator, _super)

      function TableDateProfileGenerator() {
        return (_super !== null && _super.apply(this, arguments)) || this
      }

      // Computes the date range that will be rendered.
      TableDateProfileGenerator.prototype.buildRenderRange = function (
        currentRange,
        currentRangeUnit,
        isRangeAllDay
      ) {
        var dateEnv = this.props.dateEnv
        var renderRange = _super.prototype.buildRenderRange.call(
          this,
          currentRange,
          currentRangeUnit,
          isRangeAllDay
        )
        var start = renderRange.start
        var end = renderRange.end
        var endOfWeek
        // year and month views should be aligned with weeks. this is already done for week
        if (/^(year|month)$/.test(currentRangeUnit)) {
          start = dateEnv.startOfWeek(start)
          // make end-of-week if not already
          endOfWeek = dateEnv.startOfWeek(end)
          if (endOfWeek.valueOf() !== end.valueOf()) {
            end = addWeeks(endOfWeek, 1)
          }
        }
        // ensure 6 weeks
        if (this.props.monthMode && this.props.fixedWeekCount) {
          var rowCnt = Math.ceil(
            // could be partial weeks due to hiddenDays
            diffWeeks(start, end)
          )
          end = addWeeks(end, 6 - rowCnt)
        }
        return { start: start, end: end }
      }
      return TableDateProfileGenerator
    })(DateProfileGenerator)

    var OPTION_REFINERS$1 = {
      moreLinkClick: identity,
      moreLinkClassNames: identity,
      moreLinkContent: identity,
      moreLinkDidMount: identity,
      moreLinkWillUnmount: identity,
    }

    var dayGridPlugin = createPlugin({
      initialView: 'dayGridMonth',
      optionRefiners: OPTION_REFINERS$1,
      views: {
        dayGrid: {
          component: DayTableView,
          dateProfileGeneratorClass: TableDateProfileGenerator,
        },
        dayGridDay: {
          type: 'dayGrid',
          duration: { days: 1 },
        },
        dayGridWeek: {
          type: 'dayGrid',
          duration: { weeks: 1 },
        },
        dayGridMonth: {
          type: 'dayGrid',
          duration: { months: 1 },
          monthMode: true,
          fixedWeekCount: true,
        },
      },
    })

    var AllDaySplitter = /** @class */ (function (_super) {
      __extends(AllDaySplitter, _super)

      function AllDaySplitter() {
        return (_super !== null && _super.apply(this, arguments)) || this
      }

      AllDaySplitter.prototype.getKeyInfo = function () {
        return {
          allDay: {},
          timed: {},
        }
      }
      AllDaySplitter.prototype.getKeysForDateSpan = function (dateSpan) {
        if (dateSpan.allDay) {
          return ['allDay']
        }
        return ['timed']
      }
      AllDaySplitter.prototype.getKeysForEventDef = function (eventDef) {
        if (!eventDef.allDay) {
          return ['timed']
        }
        if (hasBgRendering(eventDef)) {
          return ['timed', 'allDay']
        }
        return ['allDay']
      }
      return AllDaySplitter
    })(Splitter)

    var DEFAULT_SLAT_LABEL_FORMAT = createFormatter({
      hour: 'numeric',
      minute: '2-digit',
      omitZeroMinute: true,
      meridiem: 'short',
    })

    function TimeColsAxisCell(props) {
      var classNames = [
        'fc-timegrid-slot',
        'fc-timegrid-slot-label',
        props.isLabeled ? 'fc-scrollgrid-shrink' : 'fc-timegrid-slot-minor',
      ]
      return createElement(ViewContextType.Consumer, null, function (context) {
        if (!props.isLabeled) {
          return createElement('td', {
            className: classNames.join(' '),
            'data-time': props.isoTimeStr,
          })
        }
        var dateEnv = context.dateEnv,
          options = context.options,
          viewApi = context.viewApi
        var labelFormat = // TODO: fully pre-parse
          options.slotLabelFormat == null
            ? DEFAULT_SLAT_LABEL_FORMAT
            : Array.isArray(options.slotLabelFormat)
            ? createFormatter(options.slotLabelFormat[0])
            : createFormatter(options.slotLabelFormat)
        var hookProps = {
          level: 0,
          time: props.time,
          date: dateEnv.toDate(props.date),
          view: viewApi,
          text: dateEnv.format(props.date, labelFormat),
        }
        return createElement(
          RenderHook,
          {
            hookProps: hookProps,
            classNames: options.slotLabelClassNames,
            content: options.slotLabelContent,
            defaultContent: renderInnerContent$3,
            didMount: options.slotLabelDidMount,
            willUnmount: options.slotLabelWillUnmount,
          },
          function (rootElRef, customClassNames, innerElRef, innerContent) {
            return createElement(
              'td',
              {
                ref: rootElRef,
                className: classNames.concat(customClassNames).join(' '),
                'data-time': props.isoTimeStr,
              },
              createElement(
                'div',
                {
                  className:
                    'fc-timegrid-slot-label-frame fc-scrollgrid-shrink-frame',
                },
                createElement(
                  'div',
                  {
                    className:
                      'fc-timegrid-slot-label-cushion fc-scrollgrid-shrink-cushion',
                    ref: innerElRef,
                  },
                  innerContent
                )
              )
            )
          }
        )
      })
    }

    function renderInnerContent$3(props) {
      return props.text
    }

    var TimeBodyAxis = /** @class */ (function (_super) {
      __extends(TimeBodyAxis, _super)

      function TimeBodyAxis() {
        return (_super !== null && _super.apply(this, arguments)) || this
      }

      TimeBodyAxis.prototype.render = function () {
        return this.props.slatMetas.map(function (slatMeta) {
          return createElement(
            'tr',
            { key: slatMeta.key },
            createElement(TimeColsAxisCell, __assign({}, slatMeta))
          )
        })
      }
      return TimeBodyAxis
    })(BaseComponent)

    var DEFAULT_WEEK_NUM_FORMAT$1 = createFormatter({ week: 'short' })
    var AUTO_ALL_DAY_MAX_EVENT_ROWS = 5
    var TimeColsView = /** @class */ (function (_super) {
      __extends(TimeColsView, _super)

      function TimeColsView() {
        var _this = (_super !== null && _super.apply(this, arguments)) || this
        _this.allDaySplitter = new AllDaySplitter() // for use by subclasses
        _this.headerElRef = createRef()
        _this.rootElRef = createRef()
        _this.scrollerElRef = createRef()
        _this.state = {
          slatCoords: null,
        }
        _this.handleScrollTopRequest = function (scrollTop) {
          var scrollerEl = _this.scrollerElRef.current
          if (scrollerEl) {
            // TODO: not sure how this could ever be null. weirdness with the reducer
            scrollerEl.scrollTop = scrollTop
          }
        }
        /* Header Render Methods
            ------------------------------------------------------------------------------------------------------------------*/
        _this.renderHeadAxis = function (rowKey, frameHeight) {
          if (frameHeight === void 0) {
            frameHeight = ''
          }
          var options = _this.context.options
          var dateProfile = _this.props.dateProfile
          var range = dateProfile.renderRange
          var dayCnt = diffDays(range.start, range.end)
          var navLinkAttrs =
            options.navLinks && dayCnt === 1 // only do in day views (to avoid doing in week views that dont need it)
              ? {
                  'data-navlink': buildNavLinkData(range.start, 'week'),
                  tabIndex: 0,
                }
              : {}
          if (options.weekNumbers && rowKey === 'day') {
            return createElement(
              WeekNumberRoot,
              {
                date: range.start,
                defaultFormat: DEFAULT_WEEK_NUM_FORMAT$1,
              },
              function (rootElRef, classNames, innerElRef, innerContent) {
                return createElement(
                  'th',
                  {
                    ref: rootElRef,
                    className: ['fc-timegrid-axis', 'fc-scrollgrid-shrink']
                      .concat(classNames)
                      .join(' '),
                  },
                  createElement(
                    'div',
                    {
                      className:
                        'fc-timegrid-axis-frame fc-scrollgrid-shrink-frame fc-timegrid-axis-frame-liquid',
                      style: { height: frameHeight },
                    },
                    createElement(
                      'a',
                      __assign(
                        {
                          ref: innerElRef,
                          className:
                            'fc-timegrid-axis-cushion fc-scrollgrid-shrink-cushion fc-scrollgrid-sync-inner',
                        },
                        navLinkAttrs
                      ),
                      innerContent
                    )
                  )
                )
              }
            )
          }
          return createElement(
            'th',
            { className: 'fc-timegrid-axis' },
            createElement('div', {
              className: 'fc-timegrid-axis-frame',
              style: { height: frameHeight },
            })
          )
        }
        /* Table Component Render Methods
            ------------------------------------------------------------------------------------------------------------------*/
        // only a one-way height sync. we don't send the axis inner-content height to the DayGrid,
        // but DayGrid still needs to have classNames on inner elements in order to measure.
        _this.renderTableRowAxis = function (rowHeight) {
          var _a = _this.context,
            options = _a.options,
            viewApi = _a.viewApi
          var hookProps = {
            text: options.allDayText,
            view: viewApi,
          }
          return (
            // TODO: make reusable hook. used in list view too
            createElement(
              RenderHook,
              {
                hookProps: hookProps,
                classNames: options.allDayClassNames,
                content: options.allDayContent,
                defaultContent: renderAllDayInner,
                didMount: options.allDayDidMount,
                willUnmount: options.allDayWillUnmount,
              },
              function (rootElRef, classNames, innerElRef, innerContent) {
                return createElement(
                  'td',
                  {
                    ref: rootElRef,
                    className: ['fc-timegrid-axis', 'fc-scrollgrid-shrink']
                      .concat(classNames)
                      .join(' '),
                  },
                  createElement(
                    'div',
                    {
                      className:
                        'fc-timegrid-axis-frame fc-scrollgrid-shrink-frame' +
                        (rowHeight == null
                          ? ' fc-timegrid-axis-frame-liquid'
                          : ''),
                      style: { height: rowHeight },
                    },
                    createElement(
                      'span',
                      {
                        className:
                          'fc-timegrid-axis-cushion fc-scrollgrid-shrink-cushion fc-scrollgrid-sync-inner',
                        ref: innerElRef,
                      },
                      innerContent
                    )
                  )
                )
              }
            )
          )
        }
        _this.handleSlatCoords = function (slatCoords) {
          _this.setState({ slatCoords: slatCoords })
        }
        return _this
      }

      // rendering
      // ----------------------------------------------------------------------------------------------------
      TimeColsView.prototype.renderSimpleLayout = function (
        headerRowContent,
        allDayContent,
        timeContent
      ) {
        var _a = this,
          context = _a.context,
          props = _a.props
        var sections = []
        var stickyHeaderDates = getStickyHeaderDates(context.options)
        if (headerRowContent) {
          sections.push({
            type: 'header',
            key: 'header',
            isSticky: stickyHeaderDates,
            chunk: {
              elRef: this.headerElRef,
              tableClassName: 'fc-col-header',
              rowContent: headerRowContent,
            },
          })
        }
        if (allDayContent) {
          sections.push({
            type: 'body',
            key: 'all-day',
            chunk: { content: allDayContent },
          })
          sections.push({
            type: 'body',
            key: 'all-day-divider',
            // TODO: rename to cellContent so don't need to define <tr>?
            outerContent: createElement(
              'tr',
              { className: 'fc-scrollgrid-section' },
              createElement('td', {
                className:
                  'fc-timegrid-divider ' +
                  context.theme.getClass('tableCellShaded'),
              })
            ),
          })
        }
        sections.push({
          type: 'body',
          key: 'body',
          liquid: true,
          expandRows: Boolean(context.options.expandRows),
          chunk: {
            scrollerElRef: this.scrollerElRef,
            content: timeContent,
          },
        })
        return createElement(
          ViewRoot,
          {
            viewSpec: context.viewSpec,
            elRef: this.rootElRef,
          },
          function (rootElRef, classNames) {
            return createElement(
              'div',
              {
                className: ['fc-timegrid'].concat(classNames).join(' '),
                ref: rootElRef,
              },
              createElement(SimpleScrollGrid, {
                liquid: !props.isHeightAuto && !props.forPrint,
                collapsibleWidth: props.forPrint,
                cols: [{ width: 'shrink' }],
                sections: sections,
              })
            )
          }
        )
      }
      TimeColsView.prototype.renderHScrollLayout = function (
        headerRowContent,
        allDayContent,
        timeContent,
        colCnt,
        dayMinWidth,
        slatMetas,
        slatCoords
      ) {
        var _this = this
        var ScrollGrid = this.context.pluginHooks.scrollGridImpl
        if (!ScrollGrid) {
          throw new Error('No ScrollGrid implementation')
        }
        var _a = this,
          context = _a.context,
          props = _a.props
        var stickyHeaderDates =
          !props.forPrint && getStickyHeaderDates(context.options)
        var stickyFooterScrollbar =
          !props.forPrint && getStickyFooterScrollbar(context.options)
        var sections = []
        if (headerRowContent) {
          sections.push({
            type: 'header',
            key: 'header',
            isSticky: stickyHeaderDates,
            syncRowHeights: true,
            chunks: [
              {
                key: 'axis',
                rowContent: function (arg) {
                  return createElement(
                    'tr',
                    null,
                    _this.renderHeadAxis('day', arg.rowSyncHeights[0])
                  )
                },
              },
              {
                key: 'cols',
                elRef: this.headerElRef,
                tableClassName: 'fc-col-header',
                rowContent: headerRowContent,
              },
            ],
          })
        }
        if (allDayContent) {
          sections.push({
            type: 'body',
            key: 'all-day',
            syncRowHeights: true,
            chunks: [
              {
                key: 'axis',
                rowContent: function (contentArg) {
                  return createElement(
                    'tr',
                    null,
                    _this.renderTableRowAxis(contentArg.rowSyncHeights[0])
                  )
                },
              },
              {
                key: 'cols',
                content: allDayContent,
              },
            ],
          })
          sections.push({
            key: 'all-day-divider',
            type: 'body',
            // TODO: rename to cellContent so don't need to define <tr>?
            outerContent: createElement(
              'tr',
              { className: 'fc-scrollgrid-section' },
              createElement('td', {
                colSpan: 2,
                className:
                  'fc-timegrid-divider ' +
                  context.theme.getClass('tableCellShaded'),
              })
            ),
          })
        }
        var isNowIndicator = context.options.nowIndicator
        sections.push({
          type: 'body',
          key: 'body',
          liquid: true,
          expandRows: Boolean(context.options.expandRows),
          chunks: [
            {
              key: 'axis',
              content: function (arg) {
                return (
                  // TODO: make this now-indicator arrow more DRY with TimeColsContent
                  createElement(
                    'div',
                    { className: 'fc-timegrid-axis-chunk' },
                    createElement(
                      'table',
                      {
                        style: {
                          height: arg.expandRows ? arg.clientHeight : '',
                        },
                      },
                      arg.tableColGroupNode,
                      createElement(
                        'tbody',
                        null,
                        createElement(TimeBodyAxis, { slatMetas: slatMetas })
                      )
                    ),
                    createElement(
                      'div',
                      { className: 'fc-timegrid-now-indicator-container' },
                      createElement(
                        NowTimer,
                        { unit: isNowIndicator ? 'minute' : 'day' /* hacky */ },
                        function (nowDate) {
                          var nowIndicatorTop =
                            isNowIndicator &&
                            slatCoords &&
                            slatCoords.safeComputeTop(nowDate) // might return void
                          if (typeof nowIndicatorTop === 'number') {
                            return createElement(
                              NowIndicatorRoot,
                              {
                                isAxis: true,
                                date: nowDate,
                              },
                              function (
                                rootElRef,
                                classNames,
                                innerElRef,
                                innerContent
                              ) {
                                return createElement(
                                  'div',
                                  {
                                    ref: rootElRef,
                                    className: [
                                      'fc-timegrid-now-indicator-arrow',
                                    ]
                                      .concat(classNames)
                                      .join(' '),
                                    style: { top: nowIndicatorTop },
                                  },
                                  innerContent
                                )
                              }
                            )
                          }
                          return null
                        }
                      )
                    )
                  )
                )
              },
            },
            {
              key: 'cols',
              scrollerElRef: this.scrollerElRef,
              content: timeContent,
            },
          ],
        })
        if (stickyFooterScrollbar) {
          sections.push({
            key: 'footer',
            type: 'footer',
            isSticky: true,
            chunks: [
              {
                key: 'axis',
                content: renderScrollShim,
              },
              {
                key: 'cols',
                content: renderScrollShim,
              },
            ],
          })
        }
        return createElement(
          ViewRoot,
          {
            viewSpec: context.viewSpec,
            elRef: this.rootElRef,
          },
          function (rootElRef, classNames) {
            return createElement(
              'div',
              {
                className: ['fc-timegrid'].concat(classNames).join(' '),
                ref: rootElRef,
              },
              createElement(ScrollGrid, {
                liquid: !props.isHeightAuto && !props.forPrint,
                collapsibleWidth: false,
                colGroups: [
                  { width: 'shrink', cols: [{ width: 'shrink' }] },
                  {
                    cols: [
                      {
                        span: colCnt,
                        minWidth: dayMinWidth,
                      },
                    ],
                  },
                ],
                sections: sections,
              })
            )
          }
        )
      }
      /* Dimensions
        ------------------------------------------------------------------------------------------------------------------*/
      TimeColsView.prototype.getAllDayMaxEventProps = function () {
        var _a = this.context.options,
          dayMaxEvents = _a.dayMaxEvents,
          dayMaxEventRows = _a.dayMaxEventRows
        if (dayMaxEvents === true || dayMaxEventRows === true) {
          // is auto?
          dayMaxEvents = undefined
          dayMaxEventRows = AUTO_ALL_DAY_MAX_EVENT_ROWS // make sure "auto" goes to a real number
        }
        return { dayMaxEvents: dayMaxEvents, dayMaxEventRows: dayMaxEventRows }
      }
      return TimeColsView
    })(DateComponent)

    function renderAllDayInner(hookProps) {
      return hookProps.text
    }

    var TimeColsSlatsCoords = /** @class */ (function () {
      function TimeColsSlatsCoords(positions, dateProfile, slotDuration) {
        this.positions = positions
        this.dateProfile = dateProfile
        this.slotDuration = slotDuration
      }

      TimeColsSlatsCoords.prototype.safeComputeTop = function (date) {
        var dateProfile = this.dateProfile
        if (rangeContainsMarker(dateProfile.currentRange, date)) {
          var startOfDayDate = startOfDay(date)
          var timeMs = date.valueOf() - startOfDayDate.valueOf()
          if (
            timeMs >= asRoughMs(dateProfile.slotMinTime) &&
            timeMs < asRoughMs(dateProfile.slotMaxTime)
          ) {
            return this.computeTimeTop(createDuration(timeMs))
          }
        }
        return null
      }
      // Computes the top coordinate, relative to the bounds of the grid, of the given date.
      // A `startOfDayDate` must be given for avoiding ambiguity over how to treat midnight.
      TimeColsSlatsCoords.prototype.computeDateTop = function (
        when,
        startOfDayDate
      ) {
        if (!startOfDayDate) {
          startOfDayDate = startOfDay(when)
        }
        return this.computeTimeTop(
          createDuration(when.valueOf() - startOfDayDate.valueOf())
        )
      }
      // Computes the top coordinate, relative to the bounds of the grid, of the given time (a Duration).
      // This is a makeshify way to compute the time-top. Assumes all slatMetas dates are uniform.
      // Eventually allow computation with arbirary slat dates.
      TimeColsSlatsCoords.prototype.computeTimeTop = function (duration) {
        var _a = this,
          positions = _a.positions,
          dateProfile = _a.dateProfile
        var len = positions.els.length
        // floating-point value of # of slots covered
        var slatCoverage =
          (duration.milliseconds - asRoughMs(dateProfile.slotMinTime)) /
          asRoughMs(this.slotDuration)
        var slatIndex
        var slatRemainder
        // compute a floating-point number for how many slats should be progressed through.
        // from 0 to number of slats (inclusive)
        // constrained because slotMinTime/slotMaxTime might be customized.
        slatCoverage = Math.max(0, slatCoverage)
        slatCoverage = Math.min(len, slatCoverage)
        // an integer index of the furthest whole slat
        // from 0 to number slats (*exclusive*, so len-1)
        slatIndex = Math.floor(slatCoverage)
        slatIndex = Math.min(slatIndex, len - 1)
        // how much further through the slatIndex slat (from 0.0-1.0) must be covered in addition.
        // could be 1.0 if slatCoverage is covering *all* the slots
        slatRemainder = slatCoverage - slatIndex
        return (
          positions.tops[slatIndex] +
          positions.getHeight(slatIndex) * slatRemainder
        )
      }
      return TimeColsSlatsCoords
    })()

    var TimeColsSlatsBody = /** @class */ (function (_super) {
      __extends(TimeColsSlatsBody, _super)

      function TimeColsSlatsBody() {
        return (_super !== null && _super.apply(this, arguments)) || this
      }

      TimeColsSlatsBody.prototype.render = function () {
        var _a = this,
          props = _a.props,
          context = _a.context
        var options = context.options
        var slatElRefs = props.slatElRefs
        return createElement(
          'tbody',
          null,
          props.slatMetas.map(function (slatMeta, i) {
            var hookProps = {
              time: slatMeta.time,
              date: context.dateEnv.toDate(slatMeta.date),
              view: context.viewApi,
            }
            var classNames = [
              'fc-timegrid-slot',
              'fc-timegrid-slot-lane',
              slatMeta.isLabeled ? '' : 'fc-timegrid-slot-minor',
            ]
            return createElement(
              'tr',
              {
                key: slatMeta.key,
                ref: slatElRefs.createRef(slatMeta.key),
              },
              props.axis &&
                createElement(TimeColsAxisCell, __assign({}, slatMeta)),
              createElement(
                RenderHook,
                {
                  hookProps: hookProps,
                  classNames: options.slotLaneClassNames,
                  content: options.slotLaneContent,
                  didMount: options.slotLaneDidMount,
                  willUnmount: options.slotLaneWillUnmount,
                },
                function (
                  rootElRef,
                  customClassNames,
                  innerElRef,
                  innerContent
                ) {
                  return createElement(
                    'td',
                    {
                      ref: rootElRef,
                      className: classNames.concat(customClassNames).join(' '),
                      'data-time': slatMeta.isoTimeStr,
                    },
                    innerContent
                  )
                }
              )
            )
          })
        )
      }
      return TimeColsSlatsBody
    })(BaseComponent)

    /*
    for the horizontal "slats" that run width-wise. Has a time axis on a side. Depends on RTL.
    */
    var TimeColsSlats = /** @class */ (function (_super) {
      __extends(TimeColsSlats, _super)

      function TimeColsSlats() {
        var _this = (_super !== null && _super.apply(this, arguments)) || this
        _this.rootElRef = createRef()
        _this.slatElRefs = new RefMap()
        return _this
      }

      TimeColsSlats.prototype.render = function () {
        var _a = this,
          props = _a.props,
          context = _a.context
        return createElement(
          'div',
          { className: 'fc-timegrid-slots', ref: this.rootElRef },
          createElement(
            'table',
            {
              className: context.theme.getClass('table'),
              style: {
                minWidth: props.tableMinWidth,
                width: props.clientWidth,
                height: props.minHeight,
              },
            },
            props.tableColGroupNode /* relies on there only being a single <col> for the axis */,
            createElement(TimeColsSlatsBody, {
              slatElRefs: this.slatElRefs,
              axis: props.axis,
              slatMetas: props.slatMetas,
            })
          )
        )
      }
      TimeColsSlats.prototype.componentDidMount = function () {
        this.updateSizing()
      }
      TimeColsSlats.prototype.componentDidUpdate = function () {
        this.updateSizing()
      }
      TimeColsSlats.prototype.componentWillUnmount = function () {
        if (this.props.onCoords) {
          this.props.onCoords(null)
        }
      }
      TimeColsSlats.prototype.updateSizing = function () {
        var _a = this,
          context = _a.context,
          props = _a.props
        if (
          props.onCoords &&
          props.clientWidth !== null // means sizing has stabilized
        ) {
          var rootEl = this.rootElRef.current
          if (rootEl.offsetHeight) {
            // not hidden by css
            props.onCoords(
              new TimeColsSlatsCoords(
                new PositionCache(
                  this.rootElRef.current,
                  collectSlatEls(this.slatElRefs.currentMap, props.slatMetas),
                  false,
                  true
                ),
                this.props.dateProfile,
                context.options.slotDuration
              )
            )
          }
        }
      }
      return TimeColsSlats
    })(BaseComponent)

    function collectSlatEls(elMap, slatMetas) {
      return slatMetas.map(function (slatMeta) {
        return elMap[slatMeta.key]
      })
    }

    function splitSegsByCol(segs, colCnt) {
      var segsByCol = []
      var i
      for (i = 0; i < colCnt; i += 1) {
        segsByCol.push([])
      }
      if (segs) {
        for (i = 0; i < segs.length; i += 1) {
          segsByCol[segs[i].col].push(segs[i])
        }
      }
      return segsByCol
    }

    function splitInteractionByCol(ui, colCnt) {
      var byRow = []
      if (!ui) {
        for (var i = 0; i < colCnt; i += 1) {
          byRow[i] = null
        }
      } else {
        for (var i = 0; i < colCnt; i += 1) {
          byRow[i] = {
            affectedInstances: ui.affectedInstances,
            isEvent: ui.isEvent,
            segs: [],
          }
        }
        for (var _i = 0, _a = ui.segs; _i < _a.length; _i++) {
          var seg = _a[_i]
          byRow[seg.col].segs.push(seg)
        }
      }
      return byRow
    }

    // UNFORTUNATELY, assigns results to the top/bottom/level/forwardCoord/backwardCoord props of the actual segs.
    // TODO: return hash (by instanceId) of results
    function computeSegCoords(
      segs,
      dayDate,
      slatCoords,
      eventMinHeight,
      eventOrderSpecs
    ) {
      computeSegVerticals(segs, dayDate, slatCoords, eventMinHeight)
      return computeSegHorizontals(segs, eventOrderSpecs) // requires top/bottom from computeSegVerticals
    }

    // For each segment in an array, computes and assigns its top and bottom properties
    function computeSegVerticals(segs, dayDate, slatCoords, eventMinHeight) {
      for (var _i = 0, segs_1 = segs; _i < segs_1.length; _i++) {
        var seg = segs_1[_i]
        seg.top = slatCoords.computeDateTop(seg.start, dayDate)
        seg.bottom = Math.max(
          seg.top + (eventMinHeight || 0), // yuck
          slatCoords.computeDateTop(seg.end, dayDate)
        )
      }
    }

    // Given an array of segments that are all in the same column, sets the backwardCoord and forwardCoord on each.
    // Assumed the segs are already ordered.
    // NOTE: Also reorders the given array by date!
    function computeSegHorizontals(segs, eventOrderSpecs) {
      // IMPORTANT TO CLEAR OLD RESULTS :(
      for (var _i = 0, segs_2 = segs; _i < segs_2.length; _i++) {
        var seg = segs_2[_i]
        seg.level = null
        seg.forwardCoord = null
        seg.backwardCoord = null
        seg.forwardPressure = null
      }
      segs = sortEventSegs(segs, eventOrderSpecs)
      var level0
      var levels = buildSlotSegLevels(segs)
      computeForwardSlotSegs(levels)
      if ((level0 = levels[0])) {
        for (var _a = 0, level0_1 = level0; _a < level0_1.length; _a++) {
          var seg = level0_1[_a]
          computeSlotSegPressures(seg)
        }
        for (var _b = 0, level0_2 = level0; _b < level0_2.length; _b++) {
          var seg = level0_2[_b]
          computeSegForwardBack(seg, 0, 0, eventOrderSpecs)
        }
      }
      return segs
    }

    // Builds an array of segments "levels". The first level will be the leftmost tier of segments if the calendar is
    // left-to-right, or the rightmost if the calendar is right-to-left. Assumes the segments are already ordered by date.
    function buildSlotSegLevels(segs) {
      var levels = []
      var i
      var seg
      var j
      for (i = 0; i < segs.length; i += 1) {
        seg = segs[i]
        // go through all the levels and stop on the first level where there are no collisions
        for (j = 0; j < levels.length; j += 1) {
          if (!computeSlotSegCollisions(seg, levels[j]).length) {
            break
          }
        }
        seg.level = j
        ;(levels[j] || (levels[j] = [])).push(seg)
      }
      return levels
    }

    // Find all the segments in `otherSegs` that vertically collide with `seg`.
    // Append into an optionally-supplied `results` array and return.
    function computeSlotSegCollisions(seg, otherSegs, results) {
      if (results === void 0) {
        results = []
      }
      for (var i = 0; i < otherSegs.length; i += 1) {
        if (isSlotSegCollision(seg, otherSegs[i])) {
          results.push(otherSegs[i])
        }
      }
      return results
    }

    // Do these segments occupy the same vertical space?
    function isSlotSegCollision(seg1, seg2) {
      return seg1.bottom > seg2.top && seg1.top < seg2.bottom
    }

    // For every segment, figure out the other segments that are in subsequent
    // levels that also occupy the same vertical space. Accumulate in seg.forwardSegs
    function computeForwardSlotSegs(levels) {
      var i
      var level
      var j
      var seg
      var k
      for (i = 0; i < levels.length; i += 1) {
        level = levels[i]
        for (j = 0; j < level.length; j += 1) {
          seg = level[j]
          seg.forwardSegs = []
          for (k = i + 1; k < levels.length; k += 1) {
            computeSlotSegCollisions(seg, levels[k], seg.forwardSegs)
          }
        }
      }
    }

    // Figure out which path forward (via seg.forwardSegs) results in the longest path until
    // the furthest edge is reached. The number of segments in this path will be seg.forwardPressure
    function computeSlotSegPressures(seg) {
      var forwardSegs = seg.forwardSegs
      var forwardPressure = 0
      var i
      var forwardSeg
      if (seg.forwardPressure == null) {
        // not already computed
        for (i = 0; i < forwardSegs.length; i += 1) {
          forwardSeg = forwardSegs[i]
          // figure out the child's maximum forward path
          computeSlotSegPressures(forwardSeg)
          // either use the existing maximum, or use the child's forward pressure
          // plus one (for the forwardSeg itself)
          forwardPressure = Math.max(
            forwardPressure,
            1 + forwardSeg.forwardPressure
          )
        }
        seg.forwardPressure = forwardPressure
      }
    }

    // Calculate seg.forwardCoord and seg.backwardCoord for the segment, where both values range
    // from 0 to 1. If the calendar is left-to-right, the seg.backwardCoord maps to "left" and
    // seg.forwardCoord maps to "right" (via percentage). Vice-versa if the calendar is right-to-left.
    //
    // The segment might be part of a "series", which means consecutive segments with the same pressure
    // who's width is unknown until an edge has been hit. `seriesBackwardPressure` is the number of
    // segments behind this one in the current series, and `seriesBackwardCoord` is the starting
    // coordinate of the first segment in the series.
    function computeSegForwardBack(
      seg,
      seriesBackwardPressure,
      seriesBackwardCoord,
      eventOrderSpecs
    ) {
      var forwardSegs = seg.forwardSegs
      var i
      if (seg.forwardCoord == null) {
        // not already computed
        if (!forwardSegs.length) {
          // if there are no forward segments, this segment should butt up against the edge
          seg.forwardCoord = 1
        } else {
          // sort highest pressure first
          sortForwardSegs(forwardSegs, eventOrderSpecs)
          // this segment's forwardCoord will be calculated from the backwardCoord of the
          // highest-pressure forward segment.
          computeSegForwardBack(
            forwardSegs[0],
            seriesBackwardPressure + 1,
            seriesBackwardCoord,
            eventOrderSpecs
          )
          seg.forwardCoord = forwardSegs[0].backwardCoord
        }
        // calculate the backwardCoord from the forwardCoord. consider the series
        seg.backwardCoord =
          seg.forwardCoord -
          (seg.forwardCoord - seriesBackwardCoord) / // available width for series
            (seriesBackwardPressure + 1) // # of segments in the series
        // use this segment's coordinates to computed the coordinates of the less-pressurized
        // forward segments
        for (i = 0; i < forwardSegs.length; i += 1) {
          computeSegForwardBack(
            forwardSegs[i],
            0,
            seg.forwardCoord,
            eventOrderSpecs
          )
        }
      }
    }

    function sortForwardSegs(forwardSegs, eventOrderSpecs) {
      var objs = forwardSegs.map(buildTimeGridSegCompareObj)
      var specs = [
        // put higher-pressure first
        {
          field: 'forwardPressure',
          order: -1,
        }, // put segments that are closer to initial edge first (and favor ones with no coords yet)
        { field: 'backwardCoord', order: 1 },
      ].concat(eventOrderSpecs)
      objs.sort(function (obj0, obj1) {
        return compareByFieldSpecs(obj0, obj1, specs)
      })
      return objs.map(function (c) {
        return c._seg
      })
    }

    function buildTimeGridSegCompareObj(seg) {
      var obj = buildSegCompareObj(seg)
      obj.forwardPressure = seg.forwardPressure
      obj.backwardCoord = seg.backwardCoord
      return obj
    }

    var DEFAULT_TIME_FORMAT = createFormatter({
      hour: 'numeric',
      minute: '2-digit',
      meridiem: false,
    })
    var TimeColEvent = /** @class */ (function (_super) {
      __extends(TimeColEvent, _super)

      function TimeColEvent() {
        return (_super !== null && _super.apply(this, arguments)) || this
      }

      TimeColEvent.prototype.render = function () {
        var classNames = ['fc-timegrid-event', 'fc-v-event']
        if (this.props.isCondensed) {
          classNames.push('fc-timegrid-event-condensed')
        }
        return createElement(
          StandardEvent,
          __assign({}, this.props, {
            defaultTimeFormat: DEFAULT_TIME_FORMAT,
            extraClassNames: classNames,
          })
        )
      }
      return TimeColEvent
    })(BaseComponent)

    var TimeColMisc = /** @class */ (function (_super) {
      __extends(TimeColMisc, _super)

      function TimeColMisc() {
        return (_super !== null && _super.apply(this, arguments)) || this
      }

      TimeColMisc.prototype.render = function () {
        var props = this.props
        return createElement(
          DayCellContent,
          {
            date: props.date,
            dateProfile: props.dateProfile,
            todayRange: props.todayRange,
            extraHookProps: props.extraHookProps,
          },
          function (innerElRef, innerContent) {
            return (
              innerContent &&
              createElement(
                'div',
                {
                  className: 'fc-timegrid-col-misc',
                  ref: innerElRef,
                },
                innerContent
              )
            )
          }
        )
      }
      return TimeColMisc
    })(BaseComponent)

    config.timeGridEventCondensedHeight = 30
    var TimeCol = /** @class */ (function (_super) {
      __extends(TimeCol, _super)

      function TimeCol() {
        return (_super !== null && _super.apply(this, arguments)) || this
      }

      TimeCol.prototype.render = function () {
        var _this = this
        var _a = this,
          props = _a.props,
          context = _a.context
        var isSelectMirror = context.options.selectMirror
        var mirrorSegs =
          (props.eventDrag && props.eventDrag.segs) ||
          (props.eventResize && props.eventResize.segs) ||
          (isSelectMirror && props.dateSelectionSegs) ||
          []
        var interactionAffectedInstances = // TODO: messy way to compute this
          (props.eventDrag && props.eventDrag.affectedInstances) ||
          (props.eventResize && props.eventResize.affectedInstances) ||
          {}
        return createElement(
          DayCellRoot,
          {
            elRef: props.elRef,
            date: props.date,
            dateProfile: props.dateProfile,
            todayRange: props.todayRange,
            extraHookProps: props.extraHookProps,
          },
          function (rootElRef, classNames, dataAttrs) {
            return createElement(
              'td',
              __assign(
                {
                  ref: rootElRef,
                  className: ['fc-timegrid-col']
                    .concat(classNames, props.extraClassNames || [])
                    .join(' '),
                },
                dataAttrs,
                props.extraDataAttrs
              ),
              createElement(
                'div',
                { className: 'fc-timegrid-col-frame' },
                createElement(
                  'div',
                  { className: 'fc-timegrid-col-bg' },
                  _this.renderFillSegs(props.businessHourSegs, 'non-business'),
                  _this.renderFillSegs(props.bgEventSegs, 'bg-event'),
                  _this.renderFillSegs(props.dateSelectionSegs, 'highlight')
                ),
                createElement(
                  'div',
                  { className: 'fc-timegrid-col-events' },
                  _this.renderFgSegs(
                    props.fgEventSegs,
                    interactionAffectedInstances
                  )
                ),
                createElement(
                  'div',
                  { className: 'fc-timegrid-col-events' },
                  _this.renderFgSegs(
                    mirrorSegs,
                    {},
                    Boolean(props.eventDrag),
                    Boolean(props.eventResize),
                    Boolean(isSelectMirror)
                  )
                ),
                createElement(
                  'div',
                  { className: 'fc-timegrid-now-indicator-container' },
                  _this.renderNowIndicator(props.nowIndicatorSegs)
                ),
                createElement(TimeColMisc, {
                  date: props.date,
                  dateProfile: props.dateProfile,
                  todayRange: props.todayRange,
                  extraHookProps: props.extraHookProps,
                })
              )
            )
          }
        )
      }
      TimeCol.prototype.renderFgSegs = function (
        segs,
        segIsInvisible,
        isDragging,
        isResizing,
        isDateSelecting
      ) {
        var props = this.props
        if (props.forPrint) {
          return this.renderPrintFgSegs(segs)
        }
        if (props.slatCoords) {
          return this.renderPositionedFgSegs(
            segs,
            segIsInvisible,
            isDragging,
            isResizing,
            isDateSelecting
          )
        }
        return null
      }
      TimeCol.prototype.renderPrintFgSegs = function (segs) {
        var _a = this,
          props = _a.props,
          context = _a.context
        // not DRY
        segs = sortEventSegs(segs, context.options.eventOrder)
        return segs.map(function (seg) {
          return createElement(
            'div',
            {
              className: 'fc-timegrid-event-harness',
              key: seg.eventRange.instance.instanceId,
            },
            createElement(
              TimeColEvent,
              __assign(
                {
                  seg: seg,
                  isDragging: false,
                  isResizing: false,
                  isDateSelecting: false,
                  isSelected: false,
                  isCondensed: false,
                },
                getSegMeta(seg, props.todayRange, props.nowDate)
              )
            )
          )
        })
      }
      TimeCol.prototype.renderPositionedFgSegs = function (
        segs,
        segIsInvisible,
        isDragging,
        isResizing,
        isDateSelecting
      ) {
        var _this = this
        var _a = this,
          context = _a.context,
          props = _a.props
        // assigns TO THE SEGS THEMSELVES
        // also, receives resorted array
        segs = computeSegCoords(
          segs,
          props.date,
          props.slatCoords,
          context.options.eventMinHeight,
          context.options.eventOrder
        )
        return segs.map(function (seg) {
          var instanceId = seg.eventRange.instance.instanceId
          var isMirror = isDragging || isResizing || isDateSelecting
          var positionCss = isMirror
            ? // will span entire column width
              // also, won't assign z-index, which is good, fc-event-mirror will overpower other harnesses
              __assign({ left: 0, right: 0 }, _this.computeSegTopBottomCss(seg))
            : _this.computeFgSegPositionCss(seg)
          return createElement(
            'div',
            {
              className:
                'fc-timegrid-event-harness' +
                (seg.level > 0 ? ' fc-timegrid-event-harness-inset' : ''),
              key: instanceId,
              style: __assign(
                { visibility: segIsInvisible[instanceId] ? 'hidden' : '' },
                positionCss
              ),
            },
            createElement(
              TimeColEvent,
              __assign(
                {
                  seg: seg,
                  isDragging: isDragging,
                  isResizing: isResizing,
                  isDateSelecting: isDateSelecting,
                  isSelected: instanceId === props.eventSelection,
                  isCondensed:
                    seg.bottom - seg.top < config.timeGridEventCondensedHeight,
                },
                getSegMeta(seg, props.todayRange, props.nowDate)
              )
            )
          )
        })
      }
      TimeCol.prototype.renderFillSegs = function (segs, fillType) {
        var _this = this
        var _a = this,
          context = _a.context,
          props = _a.props
        if (!props.slatCoords) {
          return null
        }
        // BAD: assigns TO THE SEGS THEMSELVES
        computeSegVerticals(
          segs,
          props.date,
          props.slatCoords,
          context.options.eventMinHeight
        )
        var children = segs.map(function (seg) {
          return createElement(
            'div',
            {
              key: buildEventRangeKey(seg.eventRange),
              className: 'fc-timegrid-bg-harness',
              style: _this.computeSegTopBottomCss(seg),
            },
            fillType === 'bg-event'
              ? createElement(
                  BgEvent,
                  __assign(
                    { seg: seg },
                    getSegMeta(seg, props.todayRange, props.nowDate)
                  )
                )
              : renderFill(fillType)
          )
        })
        return createElement(Fragment, null, children)
      }
      TimeCol.prototype.renderNowIndicator = function (segs) {
        var _a = this.props,
          slatCoords = _a.slatCoords,
          date = _a.date
        if (!slatCoords) {
          return null
        }
        return segs.map(function (seg, i) {
          return createElement(
            NowIndicatorRoot,
            {
              isAxis: false,
              date: date, // key doesn't matter. will only ever be one
              key: i,
            },
            function (rootElRef, classNames, innerElRef, innerContent) {
              return createElement(
                'div',
                {
                  ref: rootElRef,
                  className: ['fc-timegrid-now-indicator-line']
                    .concat(classNames)
                    .join(' '),
                  style: { top: slatCoords.computeDateTop(seg.start, date) },
                },
                innerContent
              )
            }
          )
        })
      }
      TimeCol.prototype.computeFgSegPositionCss = function (seg) {
        var _a = this.context,
          isRtl = _a.isRtl,
          options = _a.options
        var shouldOverlap = options.slotEventOverlap
        var backwardCoord = seg.backwardCoord // the left side if LTR. the right side if RTL. floating-point
        var forwardCoord = seg.forwardCoord // the right side if LTR. the left side if RTL. floating-point
        var left // amount of space from left edge, a fraction of the total width
        var right // amount of space from right edge, a fraction of the total width
        if (shouldOverlap) {
          // double the width, but don't go beyond the maximum forward coordinate (1.0)
          forwardCoord = Math.min(
            1,
            backwardCoord + (forwardCoord - backwardCoord) * 2
          )
        }
        if (isRtl) {
          left = 1 - forwardCoord
          right = backwardCoord
        } else {
          left = backwardCoord
          right = 1 - forwardCoord
        }
        var props = {
          zIndex: seg.level + 1,
          left: left * 100 + '%',
          right: right * 100 + '%',
        }
        if (shouldOverlap && seg.forwardPressure) {
          // add padding to the edge so that forward stacked events don't cover the resizer's icon
          props[isRtl ? 'marginLeft' : 'marginRight'] = 10 * 2 // 10 is a guesstimate of the icon's width
        }
        return __assign(__assign({}, props), this.computeSegTopBottomCss(seg))
      }
      TimeCol.prototype.computeSegTopBottomCss = function (seg) {
        return {
          top: seg.top,
          bottom: -seg.bottom,
        }
      }
      return TimeCol
    })(BaseComponent)

    var TimeColsContent = /** @class */ (function (_super) {
      __extends(TimeColsContent, _super)

      function TimeColsContent() {
        var _this = (_super !== null && _super.apply(this, arguments)) || this
        _this.splitFgEventSegs = memoize(splitSegsByCol)
        _this.splitBgEventSegs = memoize(splitSegsByCol)
        _this.splitBusinessHourSegs = memoize(splitSegsByCol)
        _this.splitNowIndicatorSegs = memoize(splitSegsByCol)
        _this.splitDateSelectionSegs = memoize(splitSegsByCol)
        _this.splitEventDrag = memoize(splitInteractionByCol)
        _this.splitEventResize = memoize(splitInteractionByCol)
        _this.rootElRef = createRef()
        _this.cellElRefs = new RefMap()
        return _this
      }

      TimeColsContent.prototype.render = function () {
        var _this = this
        var _a = this,
          props = _a.props,
          context = _a.context
        var nowIndicatorTop =
          context.options.nowIndicator &&
          props.slatCoords &&
          props.slatCoords.safeComputeTop(props.nowDate) // might return void
        var colCnt = props.cells.length
        var fgEventSegsByRow = this.splitFgEventSegs(props.fgEventSegs, colCnt)
        var bgEventSegsByRow = this.splitBgEventSegs(props.bgEventSegs, colCnt)
        var businessHourSegsByRow = this.splitBusinessHourSegs(
          props.businessHourSegs,
          colCnt
        )
        var nowIndicatorSegsByRow = this.splitNowIndicatorSegs(
          props.nowIndicatorSegs,
          colCnt
        )
        var dateSelectionSegsByRow = this.splitDateSelectionSegs(
          props.dateSelectionSegs,
          colCnt
        )
        var eventDragByRow = this.splitEventDrag(props.eventDrag, colCnt)
        var eventResizeByRow = this.splitEventResize(props.eventResize, colCnt)
        return createElement(
          'div',
          { className: 'fc-timegrid-cols', ref: this.rootElRef },
          createElement(
            'table',
            {
              style: {
                minWidth: props.tableMinWidth,
                width: props.clientWidth,
              },
            },
            props.tableColGroupNode,
            createElement(
              'tbody',
              null,
              createElement(
                'tr',
                null,
                props.axis &&
                  createElement(
                    'td',
                    { className: 'fc-timegrid-col fc-timegrid-axis' },
                    createElement(
                      'div',
                      { className: 'fc-timegrid-col-frame' },
                      createElement(
                        'div',
                        { className: 'fc-timegrid-now-indicator-container' },
                        typeof nowIndicatorTop === 'number' &&
                          createElement(
                            NowIndicatorRoot,
                            {
                              isAxis: true,
                              date: props.nowDate,
                            },
                            function (
                              rootElRef,
                              classNames,
                              innerElRef,
                              innerContent
                            ) {
                              return createElement(
                                'div',
                                {
                                  ref: rootElRef,
                                  className: ['fc-timegrid-now-indicator-arrow']
                                    .concat(classNames)
                                    .join(' '),
                                  style: { top: nowIndicatorTop },
                                },
                                innerContent
                              )
                            }
                          )
                      )
                    )
                  ),
                props.cells.map(function (cell, i) {
                  return createElement(TimeCol, {
                    key: cell.key,
                    elRef: _this.cellElRefs.createRef(cell.key),
                    dateProfile: props.dateProfile,
                    date: cell.date,
                    nowDate: props.nowDate,
                    todayRange: props.todayRange,
                    extraHookProps: cell.extraHookProps,
                    extraDataAttrs: cell.extraDataAttrs,
                    extraClassNames: cell.extraClassNames,
                    fgEventSegs: fgEventSegsByRow[i],
                    bgEventSegs: bgEventSegsByRow[i],
                    businessHourSegs: businessHourSegsByRow[i],
                    nowIndicatorSegs: nowIndicatorSegsByRow[i],
                    dateSelectionSegs: dateSelectionSegsByRow[i],
                    eventDrag: eventDragByRow[i],
                    eventResize: eventResizeByRow[i],
                    slatCoords: props.slatCoords,
                    eventSelection: props.eventSelection,
                    forPrint: props.forPrint,
                  })
                })
              )
            )
          )
        )
      }
      TimeColsContent.prototype.componentDidMount = function () {
        this.updateCoords()
      }
      TimeColsContent.prototype.componentDidUpdate = function () {
        this.updateCoords()
      }
      TimeColsContent.prototype.updateCoords = function () {
        var props = this.props
        if (
          props.onColCoords &&
          props.clientWidth !== null // means sizing has stabilized
        ) {
          props.onColCoords(
            new PositionCache(
              this.rootElRef.current,
              collectCellEls(this.cellElRefs.currentMap, props.cells),
              true, // horizontal
              false
            )
          )
        }
      }
      return TimeColsContent
    })(BaseComponent)

    function collectCellEls(elMap, cells) {
      return cells.map(function (cell) {
        return elMap[cell.key]
      })
    }

    /* A component that renders one or more columns of vertical time slots
    ----------------------------------------------------------------------------------------------------------------------*/
    var TimeCols = /** @class */ (function (_super) {
      __extends(TimeCols, _super)

      function TimeCols() {
        var _this = (_super !== null && _super.apply(this, arguments)) || this
        _this.processSlotOptions = memoize(processSlotOptions)
        _this.state = {
          slatCoords: null,
        }
        _this.handleScrollRequest = function (request) {
          var onScrollTopRequest = _this.props.onScrollTopRequest
          var slatCoords = _this.state.slatCoords
          if (onScrollTopRequest && slatCoords) {
            if (request.time) {
              var top_1 = slatCoords.computeTimeTop(request.time)
              top_1 = Math.ceil(top_1) // zoom can give weird floating-point values. rather scroll a little bit further
              if (top_1) {
                top_1 += 1 // to overcome top border that slots beyond the first have. looks better
              }
              onScrollTopRequest(top_1)
            }
            return true
          }
          return false
        }
        _this.handleColCoords = function (colCoords) {
          _this.colCoords = colCoords
        }
        _this.handleSlatCoords = function (slatCoords) {
          _this.setState({ slatCoords: slatCoords })
          if (_this.props.onSlatCoords) {
            _this.props.onSlatCoords(slatCoords)
          }
        }
        return _this
      }

      TimeCols.prototype.render = function () {
        var _a = this,
          props = _a.props,
          state = _a.state
        return createElement(
          'div',
          {
            className: 'fc-timegrid-body',
            ref: props.rootElRef,
            style: {
              // these props are important to give this wrapper correct dimensions for interactions
              // TODO: if we set it here, can we avoid giving to inner tables?
              width: props.clientWidth,
              minWidth: props.tableMinWidth,
            },
          },
          createElement(TimeColsSlats, {
            axis: props.axis,
            dateProfile: props.dateProfile,
            slatMetas: props.slatMetas,
            clientWidth: props.clientWidth,
            minHeight: props.expandRows ? props.clientHeight : '',
            tableMinWidth: props.tableMinWidth,
            tableColGroupNode: props.axis
              ? props.tableColGroupNode
              : null /* axis depends on the colgroup's shrinking */,
            onCoords: this.handleSlatCoords,
          }),
          createElement(TimeColsContent, {
            cells: props.cells,
            axis: props.axis,
            dateProfile: props.dateProfile,
            businessHourSegs: props.businessHourSegs,
            bgEventSegs: props.bgEventSegs,
            fgEventSegs: props.fgEventSegs,
            dateSelectionSegs: props.dateSelectionSegs,
            eventSelection: props.eventSelection,
            eventDrag: props.eventDrag,
            eventResize: props.eventResize,
            todayRange: props.todayRange,
            nowDate: props.nowDate,
            nowIndicatorSegs: props.nowIndicatorSegs,
            clientWidth: props.clientWidth,
            tableMinWidth: props.tableMinWidth,
            tableColGroupNode: props.tableColGroupNode,
            slatCoords: state.slatCoords,
            onColCoords: this.handleColCoords,
            forPrint: props.forPrint,
          })
        )
      }
      TimeCols.prototype.componentDidMount = function () {
        this.scrollResponder = this.context.createScrollResponder(
          this.handleScrollRequest
        )
      }
      TimeCols.prototype.componentDidUpdate = function (prevProps) {
        this.scrollResponder.update(
          prevProps.dateProfile !== this.props.dateProfile
        )
      }
      TimeCols.prototype.componentWillUnmount = function () {
        this.scrollResponder.detach()
      }
      TimeCols.prototype.positionToHit = function (positionLeft, positionTop) {
        var _a = this.context,
          dateEnv = _a.dateEnv,
          options = _a.options
        var colCoords = this.colCoords
        var dateProfile = this.props.dateProfile
        var slatCoords = this.state.slatCoords
        var _b = this.processSlotOptions(
            this.props.slotDuration,
            options.snapDuration
          ),
          snapDuration = _b.snapDuration,
          snapsPerSlot = _b.snapsPerSlot
        var colIndex = colCoords.leftToIndex(positionLeft)
        var slatIndex = slatCoords.positions.topToIndex(positionTop)
        if (colIndex != null && slatIndex != null) {
          var slatTop = slatCoords.positions.tops[slatIndex]
          var slatHeight = slatCoords.positions.getHeight(slatIndex)
          var partial = (positionTop - slatTop) / slatHeight // floating point number between 0 and 1
          var localSnapIndex = Math.floor(partial * snapsPerSlot) // the snap # relative to start of slat
          var snapIndex = slatIndex * snapsPerSlot + localSnapIndex
          var dayDate = this.props.cells[colIndex].date
          var time = addDurations(
            dateProfile.slotMinTime,
            multiplyDuration(snapDuration, snapIndex)
          )
          var start = dateEnv.add(dayDate, time)
          var end = dateEnv.add(start, snapDuration)
          return {
            col: colIndex,
            dateSpan: {
              range: { start: start, end: end },
              allDay: false,
            },
            dayEl: colCoords.els[colIndex],
            relativeRect: {
              left: colCoords.lefts[colIndex],
              right: colCoords.rights[colIndex],
              top: slatTop,
              bottom: slatTop + slatHeight,
            },
          }
        }
        return null
      }
      return TimeCols
    })(BaseComponent)

    function processSlotOptions(slotDuration, snapDurationOverride) {
      var snapDuration = snapDurationOverride || slotDuration
      var snapsPerSlot = wholeDivideDurations(slotDuration, snapDuration)
      if (snapsPerSlot === null) {
        snapDuration = slotDuration
        snapsPerSlot = 1
        // TODO: say warning?
      }
      return { snapDuration: snapDuration, snapsPerSlot: snapsPerSlot }
    }

    var DayTimeColsSlicer = /** @class */ (function (_super) {
      __extends(DayTimeColsSlicer, _super)

      function DayTimeColsSlicer() {
        return (_super !== null && _super.apply(this, arguments)) || this
      }

      DayTimeColsSlicer.prototype.sliceRange = function (range, dayRanges) {
        var segs = []
        for (var col = 0; col < dayRanges.length; col += 1) {
          var segRange = intersectRanges(range, dayRanges[col])
          if (segRange) {
            segs.push({
              start: segRange.start,
              end: segRange.end,
              isStart: segRange.start.valueOf() === range.start.valueOf(),
              isEnd: segRange.end.valueOf() === range.end.valueOf(),
              col: col,
            })
          }
        }
        return segs
      }
      return DayTimeColsSlicer
    })(Slicer)

    var DayTimeCols = /** @class */ (function (_super) {
      __extends(DayTimeCols, _super)

      function DayTimeCols() {
        var _this = (_super !== null && _super.apply(this, arguments)) || this
        _this.buildDayRanges = memoize(buildDayRanges)
        _this.slicer = new DayTimeColsSlicer()
        _this.timeColsRef = createRef()
        _this.handleRootEl = function (rootEl) {
          if (rootEl) {
            _this.context.registerInteractiveComponent(_this, { el: rootEl })
          } else {
            _this.context.unregisterInteractiveComponent(_this)
          }
        }
        return _this
      }

      DayTimeCols.prototype.render = function () {
        var _this = this
        var _a = this,
          props = _a.props,
          context = _a.context
        var dateProfile = props.dateProfile,
          dayTableModel = props.dayTableModel
        var isNowIndicator = context.options.nowIndicator
        var dayRanges = this.buildDayRanges(
          dayTableModel,
          dateProfile,
          context.dateEnv
        )
        // give it the first row of cells
        // TODO: would move this further down hierarchy, but sliceNowDate needs it
        return createElement(
          NowTimer,
          { unit: isNowIndicator ? 'minute' : 'day' },
          function (nowDate, todayRange) {
            return createElement(
              TimeCols,
              __assign(
                {
                  ref: _this.timeColsRef,
                  rootElRef: _this.handleRootEl,
                },
                _this.slicer.sliceProps(
                  props,
                  dateProfile,
                  null,
                  context,
                  dayRanges
                ),
                {
                  forPrint: props.forPrint,
                  axis: props.axis,
                  dateProfile: dateProfile,
                  slatMetas: props.slatMetas,
                  slotDuration: props.slotDuration,
                  cells: dayTableModel.cells[0],
                  tableColGroupNode: props.tableColGroupNode,
                  tableMinWidth: props.tableMinWidth,
                  clientWidth: props.clientWidth,
                  clientHeight: props.clientHeight,
                  expandRows: props.expandRows,
                  nowDate: nowDate,
                  nowIndicatorSegs:
                    isNowIndicator &&
                    _this.slicer.sliceNowDate(nowDate, context, dayRanges),
                  todayRange: todayRange,
                  onScrollTopRequest: props.onScrollTopRequest,
                  onSlatCoords: props.onSlatCoords,
                }
              )
            )
          }
        )
      }
      DayTimeCols.prototype.queryHit = function (positionLeft, positionTop) {
        var rawHit = this.timeColsRef.current.positionToHit(
          positionLeft,
          positionTop
        )
        if (rawHit) {
          return {
            component: this,
            dateSpan: rawHit.dateSpan,
            dayEl: rawHit.dayEl,
            rect: {
              left: rawHit.relativeRect.left,
              right: rawHit.relativeRect.right,
              top: rawHit.relativeRect.top,
              bottom: rawHit.relativeRect.bottom,
            },
            layer: 0,
          }
        }
        return null
      }
      return DayTimeCols
    })(DateComponent)

    function buildDayRanges(dayTableModel, dateProfile, dateEnv) {
      var ranges = []
      for (var _i = 0, _a = dayTableModel.headerDates; _i < _a.length; _i++) {
        var date = _a[_i]
        ranges.push({
          start: dateEnv.add(date, dateProfile.slotMinTime),
          end: dateEnv.add(date, dateProfile.slotMaxTime),
        })
      }
      return ranges
    }

    // potential nice values for the slot-duration and interval-duration
    // from largest to smallest
    var STOCK_SUB_DURATIONS = [
      { hours: 1 },
      { minutes: 30 },
      { minutes: 15 },
      { seconds: 30 },
      { seconds: 15 },
    ]

    function buildSlatMetas(
      slotMinTime,
      slotMaxTime,
      explicitLabelInterval,
      slotDuration,
      dateEnv
    ) {
      var dayStart = new Date(0)
      var slatTime = slotMinTime
      var slatIterator = createDuration(0)
      var labelInterval =
        explicitLabelInterval || computeLabelInterval(slotDuration)
      var metas = []
      while (asRoughMs(slatTime) < asRoughMs(slotMaxTime)) {
        var date = dateEnv.add(dayStart, slatTime)
        var isLabeled =
          wholeDivideDurations(slatIterator, labelInterval) !== null
        metas.push({
          date: date,
          time: slatTime,
          key: date.toISOString(),
          isoTimeStr: formatIsoTimeString(date),
          isLabeled: isLabeled,
        })
        slatTime = addDurations(slatTime, slotDuration)
        slatIterator = addDurations(slatIterator, slotDuration)
      }
      return metas
    }

    // Computes an automatic value for slotLabelInterval
    function computeLabelInterval(slotDuration) {
      var i
      var labelInterval
      var slotsPerLabel
      // find the smallest stock label interval that results in more than one slots-per-label
      for (i = STOCK_SUB_DURATIONS.length - 1; i >= 0; i -= 1) {
        labelInterval = createDuration(STOCK_SUB_DURATIONS[i])
        slotsPerLabel = wholeDivideDurations(labelInterval, slotDuration)
        if (slotsPerLabel !== null && slotsPerLabel > 1) {
          return labelInterval
        }
      }
      return slotDuration // fall back
    }

    var DayTimeColsView = /** @class */ (function (_super) {
      __extends(DayTimeColsView, _super)

      function DayTimeColsView() {
        var _this = (_super !== null && _super.apply(this, arguments)) || this
        _this.buildTimeColsModel = memoize(buildTimeColsModel)
        _this.buildSlatMetas = memoize(buildSlatMetas)
        return _this
      }

      DayTimeColsView.prototype.render = function () {
        var _this = this
        var _a = this.context,
          options = _a.options,
          dateEnv = _a.dateEnv,
          dateProfileGenerator = _a.dateProfileGenerator
        var props = this.props
        var dateProfile = props.dateProfile
        var dayTableModel = this.buildTimeColsModel(
          dateProfile,
          dateProfileGenerator
        )
        var splitProps = this.allDaySplitter.splitProps(props)
        var slatMetas = this.buildSlatMetas(
          dateProfile.slotMinTime,
          dateProfile.slotMaxTime,
          options.slotLabelInterval,
          options.slotDuration,
          dateEnv
        )
        var dayMinWidth = options.dayMinWidth
        var hasAttachedAxis = !dayMinWidth
        var hasDetachedAxis = dayMinWidth
        var headerContent =
          options.dayHeaders &&
          createElement(DayHeader, {
            dates: dayTableModel.headerDates,
            dateProfile: dateProfile,
            datesRepDistinctDays: true,
            renderIntro: hasAttachedAxis ? this.renderHeadAxis : null,
          })
        var allDayContent =
          options.allDaySlot !== false &&
          function (contentArg) {
            return createElement(
              DayTable,
              __assign(
                {},
                splitProps.allDay,
                {
                  dateProfile: dateProfile,
                  dayTableModel: dayTableModel,
                  nextDayThreshold: options.nextDayThreshold,
                  tableMinWidth: contentArg.tableMinWidth,
                  colGroupNode: contentArg.tableColGroupNode,
                  renderRowIntro: hasAttachedAxis
                    ? _this.renderTableRowAxis
                    : null,
                  showWeekNumbers: false,
                  expandRows: false,
                  headerAlignElRef: _this.headerElRef,
                  clientWidth: contentArg.clientWidth,
                  clientHeight: contentArg.clientHeight,
                  forPrint: props.forPrint,
                },
                _this.getAllDayMaxEventProps()
              )
            )
          }
        var timeGridContent = function (contentArg) {
          return createElement(
            DayTimeCols,
            __assign({}, splitProps.timed, {
              dayTableModel: dayTableModel,
              dateProfile: dateProfile,
              axis: hasAttachedAxis,
              slotDuration: options.slotDuration,
              slatMetas: slatMetas,
              forPrint: props.forPrint,
              tableColGroupNode: contentArg.tableColGroupNode,
              tableMinWidth: contentArg.tableMinWidth,
              clientWidth: contentArg.clientWidth,
              clientHeight: contentArg.clientHeight,
              onSlatCoords: _this.handleSlatCoords,
              expandRows: contentArg.expandRows,
              onScrollTopRequest: _this.handleScrollTopRequest,
            })
          )
        }
        return hasDetachedAxis
          ? this.renderHScrollLayout(
              headerContent,
              allDayContent,
              timeGridContent,
              dayTableModel.colCnt,
              dayMinWidth,
              slatMetas,
              this.state.slatCoords
            )
          : this.renderSimpleLayout(
              headerContent,
              allDayContent,
              timeGridContent
            )
      }
      return DayTimeColsView
    })(TimeColsView)

    function buildTimeColsModel(dateProfile, dateProfileGenerator) {
      var daySeries = new DaySeriesModel(
        dateProfile.renderRange,
        dateProfileGenerator
      )
      return new DayTableModel(daySeries, false)
    }

    var OPTION_REFINERS$2 = {
      allDaySlot: Boolean,
    }

    var timeGridPlugin = createPlugin({
      initialView: 'timeGridWeek',
      optionRefiners: OPTION_REFINERS$2,
      views: {
        timeGrid: {
          component: DayTimeColsView,
          usesMinMaxTime: true,
          allDaySlot: true,
          slotDuration: '00:30:00',
          slotEventOverlap: true,
        },
        timeGridDay: {
          type: 'timeGrid',
          duration: { days: 1 },
        },
        timeGridWeek: {
          type: 'timeGrid',
          duration: { weeks: 1 },
        },
      },
    })

    var ListViewHeaderRow = /** @class */ (function (_super) {
      __extends(ListViewHeaderRow, _super)

      function ListViewHeaderRow() {
        return (_super !== null && _super.apply(this, arguments)) || this
      }

      ListViewHeaderRow.prototype.render = function () {
        var _a = this.props,
          dayDate = _a.dayDate,
          todayRange = _a.todayRange
        var _b = this.context,
          theme = _b.theme,
          dateEnv = _b.dateEnv,
          options = _b.options,
          viewApi = _b.viewApi
        var dayMeta = getDateMeta(dayDate, todayRange)
        // will ever be falsy?
        var text = options.listDayFormat
          ? dateEnv.format(dayDate, options.listDayFormat)
          : ''
        // will ever be falsy? also, BAD NAME "alt"
        var sideText = options.listDaySideFormat
          ? dateEnv.format(dayDate, options.listDaySideFormat)
          : ''
        var navLinkData = options.navLinks ? buildNavLinkData(dayDate) : null
        var hookProps = __assign(
          {
            date: dateEnv.toDate(dayDate),
            view: viewApi,
            text: text,
            sideText: sideText,
            navLinkData: navLinkData,
          },
          dayMeta
        )
        var classNames = ['fc-list-day'].concat(
          getDayClassNames(dayMeta, theme)
        )
        // TODO: make a reusable HOC for dayHeader (used in daygrid/timegrid too)
        return createElement(
          RenderHook,
          {
            hookProps: hookProps,
            classNames: options.dayHeaderClassNames,
            content: options.dayHeaderContent,
            defaultContent: renderInnerContent$4,
            didMount: options.dayHeaderDidMount,
            willUnmount: options.dayHeaderWillUnmount,
          },
          function (rootElRef, customClassNames, innerElRef, innerContent) {
            return createElement(
              'tr',
              {
                ref: rootElRef,
                className: classNames.concat(customClassNames).join(' '),
                'data-date': formatDayString(dayDate),
              },
              createElement(
                'th',
                { colSpan: 3 },
                createElement(
                  'div',
                  {
                    className:
                      'fc-list-day-cushion ' +
                      theme.getClass('tableCellShaded'),
                    ref: innerElRef,
                  },
                  innerContent
                )
              )
            )
          }
        )
      }
      return ListViewHeaderRow
    })(BaseComponent)

    function renderInnerContent$4(props) {
      var navLinkAttrs = props.navLinkData // is there a type for this?
        ? { 'data-navlink': props.navLinkData, tabIndex: 0 }
        : {}
      return createElement(
        Fragment,
        null,
        props.text &&
          createElement(
            'a',
            __assign({ className: 'fc-list-day-text' }, navLinkAttrs),
            props.text
          ),
        props.sideText &&
          createElement(
            'a',
            __assign({ className: 'fc-list-day-side-text' }, navLinkAttrs),
            props.sideText
          )
      )
    }

    var DEFAULT_TIME_FORMAT$1 = createFormatter({
      hour: 'numeric',
      minute: '2-digit',
      meridiem: 'short',
    })
    var ListViewEventRow = /** @class */ (function (_super) {
      __extends(ListViewEventRow, _super)

      function ListViewEventRow() {
        return (_super !== null && _super.apply(this, arguments)) || this
      }

      ListViewEventRow.prototype.render = function () {
        var _a = this,
          props = _a.props,
          context = _a.context
        var seg = props.seg
        var timeFormat =
          context.options.eventTimeFormat || DEFAULT_TIME_FORMAT$1
        return createElement(
          EventRoot,
          {
            seg: seg,
            timeText: '', // BAD. because of all-day content
            disableDragging: true,
            disableResizing: true,
            defaultContent: renderEventInnerContent,
            isPast: props.isPast,
            isFuture: props.isFuture,
            isToday: props.isToday,
            isSelected: props.isSelected,
            isDragging: props.isDragging,
            isResizing: props.isResizing,
            isDateSelecting: props.isDateSelecting,
          },
          function (
            rootElRef,
            classNames,
            innerElRef,
            innerContent,
            hookProps
          ) {
            return createElement(
              'tr',
              {
                className: [
                  'fc-list-event',
                  hookProps.event.url ? 'fc-event-forced-url' : '',
                ]
                  .concat(classNames)
                  .join(' '),
                ref: rootElRef,
              },
              buildTimeContent(seg, timeFormat, context),
              createElement(
                'td',
                { className: 'fc-list-event-graphic' },
                createElement('span', {
                  className: 'fc-list-event-dot',
                  style: {
                    borderColor:
                      hookProps.borderColor || hookProps.backgroundColor,
                  },
                })
              ),
              createElement(
                'td',
                { className: 'fc-list-event-title', ref: innerElRef },
                innerContent
              )
            )
          }
        )
      }
      return ListViewEventRow
    })(BaseComponent)

    function renderEventInnerContent(props) {
      var event = props.event
      var url = event.url
      var anchorAttrs = url ? { href: url } : {}
      return createElement('a', __assign({}, anchorAttrs), event.title)
    }

    function buildTimeContent(seg, timeFormat, context) {
      var options = context.options
      if (options.displayEventTime !== false) {
        var eventDef = seg.eventRange.def
        var eventInstance = seg.eventRange.instance
        var doAllDay = false
        var timeText = void 0
        if (eventDef.allDay) {
          doAllDay = true
        } else if (isMultiDayRange(seg.eventRange.range)) {
          // TODO: use (!isStart || !isEnd) instead?
          if (seg.isStart) {
            timeText = buildSegTimeText(
              seg,
              timeFormat,
              context,
              null,
              null,
              eventInstance.range.start,
              seg.end
            )
          } else if (seg.isEnd) {
            timeText = buildSegTimeText(
              seg,
              timeFormat,
              context,
              null,
              null,
              seg.start,
              eventInstance.range.end
            )
          } else {
            doAllDay = true
          }
        } else {
          timeText = buildSegTimeText(seg, timeFormat, context)
        }
        if (doAllDay) {
          var hookProps = {
            text: context.options.allDayText,
            view: context.viewApi,
          }
          return createElement(
            RenderHook,
            {
              hookProps: hookProps,
              classNames: options.allDayClassNames,
              content: options.allDayContent,
              defaultContent: renderAllDayInner$1,
              didMount: options.allDayDidMount,
              willUnmount: options.allDayWillUnmount,
            },
            function (rootElRef, classNames, innerElRef, innerContent) {
              return createElement(
                'td',
                {
                  className: ['fc-list-event-time']
                    .concat(classNames)
                    .join(' '),
                  ref: rootElRef,
                },
                innerContent
              )
            }
          )
        }
        return createElement(
          'td',
          { className: 'fc-list-event-time' },
          timeText
        )
      }
      return null
    }

    function renderAllDayInner$1(hookProps) {
      return hookProps.text
    }

    /*
    Responsible for the scroller, and forwarding event-related actions into the "grid".
    */
    var ListView = /** @class */ (function (_super) {
      __extends(ListView, _super)

      function ListView() {
        var _this = (_super !== null && _super.apply(this, arguments)) || this
        _this.computeDateVars = memoize(computeDateVars)
        _this.eventStoreToSegs = memoize(_this._eventStoreToSegs)
        _this.setRootEl = function (rootEl) {
          if (rootEl) {
            _this.context.registerInteractiveComponent(_this, {
              el: rootEl,
            })
          } else {
            _this.context.unregisterInteractiveComponent(_this)
          }
        }
        return _this
      }

      ListView.prototype.render = function () {
        var _this = this
        var _a = this,
          props = _a.props,
          context = _a.context
        var extraClassNames = [
          'fc-list',
          context.theme.getClass('table'),
          context.options.stickyHeaderDates !== false ? 'fc-list-sticky' : '',
        ]
        var _b = this.computeDateVars(props.dateProfile),
          dayDates = _b.dayDates,
          dayRanges = _b.dayRanges
        var eventSegs = this.eventStoreToSegs(
          props.eventStore,
          props.eventUiBases,
          dayRanges
        )
        return createElement(
          ViewRoot,
          {
            viewSpec: context.viewSpec,
            elRef: this.setRootEl,
          },
          function (rootElRef, classNames) {
            return createElement(
              'div',
              {
                ref: rootElRef,
                className: extraClassNames.concat(classNames).join(' '),
              },
              createElement(
                Scroller,
                {
                  liquid: !props.isHeightAuto,
                  overflowX: props.isHeightAuto ? 'visible' : 'hidden',
                  overflowY: props.isHeightAuto ? 'visible' : 'auto',
                },
                eventSegs.length > 0
                  ? _this.renderSegList(eventSegs, dayDates)
                  : _this.renderEmptyMessage()
              )
            )
          }
        )
      }
      ListView.prototype.renderEmptyMessage = function () {
        var _a = this.context,
          options = _a.options,
          viewApi = _a.viewApi
        var hookProps = {
          text: options.noEventsText,
          view: viewApi,
        }
        return createElement(
          RenderHook,
          {
            hookProps: hookProps,
            classNames: options.noEventsClassNames,
            content: options.noEventsContent,
            defaultContent: renderNoEventsInner,
            didMount: options.noEventsDidMount,
            willUnmount: options.noEventsWillUnmount,
          },
          function (rootElRef, classNames, innerElRef, innerContent) {
            return createElement(
              'div',
              {
                className: ['fc-list-empty'].concat(classNames).join(' '),
                ref: rootElRef,
              },
              createElement(
                'div',
                { className: 'fc-list-empty-cushion', ref: innerElRef },
                innerContent
              )
            )
          }
        )
      }
      ListView.prototype.renderSegList = function (allSegs, dayDates) {
        var _a = this.context,
          theme = _a.theme,
          options = _a.options
        var segsByDay = groupSegsByDay(allSegs) // sparse array
        return createElement(
          NowTimer,
          { unit: 'day' },
          function (nowDate, todayRange) {
            var innerNodes = []
            for (var dayIndex = 0; dayIndex < segsByDay.length; dayIndex += 1) {
              var daySegs = segsByDay[dayIndex]
              if (daySegs) {
                // sparse array, so might be undefined
                var dayStr = dayDates[dayIndex].toISOString()
                // append a day header
                innerNodes.push(
                  createElement(ListViewHeaderRow, {
                    key: dayStr,
                    dayDate: dayDates[dayIndex],
                    todayRange: todayRange,
                  })
                )
                daySegs = sortEventSegs(daySegs, options.eventOrder)
                for (
                  var _i = 0, daySegs_1 = daySegs;
                  _i < daySegs_1.length;
                  _i++
                ) {
                  var seg = daySegs_1[_i]
                  innerNodes.push(
                    createElement(
                      ListViewEventRow,
                      __assign(
                        {
                          key:
                            dayStr +
                            ':' +
                            seg.eventRange.instance
                              .instanceId /* are multiple segs for an instanceId */,
                          seg: seg,
                          isDragging: false,
                          isResizing: false,
                          isDateSelecting: false,
                          isSelected: false,
                        },
                        getSegMeta(seg, todayRange, nowDate)
                      )
                    )
                  )
                }
              }
            }
            return createElement(
              'table',
              { className: 'fc-list-table ' + theme.getClass('table') },
              createElement('tbody', null, innerNodes)
            )
          }
        )
      }
      ListView.prototype._eventStoreToSegs = function (
        eventStore,
        eventUiBases,
        dayRanges
      ) {
        return this.eventRangesToSegs(
          sliceEventStore(
            eventStore,
            eventUiBases,
            this.props.dateProfile.activeRange,
            this.context.options.nextDayThreshold
          ).fg,
          dayRanges
        )
      }
      ListView.prototype.eventRangesToSegs = function (eventRanges, dayRanges) {
        var segs = []
        for (
          var _i = 0, eventRanges_1 = eventRanges;
          _i < eventRanges_1.length;
          _i++
        ) {
          var eventRange = eventRanges_1[_i]
          segs.push.apply(segs, this.eventRangeToSegs(eventRange, dayRanges))
        }
        return segs
      }
      ListView.prototype.eventRangeToSegs = function (eventRange, dayRanges) {
        var dateEnv = this.context.dateEnv
        var nextDayThreshold = this.context.options.nextDayThreshold
        var range = eventRange.range
        var allDay = eventRange.def.allDay
        var dayIndex
        var segRange
        var seg
        var segs = []
        for (dayIndex = 0; dayIndex < dayRanges.length; dayIndex += 1) {
          segRange = intersectRanges(range, dayRanges[dayIndex])
          if (segRange) {
            seg = {
              component: this,
              eventRange: eventRange,
              start: segRange.start,
              end: segRange.end,
              isStart:
                eventRange.isStart &&
                segRange.start.valueOf() === range.start.valueOf(),
              isEnd:
                eventRange.isEnd &&
                segRange.end.valueOf() === range.end.valueOf(),
              dayIndex: dayIndex,
            }
            segs.push(seg)
            // detect when range won't go fully into the next day,
            // and mutate the latest seg to the be the end.
            if (
              !seg.isEnd &&
              !allDay &&
              dayIndex + 1 < dayRanges.length &&
              range.end <
                dateEnv.add(dayRanges[dayIndex + 1].start, nextDayThreshold)
            ) {
              seg.end = range.end
              seg.isEnd = true
              break
            }
          }
        }
        return segs
      }
      return ListView
    })(DateComponent)

    function renderNoEventsInner(hookProps) {
      return hookProps.text
    }

    function computeDateVars(dateProfile) {
      var dayStart = startOfDay(dateProfile.renderRange.start)
      var viewEnd = dateProfile.renderRange.end
      var dayDates = []
      var dayRanges = []
      while (dayStart < viewEnd) {
        dayDates.push(dayStart)
        dayRanges.push({
          start: dayStart,
          end: addDays(dayStart, 1),
        })
        dayStart = addDays(dayStart, 1)
      }
      return { dayDates: dayDates, dayRanges: dayRanges }
    }

    // Returns a sparse array of arrays, segs grouped by their dayIndex
    function groupSegsByDay(segs) {
      var segsByDay = [] // sparse array
      var i
      var seg
      for (i = 0; i < segs.length; i += 1) {
        seg = segs[i]
        ;(segsByDay[seg.dayIndex] || (segsByDay[seg.dayIndex] = [])).push(seg)
      }
      return segsByDay
    }

    var OPTION_REFINERS$3 = {
      listDayFormat: createFalsableFormatter,
      listDaySideFormat: createFalsableFormatter,
      noEventsClassNames: identity,
      noEventsContent: identity,
      noEventsDidMount: identity,
      noEventsWillUnmount: identity,
    }

    function createFalsableFormatter(input) {
      return input === false ? null : createFormatter(input)
    }

    var listPlugin = createPlugin({
      optionRefiners: OPTION_REFINERS$3,
      views: {
        list: {
          component: ListView,
          buttonTextKey: 'list',
          listDayFormat: { month: 'long', day: 'numeric', year: 'numeric' },
        },
        listDay: {
          type: 'list',
          duration: { days: 1 },
          listDayFormat: { weekday: 'long' },
        },
        listWeek: {
          type: 'list',
          duration: { weeks: 1 },
          listDayFormat: { weekday: 'long' },
          listDaySideFormat: { month: 'long', day: 'numeric', year: 'numeric' },
        },
        listMonth: {
          type: 'list',
          duration: { month: 1 },
          listDaySideFormat: { weekday: 'long' },
        },
        listYear: {
          type: 'list',
          duration: { year: 1 },
          listDaySideFormat: { weekday: 'long' },
        },
      },
    })

    var BootstrapTheme = /** @class */ (function (_super) {
      __extends(BootstrapTheme, _super)

      function BootstrapTheme() {
        return (_super !== null && _super.apply(this, arguments)) || this
      }

      return BootstrapTheme
    })(Theme)
    BootstrapTheme.prototype.classes = {
      root: 'fc-theme-bootstrap',
      table: 'table-bordered',
      tableCellShaded: 'table-active',
      buttonGroup: 'btn-group',
      button: 'btn btn-primary',
      buttonActive: 'active',
      popover: 'popover',
      popoverHeader: 'popover-header',
      popoverContent: 'popover-body',
    }
    BootstrapTheme.prototype.baseIconClass = 'fa'
    BootstrapTheme.prototype.iconClasses = {
      close: 'fa-times',
      prev: 'fa-chevron-left',
      next: 'fa-chevron-right',
      prevYear: 'fa-angle-double-left',
      nextYear: 'fa-angle-double-right',
    }
    BootstrapTheme.prototype.rtlIconClasses = {
      prev: 'fa-chevron-right',
      next: 'fa-chevron-left',
      prevYear: 'fa-angle-double-right',
      nextYear: 'fa-angle-double-left',
    }
    BootstrapTheme.prototype.iconOverrideOption = 'bootstrapFontAwesome' // TODO: make TS-friendly. move the option-processing into this plugin
    BootstrapTheme.prototype.iconOverrideCustomButtonOption =
      'bootstrapFontAwesome'
    BootstrapTheme.prototype.iconOverridePrefix = 'fa-'
    var plugin = createPlugin({
      themeClasses: {
        bootstrap: BootstrapTheme,
      },
    })

    // rename this file to options.ts like other packages?
    var OPTION_REFINERS$4 = {
      googleCalendarApiKey: String,
    }

    var EVENT_SOURCE_REFINERS$1 = {
      googleCalendarApiKey: String,
      googleCalendarId: String,
      googleCalendarApiBase: String,
      extraParams: identity,
    }

    // TODO: expose somehow
    var API_BASE = 'https://www.googleapis.com/calendar/v3/calendars'
    var eventSourceDef$3 = {
      parseMeta: function (refined) {
        var googleCalendarId = refined.googleCalendarId
        if (!googleCalendarId && refined.url) {
          googleCalendarId = parseGoogleCalendarId(refined.url)
        }
        if (googleCalendarId) {
          return {
            googleCalendarId: googleCalendarId,
            googleCalendarApiKey: refined.googleCalendarApiKey,
            googleCalendarApiBase: refined.googleCalendarApiBase,
            extraParams: refined.extraParams,
          }
        }
        return null
      },
      fetch: function (arg, onSuccess, onFailure) {
        var _a = arg.context,
          dateEnv = _a.dateEnv,
          options = _a.options
        var meta = arg.eventSource.meta
        var apiKey = meta.googleCalendarApiKey || options.googleCalendarApiKey
        if (!apiKey) {
          onFailure({
            message:
              'Specify a googleCalendarApiKey. See http://fullcalendar.io/docs/google_calendar/',
          })
        } else {
          var url = buildUrl(meta)
          // TODO: make DRY with json-feed-event-source
          var extraParams = meta.extraParams
          var extraParamsObj =
            typeof extraParams === 'function' ? extraParams() : extraParams
          var requestParams_1 = buildRequestParams$1(
            arg.range,
            apiKey,
            extraParamsObj,
            dateEnv
          )
          requestJson(
            'GET',
            url,
            requestParams_1,
            function (body, xhr) {
              if (body.error) {
                onFailure({
                  message: 'Google Calendar API: ' + body.error.message,
                  errors: body.error.errors,
                  xhr: xhr,
                })
              } else {
                onSuccess({
                  rawEvents: gcalItemsToRawEventDefs(
                    body.items,
                    requestParams_1.timeZone
                  ),
                  xhr: xhr,
                })
              }
            },
            function (message, xhr) {
              onFailure({ message: message, xhr: xhr })
            }
          )
        }
      },
    }

    function parseGoogleCalendarId(url) {
      var match
      // detect if the ID was specified as a single string.
      // will match calendars like "asdf1234@calendar.google.com" in addition to person email calendars.
      if (/^[^/]+@([^/.]+\.)*(google|googlemail|gmail)\.com$/.test(url)) {
        return url
      }
      if (
        (match =
          /^https:\/\/www.googleapis.com\/calendar\/v3\/calendars\/([^/]*)/.exec(
            url
          )) ||
        (match = /^https?:\/\/www.google.com\/calendar\/feeds\/([^/]*)/.exec(
          url
        ))
      ) {
        return decodeURIComponent(match[1])
      }
      return null
    }

    function buildUrl(meta) {
      var apiBase = meta.googleCalendarApiBase
      if (!apiBase) {
        apiBase = API_BASE
      }
      return (
        apiBase + '/' + encodeURIComponent(meta.googleCalendarId) + '/events'
      )
    }

    function buildRequestParams$1(range, apiKey, extraParams, dateEnv) {
      var params
      var startStr
      var endStr
      if (dateEnv.canComputeOffset) {
        // strings will naturally have offsets, which GCal needs
        startStr = dateEnv.formatIso(range.start)
        endStr = dateEnv.formatIso(range.end)
      } else {
        // when timezone isn't known, we don't know what the UTC offset should be, so ask for +/- 1 day
        // from the UTC day-start to guarantee we're getting all the events
        // (start/end will be UTC-coerced dates, so toISOString is okay)
        startStr = addDays(range.start, -1).toISOString()
        endStr = addDays(range.end, 1).toISOString()
      }
      params = __assign(__assign({}, extraParams || {}), {
        key: apiKey,
        timeMin: startStr,
        timeMax: endStr,
        singleEvents: true,
        maxResults: 9999,
      })
      if (dateEnv.timeZone !== 'local') {
        params.timeZone = dateEnv.timeZone
      }
      return params
    }

    function gcalItemsToRawEventDefs(items, gcalTimezone) {
      return items.map(function (item) {
        return gcalItemToRawEventDef(item, gcalTimezone)
      })
    }

    function gcalItemToRawEventDef(item, gcalTimezone) {
      var url = item.htmlLink || null
      // make the URLs for each event show times in the correct timezone
      if (url && gcalTimezone) {
        url = injectQsComponent(url, 'ctz=' + gcalTimezone)
      }
      return {
        id: item.id,
        title: item.summary,
        start: item.start.dateTime || item.start.date,
        end: item.end.dateTime || item.end.date,
        url: url,
        location: item.location,
        description: item.description,
        attachments: item.attachments || [],
        extendedProps: (item.extendedProperties || {}).shared || {},
      }
    }

    // Injects a string like "arg=value" into the querystring of a URL
    // TODO: move to a general util file?
    function injectQsComponent(url, component) {
      // inject it after the querystring but before the fragment
      return url.replace(/(\?.*?)?(#|$)/, function (whole, qs, hash) {
        return (qs ? qs + '&' : '?') + component + hash
      })
    }

    var googleCalendarPlugin = createPlugin({
      eventSourceDefs: [eventSourceDef$3],
      optionRefiners: OPTION_REFINERS$4,
      eventSourceRefiners: EVENT_SOURCE_REFINERS$1,
    })

    globalPlugins.push(
      interactionPlugin,
      dayGridPlugin,
      timeGridPlugin,
      listPlugin,
      plugin,
      googleCalendarPlugin
    )

    exports.BASE_OPTION_DEFAULTS = BASE_OPTION_DEFAULTS
    exports.BASE_OPTION_REFINERS = BASE_OPTION_REFINERS
    exports.BaseComponent = BaseComponent
    exports.BgEvent = BgEvent
    exports.BootstrapTheme = BootstrapTheme
    exports.Calendar = Calendar
    exports.CalendarApi = CalendarApi
    exports.CalendarContent = CalendarContent
    exports.CalendarDataManager = CalendarDataManager
    exports.CalendarDataProvider = CalendarDataProvider
    exports.CalendarRoot = CalendarRoot
    exports.Component = Component
    exports.ContentHook = ContentHook
    exports.CustomContentRenderContext = CustomContentRenderContext
    exports.DateComponent = DateComponent
    exports.DateEnv = DateEnv
    exports.DateProfileGenerator = DateProfileGenerator
    exports.DayCellContent = DayCellContent
    exports.DayCellRoot = DayCellRoot
    exports.DayGridView = DayTableView
    exports.DayHeader = DayHeader
    exports.DaySeriesModel = DaySeriesModel
    exports.DayTable = DayTable
    exports.DayTableModel = DayTableModel
    exports.DayTableSlicer = DayTableSlicer
    exports.DayTimeCols = DayTimeCols
    exports.DayTimeColsSlicer = DayTimeColsSlicer
    exports.DayTimeColsView = DayTimeColsView
    exports.DelayedRunner = DelayedRunner
    exports.Draggable = ExternalDraggable
    exports.ElementDragging = ElementDragging
    exports.ElementScrollController = ElementScrollController
    exports.Emitter = Emitter
    exports.EventApi = EventApi
    exports.EventRoot = EventRoot
    exports.EventSourceApi = EventSourceApi
    exports.FeaturefulElementDragging = FeaturefulElementDragging
    exports.Fragment = Fragment
    exports.Interaction = Interaction
    exports.ListView = ListView
    exports.MountHook = MountHook
    exports.NamedTimeZoneImpl = NamedTimeZoneImpl
    exports.NowIndicatorRoot = NowIndicatorRoot
    exports.NowTimer = NowTimer
    exports.PointerDragging = PointerDragging
    exports.PositionCache = PositionCache
    exports.RefMap = RefMap
    exports.RenderHook = RenderHook
    exports.ScrollController = ScrollController
    exports.ScrollResponder = ScrollResponder
    exports.Scroller = Scroller
    exports.SimpleScrollGrid = SimpleScrollGrid
    exports.Slicer = Slicer
    exports.Splitter = Splitter
    exports.StandardEvent = StandardEvent
    exports.Table = Table
    exports.TableDateCell = TableDateCell
    exports.TableDowCell = TableDowCell
    exports.TableView = TableView
    exports.Theme = Theme
    exports.ThirdPartyDraggable = ThirdPartyDraggable
    exports.TimeCols = TimeCols
    exports.TimeColsSlatsCoords = TimeColsSlatsCoords
    exports.TimeColsView = TimeColsView
    exports.ViewApi = ViewApi
    exports.ViewContextType = ViewContextType
    exports.ViewRoot = ViewRoot
    exports.WeekNumberRoot = WeekNumberRoot
    exports.WindowScrollController = WindowScrollController
    exports.addDays = addDays
    exports.addDurations = addDurations
    exports.addMs = addMs
    exports.addWeeks = addWeeks
    exports.allowContextMenu = allowContextMenu
    exports.allowSelection = allowSelection
    exports.applyMutationToEventStore = applyMutationToEventStore
    exports.applyStyle = applyStyle
    exports.applyStyleProp = applyStyleProp
    exports.asCleanDays = asCleanDays
    exports.asRoughMinutes = asRoughMinutes
    exports.asRoughMs = asRoughMs
    exports.asRoughSeconds = asRoughSeconds
    exports.buildClassNameNormalizer = buildClassNameNormalizer
    exports.buildDayRanges = buildDayRanges
    exports.buildDayTableModel = buildDayTableModel
    exports.buildEventApis = buildEventApis
    exports.buildEventRangeKey = buildEventRangeKey
    exports.buildHashFromArray = buildHashFromArray
    exports.buildNavLinkData = buildNavLinkData
    exports.buildSegCompareObj = buildSegCompareObj
    exports.buildSegTimeText = buildSegTimeText
    exports.buildSlatMetas = buildSlatMetas
    exports.buildTimeColsModel = buildTimeColsModel
    exports.collectFromHash = collectFromHash
    exports.combineEventUis = combineEventUis
    exports.compareByFieldSpec = compareByFieldSpec
    exports.compareByFieldSpecs = compareByFieldSpecs
    exports.compareNumbers = compareNumbers
    exports.compareObjs = compareObjs
    exports.computeEdges = computeEdges
    exports.computeFallbackHeaderFormat = computeFallbackHeaderFormat
    exports.computeHeightAndMargins = computeHeightAndMargins
    exports.computeInnerRect = computeInnerRect
    exports.computeRect = computeRect
    exports.computeSegDraggable = computeSegDraggable
    exports.computeSegEndResizable = computeSegEndResizable
    exports.computeSegStartResizable = computeSegStartResizable
    exports.computeShrinkWidth = computeShrinkWidth
    exports.computeSmallestCellWidth = computeSmallestCellWidth
    exports.computeVisibleDayRange = computeVisibleDayRange
    exports.config = config
    exports.constrainPoint = constrainPoint
    exports.createContext = createContext$1
    exports.createDuration = createDuration
    exports.createElement = createElement
    exports.createEmptyEventStore = createEmptyEventStore
    exports.createEventInstance = createEventInstance
    exports.createEventUi = createEventUi
    exports.createFormatter = createFormatter
    exports.createPlugin = createPlugin
    exports.createRef = createRef
    exports.diffDates = diffDates
    exports.diffDayAndTime = diffDayAndTime
    exports.diffDays = diffDays
    exports.diffPoints = diffPoints
    exports.diffWeeks = diffWeeks
    exports.diffWholeDays = diffWholeDays
    exports.diffWholeWeeks = diffWholeWeeks
    exports.disableCursor = disableCursor
    exports.elementClosest = elementClosest
    exports.elementMatches = elementMatches
    exports.enableCursor = enableCursor
    exports.eventTupleToStore = eventTupleToStore
    exports.filterEventStoreDefs = filterEventStoreDefs
    exports.filterHash = filterHash
    exports.findDirectChildren = findDirectChildren
    exports.findElements = findElements
    exports.flexibleCompare = flexibleCompare
    exports.flushToDom = flushToDom$1
    exports.formatDate = formatDate
    exports.formatDayString = formatDayString
    exports.formatIsoTimeString = formatIsoTimeString
    exports.formatRange = formatRange
    exports.getAllowYScrolling = getAllowYScrolling
    exports.getCanVGrowWithinCell = getCanVGrowWithinCell
    exports.getClippingParents = getClippingParents
    exports.getDateMeta = getDateMeta
    exports.getDayClassNames = getDayClassNames
    exports.getDefaultEventEnd = getDefaultEventEnd
    exports.getElSeg = getElSeg
    exports.getEventClassNames = getEventClassNames
    exports.getIsRtlScrollbarOnLeft = getIsRtlScrollbarOnLeft
    exports.getRectCenter = getRectCenter
    exports.getRelevantEvents = getRelevantEvents
    exports.getScrollGridClassNames = getScrollGridClassNames
    exports.getScrollbarWidths = getScrollbarWidths
    exports.getSectionClassNames = getSectionClassNames
    exports.getSectionHasLiquidHeight = getSectionHasLiquidHeight
    exports.getSegMeta = getSegMeta
    exports.getSlotClassNames = getSlotClassNames
    exports.getStickyFooterScrollbar = getStickyFooterScrollbar
    exports.getStickyHeaderDates = getStickyHeaderDates
    exports.getUnequalProps = getUnequalProps
    exports.globalLocales = globalLocales
    exports.globalPlugins = globalPlugins
    exports.greatestDurationDenominator = greatestDurationDenominator
    exports.guid = guid
    exports.hasBgRendering = hasBgRendering
    exports.hasShrinkWidth = hasShrinkWidth
    exports.identity = identity
    exports.interactionSettingsStore = interactionSettingsStore
    exports.interactionSettingsToStore = interactionSettingsToStore
    exports.intersectRanges = intersectRanges
    exports.intersectRects = intersectRects
    exports.isArraysEqual = isArraysEqual
    exports.isColPropsEqual = isColPropsEqual
    exports.isDateSpansEqual = isDateSpansEqual
    exports.isInt = isInt
    exports.isInteractionValid = isInteractionValid
    exports.isMultiDayRange = isMultiDayRange
    exports.isPropsEqual = isPropsEqual
    exports.isPropsValid = isPropsValid
    exports.isValidDate = isValidDate
    exports.listenBySelector = listenBySelector
    exports.mapHash = mapHash
    exports.memoize = memoize
    exports.memoizeArraylike = memoizeArraylike
    exports.memoizeHashlike = memoizeHashlike
    exports.memoizeObjArg = memoizeObjArg
    exports.mergeEventStores = mergeEventStores
    exports.multiplyDuration = multiplyDuration
    exports.padStart = padStart
    exports.parseBusinessHours = parseBusinessHours
    exports.parseClassNames = parseClassNames
    exports.parseDragMeta = parseDragMeta
    exports.parseEventDef = parseEventDef
    exports.parseFieldSpecs = parseFieldSpecs
    exports.parseMarker = parse
    exports.pointInsideRect = pointInsideRect
    exports.preventContextMenu = preventContextMenu
    exports.preventDefault = preventDefault
    exports.preventSelection = preventSelection
    exports.rangeContainsMarker = rangeContainsMarker
    exports.rangeContainsRange = rangeContainsRange
    exports.rangesEqual = rangesEqual
    exports.rangesIntersect = rangesIntersect
    exports.refineEventDef = refineEventDef
    exports.refineProps = refineProps
    exports.removeElement = removeElement
    exports.removeExact = removeExact
    exports.render = render
    exports.renderChunkContent = renderChunkContent
    exports.renderFill = renderFill
    exports.renderMicroColGroup = renderMicroColGroup
    exports.renderScrollShim = renderScrollShim
    exports.requestJson = requestJson
    exports.sanitizeShrinkWidth = sanitizeShrinkWidth
    exports.setElSeg = setElSeg
    exports.setRef = setRef
    exports.sliceEventStore = sliceEventStore
    exports.sliceEvents = sliceEvents
    exports.sortEventSegs = sortEventSegs
    exports.startOfDay = startOfDay
    exports.translateRect = translateRect
    exports.triggerDateSelect = triggerDateSelect
    exports.unmountComponentAtNode = unmountComponentAtNode$1
    exports.unpromisify = unpromisify
    exports.version = version
    exports.whenTransitionDone = whenTransitionDone
    exports.wholeDivideDurations = wholeDivideDurations

    Object.defineProperty(exports, '__esModule', { value: true })
    !(function (t, e) {
      'object' == typeof exports && 'undefined' != typeof module
        ? (module.exports = e())
        : 'function' == typeof define && define.amd
        ? define(e)
        : ((t = t || self).jsVectorMap = e())
    })(this, function () {
      'use strict'
      Element.prototype.matches ||
        (Element.prototype.matches =
          Element.prototype.matchesSelector ||
          Element.prototype.mozMatchesSelector ||
          Element.prototype.msMatchesSelector ||
          Element.prototype.oMatchesSelector ||
          Element.prototype.webkitMatchesSelector ||
          function (t) {
            for (
              var e = (this.document || this.ownerDocument).querySelectorAll(t),
                i = e.length;
              --i >= 0 && e.item(i) !== this;

            );
            return i > -1
          }),
        Object.assign ||
          Object.defineProperty(Object, 'assign', {
            enumerable: !1,
            configurable: !0,
            writable: !0,
            value: function (t) {
              if (null == t)
                throw new TypeError('Cannot convert first argument to object')
              for (var e = Object(t), i = 1; i < arguments.length; i++) {
                var s = arguments[i]
                if (null != s) {
                  s = Object(s)
                  for (
                    var a = Object.keys(Object(s)), r = 0, n = a.length;
                    r < n;
                    r++
                  ) {
                    var o = a[r],
                      h = Object.getOwnPropertyDescriptor(s, o)
                    void 0 !== h && h.enumerable && (e[o] = s[o])
                  }
                }
              }
              return e
            },
          })
      var t = {},
        e = 1,
        i = function (i, s, a, r) {
          void 0 === r && (r = {}),
            (t['jvm:' + s + '::' + e++] = { selector: i, handler: a }),
            i.addEventListener(s, a, r)
        },
        s = function (e, i, s) {
          var a = i.split(':')[1]
          e.removeEventListener(a, s), delete t[i]
        },
        a = function () {
          return t
        },
        r = (function () {
          function t(t) {
            return t instanceof Element
              ? ((this.selector = t), this)
              : ((this.selector = document.querySelector(t)), this)
          }
          var e = t.prototype
          return (
            (e.on = function (t, e, s) {
              return void 0 === s && (s = {}), i(this.selector, t, e, s), this
            }),
            (e.delegate = function (t, e, i) {
              for (var s in (e = e.split(' ')))
                this.on(e[s], function (e) {
                  var s = e.target
                  s.matches(t) && i.call(s, e)
                })
            }),
            (e.css = function (t) {
              for (var e in t) this.selector.style[e] = t[e]
              return this
            }),
            (e.text = function (t) {
              return t
                ? ((this.selector.textContent = t), this)
                : this.selector.textContent
            }),
            (e.attr = function (t, e) {
              return t && e
                ? (this.selector.setAttribute(t, e), this)
                : this.selector.getAttribute(t)
            }),
            (e.addClass = function (t) {
              return this.selector.classList
                ? (this.selector.classList.add(t), this)
                : (-1 == this.selector.className.split(' ').indexOf(t) &&
                    (this.selector.className += ' ' + t),
                  this)
            }),
            (e.append = function (t) {
              return this.selector.appendChild(t), this
            }),
            (e.show = function () {
              this.css({ display: 'block' })
            }),
            (e.hide = function () {
              this.css({ display: 'none' })
            }),
            (e.height = function () {
              return this.selector.offsetHeight
            }),
            (e.width = function () {
              return this.selector.offsetWidth
            }),
            t
          )
        })(),
        n = function (t) {
          return (
            (function (t) {
              return !!t && 'object' == typeof t
            })(t) &&
            !(function (t) {
              var e = Object.prototype.toString.call(t)
              return (
                '[object RegExp]' === e ||
                '[object Date]' === e ||
                (function (t) {
                  return t.$$typeof === o
                })(t)
              )
            })(t)
          )
        }
      var o =
        'function' == typeof Symbol && Symbol.for
          ? Symbol.for('react.element')
          : 60103
      function h(t, e) {
        return !1 !== e.clone && e.isMergeableObject(t)
          ? d(((i = t), Array.isArray(i) ? [] : {}), t, e)
          : t
        var i
      }
      function l(t, e, i) {
        return t.concat(e).map(function (t) {
          return h(t, i)
        })
      }
      function c(t) {
        return Object.keys(t).concat(
          (function (t) {
            return Object.getOwnPropertySymbols
              ? Object.getOwnPropertySymbols(t).filter(function (e) {
                  return t.propertyIsEnumerable(e)
                })
              : []
          })(t)
        )
      }
      function u(t, e) {
        try {
          return e in t
        } catch (t) {
          return !1
        }
      }
      function p(t, e, i) {
        var s = {}
        return (
          i.isMergeableObject(t) &&
            c(t).forEach(function (e) {
              s[e] = h(t[e], i)
            }),
          c(e).forEach(function (a) {
            ;(function (t, e) {
              return (
                u(t, e) &&
                !(
                  Object.hasOwnProperty.call(t, e) &&
                  Object.propertyIsEnumerable.call(t, e)
                )
              )
            })(t, a) ||
              (u(t, a) && i.isMergeableObject(e[a])
                ? (s[a] = (function (t, e) {
                    if (!e.customMerge) return d
                    var i = e.customMerge(t)
                    return 'function' == typeof i ? i : d
                  })(a, i)(t[a], e[a], i))
                : (s[a] = h(e[a], i)))
          }),
          s
        )
      }
      var d = function (t, e, i) {
          ;((i = i || {}).arrayMerge = i.arrayMerge || l),
            (i.isMergeableObject = i.isMergeableObject || n),
            (i.cloneUnlessOtherwiseSpecified = h)
          var s = Array.isArray(e)
          return s === Array.isArray(t)
            ? s
              ? i.arrayMerge(t, e, i)
              : p(t, e, i)
            : h(e, i)
        },
        f = function (t) {
          return /\.(jpg|gif|png)$/.test(t)
        },
        m = function (t, e, i, s) {
          void 0 === s && (s = !1)
          var a = document.createElement(t)
          return (
            i && (a[s ? 'innerHTML' : 'textContent'] = i),
            e && (a.className = e),
            a
          )
        },
        g = function (t) {
          return new r(t)
        },
        v = function (t) {
          return t
            .replace(/[\w]([A-Z])/g, function (t) {
              return t[0] + '-' + t[1]
            })
            .toLowerCase()
        },
        y = function (t) {
          return 'function' == typeof t
        },
        b = function (t) {
          return 'object' == typeof t
        },
        S = function (t) {
          return Array.isArray(t)
        },
        w = function (t, e) {
          return Object.assign(t, e)
        },
        x = function (t, e) {
          return d(t, e)
        },
        M = function (t) {
          return Object.keys(t)
        }
      function k(t, e) {
        ;(t.prototype = Object.create(e.prototype)),
          (t.prototype.constructor = t),
          (t.__proto__ = e)
      }
      var _ = (function () {
          function t(t, e) {
            ;(this._name = t),
              (this.node = this.createElement(t)),
              e && this.set(e)
          }
          var e = t.prototype
          return (
            (e.createElement = function (t) {
              return document.createElementNS('http://www.w3.org/2000/svg', t)
            }),
            (e.addClass = function (t) {
              this.node.setAttribute('class', t)
            }),
            (e.getBBox = function () {
              return this.node.getBBox()
            }),
            (e.set = function (t, e) {
              if (b(t)) for (var i in t) this.applyAttr(i, t[i])
              else this.applyAttr(t, e)
            }),
            (e.get = function (t) {
              return this.style.initial[t]
            }),
            (e.applyAttr = function (t, e) {
              this.node.setAttribute(v(t), e)
            }),
            (e.remove = function () {
              this.node.parentNode.removeChild(this.node)
            }),
            t
          )
        })(),
        j = (function (t) {
          function e(e, i, s) {
            var a
            return (
              void 0 === s && (s = {}),
              ((a = t.call(this, e, i) || this).isHovered = !1),
              (a.isSelected = !1),
              (a.style = s),
              (a.style.current = {}),
              a.updateStyle(),
              a
            )
          }
          k(e, t)
          var i = e.prototype
          return (
            (i.setStyle = function (t, e) {
              var i
              b(t)
                ? w(this.style.current, t)
                : w(this.style.current, (((i = {})[t] = e), i))
              this.updateStyle()
            }),
            (i.updateStyle = function () {
              var t = {}
              w(t, this.style.initial),
                w(t, this.style.current),
                this.isHovered && w(t, this.style.hover),
                this.isSelected &&
                  (w(t, this.style.selected),
                  this.isHovered && w(t, this.style.selectedHover)),
                this.set(t)
            }),
            e
          )
        })(_),
        C = (function (t) {
          function e(e, i) {
            return t.call(this, 'text', e, i) || this
          }
          return (
            k(e, t),
            (e.prototype.applyAttr = function (e, i) {
              'text' === e
                ? (this.node.textContent = i)
                : t.prototype.applyAttr.call(this, e, i)
            }),
            e
          )
        })(j),
        X = (function (t) {
          function e(e, i) {
            return t.call(this, 'image', e, i) || this
          }
          return (
            k(e, t),
            (e.prototype.applyAttr = function (e, i) {
              var s
              'image' === e
                ? (b(i)
                    ? ((s = i.url), (this.offset = i.offset || [0, 0]))
                    : ((s = i), (this.offset = [0, 0])),
                  this.node.setAttributeNS(
                    'http://www.w3.org/1999/xlink',
                    'href',
                    s
                  ),
                  (this.width = 23),
                  (this.height = 23),
                  this.applyAttr('width', this.width),
                  this.applyAttr('height', this.height),
                  this.applyAttr(
                    'x',
                    this.cx - this.width / 2 + this.offset[0]
                  ),
                  this.applyAttr(
                    'y',
                    this.cy - this.height / 2 + this.offset[1]
                  ))
                : 'cx' == e
                ? ((this.cx = i),
                  this.width &&
                    this.applyAttr('x', i - this.width / 2 + this.offset[0]))
                : 'cy' == e
                ? ((this.cy = i),
                  this.height &&
                    this.applyAttr('y', i - this.height / 2 + this.offset[1]))
                : t.prototype.applyAttr.apply(this, arguments)
            }),
            e
          )
        })(j),
        Y = (function (t) {
          function e(e) {
            var i
            return (
              ((i = t.call(this, 'svg') || this)._container = e),
              (i._defsElement = new _('defs')),
              (i._rootElement = new _('g', { id: 'jvm-regions-group' })),
              i.node.appendChild(i._defsElement.node),
              i.node.appendChild(i._rootElement.node),
              i._container.append(i.node),
              i
            )
          }
          k(e, t)
          var i = e.prototype
          return (
            (i.setSize = function (t, e) {
              this.node.setAttribute('width', t),
                this.node.setAttribute('height', e)
            }),
            (i.applyTransformParams = function (t, e, i) {
              this._rootElement.node.setAttribute(
                'transform',
                'scale(' + t + ') translate(' + e + ', ' + i + ')'
              )
            }),
            (i.createPath = function (t, e) {
              var i = new j('path', t, e)
              return i.node.setAttribute('fill-rule', 'evenodd'), this.add(i)
            }),
            (i.createCircle = function (t, e, i) {
              var s = new j('circle', t, e)
              return this.add(s, i)
            }),
            (i.createLine = function (t, e, i) {
              var s = new j('line', t, e)
              return this.add(s, i)
            }),
            (i.createText = function (t, e, i) {
              var s = new C(t, e)
              return this.add(s, i)
            }),
            (i.createImage = function (t, e, i) {
              var s = new X(t, e)
              return this.add(s, i)
            }),
            (i.createGroup = function (t) {
              var e = new _('g')
              return (
                this.node.appendChild(e.node),
                t && (e.node.id = t),
                (e.canvas = this),
                e
              )
            }),
            (i.add = function (t, e) {
              return (e = e || this._rootElement).node.appendChild(t.node), t
            }),
            e
          )
        })(_)
      function O(t, e, i) {
        var s = g(e),
          a =
            -1 === s.attr('class').indexOf('jvm-region') ? 'marker' : 'region',
          r = 'region' === a ? s.attr('data-code') : s.attr('data-index'),
          n = a + ':select'
        return (
          i && (n = a + '.tooltip:show'),
          {
            event: n,
            type: a,
            code: r,
            element:
              'region' === a ? t.regions[r].element : t.markers[r].element,
            tooltipText:
              'region' === a
                ? t.mapData.paths[r].name || ''
                : t.markers[r].config.name || '',
          }
        )
      }
      var E = (function () {
          function t() {}
          var e = t.prototype
          return (
            (e.getLabelText = function (t, e) {
              if (e) {
                if (y(e.render)) {
                  var i = []
                  return (
                    this.config.marker && i.push(this.config.marker),
                    i.push(t),
                    e.render.apply(this, i)
                  )
                }
                return t
              }
            }),
            (e.getLabelOffsets = function (t, e) {
              return y(e.offsets)
                ? e.offsets(t)
                : S(e.offsets)
                ? e.offsets[t]
                : [0, 0]
            }),
            (e.setStyle = function (t, e) {
              this.shape.setStyle(t, e)
            }),
            (e.remove = function () {
              this.shape.remove(), this.label && this.label.remove()
            }),
            (e.hover = function (t) {
              this._setStatus('isHovered', t)
            }),
            (e.select = function (t) {
              this._setStatus('isSelected', t)
            }),
            (e._setStatus = function (t, e) {
              ;(this.shape[t] = e),
                this.shape.updateStyle(),
                (this[t] = e),
                this.label && ((this.label[t] = e), this.label.updateStyle())
            }),
            t
          )
        })(),
        L = (function (t) {
          function e(e) {
            var i,
              s = e.map,
              a = e.code,
              r = e.path,
              n = e.style,
              o = e.label,
              h = e.labelStyle,
              l = e.labelsGroup
            ;((i = t.call(this) || this).config = arguments[0]),
              (i.canvas = s.canvas),
              (i.map = s),
              (i.shape = i.canvas.createPath({ d: r, dataCode: a }, n)),
              i.shape.addClass('jvm-region jvm-element')
            var c = i.shape.getBBox(),
              u = i.getLabelText(a, o)
            if (o && u) {
              var p = i.getLabelOffsets(a)
              ;(i.labelX = c.x + c.width / 2 + p[0]),
                (i.labelY = c.y + c.height / 2 + p[1]),
                (i.label = i.canvas.createText(
                  {
                    text: u,
                    textAnchor: 'middle',
                    alignmentBaseline: 'central',
                    dataCode: a,
                    x: i.labelX,
                    y: i.labelY,
                  },
                  h,
                  l
                )),
                i.label.addClass('jvm-region jvm-element')
            }
            return i
          }
          return (
            k(e, t),
            (e.prototype.updateLabelPosition = function () {
              this.label &&
                this.label.set({
                  x:
                    this.labelX * this.map.scale +
                    this.map.transX * this.map.scale,
                  y:
                    this.labelY * this.map.scale +
                    this.map.transY * this.map.scale,
                })
            }),
            e
          )
        })(E)
      var T = (function (t) {
        function e(e) {
          var i,
            s = e.index,
            a = e.map,
            r = e.style,
            n = e.x1,
            o = e.y1,
            h = e.x2,
            l = e.y2,
            c = e.group
          return (
            ((i = t.call(this) || this).shape = a.canvas.createLine(
              { x1: n, y1: o, x2: h, y2: l, dataIndex: s },
              r,
              c
            )),
            i.shape.addClass('jvm-line'),
            i
          )
        }
        return k(e, t), e
      })(E)
      function A(t, e) {
        return t.toLowerCase() + ':to:' + e.toLowerCase()
      }
      var z = (function (t) {
        function e(e) {
          var i,
            s = e.index,
            a = e.style,
            r = e.label,
            n = e.cx,
            o = e.cy,
            h = e.map,
            l = e.group
          return (
            ((i = t.call(this) || this)._map = h),
            (i._isImage = !!a.initial.image),
            (i.config = arguments[0]),
            (i.shape = h.canvas[i._isImage ? 'createImage' : 'createCircle'](
              { dataIndex: s, cx: n, cy: o },
              i._getStyle(),
              l
            )),
            i.shape.addClass('jvm-marker jvm-element'),
            i._isImage && i.updateLabelPosition(),
            r && i._createLabel(i.config),
            i
          )
        }
        k(e, t)
        var i = e.prototype
        return (
          (i.updateLabelPosition = function () {
            this.label &&
              this.label.set({
                x:
                  this._labelX * this._map.scale +
                  this._offsets[0] +
                  this._map.transX * this._map.scale +
                  5 +
                  (this._isImage
                    ? (this.shape.width || 0) / 2
                    : this.shape.node.r.baseVal.value),
                y:
                  this._labelY * this._map.scale +
                  this._map.transY * this._map.scale +
                  this._offsets[1],
              })
          }),
          (i._createLabel = function (t) {
            var e = t.index,
              i = t.map,
              s = t.label,
              a = t.labelsGroup,
              r = t.cx,
              n = t.cy,
              o = t.marker,
              h = t.isRecentlyCreated,
              l = this.getLabelText(e, s)
            ;(this._labelX = r / i.scale - i.transX),
              (this._labelY = n / i.scale - i.transY),
              (this._offsets =
                h && o.offsets ? o.offsets : this.getLabelOffsets(e, s)),
              (this.label = i.canvas.createText(
                {
                  text: l,
                  dataIndex: e,
                  x: this._labelX,
                  y: this._labelY,
                  dy: '0.6ex',
                },
                i.params.markerLabelStyle,
                a
              )),
              this.label.addClass('jvm-marker jvm-element'),
              h && this.updateLabelPosition()
          }),
          (i._getStyle = function () {
            var t = {}
            return (
              this._isImage
                ? (t.initial = { image: this.config.style.initial.image })
                : (t = this.config.style),
              t
            )
          }),
          e
        )
      })(E)
      var P = (function () {
          function t(t) {
            void 0 === t && (t = {}),
              (this._options = t),
              (this._map = this._options.map),
              (this._series = this._options.series),
              (this._body = m('div', 'jvm-legend')),
              this._options.cssClass &&
                this._body.setAttribute('class', this._options.cssClass),
              t.vertical
                ? this._map.legendVertical.appendChild(this._body)
                : this._map.legendHorizontal.appendChild(this._body),
              this.render()
          }
          return (
            (t.prototype.render = function () {
              var t,
                e,
                i,
                s = this._series.scale.getTicks(),
                a = m('div', 'jvm-legend-inner')
              if (((this._body.innderHTML = ''), this._options.title)) {
                var r = m('div', 'jvm-legend-title', this._options.title)
                this._body.appendChild(r)
              }
              this._body.appendChild(a)
              for (var n = 0; n < s.length; n++) {
                switch (
                  ((t = m('div', 'jvm-legend-tick')),
                  (e = m('div', 'jvm-legend-tick-sample')),
                  this._series.config.attribute)
                ) {
                  case 'fill':
                    f(s[n].value)
                      ? (e.style.background = 'url(' + s[n].value + ')')
                      : (e.style.background = s[n].value)
                    break
                  case 'stroke':
                    e.style.background = s[n].value
                    break
                  case 'image':
                    ;(e.style.background =
                      'url(' +
                      (b(s[n].value) ? s[n].value.url : s[n].value) +
                      ') no-repeat center center'),
                      (e.style.backgroundSize = 'cover')
                }
                t.appendChild(e),
                  (i = s[n].label),
                  this._options.labelRender &&
                    (i = this._options.labelRender(i))
                var o = m('div', 'jvm-legend-tick-text', i)
                t.appendChild(o), a.appendChild(t)
              }
            }),
            t
          )
        })(),
        D = (function () {
          function t(t) {
            this._scale = t
          }
          var e = t.prototype
          return (
            (e.getValue = function (t) {
              return this._scale[t]
            }),
            (e.getTicks = function () {
              var t = []
              for (var e in this._scale)
                t.push({ label: e, value: this._scale[e] })
              return t
            }),
            t
          )
        })(),
        I = (function () {
          function t(t, e, i) {
            void 0 === t && (t = {}),
              (this._map = i),
              (this._elements = e),
              (this._values = t.values || {}),
              (this.config = t),
              (this.config.attribute = t.attribute || 'fill'),
              t.attributes && this.setAttributes(t.attributes),
              b(t.scale) && (this.scale = new D(t.scale)),
              this.config.legend &&
                (this.legend = new P(
                  w({ map: this._map, series: this }, this.config.legend)
                )),
              this.setValues(this._values)
          }
          var e = t.prototype
          return (
            (e.setValues = function (t) {
              var e = {}
              for (var i in t) t[i] && (e[i] = this.scale.getValue(t[i]))
              this.setAttributes(e)
            }),
            (e.setAttributes = function (t) {
              for (var e in t)
                this._elements[e] &&
                  this._elements[e].element.setStyle(
                    this.config.attribute,
                    t[e]
                  )
            }),
            (e.clear = function () {
              var t,
                e = {}
              for (t in this._values)
                this._elements[t] &&
                  (e[t] =
                    this._elements[t].element.shape.style.initial[
                      this.config.attribute
                    ])
              this.setAttributes(e), (this._values = {})
            }),
            t
          )
        })()
      var H = {
        mill: function (t, e, i) {
          return {
            x: this.radius * (e - i) * this.radDeg,
            y:
              (-this.radius *
                Math.log(Math.tan((45 + 0.4 * t) * this.radDeg))) /
              0.8,
          }
        },
        merc: function (t, e, i) {
          return {
            x: this.radius * (e - i) * this.radDeg,
            y:
              -this.radius *
              Math.log(Math.tan(Math.PI / 4 + (t * Math.PI) / 360)),
          }
        },
        aea: function (t, e, i) {
          var s = i * this.radDeg,
            a = 29.5 * this.radDeg,
            r = 45.5 * this.radDeg,
            n = t * this.radDeg,
            o = e * this.radDeg,
            h = (Math.sin(a) + Math.sin(r)) / 2,
            l = Math.cos(a) * Math.cos(a) + 2 * h * Math.sin(a),
            c = h * (o - s),
            u = Math.sqrt(l - 2 * h * Math.sin(n)) / h,
            p = Math.sqrt(l - 2 * h * Math.sin(0)) / h
          return {
            x: u * Math.sin(c) * this.radius,
            y: -(p - u * Math.cos(c)) * this.radius,
          }
        },
        lcc: function (t, e, i) {
          var s = i * this.radDeg,
            a = e * this.radDeg,
            r = 33 * this.radDeg,
            n = 45 * this.radDeg,
            o = t * this.radDeg,
            h =
              Math.log(Math.cos(r) * (1 / Math.cos(n))) /
              Math.log(
                Math.tan(Math.PI / 4 + n / 2) *
                  (1 / Math.tan(Math.PI / 4 + r / 2))
              ),
            l = (Math.cos(r) * Math.pow(Math.tan(Math.PI / 4 + r / 2), h)) / h,
            c = l * Math.pow(1 / Math.tan(Math.PI / 4 + o / 2), h),
            u = l * Math.pow(1 / Math.tan(Math.PI / 4 + 0), h)
          return {
            x: c * Math.sin(h * (a - s)) * this.radius,
            y: -(u - c * Math.cos(h * (a - s))) * this.radius,
          }
        },
      }
      ;(H.degRad = 180 / Math.PI),
        (H.radDeg = Math.PI / 180),
        (H.radius = 6381372)
      var R = (function () {
        function t(t, e) {
          var i = t.scale,
            s = t.values
          ;(this._scale = i),
            (this._values = s),
            (this._fromColor = this.hexToRgb(i[0])),
            (this._toColor = this.hexToRgb(i[1])),
            (this._map = e),
            this.setMinMaxValues(s),
            this.visualize()
        }
        var e = t.prototype
        return (
          (e.setMinMaxValues = function (t) {
            for (var e in ((this.min = Number.MAX_VALUE), (this.max = 0), t))
              (e = parseFloat(t[e])) > this.max && (this.max = e),
                e < this.min && (this.min = e)
          }),
          (e.visualize = function () {
            var t,
              e = {}
            for (var i in this._values)
              (t = parseFloat(this._values[i])),
                isNaN(t) || (e[i] = this.getValue(t))
            this.setAttributes(e)
          }),
          (e.setAttributes = function (t) {
            for (var e in t)
              this._map.regions[e] &&
                this._map.regions[e].element.setStyle('fill', t[e])
          }),
          (e.getValue = function (t) {
            for (var e, i = '#', s = 0; s < 3; s++)
              i +=
                (1 ===
                (e = Math.round(
                  this._fromColor[s] +
                    (this._toColor[s] - this._fromColor[s]) *
                      ((t - this.min) / (this.max - this.min))
                ).toString(16)).length
                  ? '0'
                  : '') + e
            return i
          }),
          (e.hexToRgb = function (t) {
            var e = 0,
              i = 0,
              s = 0
            return (
              4 == t.length
                ? ((e = '0x' + t[1] + t[1]),
                  (i = '0x' + t[2] + t[2]),
                  (s = '0x' + t[3] + t[3]))
                : 7 == t.length &&
                  ((e = '0x' + t[1] + t[2]),
                  (i = '0x' + t[3] + t[4]),
                  (s = '0x' + t[5] + t[6])),
              [parseInt(e), parseInt(i), parseInt(s)]
            )
          }),
          t
        )
      })()
      var G = Object.freeze({
          __proto__: null,
          handleContainerEvents: function () {
            var t,
              e,
              i = this,
              s = !1,
              a = this
            this.params.draggable &&
              (this.container
                .on('mousemove', function (i) {
                  return (
                    s &&
                      ((a.transX -= (t - i.pageX) / a.scale),
                      (a.transY -= (e - i.pageY) / a.scale),
                      a.applyTransform(),
                      (t = i.pageX),
                      (e = i.pageY)),
                    !1
                  )
                })
                .on('mousedown', function (i) {
                  return (s = !0), (t = i.pageX), (e = i.pageY), !1
                }),
              g('body').on('mouseup', function () {
                s = !1
              })),
              this.params.zoomOnScroll &&
                this.container.on(
                  'wheel',
                  function (t) {
                    var e = 0
                    ;(e = (t.deltaY || -t.wheelDelta || t.detail) >> 10 || 1),
                      (e *= 75)
                    var s = i.container.selector.getBoundingClientRect(),
                      r = t.pageX - s.left - window.pageXOffset,
                      n = t.pageY - s.top - window.pageYOffset,
                      o = Math.pow(
                        1 + a.params.zoomOnScrollSpeed / 1e3,
                        -1.5 * e
                      )
                    a.tooltip && a.tooltip.hide(), a.setScale(a.scale * o, r, n)
                  },
                  { passive: !0 }
                )
          },
          handleElementEvents: function () {
            var t = this
            this.container.delegate(
              '.jvm-element',
              'mouseover mouseout',
              function (e) {
                var i = O(t, this, !0),
                  s = t.params.showTooltip
                'mouseover' === e.type
                  ? e.defaultPrevented ||
                    (i.element.hover(!0),
                    s &&
                      (t.tooltip.text(i.tooltipText),
                      t.tooltip.show(),
                      t.emit(i.event, [t.tooltip, i.code])))
                  : (i.element.hover(!1), s && t.tooltip.hide())
              }
            ),
              this.container.delegate('.jvm-element', 'mouseup', function (e) {
                var i = O(t, this)
                if (
                  ('region' === i.type && t.params.regionsSelectable) ||
                  ('marker' === i.type &&
                    t.params.markersSelectable &&
                    !e.defaultPrevented)
                ) {
                  var s = i.element
                  t.params[i.type + 'sSelectableOne'] &&
                    t.clearSelected(i.type + 's'),
                    i.element.isSelected ? s.select(!1) : s.select(!0),
                    t.emit(i.event, [
                      i.code,
                      s.isSelected,
                      t.getSelected(i.type + 's'),
                    ])
                }
              })
          },
          handleZoomButtons: function () {
            var t = this,
              e = this,
              s = m('div', 'jvm-zoom-btn jvm-zoomin', '&#43;', !0),
              a = m('div', 'jvm-zoom-btn jvm-zoomout', '&#x2212', !0)
            this.container.append(s).append(a),
              i(s, 'click', function () {
                t.setScale(
                  e.scale * e.params.zoomStep,
                  e.width / 2,
                  e.height / 2,
                  !1,
                  e.params.zoomAnimate
                )
              }),
              i(a, 'click', function () {
                t.setScale(
                  e.scale / e.params.zoomStep,
                  e.width / 2,
                  e.height / 2,
                  !1,
                  e.params.zoomAnimate
                )
              })
          },
          bindContainerTouchEvents: function () {
            var t,
              e,
              i,
              s,
              a,
              r,
              n,
              o = this,
              h = function (h) {
                var l,
                  c,
                  u,
                  p,
                  d = h.touches
                if (('touchstart' == h.type && (n = 0), 1 == d.length))
                  1 == n &&
                    ((u = o.transX),
                    (p = o.transY),
                    (o.transX -= (i - d[0].pageX) / o.scale),
                    (o.transY -= (s - d[0].pageY) / o.scale),
                    o.tooltip.hide(),
                    o.applyTransform(),
                    (u == o.transX && p == o.transY) || h.preventDefault()),
                    (i = d[0].pageX),
                    (s = d[0].pageY)
                else if (2 == d.length)
                  if (2 == n)
                    (c =
                      Math.sqrt(
                        Math.pow(d[0].pageX - d[1].pageX, 2) +
                          Math.pow(d[0].pageY - d[1].pageY, 2)
                      ) / e),
                      o.setScale(t * c, a, r),
                      o.tooltip.hide(),
                      h.preventDefault()
                  else {
                    var f = o.container.selector.getBoundingClientRect()
                    ;(l = {
                      top: f.top + window.scrollY,
                      left: f.left + window.scrollX,
                    }),
                      (a =
                        d[0].pageX > d[1].pageX
                          ? d[1].pageX + (d[0].pageX - d[1].pageX) / 2
                          : d[0].pageX + (d[1].pageX - d[0].pageX) / 2),
                      (r =
                        d[0].pageY > d[1].pageY
                          ? d[1].pageY + (d[0].pageY - d[1].pageY) / 2
                          : d[0].pageY + (d[1].pageY - d[0].pageY) / 2),
                      (a -= l.left),
                      (r -= l.top),
                      (t = o.scale),
                      (e = Math.sqrt(
                        Math.pow(d[0].pageX - d[1].pageX, 2) +
                          Math.pow(d[0].pageY - d[1].pageY, 2)
                      ))
                  }
                n = d.length
              }
            this.container.on('touchstart', h).on('touchmove', h)
          },
          createRegions: function () {
            var t, e
            for (t in ((this.regionLabelsGroup =
              this.regionLabelsGroup ||
              this.canvas.createGroup('jvm-regions-labels-group')),
            this.mapData.paths))
              (e = new L({
                map: this,
                code: t,
                path: this.mapData.paths[t].path,
                style: w({}, this.params.regionStyle),
                labelStyle: this.params.regionLabelStyle,
                labelsGroup: this.regionLabelsGroup,
                label: this.params.labels && this.params.labels.regions,
              })),
                (this.regions[t] = {
                  config: this.mapData.paths[t],
                  element: e,
                })
          },
          createLines: function (t, e, i) {
            var s = this
            void 0 === i && (i = !1)
            var a,
              r = !1,
              n = !1
            for (var o in ((this.linesGroup =
              this.linesGroup || this.canvas.createGroup('jvm-lines-group')),
            t)) {
              var h = t[o]
              for (var l in e) {
                var c = i ? e[l].config : e[l]
                c.name === h.from && (r = this.getMarkerPosition(c)),
                  c.name === h.to && (n = this.getMarkerPosition(c))
              }
              !1 !== r &&
                !1 !== n &&
                ((a = new T({
                  index: o,
                  map: this,
                  style: x(
                    { initial: this.params.lineStyle },
                    { initial: h.style || {} }
                  ),
                  x1: r.x,
                  y1: r.y,
                  x2: n.x,
                  y2: n.y,
                  group: this.linesGroup,
                })),
                i &&
                  Object.keys(this.lines).forEach(function (e) {
                    e === A(t[0].from, t[0].to) && s.lines[e].element.remove()
                  }),
                (this.lines[A(h.from, h.to)] = { element: a, config: h }))
            }
          },
          createMarkers: function (t, e) {
            var i,
              s,
              a,
              r,
              n = this
            for (var o in (void 0 === t && (t = {}),
            void 0 === e && (e = !1),
            (this.markersGroup =
              this.markersGroup ||
              this.canvas.createGroup('jvm-markers-group')),
            (this.markerLabelsGroup =
              this.markerLabelsGroup ||
              this.canvas.createGroup('jvm-markers-labels-group')),
            t)) {
              if (
                ((i = t[o]),
                (a = this.getMarkerPosition(i)),
                (r = i.coords.join(':')),
                e)
              ) {
                if (
                  M(this.markers).filter(function (t) {
                    return n.markers[t]._uid === r
                  }).length
                )
                  continue
                o = M(this.markers).length
              }
              !1 !== a &&
                ((s = new z({
                  index: o,
                  map: this,
                  style: x(this.params.markerStyle, { initial: i.style || {} }),
                  label: this.params.labels && this.params.labels.markers,
                  labelsGroup: this.markerLabelsGroup,
                  cx: a.x,
                  cy: a.y,
                  group: this.markersGroup,
                  marker: i,
                  isRecentlyCreated: e,
                })),
                this.markers[o] && this.removeMarkers([o]),
                (this.markers[o] = { _uid: r, config: i, element: s }))
            }
          },
          createTooltip: function () {
            var t = this,
              e = this,
              i = m('div', 'jvm-tooltip')
            ;(this.tooltip = g(document.body.appendChild(i))),
              this.container.on('mousemove', function (s) {
                if ('block' === e.tooltip.selector.style.display) {
                  var a = t.container.selector
                      .querySelector('#jvm-regions-group')
                      .getBoundingClientRect(),
                    r = i.getBoundingClientRect(),
                    n = r.height,
                    o = r.width,
                    h = s.clientY <= a.top + n + 5,
                    l = s.pageY - n - 5,
                    c = s.pageX - o - 5
                  h && ((l += n + 5), (c -= 10)),
                    s.clientX < a.left + o + 5 &&
                      ((c = s.pageX + 5 + 2), h && (c += 10)),
                    t.tooltip.css({ top: l + 'px', left: c + 'px' })
                }
              })
          },
          createSeries: function () {
            for (var t in ((this.series = { markers: [], regions: [] }),
            this.params.series))
              for (var e = 0; e < this.params.series[t].length; e++)
                this.series[t][e] = new I(
                  this.params.series[t][e],
                  this[t],
                  this
                )
          },
          applyTransform: function () {
            var t, e, i, s
            this.defaultWidth * this.scale <= this.width
              ? ((t =
                  (this.width - this.defaultWidth * this.scale) /
                  (2 * this.scale)),
                (i =
                  (this.width - this.defaultWidth * this.scale) /
                  (2 * this.scale)))
              : ((t = 0),
                (i =
                  (this.width - this.defaultWidth * this.scale) / this.scale)),
              this.defaultHeight * this.scale <= this.height
                ? ((e =
                    (this.height - this.defaultHeight * this.scale) /
                    (2 * this.scale)),
                  (s =
                    (this.height - this.defaultHeight * this.scale) /
                    (2 * this.scale)))
                : ((e = 0),
                  (s =
                    (this.height - this.defaultHeight * this.scale) /
                    this.scale)),
              this.transY > e
                ? (this.transY = e)
                : this.transY < s && (this.transY = s),
              this.transX > t
                ? (this.transX = t)
                : this.transX < i && (this.transX = i),
              this.canvas.applyTransformParams(
                this.scale,
                this.transX,
                this.transY
              ),
              this.markers && this.repositionMarkers(),
              this.lines && this.repositionLines(),
              this.repositionLabels()
          },
          setFocus: function (t) {
            var e = this
            void 0 === t && (t = {})
            var i,
              s = []
            if (
              (t.region ? s.push(t.region) : t.regions && (s = t.regions),
              s.length)
            )
              return (
                s.forEach(function (t) {
                  if (e.regions[t]) {
                    var s = e.regions[t].element.shape.getBBox()
                    s &&
                      (i =
                        void 0 === i
                          ? s
                          : {
                              x: Math.min(i.x, s.x),
                              y: Math.min(i.y, s.y),
                              width:
                                Math.max(i.x + i.width, s.x + s.width) -
                                Math.min(i.x, s.x),
                              height:
                                Math.max(i.y + i.height, s.y + s.height) -
                                Math.min(i.y, s.y),
                            })
                  }
                }),
                this.setScale(
                  Math.min(this.width / i.width, this.height / i.height),
                  -(i.x + i.width / 2),
                  -(i.y + i.height / 2),
                  !0,
                  t.animate
                )
              )
            if (t.coords) {
              var a = this.coordsToPoint(t.coords[0], t.coords[1]),
                r = this.transX - a.x / this.scale,
                n = this.transY - a.y / this.scale
              return this.setScale(
                t.scale * this.baseScale,
                r,
                n,
                !0,
                t.animate
              )
            }
          },
          resize: function () {
            var t = this.baseScale
            this.width / this.height > this.defaultWidth / this.defaultHeight
              ? ((this.baseScale = this.height / this.defaultHeight),
                (this.baseTransX =
                  Math.abs(this.width - this.defaultWidth * this.baseScale) /
                  (2 * this.baseScale)))
              : ((this.baseScale = this.width / this.defaultWidth),
                (this.baseTransY =
                  Math.abs(this.height - this.defaultHeight * this.baseScale) /
                  (2 * this.baseScale))),
              (this.scale *= this.baseScale / t),
              (this.transX *= this.baseScale / t),
              (this.transY *= this.baseScale / t)
          },
          setScale: function (t, e, i, s, a) {
            var r,
              n,
              o,
              h,
              l,
              c,
              u,
              p,
              d,
              f,
              m = this,
              g = 0,
              v = Math.abs(
                Math.round((60 * (t - this.scale)) / Math.max(t, this.scale))
              )
            t > this.params.zoomMax * this.baseScale
              ? (t = this.params.zoomMax * this.baseScale)
              : t < this.params.zoomMin * this.baseScale &&
                (t = this.params.zoomMin * this.baseScale),
              void 0 !== e &&
                void 0 !== i &&
                ((r = t / this.scale),
                s
                  ? ((d =
                      e +
                      (this.defaultWidth *
                        (this.width / (this.defaultWidth * t))) /
                        2),
                    (f =
                      i +
                      (this.defaultHeight *
                        (this.height / (this.defaultHeight * t))) /
                        2))
                  : ((d = this.transX - ((r - 1) / t) * e),
                    (f = this.transY - ((r - 1) / t) * i))),
              a && v > 0
                ? ((o = this.scale),
                  (h = (t - o) / v),
                  (l = this.transX * this.scale),
                  (u = this.transY * this.scale),
                  (c = (d * t - l) / v),
                  (p = (f * t - u) / v),
                  (n = setInterval(function () {
                    ;(g += 1),
                      (m.scale = o + h * g),
                      (m.transX = (l + c * g) / m.scale),
                      (m.transY = (u + p * g) / m.scale),
                      m.applyTransform(),
                      g == v &&
                        (clearInterval(n),
                        m.emit('viewport:changed', [
                          m.scale,
                          m.transX,
                          m.transY,
                        ]))
                  }, 10)))
                : ((this.transX = d),
                  (this.transY = f),
                  (this.scale = t),
                  this.applyTransform(),
                  this.emit('viewport:changed', [
                    this.scale,
                    this.transX,
                    this.transY,
                  ]))
          },
          updateSize: function () {
            ;(this.width = this.container.width()),
              (this.height = this.container.height()),
              this.resize(),
              this.canvas.setSize(this.width, this.height),
              this.applyTransform()
          },
          coordsToPoint: function (t, e) {
            var i,
              s,
              a,
              r = V.maps[this.params.map].projection,
              n = r.centralMeridian
            return (
              (i = H[r.type](t, e, n)),
              !!(s = this.getInsetForPoint(i.x, i.y)) &&
                ((a = s.bbox),
                (i.x =
                  ((i.x - a[0].x) / (a[1].x - a[0].x)) * s.width * this.scale),
                (i.y =
                  ((i.y - a[0].y) / (a[1].y - a[0].y)) * s.height * this.scale),
                {
                  x: i.x + this.transX * this.scale + s.left * this.scale,
                  y: i.y + this.transY * this.scale + s.top * this.scale,
                })
            )
          },
          getInsetForPoint: function (t, e) {
            var i,
              s,
              a = V.maps[this.params.map].insets
            for (i = 0; i < a.length; i++)
              if (
                t > (s = a[i].bbox)[0].x &&
                t < s[1].x &&
                e > s[0].y &&
                e < s[1].y
              )
                return a[i]
          },
          getMarkerPosition: function (t) {
            var e = t.coords
            return V.maps[this.params.map].projection
              ? this.coordsToPoint.apply(this, e)
              : {
                  x: e[0] * this.scale + this.transX * this.scale,
                  y: e[1] * this.scale + this.transY * this.scale,
                }
          },
          repositionLines: function () {
            var t = !1,
              e = !1
            for (var i in this.lines) {
              for (var s in this.markers) {
                var a = this.markers[s]
                a.config.name === this.lines[i].config.from &&
                  (t = this.getMarkerPosition(a.config)),
                  a.config.name === this.lines[i].config.to &&
                    (e = this.getMarkerPosition(a.config))
              }
              !1 !== t &&
                !1 !== e &&
                this.lines[i].element.setStyle({
                  x1: t.x,
                  y1: t.y,
                  x2: e.x,
                  y2: e.y,
                })
            }
          },
          repositionMarkers: function () {
            var t
            for (var e in this.markers)
              !1 !== (t = this.getMarkerPosition(this.markers[e].config)) &&
                this.markers[e].element.setStyle({ cx: t.x, cy: t.y })
          },
          repositionLabels: function () {
            var t = this.params.labels
            if (t) {
              if (t.regions)
                for (var e in this.regions)
                  this.regions[e].element.updateLabelPosition()
              if (t.markers)
                for (var i in this.markers)
                  this.markers[i].element.updateLabelPosition()
            }
          },
          visualizeData: function (t) {
            b(t) && (this.dataVisualization = new R(t, this))
          },
        }),
        B = {
          onViewportChange: 'viewport:changed',
          onRegionSelected: 'region:select',
          onMarkerSelected: 'marker:select',
          onRegionTooltipShow: 'region.tooltip:show',
          onMarkerTooltipShow: 'marker.tooltip:show',
          onLoaded: 'map:loaded',
        },
        V = (function () {
          function t(e) {
            if (
              (void 0 === e && (e = {}),
              (this.params = x(t.defaults, e)),
              !t.maps[this.params.map])
            )
              throw new Error(
                'Attempt to use map which was not loaded: ' + e.map
              )
            ;(this.mapData = t.maps[this.params.map]),
              (this.regions = {}),
              (this.markers = {}),
              (this.lines = {}),
              (this.defaultWidth = this.mapData.width),
              (this.defaultHeight = this.mapData.height),
              (this.height = 0),
              (this.width = 0),
              (this.scale = 1),
              (this.baseScale = 1),
              (this.transX = 0),
              (this.transY = 0),
              (this.baseTransX = 0),
              (this.baseTransY = 0),
              'loading' !== window.document.readyState
                ? this.init(e.selector)
                : window.addEventListener(
                    'DOMContentLoaded',
                    this.init.bind(this, e.selector)
                  )
          }
          var e = t.prototype
          return (
            (e.init = function (t) {
              ;(this.container = g(t).addClass('jvm-container')),
                (this.canvas = new Y(this.container, this.width, this.height)),
                this.setBackgroundColor(this.params.backgroundColor),
                this.handleContainerEvents(),
                this.createRegions(),
                this.updateSize(),
                this.createLines(
                  this.params.lines || {},
                  this.params.markers || {}
                ),
                this.createMarkers(this.params.markers),
                this.handleElementEvents(),
                this.repositionLabels(),
                this.params.showTooltip && this.createTooltip(),
                this.params.zoomButtons && this.handleZoomButtons(),
                this.params.selectedRegions &&
                  this.setSelected('regions', this.params.selectedRegions),
                this.params.selectedMarkers &&
                  this.setSelected('markers', this.params.selectedMarkers),
                this.params.focusOn && this.setFocus(this.params.focusOn),
                this.params.visualizeData &&
                  this.visualizeData(this.params.visualizeData),
                this.params.bindTouchEvents &&
                  ('ontouchstart' in window ||
                    (window.DocumentTouch &&
                      document instanceof DocumentTouch)) &&
                  this.bindContainerTouchEvents(),
                this.params.series &&
                  (this.container
                    .append(
                      (this.legendHorizontal = m(
                        'div',
                        'jvm-series-container jvm-series-h'
                      ))
                    )
                    .append(
                      (this.legendVertical = m(
                        'div',
                        'jvm-series-container jvm-series-v'
                      ))
                    ),
                  this.createSeries()),
                this.emit('map:loaded', [this])
            }),
            (e.emit = function (t, e) {
              for (var i in B)
                B[i] === t && y(this.params[i]) && this.params[i].apply(this, e)
            }),
            (e.setBackgroundColor = function (t) {
              this.container.css({ backgroundColor: t })
            }),
            (e.getSelected = function (t) {
              var e,
                i = []
              for (e in this[t]) this[t][e].element.isSelected && i.push(e)
              return i
            }),
            (e.clearSelected = function (t) {
              var e = this
              this.getSelected(t).forEach(function (i) {
                e[t][i].element.select(!1)
              })
            }),
            (e.setSelected = function (t, e) {
              var i = this
              e.forEach(function (e) {
                i[t][e] && i[t][e].element.select(!0)
              })
            }),
            (e.getSelectedRegions = function () {
              return this.getSelected('regions')
            }),
            (e.clearSelectedRegions = function () {
              var t = this
              this.getSelected('regions').forEach(function (e) {
                t.regions[e].element.select(!1)
              })
            }),
            (e.getSelectedMarkers = function () {
              return this.getSelected('markers')
            }),
            (e.clearSelectedMarkers = function () {
              var t = this
              this.getSelected('markers').forEach(function (e) {
                t.markers[e].element.select(!1)
              })
            }),
            (e.addMarker = function (t) {
              this.createMarkers([t], !0)
            }),
            (e.removeMarkers = function (t) {
              var e = this
              t.forEach(function (t) {
                e.markers[t].element.remove(), delete e.markers[t]
              })
            }),
            (e.addLine = function (t, e, i) {
              void 0 === i && (i = {}),
                this.createLines(
                  [{ from: t, to: e, style: i }],
                  this.markers,
                  !0
                )
            }),
            (e.reset = function () {
              for (var t in this.series)
                for (var e = 0; e < this.series[t].length; e++)
                  this.series[t][e].clear()
              ;(this.scale = this.baseScale),
                (this.transX = this.baseTransX),
                (this.transY = this.baseTransY),
                this.clearSelectedMarkers(),
                this.clearSelectedRegions(),
                this.applyTransform()
            }),
            (e.destroy = function (t) {
              var e = this
              void 0 === t && (t = !0)
              var i = a(),
                r = this.tooltip.selector,
                n = Object.keys
              r.parentElement.removeChild(r),
                n(i).forEach(function (t) {
                  s(i[t].selector, t, i[t].handler)
                }),
                t &&
                  n(this).forEach(function (t) {
                    try {
                      delete e[t]
                    } catch (t) {}
                  })
            }),
            t
          )
        })()
      ;(V.maps = {}),
        (V.defaults = {
          map: 'world',
          backgroundColor: 'tranparent',
          draggable: !0,
          zoomButtons: !0,
          zoomOnScroll: !0,
          zoomOnScrollSpeed: 3,
          zoomMax: 12,
          zoomMin: 1,
          zoomAnimate: !0,
          showTooltip: !0,
          zoomStep: 1.5,
          bindTouchEvents: !0,
          lineStyle: {
            stroke: '#808080',
            strokeWidth: 1,
            strokeLinecap: 'round',
          },
          markersSelectable: !1,
          markersSelectableOne: !1,
          markerStyle: {
            initial: {
              r: 7,
              fill: '#374151',
              fillOpacity: 1,
              stroke: '#FFF',
              strokeWidth: 5,
              strokeOpacity: 0.5,
            },
            hover: { fill: '#3cc0ff', cursor: 'pointer' },
            selected: { fill: 'blue' },
            selectedHover: {},
          },
          markerLabelStyle: {
            initial: {
              fontFamily: 'Verdana',
              fontSize: 12,
              fontWeight: 500,
              cursor: 'default',
              fill: '#374151',
            },
            hover: { cursor: 'pointer' },
            selected: {},
            selectedHover: {},
          },
          regionsSelectable: !1,
          regionsSelectableOne: !1,
          regionStyle: {
            initial: {
              fill: '#dee2e8',
              fillOpacity: 1,
              stroke: 'none',
              strokeWidth: 0,
            },
            hover: { fillOpacity: 0.7, cursor: 'pointer' },
            selected: { fill: '#9ca3af' },
            selectedHover: {},
          },
          regionLabelStyle: {
            initial: {
              fontFamily: 'Verdana',
              fontSize: '12',
              fontWeight: 'bold',
              cursor: 'default',
              fill: '#35373e',
            },
            hover: { cursor: 'pointer' },
          },
        }),
        Object.assign(V.prototype, G)
      var W = (function () {
        function t(t) {
          if ((void 0 === t && (t = {}), !t.selector))
            throw new Error('Selector is not given.')
          return new V(t)
        }
        return (
          (t.prototype.addMap = function (t, e) {
            V.maps[t] = e
          }),
          t
        )
      })()
      return (window.jsVectorMap = W)
    })
    jsVectorMap.prototype.addMap('world_merc', {
      insets: [
        {
          width: 900,
          top: 0,
          height: 583.0802520919394,
          bbox: [
            { y: -18449355.69035302, x: -20004297.151525836 },
            { y: 7485321.539093307, x: 20026572.394749384 },
          ],
          left: 0,
        },
      ],
      paths: {
        BD: {
          path: 'M651.84,359.63l-0.6,-2.05l-1.36,-1.76l-2.31,-0.11l-0.41,0.48l0.2,0.98l-0.54,1.03l-0.71,-0.37l-0.68,0.36l-1.19,-0.37l-0.37,-2.06l-0.81,-1.92l0.39,-1.52l-0.21,-0.46l-1.16,-0.55l0.3,-0.55l1.48,-0.98l0.03,-0.64l-1.56,-1.27l0.56,-1.2l1.6,0.97l1.04,0.16l0.18,1.62l0.33,0.35l5.65,0.65l-0.86,1.73l-1.21,0.35l-0.77,1.56l0.07,0.46l1.37,1.41l0.68,-0.19l0.42,-1.44l1.21,3.96l-0.03,1.26l-0.32,-0.15l-0.41,0.28Z',
          name: 'Bangladesh',
        },
        BE: {
          path: 'M429.3,264.88l1.93,0.28l2.07,-0.74l1.41,1.55l1.25,0.86l-0.23,2.13l-0.68,0.42l-0.18,1.46l-1.63,-1.32l-1.4,0.17l-2.72,-3.22l-1.17,-0.21l-0.2,-0.77l1.57,-0.62Z',
          name: 'Belgium',
        },
        BF: {
          path: 'M421.42,377.38l-0.11,0.96l0.34,1.18l1.4,1.73l0.07,1.11l0.32,0.37l2.56,0.52l-0.04,1.3l-0.38,0.54l-1.07,0.21l-0.73,1.19l-0.63,0.21l-3.22,-0.25l-0.94,0.39l-5.4,-0.05l-0.39,0.38l0.16,2.75l-1.23,-0.43l-1.17,0.1l-0.89,0.57l-2.27,-1.73l-0.13,-1.12l0.61,-0.96l0.01,-0.93l1.87,-2.0l0.44,-1.83l0.43,-0.39l1.28,0.26l1.05,-0.52l0.47,-0.73l1.84,-1.1l0.55,-0.84l2.2,-1.01l1.15,-0.31l0.72,0.46l1.13,-0.01Z',
          name: 'Burkina Faso',
        },
        BG: {
          path: 'M491.72,293.09l-0.93,1.06l-0.91,2.45l0.52,1.52l-1.65,-0.27l-2.55,1.06l-0.27,1.69l-1.79,0.25l-2.03,-1.11l-1.92,0.88l-1.4,-0.07l-0.15,-1.87l-1.09,-1.09l0.34,-1.71l0.91,-1.02l0.01,-0.52l-1.15,-1.41l-0.06,-1.14l0.44,0.87l0.46,0.21l0.87,-0.23l1.91,0.53l3.68,0.18l1.44,-0.92l2.7,-0.74l1.67,1.16l0.95,0.26Z',
          name: 'Bulgaria',
        },
        BA: {
          path: 'M463.49,287.91l2.09,0.57l1.72,-0.03l1.56,0.78l-0.4,0.99l1.14,1.61l-0.27,1.19l-1.82,1.31l-0.37,1.54l-1.65,-0.96l-0.89,-1.36l-2.11,-2.07l-1.65,-2.57l0.25,-0.7l0.45,0.41l0.59,-0.06l0.43,-0.59l0.92,-0.06Z',
          name: 'Bosnia and Herz.',
        },
        BN: {
          path: 'M707.48,403.47l0.69,-0.65l1.41,-0.91l-0.15,1.64l-0.81,-0.05l-0.61,0.58l-0.53,-0.6Z',
          name: 'Brunei',
        },
        BO: {
          path: 'M263.83,471.11l-3.09,-0.24l-0.38,0.24l-0.7,1.56l-1.31,-1.57l-3.28,-0.66l-2.38,2.47l-1.3,0.27l-0.88,-3.36l-1.31,-2.93l0.74,-2.43l-0.12,-0.42l-1.2,-1.03l-0.37,-1.92l-1.09,-1.59l1.46,-2.61l-0.97,-2.36l0.48,-1.07l-0.35,-0.74l0.91,-1.33l0.16,-3.89l0.5,-1.18l-1.81,-3.45l2.46,0.08l0.8,-0.85l3.4,-1.92l2.66,-0.35l-0.19,1.39l0.3,1.07l-0.05,1.98l2.72,2.29l2.88,0.49l0.89,0.87l1.79,0.59l0.98,0.71l1.71,0.05l1.17,0.61l0.6,2.74l-0.7,0.54l0.96,3.03l0.37,0.28l4.3,0.1l-0.25,1.22l0.27,1.03l1.43,0.92l0.5,1.38l-0.41,1.9l-0.65,1.11l0.13,1.37l-2.69,-1.68l-2.4,-0.03l-4.36,0.77l-1.49,2.56l-0.1,1.55l-0.75,2.44Z',
          name: 'Bolivia',
        },
        JP: {
          path: 'M781.1,291.58l1.81,0.77l1.63,-1.08l0.4,2.83l-3.6,1.02l-1.98,3.05l-3.61,-2.12l-0.58,0.21l-1.27,3.44l-2.14,0.04l-0.3,-2.88l1.09,-2.32l2.44,-0.17l0.37,-0.34l1.26,-6.78l2.45,3.07l2.03,1.27ZM773.56,314.42l-0.92,2.42l0.38,1.64l-1.15,1.91l-3.02,1.35l-4.59,0.3l-3.33,3.22l-1.25,-0.86l-0.09,-2.06l-0.46,-0.38l-4.35,0.67l-3.0,1.42l-2.84,0.06l-0.37,0.26l0.11,0.44l2.34,2.04l-1.55,4.67l-1.25,0.95l-0.8,-0.75l0.56,-2.43l-0.2,-0.44l-1.47,-0.8l-0.77,-1.54l2.14,-0.91l1.27,-1.83l2.45,-1.53l1.83,-2.06l4.77,-0.88l2.6,0.61l0.45,-0.22l2.39,-5.05l1.27,1.14l0.53,0.01l5.1,-4.39l1.68,-4.08l-0.39,-3.75l0.92,-1.82l2.11,-0.49l1.24,4.16l-0.07,2.45l-2.25,3.13l-0.03,3.43ZM757.77,324.02l0.2,0.64l-1.01,1.31l-1.17,-0.72l-1.28,0.7l-0.69,1.54l-1.01,-0.53l0.01,-1.04l1.14,-1.49l1.58,0.15l0.85,-1.05l1.38,0.49Z',
          name: 'Japan',
        },
        BI: {
          path: 'M495.45,425.39l-1.08,-2.99l1.14,-0.11l0.64,-1.19l0.76,0.09l0.65,1.83l-2.1,2.37Z',
          name: 'Burundi',
        },
        BJ: {
          path: 'M429.57,385.57l-0.05,0.81l0.5,1.35l-0.42,0.87l0.17,0.79l-1.82,2.14l-0.57,1.77l-0.08,5.44l-1.41,0.2l-0.48,-1.36l0.11,-5.73l-0.52,-0.7l-0.2,-1.35l-1.48,-1.49l0.22,-0.91l0.89,-0.43l0.42,-0.93l1.27,-0.36l1.22,-1.35l0.61,-0.0l1.62,1.25Z',
          name: 'Benin',
        },
        BT: {
          path: 'M650.32,342.67l0.85,0.75l-0.12,1.18l-3.76,-0.12l-1.57,0.41l-1.93,-0.91l1.49,-2.09l1.12,-0.6l1.62,0.6l1.33,0.09l0.98,0.68Z',
          name: 'Bhutan',
        },
        JM: {
          path: 'M228.38,368.9l-0.8,0.41l-2.27,-1.09l0.84,-0.25l2.14,0.31l1.18,0.59l-1.09,0.03Z',
          name: 'Jamaica',
        },
        BW: {
          path: 'M483.92,460.24l2.27,4.08l2.83,2.92l0.96,0.32l0.77,2.5l2.13,0.63l1.04,0.8l-3.01,1.7l-2.32,2.09l-1.54,2.79l-1.52,0.46l-0.64,2.01l-1.34,0.54l-1.84,-0.12l-1.21,-0.77l-1.36,-0.31l-1.22,0.64l-0.75,1.42l-2.31,1.98l-1.39,0.22l-0.36,-0.63l0.16,-1.82l-1.48,-2.63l-0.62,-0.44l-0.0,-7.35l2.08,-0.08l0.38,-0.4l0.07,-9.12l1.56,-0.08l3.63,-0.87l0.8,0.91l0.52,0.07l1.5,-0.97l2.2,-0.5Z',
          name: 'Botswana',
        },
        BR: {
          path: 'M259.98,404.95l3.24,0.7l0.65,-0.53l4.55,-1.32l1.08,-1.06l-0.02,-0.64l0.55,-0.05l0.28,0.28l-0.26,0.87l0.22,0.48l0.73,0.32l0.4,0.81l-0.62,0.86l-0.4,2.13l0.82,2.56l1.69,1.43l1.43,0.2l3.17,-1.68l3.18,0.3l0.65,-0.75l-0.27,-0.92l1.9,-0.09l2.39,0.99l1.06,-0.61l0.84,0.78l1.2,-0.18l1.18,-1.06l0.84,-1.94l1.36,-2.11l0.37,-0.05l1.89,5.46l1.33,0.59l0.05,1.28l-1.77,1.94l0.02,0.56l1.02,0.87l4.07,0.36l0.08,2.16l0.66,0.29l1.74,-1.5l6.97,2.32l1.02,1.22l-0.35,1.18l0.49,0.5l2.81,-0.74l4.77,1.3l3.75,-0.08l3.57,2.0l3.29,2.86l1.93,0.73l2.12,0.12l0.71,0.62l1.21,4.52l-0.95,4.0l-4.72,5.09l-1.64,2.95l-1.72,2.07l-0.8,0.3l-0.72,2.05l0.18,4.81l-0.94,5.62l-0.81,1.15l-0.43,3.44l-2.55,3.58l-0.4,2.59l-1.86,1.08l-0.67,1.57l-2.54,0.01l-3.94,1.05l-1.83,1.24l-2.87,0.85l-3.03,2.27l-2.2,2.92l-0.36,2.08l0.4,1.64l-0.45,2.73l-0.52,1.26l-1.77,1.62l-2.75,5.05l-3.83,3.63l-1.23,2.92l-1.18,1.22l-0.37,-0.92l0.96,-1.23l0.01,-0.48l-1.52,-2.09l-4.56,-3.52l-1.03,-0.01l-2.38,-2.13l-0.85,0.0l5.38,-5.77l3.77,-2.69l0.21,-2.55l-1.34,-1.86l-0.92,0.07l0.59,-2.44l0.01,-1.59l-1.11,-0.85l-1.75,0.31l-0.44,-3.22l-0.52,-0.97l-1.88,-0.9l-1.24,0.48l-2.17,-0.43l0.15,-3.31l-0.63,-1.37l0.67,-0.74l-0.22,-1.37l0.66,-1.16l0.44,-2.08l-0.61,-1.86l-1.4,-0.87l-0.2,-0.77l0.34,-1.41l-0.38,-0.49l-4.52,-0.1l-0.72,-2.27l0.59,-0.42l-0.03,-1.12l-0.5,-0.87l-0.32,-1.71l-1.45,-0.76l-1.63,-0.02l-1.05,-0.73l-1.6,-0.48l-1.13,-1.0l-2.69,-0.41l-2.47,-2.08l0.13,-4.38l-0.45,-0.45l-3.46,0.5l-3.44,1.95l-0.6,0.74l-2.89,-0.17l-1.47,0.42l-0.72,-0.18l0.15,-3.54l-0.64,-0.34l-1.94,1.42l-1.87,-0.06l-0.83,-1.19l-1.38,-0.27l0.21,-1.01l-1.35,-1.5l-0.88,-1.92l0.56,-0.6l-0.0,-0.81l1.29,-0.62l0.22,-0.43l-0.22,-1.19l0.61,-0.91l0.15,-0.99l2.65,-1.58l1.99,-0.47l0.42,-0.36l2.06,0.11l0.42,-0.33l1.19,-8.0l-0.41,-1.56l-1.1,-1.0l0.01,-1.33l1.91,-0.42l0.08,-0.96l-0.33,-0.43l-1.14,-0.2l-0.02,-0.83l4.47,0.05l0.82,-0.67l0.82,1.81l0.8,0.07l1.15,1.1l2.26,-0.05l0.71,-0.83l2.78,-0.96l0.48,-1.13l1.6,-0.64l0.24,-0.47l-0.48,-0.83l-1.83,-0.19l-0.36,-3.22Z',
          name: 'Brazil',
        },
        BS: {
          path: 'M227.69,345.88l0.0,-0.01l0.0,0.0l-0.0,0.01ZM226.4,353.1l-0.48,-1.18l-0.85,-0.78l0.36,-1.17l0.95,2.03l0.01,1.1ZM225.65,345.38l-1.96,0.32l-0.04,-0.26l0.74,-0.14l1.26,0.08Z',
          name: 'Bahamas',
        },
        BY: {
          path: 'M493.82,245.43l0.3,0.93l0.53,0.25l1.16,-0.47l2.08,0.9l0.2,1.73l-0.48,1.43l1.57,2.82l0.93,0.75l0.13,0.97l1.58,0.7l0.48,0.74l-0.6,0.57l-1.85,-0.13l-0.76,0.48l-0.12,0.47l1.08,3.5l-1.96,0.33l-0.87,1.12l-0.12,1.49l-0.67,-0.22l-2.03,0.17l-0.52,-0.75l-0.57,-0.09l-0.72,0.54l-0.9,-0.5l-1.91,-0.08l-2.74,-0.95l-2.61,-0.34l-2.01,0.09l-1.52,1.11l-0.65,0.08l-0.07,-1.5l-0.64,-1.57l1.4,-1.01l0.01,-1.65l-0.7,-1.69l-0.08,-1.37l2.2,-0.03l2.72,-1.61l0.73,-2.54l2.1,-1.69l-0.2,-1.69l3.82,-2.26l2.27,0.97Z',
          name: 'Belarus',
        },
        BZ: {
          path: 'M198.03,374.09l0.1,-4.57l0.69,-0.06l0.74,-1.32l0.34,0.28l-0.4,1.33l0.17,0.59l-0.34,2.3l-1.3,1.44Z',
          name: 'Belize',
        },
        RU: {
          path: 'M491.5,228.55l2.65,-2.55l-0.01,-0.58l-2.35,-2.15l7.46,-9.43l1.0,-2.89l-0.09,-0.41l-3.55,-3.64l0.93,-3.78l-2.18,-4.19l1.62,-5.27l-2.85,-6.95l2.24,-4.74l-0.06,-0.43l-3.73,-4.33l0.33,-4.4l1.87,-0.61l4.26,-2.85l2.35,-2.28l3.83,4.05l6.96,1.77l9.34,7.63l1.83,2.99l0.16,4.03l-2.62,3.11l-3.84,1.55l-11.03,-4.69l-2.16,0.81l-0.14,0.63l3.99,4.45l0.31,8.71l5.34,3.55l0.64,-0.27l0.32,-2.78l-1.43,-2.53l1.23,-1.72l5.74,3.47l0.43,-0.01l2.11,-1.42l0.15,-0.48l-1.59,-4.12l5.51,-5.69l1.99,0.31l2.25,2.09l0.65,-0.16l1.46,-4.3l-2.03,-4.0l1.18,-3.78l-1.5,-3.67l5.98,1.86l1.2,3.14l-2.74,0.7l-0.3,0.39l0.02,3.61l2.07,2.45l0.43,0.11l3.87,-1.38l0.85,-4.25l13.69,-8.82l1.16,0.21l-2.17,3.65l0.26,0.59l3.11,0.7l0.4,-0.14l1.68,-2.16l4.51,-0.18l3.61,-2.68l2.61,3.78l0.67,-0.02l2.85,-4.55l-0.0,-0.43l-2.5,-3.89l1.03,-1.89l7.03,2.08l3.39,2.18l9.05,7.85l0.62,-0.13l1.64,-3.95l-2.48,-3.58l-0.07,-1.39l-0.31,-0.37l-2.62,-0.61l0.73,-3.21l-1.33,-5.76l-0.07,-2.28l4.55,-7.04l1.67,-7.53l1.59,-1.44l6.17,2.09l0.48,4.29l-2.34,6.42l1.55,2.76l0.79,5.18l-0.57,9.85l2.73,4.33l-1.02,4.26l-4.88,9.07l0.23,0.57l2.86,0.92l0.49,-0.22l0.94,-2.13l2.83,-1.82l0.65,-3.1l2.12,-3.05l-1.37,-4.06l1.14,-4.42l-0.31,-0.49l-2.47,-0.52l-0.55,-3.59l1.95,-7.61l-3.13,-6.05l4.31,-5.2l-0.45,-5.83l0.53,-0.08l1.2,4.22l-0.98,7.66l0.21,0.4l2.68,1.42l0.58,-0.43l-1.09,-5.45l3.9,-2.98l4.9,-0.41l4.5,4.5l0.49,0.06l0.17,-0.47l-2.21,-6.76l-0.24,-8.85l4.01,-1.66l5.93,0.39l5.54,-1.19l0.28,-0.55l-1.97,-4.64l2.73,-5.9l2.89,-0.36l4.78,-4.84l6.49,-1.33l1.07,-2.85l6.11,-0.9l1.91,2.17l0.58,0.02l5.5,-5.45l4.43,0.17l0.41,-0.34l0.68,-4.62l2.32,-4.63l5.58,-4.48l3.69,3.23l-3.04,2.5l0.14,0.69l5.42,1.64l0.64,5.13l0.7,0.21l2.17,-2.49l6.98,0.14l5.48,5.07l1.92,3.72l-0.59,4.98l-2.66,2.78l-6.56,5.27l-1.96,2.84l0.18,0.6l3.08,1.27l3.68,2.26l0.45,-0.02l1.76,-1.33l1.14,5.11l0.34,0.31l0.41,-0.22l1.03,-2.14l3.75,-1.32l7.65,1.4l0.57,3.81l0.35,0.34l10.47,1.28l0.45,-0.39l0.13,-6.16l4.81,1.41l3.93,-0.03l3.85,4.37l1.1,5.17l-1.42,3.65l3.15,6.24l4.05,3.25l0.63,-0.2l2.24,-7.6l3.55,3.15l0.44,0.06l4.09,-2.03l4.67,2.34l0.49,-0.1l1.68,-2.01l3.85,1.04l0.49,-0.48l-1.76,-7.3l3.0,-3.3l22.19,5.31l2.15,4.74l6.55,5.95l10.36,-1.34l4.76,1.21l1.93,2.89l-0.3,5.24l3.26,2.4l3.66,-1.4l4.3,-0.18l4.84,1.4l4.5,-0.75l4.22,6.04l0.56,0.1l3.1,-2.22l0.13,-0.49l-1.96,-4.39l0.94,-2.74l7.63,1.95l5.23,-0.41l7.05,3.36l9.59,8.27l6.43,6.42l-0.21,3.79l1.82,1.88l0.45,0.06l0.21,-0.41l-0.52,-4.08l6.13,0.86l4.58,5.48l-2.15,2.3l-3.97,0.6l-0.34,0.39l-0.06,5.64l-0.78,0.94l-1.98,-0.15l-1.91,-1.99l-3.16,-1.63l-0.77,-2.69l-2.54,-0.99l-2.81,0.69l-1.11,-1.73l0.5,-2.12l-0.56,-0.45l-3.0,1.46l-0.2,0.51l1.06,2.68l-1.31,2.33l-3.03,2.42l-3.08,-0.41l-0.37,0.63l2.22,3.03l1.47,4.59l1.16,1.53l0.26,2.04l-0.46,1.02l-4.64,-1.05l-6.95,4.01l-2.18,0.6l-7.62,6.88l-0.81,1.88l-3.15,-3.07l-0.49,-0.06l-6.18,3.75l-0.93,-1.52l-0.61,-0.09l-2.26,2.01l-3.15,-0.64l-0.47,0.3l-0.79,3.18l-3.03,4.85l0.09,1.91l0.26,0.36l2.58,0.95l-0.3,6.03l-1.97,0.14l-0.36,0.29l-1.07,3.72l0.87,1.82l-4.01,2.02l-1.04,4.88l-3.49,0.95l-0.29,0.32l-0.73,4.06l-3.07,3.18l-0.71,-2.11l-2.45,-15.41l1.17,-6.06l2.06,-2.67l0.2,-2.12l3.83,-1.13l4.47,-6.06l4.28,-5.09l4.48,-4.07l2.13,-7.67l-0.45,-0.5l-3.36,0.72l-1.47,4.3l-5.81,5.21l-1.86,-5.8l-0.49,-0.26l-6.68,1.94l-6.27,8.55l-0.01,0.46l1.74,2.54l-8.37,1.57l0.16,-3.05l-0.32,-0.41l-3.89,-0.75l-3.3,2.39l-7.61,-0.82l-8.47,1.58l-17.7,19.78l0.24,0.67l3.73,0.52l1.14,2.49l2.65,1.15l0.46,-0.13l1.47,-1.95l2.35,0.24l3.43,4.41l0.08,3.28l-1.96,4.11l-0.21,4.69l-1.11,6.02l-3.72,5.32l-0.87,2.56l-8.3,10.17l-3.18,1.92l-1.29,0.04l-1.45,-1.54l-0.53,-0.05l-2.48,1.84l0.28,-0.27l0.36,-4.08l-0.6,-2.85l1.77,-1.03l2.89,0.6l0.44,-0.22l1.71,-3.57l0.84,-3.92l0.97,-1.37l1.32,-3.37l-0.48,-0.53l-4.14,1.11l-2.19,1.46l-3.38,-0.0l-1.05,-3.43l-2.97,-2.72l-4.29,-1.26l-1.76,-6.1l-2.63,-6.06l-2.3,-1.58l-3.75,-1.25l-3.46,0.09l-3.19,0.77l-2.26,2.18l0.05,0.61l1.21,0.86l0.03,1.88l-1.34,1.28l-2.26,4.23l-0.03,1.71l-3.16,2.2l-2.8,-1.36l-3.02,0.27l-1.18,-1.17l-1.68,-0.52l-3.94,2.75l-3.21,0.62l-2.27,0.93l-3.04,-0.6l-2.21,0.03l-1.47,-1.89l-2.61,-1.95l-2.65,-0.52l-5.44,1.21l-3.23,-1.49l-0.71,-3.08l-5.2,-1.5l-2.75,-1.64l-0.54,0.13l-2.59,4.17l0.89,2.46l-2.1,2.34l-3.38,-0.91l-2.42,-0.14l-1.85,-1.84l-2.51,-0.06l-2.46,-1.17l-3.86,1.89l-4.72,3.31l-3.26,0.87l-1.17,-2.07l-0.41,-0.2l-2.97,0.48l-1.1,-1.58l-1.62,-0.7l-1.31,-2.32l-1.38,-0.72l-3.71,0.94l-3.3,-2.2l-0.56,0.12l-0.97,1.52l-5.27,-9.77l-3.03,-3.13l0.73,-1.08l-0.04,-0.5l-0.5,-0.06l-6.2,3.97l-1.82,0.18l0.16,-1.83l-0.23,-0.4l-3.22,-1.46l-2.47,0.85l-0.7,-4.0l-0.31,-0.32l-4.5,-0.95l-2.52,1.84l-6.18,1.58l-1.3,1.08l-9.51,1.62l-1.15,1.45l-0.03,0.46l1.56,2.48l-1.98,0.89l-0.21,0.52l0.35,0.85l-2.18,1.8l0.03,0.64l3.81,2.6l-0.44,1.31l-3.21,-0.16l-0.87,1.02l-3.08,-1.9l-3.97,0.08l-2.66,1.61l-8.29,-4.28l-4.1,0.06l-5.42,4.44l-0.37,2.36l-2.0,-1.76l-0.63,0.13l-2.0,4.27l0.61,1.02l-1.32,2.63l0.05,0.44l2.13,2.54l1.95,0.05l1.39,2.15l-0.23,1.74l1.12,0.83l-0.86,1.61l-2.49,0.71l-2.49,3.66l0.0,0.45l2.19,3.19l-0.16,2.44l2.54,3.7l-1.62,1.81l-0.67,-0.14l-1.63,-1.93l-2.29,-0.94l-0.94,-1.47l-2.34,-0.71l-1.48,0.44l-0.42,-0.51l-3.52,-1.68l-5.76,-1.14l-0.47,0.2l-2.87,-2.64l-2.9,-1.36l-1.63,-1.56l1.39,-0.52l2.08,-3.01l-0.04,-0.51l-0.98,-1.01l3.14,-1.27l0.25,-0.4l-0.07,-0.8l-0.5,-0.35l-1.72,0.45l0.04,-0.92l1.06,-0.85l2.31,-0.26l0.34,-0.28l0.4,-1.47l-0.51,-1.94l0.95,-1.86l0.01,-1.32l-0.27,-0.37l-3.69,-1.26l-1.41,0.02l-1.42,-1.68l-0.43,-0.12l-1.78,0.57l-2.78,-1.21l-0.01,-0.71l-0.89,-1.73l-2.01,-0.38l-0.13,-0.77l0.53,-1.15l-1.6,-2.31l-3.58,0.03l-0.92,0.88l-0.42,-0.07l-1.05,-3.54l2.29,-0.07l0.97,-0.92l0.06,-0.51l-0.9,-1.27l-1.4,-0.62l-0.06,-0.85l-0.95,-0.73l-1.43,-2.57l0.49,-1.21l-0.25,-2.07l-2.69,-1.38l-1.22,0.37l-0.45,-0.94l-2.46,-1.05l-0.74,-2.46l-0.21,-2.19l-1.07,-1.09l0.93,-1.49l-0.72,-4.29l1.7,-2.67l-0.24,-0.98ZM749.34,295.94l-0.76,0.56l-0.11,0.15l-0.01,-0.65l0.87,-0.06ZM871.96,154.57l2.04,-0.2l3.29,2.04l-0.13,0.64l-2.37,1.7l-5.54,0.79l-0.34,-1.85l3.05,-3.11ZM797.75,123.25l-2.42,3.18l-3.66,-0.78l-4.39,-3.6l0.47,-2.52l10.01,3.72ZM783.79,118.53l-1.81,6.68l-8.92,-0.26l-4.06,2.13l-4.64,-5.86l1.28,-6.57l3.04,-1.79l6.39,0.44l8.71,5.22ZM778.23,253.99l-0.64,-1.28l0.31,-0.17l0.33,1.45ZM778.36,254.55l0.92,4.28l-0.05,4.08l1.05,4.08l2.23,6.09l-2.91,-0.99l-0.51,0.27l-1.54,5.47l2.42,4.01l-0.04,1.39l-1.22,-1.41l-0.65,0.06l-1.07,1.83l-0.29,-1.88l0.28,-3.61l-0.28,-4.01l0.58,-2.92l0.11,-5.24l-1.46,-4.02l0.21,-5.38l2.23,-2.09ZM780.09,139.86l-3.31,0.05l-5.09,-1.07l2.11,-3.11l2.77,-0.74l3.29,3.15l0.23,1.71ZM683.7,87.54l-13.17,4.38l4.34,-15.76l1.75,-1.29l1.59,0.74l6.17,7.25l-0.68,4.69ZM670.82,80.26l-5.03,1.48l-6.76,-3.64l-4.04,-4.98l-1.9,-10.03l-3.29,-2.93l6.28,-10.21l5.0,-3.39l4.63,7.67l5.72,14.22l-0.6,11.8ZM564.4,160.28l-0.92,0.41l-7.78,-0.94l-0.83,-3.41l-4.32,-2.0l-0.33,-3.85l2.54,-1.96l-0.08,-4.42l4.9,-7.29l-0.16,-0.58l-1.86,-0.88l5.7,-7.68l-0.57,-4.44l5.43,-5.07l8.18,-6.55l8.25,-1.96l4.4,-4.05l4.43,-1.3l1.54,3.81l-1.55,3.04l-16.43,9.84l-7.93,9.27l-7.69,17.13l0.59,6.93l4.49,5.95ZM548.68,56.87l-5.47,3.05l-0.54,2.57l-2.49,2.05l-2.33,-2.98l1.37,-4.49l-0.35,-0.52l-4.3,-0.36l3.7,-2.13l3.34,-0.17l0.47,3.78l0.35,0.35l0.42,-0.25l1.41,-3.62l2.04,-2.24l3.21,2.97l-0.81,1.96ZM477.39,251.71l-4.1,0.06l-2.6,-0.41l0.38,-1.28l3.15,-1.29l3.25,1.22l-0.09,1.7Z',
          name: 'Russia',
        },
        RW: {
          path: 'M497.0,418.15l0.71,1.01l-0.11,1.09l-1.63,0.03l-1.04,1.39l-0.83,-0.11l0.51,-1.2l0.08,-1.34l0.42,-0.41l0.7,0.14l1.19,-0.61Z',
          name: 'Rwanda',
        },
        RS: {
          path: 'M469.33,288.43l0.49,-1.17l-1.2,-1.97l1.47,-0.73l1.3,0.13l1.18,1.23l0.45,1.29l1.35,0.74l0.34,1.53l1.46,1.02l0.76,-0.3l0.25,0.82l-0.51,0.87l0.22,1.27l1.08,1.41l-0.8,0.94l-0.38,1.72l-1.22,0.09l0.27,-0.81l-2.46,-2.38l-0.93,0.06l-0.47,1.05l-2.15,-1.58l0.57,-1.85l-1.13,-1.51l0.53,-1.32l-0.49,-0.55Z',
          name: 'Serbia',
        },
        TL: {
          path: 'M734.55,437.87l-0.09,-0.98l4.5,-0.86l-2.82,1.28l-1.59,0.55Z',
          name: 'Timor-Leste',
        },
        TM: {
          path: 'M553.03,299.38l-0.05,0.44l-0.1,-0.29l0.15,-0.15ZM555.85,298.15l0.46,-0.11l1.47,0.82l2.08,2.72l4.07,-0.21l0.38,-0.49l-0.34,-1.39l1.95,-1.07l1.9,-1.78l2.93,1.56l0.41,2.75l1.21,0.76l2.57,-0.15l0.62,0.45l1.32,3.46l4.54,3.8l2.67,1.6l3.07,1.26l-0.04,1.22l-1.32,-0.81l-0.61,0.19l-0.32,0.93l-2.19,0.86l-0.47,2.34l-1.21,0.81l-1.91,0.45l-0.73,1.44l-1.54,0.33l-2.22,-1.01l-0.2,-2.37l-0.37,-0.37l-1.72,-0.1l-2.76,-2.67l-2.14,-0.44l-2.84,-1.62l-1.78,-0.29l-1.25,0.58l-1.56,-0.09l-2.01,1.85l-1.69,0.47l-0.37,-1.75l0.36,-3.28l-0.2,-0.39l-1.68,-0.94l0.55,-1.92l-0.34,-0.51l-1.23,-0.14l0.38,-1.9l2.23,0.64l2.2,-1.06l0.12,-0.63l-1.77,-1.94l-0.69,-1.85Z',
          name: 'Turkmenistan',
        },
        TJ: {
          path: 'M597.8,305.02l-0.08,0.09l-2.5,-0.5l-0.48,0.34l-0.24,1.88l0.43,0.45l2.63,-0.24l3.18,1.04l4.38,-0.45l0.56,2.63l0.54,0.29l0.66,-0.26l1.12,0.54l0.21,2.4l-3.76,-0.23l-1.81,1.45l-1.74,0.8l-0.62,-0.64l0.22,-2.47l-0.65,-0.49l-0.04,-1.02l-1.36,-0.73l-0.48,0.07l-1.08,1.11l-0.54,1.62l-1.3,-0.06l-0.96,1.26l-0.91,-0.37l-1.63,0.91l-0.24,-0.12l1.28,-3.1l-0.54,-2.38l-1.69,-0.89l0.36,-0.8l2.18,-0.05l1.19,-1.8l0.76,-1.99l2.44,-0.56l-0.28,1.13l0.36,0.91l0.43,0.25Z',
          name: 'Tajikistan',
        },
        RO: {
          path: 'M487.52,276.99l0.59,0.28l2.89,4.68l-0.18,3.12l0.45,1.64l1.3,0.9l1.37,-0.47l0.76,0.41l0.03,0.46l-0.83,0.52l-0.57,-0.25l-0.55,0.3l-0.63,3.8l-0.98,-0.24l-2.1,-1.28l-2.95,0.81l-1.25,0.86l-3.49,-0.17l-1.88,-0.53l-0.87,0.17l-0.86,-1.54l0.34,-0.35l-0.05,-0.61l-0.62,-0.44l-0.51,0.04l-0.55,0.55l-1.04,-0.73l-0.17,-1.29l-1.58,-1.05l-0.34,-1.15l-0.92,-0.96l1.63,-0.65l2.66,-4.89l2.39,-1.44l2.93,0.39l1.06,0.83l0.47,0.02l0.79,-0.53l1.77,-0.34l0.76,-0.87l0.76,0.0Z',
          name: 'Romania',
        },
        GW: {
          path: 'M386.23,383.41l-0.29,0.84l0.15,0.61l-2.21,0.6l-0.86,0.96l-1.04,-0.83l-1.09,-0.23l-0.54,-1.07l-0.66,-0.5l2.41,-0.49l4.13,0.1Z',
          name: 'Guinea-Bissau',
        },
        GT: {
          path: 'M195.08,379.54l-2.48,-0.37l-1.03,-0.46l-1.14,-0.9l0.3,-1.01l-0.24,-0.68l0.96,-1.69l2.98,-0.01l0.4,-0.37l-0.19,-1.29l-1.68,-1.44l0.53,-0.4l0.0,-1.08l3.85,0.02l-0.21,4.61l0.4,0.43l1.48,0.38l-1.5,1.01l-0.34,0.71l0.12,0.57l-2.2,1.98Z',
          name: 'Guatemala',
        },
        GR: {
          path: 'M487.09,300.31l-0.62,1.67l-0.37,0.23l-2.84,-0.38l-3.03,0.86l-0.18,0.66l1.34,1.43l-0.67,0.28l-1.12,0.0l-1.2,-1.54l-0.65,0.03l-0.52,1.05l0.56,1.95l1.06,1.34l-0.61,0.46l-0.05,0.59l2.53,2.34l0.02,1.02l-1.77,-0.64l-0.5,0.54l0.53,1.16l-1.1,0.23l-0.3,0.52l0.77,2.24l-0.99,0.02l-1.84,-1.22l-1.37,-4.59l-2.21,-3.25l-0.12,-0.67l1.06,-1.44l0.2,-1.06l0.84,-0.7l0.03,-0.55l1.33,-0.24l1.01,-0.71l1.21,0.06l0.67,-0.62l2.26,-0.01l1.8,-0.83l1.85,1.11l2.28,-0.31l0.35,-0.39l0.01,-0.9l0.35,0.26ZM480.49,319.61l0.67,0.51l-0.8,-0.16l0.13,-0.35ZM482.3,320.35l2.74,0.05l0.29,0.4l-2.04,0.15l-0.32,-0.47l-0.67,-0.13Z',
          name: 'Greece',
        },
        GQ: {
          path: 'M448.79,409.52l0.02,2.22l-4.09,0.0l0.69,-2.27l3.38,0.05Z',
          name: 'Eq. Guinea',
        },
        GY: {
          path: 'M277.42,399.96l-0.32,1.83l-1.32,0.57l-0.23,0.46l-0.28,2.01l1.11,1.82l0.83,0.19l0.32,1.25l1.13,1.62l-1.21,-0.19l-1.08,0.71l-1.77,0.5l-0.44,0.46l-0.86,-0.09l-1.32,-1.01l-0.77,-2.27l0.36,-1.91l0.68,-1.23l-0.57,-1.17l-0.74,-0.43l0.12,-1.16l-0.9,-0.69l-1.1,0.09l-1.31,-1.48l0.53,-0.72l-0.04,-0.84l1.99,-0.86l0.05,-0.59l-0.71,-0.78l0.14,-0.57l1.66,-1.24l1.36,0.77l1.41,1.5l0.06,1.15l0.37,0.38l0.8,0.05l2.06,1.87Z',
          name: 'Guyana',
        },
        GE: {
          path: 'M521.61,293.9l5.38,1.03l3.26,1.57l0.84,0.7l1.39,-0.49l2.05,0.63l0.69,1.25l1.15,0.65l-0.2,0.63l1.05,1.54l-1.06,-0.15l-1.81,-0.93l-0.97,0.52l-3.21,0.48l-2.28,-1.55l-2.37,0.06l0.23,-1.11l-0.75,-2.51l-1.45,-1.26l-1.43,-0.44l-0.53,-0.61Z',
          name: 'Georgia',
        },
        GB: {
          path: 'M412.72,233.04l-2.32,4.44l0.45,0.57l2.5,-0.63l2.22,0.02l-0.56,3.24l-2.22,4.0l0.31,0.59l2.36,0.26l2.34,5.43l1.76,0.84l2.21,6.35l2.96,0.93l-0.25,2.13l-1.17,1.09l-0.09,0.47l0.87,1.82l-1.92,1.78l-3.29,-0.02l-4.09,1.04l-1.02,-0.68l-0.52,0.07l-1.5,1.67l-2.09,-0.4l-1.88,1.4l-0.67,-0.39l3.29,-3.71l2.15,-0.83l0.25,-0.41l-0.33,-0.35l-3.72,-0.64l-0.47,-1.06l2.27,-1.1l0.17,-0.57l-1.29,-2.09l0.39,-2.22l3.35,0.34l0.44,-0.34l0.37,-2.46l-1.77,-2.98l-3.1,-0.89l-0.43,-0.84l0.8,-2.18l-0.82,-1.22l-0.67,0.01l-0.66,1.02l-0.1,-3.02l-1.24,-2.37l0.87,-4.6l1.78,-3.54l1.83,0.33l2.26,-0.3ZM406.3,251.21l-1.06,2.32l-1.53,-0.71l-1.21,0.0l0.4,-1.97l-0.42,-1.89l1.46,-0.13l2.36,2.36Z',
          name: 'United Kingdom',
        },
        GA: {
          path: 'M453.24,409.42l-0.08,0.98l0.7,1.29l2.36,0.24l-0.98,2.63l1.18,1.79l0.25,1.78l-0.29,1.52l-0.6,0.93l-1.84,-0.09l-1.23,-1.11l-0.66,0.23l-0.15,0.84l-1.42,0.26l-1.02,0.7l-0.11,0.52l0.77,1.35l-1.34,0.98l-3.94,-4.31l-1.44,-2.45l0.06,-0.6l0.54,-0.81l1.05,-3.46l4.17,-0.07l0.4,-0.4l-0.02,-2.66l2.39,0.21l1.25,-0.27Z',
          name: 'Gabon',
        },
        GN: {
          path: 'M391.8,383.91l0.47,0.81l1.11,-0.32l0.98,0.71l1.07,0.2l2.26,-1.23l0.63,0.44l1.13,1.58l-0.48,1.41l0.8,0.3l-0.08,0.48l0.46,0.69l-0.35,1.37l1.05,2.63l-1.0,0.69l0.03,1.42l-0.72,-0.06l-1.07,1.01l-0.24,-0.27l0.07,-1.11l-1.05,-1.55l-0.49,-0.14l-1.3,0.36l-0.35,-2.01l-1.6,-2.19l-2.0,-0.0l-1.31,0.54l-1.95,2.19l-1.86,-2.2l-1.2,-0.78l-0.3,-1.12l-0.8,-0.86l0.65,-0.73l0.81,-0.03l1.64,-0.8l0.23,-1.88l2.67,0.64l0.89,-0.31l1.21,0.15Z',
          name: 'Guinea',
        },
        GM: {
          path: 'M379.31,381.18l0.1,-0.36l2.43,-0.07l0.74,-0.62l0.5,-0.03l0.83,0.53l-1.08,-0.33l-1.87,0.91l-1.65,-0.04ZM384.0,380.68l0.95,0.06l0.76,-0.23l-0.59,0.32l-1.11,-0.15Z',
          name: 'Gambia',
        },
        GL: {
          path: 'M352.9,3.19l15.35,16.28l-4.35,6.99l-9.4,0.81l-13.48,1.81l-0.32,0.54l1.26,3.26l0.46,0.25l8.67,-1.96l7.39,6.05l0.55,-0.04l4.4,-4.95l1.83,5.61l-2.72,9.68l0.18,0.45l0.48,-0.06l6.34,-6.15l11.94,-6.62l7.14,3.24l1.33,6.85l-10.07,11.17l-1.42,3.42l-7.83,2.5l-0.28,0.42l0.35,0.36l5.33,0.65l-2.8,9.83l-2.03,8.69l0.08,13.63l2.84,7.11l-3.6,0.49l-4.12,3.47l-0.05,0.56l4.54,5.53l0.56,8.17l-2.39,0.81l-0.24,0.53l3.05,7.7l-5.05,0.6l-0.27,0.64l2.78,3.54l-0.72,2.75l-3.27,1.26l-3.42,0.02l-0.35,0.59l3.09,5.7l0.03,2.82l-4.32,-2.99l-0.57,0.13l-1.29,2.22l0.14,0.54l3.3,2.0l3.18,4.75l0.88,5.79l-3.85,1.25l-4.86,-7.12l-0.48,-0.14l-0.24,0.44l0.83,5.08l-2.81,3.81l0.3,0.64l9.17,0.61l-6.07,5.68l-6.74,5.42l-7.2,2.3l-2.98,0.14l-2.66,2.67l-3.44,6.75l-5.23,4.25l-1.73,0.27l-7.11,3.08l-2.15,3.69l-0.09,4.21l-1.22,3.58l-4.03,4.36l0.89,4.48l-2.31,8.95l-3.05,0.26l-3.56,-4.0l-5.12,-0.16l-2.26,-2.64l-1.69,-5.21l-4.31,-6.82l-1.24,-3.62l-0.4,-5.4l-3.39,-5.47l0.87,-4.47l-1.62,-2.41l2.37,-7.41l3.81,-2.67l1.01,-3.01l0.52,-5.6l-0.22,-0.39l-0.45,0.06l-4.16,3.58l-1.99,0.9l-2.73,-2.07l-0.16,-4.72l0.9,-3.66l1.94,-0.09l5.03,1.98l0.47,-0.14l-0.03,-0.49l-6.54,-7.53l-0.47,-0.11l-2.25,1.0l-1.7,-1.6l2.69,-7.67l-1.51,-3.12l-4.99,-15.74l-3.17,-3.76l-0.11,-4.29l-6.93,-6.07l-5.4,-0.76l-12.62,1.16l-2.75,-3.16l-4.1,-6.46l6.13,-3.31l4.96,-0.6l0.35,-0.37l-0.29,-0.42l-10.63,-2.99l-5.42,-4.66l0.32,-4.37l9.32,-6.03l9.34,-6.65l0.97,-5.04l-0.15,-0.39l-6.52,-4.97l2.06,-5.6l8.57,-10.89l3.56,-1.73l0.22,-0.41l-1.01,-7.43l5.7,-4.5l7.58,-2.82l7.37,-0.16l2.62,5.4l0.69,0.04l6.35,-9.67l5.63,6.55l3.58,1.5l5.14,5.66l0.54,0.05l0.1,-0.53l-5.89,-9.52l0.33,-7.89l8.21,-11.86l8.55,0.93l0.41,-0.25l3.12,-7.8l8.58,-2.09l19.79,2.78Z',
          name: 'Greenland',
        },
        GH: {
          path: 'M420.53,387.35l-0.01,0.72l0.96,1.2l0.24,3.75l0.59,0.95l-0.51,2.1l0.19,1.41l1.02,2.22l-6.97,2.85l-1.8,-0.57l0.04,-0.89l-1.02,-2.04l0.61,-2.66l1.07,-2.33l-0.96,-6.5l5.01,0.07l0.94,-0.39l0.61,0.11Z',
          name: 'Ghana',
        },
        OM: {
          path: 'M568.09,360.37l-0.91,1.71l-1.22,0.04l-0.59,0.78l-0.41,1.53l0.26,1.63l-1.16,0.05l-1.56,0.99l-0.76,1.78l-1.62,0.05l-0.98,0.66l-0.17,1.17l-0.89,0.53l-1.49,-0.18l-2.4,0.95l-2.48,-5.51l7.35,-2.77l1.67,-5.36l-1.12,-2.14l0.05,-0.87l0.67,-1.04l0.07,-1.08l0.91,-0.43l-0.05,-2.14l0.7,-0.01l1.01,1.68l1.51,1.12l3.3,0.87l1.73,2.37l0.81,0.38l-1.23,2.44l-0.99,0.81ZM561.83,347.23l-0.0,-0.01l0.01,-0.01l-0.0,0.02Z',
          name: 'Oman',
        },
        TN: {
          path: 'M448.18,315.32l-1.08,1.46l-0.02,1.43l0.84,0.93l-0.29,2.3l-1.65,1.83l0.48,1.65l1.41,0.33l0.53,1.2l0.9,0.55l-0.11,1.83l-3.54,2.81l-0.09,2.52l-0.58,0.32l-0.96,-4.72l-1.54,-1.32l-0.15,-0.82l-1.93,-1.68l-0.19,-1.93l1.52,-1.74l0.59,-2.52l-0.38,-3.0l0.43,-1.35l2.45,-1.14l1.29,0.28l-0.06,1.25l0.59,0.37l1.54,-0.84Z',
          name: 'Tunisia',
        },
        JO: {
          path: 'M518.65,329.54l-5.15,1.67l-0.19,0.64l2.19,2.56l-0.58,0.44l-0.33,0.78l-1.71,0.36l-1.71,1.89l-2.34,-0.38l1.21,-4.6l0.56,-4.33l2.81,0.99l4.45,-2.88l0.8,2.87Z',
          name: 'Jordan',
        },
        HR: {
          path: 'M455.59,286.98l1.42,0.1l0.57,-0.46l0.74,0.44l0.98,0.07l0.43,-0.4l-0.01,-0.73l0.86,-0.57l0.21,-1.25l1.62,-0.78l2.55,1.93l2.07,0.69l0.88,-0.35l1.09,1.85l-0.56,0.77l-1.05,-0.63l-1.67,0.05l-2.1,-0.57l-1.3,0.07l-0.58,0.54l-0.57,-0.52l-0.65,0.16l-0.47,1.84l1.79,2.75l2.11,2.07l0.81,1.23l-1.27,-1.06l-2.2,-0.99l-1.73,-2.1l0.2,-0.63l-1.06,-1.38l-0.31,-1.43l-1.61,-0.56l-0.49,0.2l-0.45,0.89l-0.26,-1.24Z',
          name: 'Croatia',
        },
        HT: {
          path: 'M238.65,368.15l-1.58,-0.17l-1.19,0.44l-0.91,-0.56l0.06,-0.21l3.62,0.5ZM239.22,368.07l0.82,-0.54l0.06,-0.62l-1.02,-1.03l0.02,-0.84l-0.3,-0.39l-0.93,-0.35l3.16,0.46l0.02,1.9l-0.48,0.35l-0.07,0.58l0.54,0.74l-1.81,-0.26Z',
          name: 'Haiti',
        },
        HU: {
          path: 'M462.05,281.37l0.68,-1.93l-0.16,-0.54l0.71,-0.0l0.39,-0.35l0.1,-0.84l1.72,1.0l2.35,-0.43l0.43,-0.77l3.49,-0.92l0.69,-0.91l0.54,-0.15l2.55,1.09l0.69,-0.26l1.03,0.76l0.1,0.55l-1.45,0.83l-2.6,4.82l-1.79,0.61l-1.69,-0.11l-2.72,1.41l-1.83,-0.61l-2.55,-1.92l-0.7,-1.3Z',
          name: 'Hungary',
        },
        HN: {
          path: 'M199.6,379.29l-1.71,-1.22l0.07,-0.96l3.04,-2.17l2.37,0.29l1.27,-0.09l1.1,-0.53l1.3,0.28l1.14,-0.26l1.37,0.37l2.25,1.39l-2.37,0.95l-1.23,-0.4l-0.88,1.31l-1.28,1.0l-0.43,-0.3l-0.55,0.08l-0.42,0.53l-0.96,0.05l-0.36,0.41l0.04,0.89l-0.52,0.6l-0.3,0.04l-0.3,-0.56l-0.66,-0.32l0.12,-0.68l-0.48,-0.66l-0.63,-0.25l-0.97,0.2Z',
          name: 'Honduras',
        },
        PR: {
          path: 'M256.17,368.34l-0.27,0.28l-2.83,0.06l-0.07,-0.57l1.95,-0.1l1.23,0.34Z',
          name: 'Puerto Rico',
        },
        PS: {
          path: 'M509.06,331.4l0.27,-0.17l-0.04,0.09l-0.23,0.08ZM509.37,331.14l-0.03,-0.63l-0.35,-0.18l0.32,-1.21l0.24,0.11l-0.19,1.91Z',
          name: 'Palestine',
        },
        PT: {
          path: 'M401.85,314.47l-0.65,0.52l-1.11,-0.37l-0.93,0.18l0.29,-1.97l-0.24,-1.95l-1.24,-0.59l-0.47,-0.95l0.18,-1.87l1.01,-1.29l0.69,-3.25l-0.04,-1.52l-0.59,-2.16l1.29,-0.96l0.85,1.5l3.09,-0.33l0.49,1.17l-1.07,1.02l-0.03,2.43l-0.41,0.6l-0.08,1.25l-0.8,0.2l-0.26,0.57l0.93,1.79l-0.64,1.95l0.78,1.16l-1.12,1.72l0.08,1.13Z',
          name: 'Portugal',
        },
        PY: {
          path: 'M274.9,466.41l0.74,1.55l-0.16,3.55l0.32,0.41l2.64,0.52l1.11,-0.48l1.4,0.6l0.36,0.62l0.53,3.53l1.27,0.41l0.98,-0.39l0.52,0.28l-0.0,1.23l-1.21,5.54l-2.09,1.99l-1.8,0.41l-4.72,-1.03l2.21,-3.81l-0.32,-1.54l-2.77,-1.32l-3.03,-2.01l-2.07,-0.45l-4.34,-4.19l0.91,-2.99l0.08,-1.45l1.07,-2.09l4.13,-0.73l2.18,0.04l2.06,1.2l0.03,0.61Z',
          name: 'Paraguay',
        },
        PA: {
          path: 'M213.79,393.56l0.26,-1.53l-0.36,-0.26l-0.01,-0.5l0.44,-0.1l0.93,1.4l1.26,0.03l0.77,0.5l1.38,-0.24l2.51,-1.12l0.86,-0.72l3.45,0.85l1.4,1.19l0.41,1.75l-0.21,0.34l-0.53,-0.12l-0.47,0.29l-0.16,0.6l-0.68,-1.28l0.45,-0.49l-0.19,-0.66l-0.47,-0.13l-0.54,-0.84l-1.5,-0.75l-1.1,0.16l-0.75,0.99l-1.62,0.84l-0.18,0.96l0.85,0.97l-0.58,0.45l-0.69,0.08l-0.34,-1.18l-1.27,0.03l-0.71,-1.05l-2.59,-0.47Z',
          name: 'Panama',
        },
        PG: {
          path: 'M808.58,428.76l2.54,2.57l-0.13,0.26l-0.33,0.12l-0.87,-0.78l-1.22,-2.17ZM801.41,422.94l0.51,0.29l0.26,0.27l-0.49,-0.36l-0.28,-0.21ZM803.17,424.48l0.59,0.5l0.08,1.06l-0.29,-0.91l-0.38,-0.65ZM796.68,428.31l0.52,0.75l1.43,-0.19l2.27,-1.82l-0.01,-1.43l1.12,0.16l-0.04,1.1l-0.7,1.28l-1.12,0.18l-0.62,0.79l-2.46,1.11l-1.17,-0.0l-3.08,-1.25l3.41,0.0l0.45,-0.68ZM789.15,433.47l2.31,1.81l1.59,2.62l1.34,0.14l-0.06,0.66l0.31,0.43l1.06,0.24l0.06,0.66l2.25,1.06l-1.21,0.13l-0.72,-0.64l-4.56,-0.65l-3.22,-2.89l-1.49,-2.35l-3.27,-1.11l-2.38,0.72l-1.59,0.86l-0.2,0.42l0.27,1.56l-1.55,0.69l-1.36,-0.4l-2.21,-0.09l-0.08,-15.44l8.39,2.93l2.95,2.4l0.6,1.64l4.02,1.5l0.31,0.69l-1.76,0.21l-0.33,0.52l0.55,1.68Z',
          name: 'Papua New Guinea',
        },
        PE: {
          path: 'M244.97,425.11l-1.26,-0.07l-0.57,0.42l-1.93,0.45l-2.98,1.76l-0.36,1.36l-0.58,0.8l0.12,1.37l-1.24,0.6l-0.22,1.22l-0.62,0.84l1.04,2.28l1.28,1.44l-0.41,0.85l0.32,0.57l1.48,0.13l1.16,1.37l2.21,0.07l1.63,-1.08l-0.13,3.04l0.3,0.4l1.14,0.29l1.31,-0.35l1.9,3.62l-0.48,0.86l-0.17,3.89l-0.94,1.6l0.35,0.76l-0.48,1.08l0.98,2.0l-2.1,3.89l-0.97,0.51l-2.17,-1.31l-0.39,-1.18l-4.95,-2.62l-4.46,-2.82l-1.85,-1.53l-0.91,-1.87l0.3,-0.97l-2.11,-3.36l-4.82,-9.74l-1.04,-1.2l-0.87,-1.95l-3.4,-2.49l0.58,-1.18l-1.13,-2.23l0.66,-1.5l1.45,-1.15l-0.6,0.99l0.07,0.92l0.47,0.36l1.74,0.03l0.97,1.17l0.54,0.07l1.42,-1.03l0.6,-1.84l1.42,-2.02l3.04,-1.04l2.73,-2.62l0.86,-1.74l-0.1,-1.87l1.44,1.02l0.9,1.25l1.06,0.59l1.7,2.73l1.86,0.31l1.45,-0.61l0.96,0.39l1.36,-0.19l1.45,0.89l-1.4,2.21l0.31,0.61l0.59,0.05l0.47,0.5Z',
          name: 'Peru',
        },
        PK: {
          path: 'M615.13,319.81l-1.88,2.0l-2.59,0.42l-3.73,-0.73l-1.6,1.43l-0.09,0.4l1.77,4.7l1.73,1.32l-1.73,1.38l-0.11,2.26l-2.34,2.8l-1.59,2.95l-2.46,2.8l-3.03,-0.07l-2.76,2.96l0.05,0.59l1.51,1.16l0.26,1.98l1.44,1.55l0.37,1.77l-5.02,-0.01l-1.78,1.76l-1.41,-0.53l-0.76,-1.94l-2.27,-2.23l-11.61,0.89l0.72,-2.47l3.43,-1.37l0.25,-0.43l-0.21,-1.29l-1.2,-0.67l-0.28,-2.57l-2.29,-1.2l-1.32,-2.09l2.85,1.0l2.62,-0.4l1.42,0.35l0.77,-0.59l1.71,0.2l3.25,-1.2l0.26,-0.36l0.08,-2.33l1.19,-1.41l1.68,0.0l0.58,-0.87l1.59,-0.32l1.2,0.17l0.98,-0.83l0.01,-1.99l0.94,-1.58l1.48,-0.71l0.19,-0.54l-0.69,-1.39l2.06,-0.12l0.69,-1.09l-0.03,-1.23l1.12,-1.15l-0.18,-1.88l-0.5,-1.14l1.17,-1.09l5.42,-0.99l2.59,-0.89l1.6,1.26l0.97,2.53l3.5,1.06Z',
          name: 'Pakistan',
        },
        PH: {
          path: 'M737.01,393.71l0.39,2.98l-0.44,1.19l-0.55,-1.53l-0.67,-0.14l-1.17,1.28l0.65,2.1l-0.42,0.69l-2.48,-1.23l-0.58,-1.49l0.66,-1.03l-0.1,-0.53l-1.59,-1.19l-0.56,0.08l-0.65,0.87l-1.23,0.0l-1.58,0.97l0.83,-1.81l2.56,-1.42l0.65,0.84l0.45,0.13l1.9,-0.69l0.56,-1.12l1.5,-0.06l0.38,-0.43l-0.09,-1.2l1.21,0.72l0.36,2.03ZM733.59,386.41l0.05,0.76l0.08,0.27l-0.8,-0.42l-0.18,-0.72l0.85,0.12ZM734.08,385.93l-0.12,-1.13l-1.01,-1.29l1.36,0.03l0.53,0.73l0.51,2.06l-1.27,-0.4ZM733.76,387.52l0.39,0.99l-0.32,0.15l-0.07,-1.14ZM724.65,368.03l1.46,0.71l0.72,-0.31l-0.32,1.19l0.79,1.74l-0.57,1.88l-1.53,1.06l-0.39,2.27l0.56,2.06l1.63,0.57l1.16,-0.27l2.72,1.24l-0.19,1.1l0.77,0.85l-0.08,0.37l-1.4,-0.9l-0.88,-1.29l-0.66,0.0l-0.38,0.55l-1.6,-1.32l-2.15,0.36l-0.87,-0.4l0.07,-0.62l0.66,-0.56l-0.01,-0.62l-0.75,-0.6l-0.72,0.44l-0.73,-0.88l-0.39,-2.53l0.32,0.27l0.66,-0.28l0.26,-4.04l0.71,-2.06l1.14,0.0ZM731.03,388.72l-0.88,0.85l-1.19,1.95l-1.05,-1.2l0.93,-1.11l0.32,-1.48l0.52,-0.06l-0.27,1.16l0.22,0.45l0.49,-0.12l1.0,-1.32l-0.08,0.86ZM726.83,385.61l0.83,0.38l1.17,-0.0l-0.02,0.48l-2.0,1.41l0.02,-2.28ZM724.81,381.88l-0.39,1.29l-1.42,-1.98l1.2,0.05l0.6,0.64ZM716.54,391.7l1.12,-0.97l0.03,-0.03l-0.28,0.38l-0.87,0.63ZM719.21,388.91l0.04,-0.07l0.8,-1.54l0.16,0.76l-1.01,0.85Z',
          name: 'Philippines',
        },
        PL: {
          path: 'M468.45,271.45l-1.1,-1.82l-1.87,-0.39l-0.48,-1.25l-1.72,-0.44l-0.47,0.25l-0.21,0.56l-0.72,-0.43l0.12,-0.82l-0.32,-0.45l-1.74,-0.32l-1.05,-1.13l-0.96,-2.4l0.17,-1.46l-0.62,-2.19l-0.82,-1.37l0.61,-1.22l-0.51,-1.88l1.46,-1.07l6.88,-3.37l2.12,0.62l0.15,0.81l0.38,0.33l5.51,0.54l4.53,-0.06l1.06,0.38l0.5,1.09l0.14,1.93l0.66,1.51l-0.01,1.34l-1.3,0.73l-0.17,0.5l0.74,1.83l0.07,1.86l1.22,3.37l-0.19,0.78l-1.23,0.53l-2.27,3.23l0.24,1.15l-1.99,-1.23l-2.01,0.46l-1.38,-0.32l-1.2,0.67l-1.05,-1.13l-1.17,0.27Z',
          name: 'Poland',
        },
        ZM: {
          path: 'M481.47,443.27l0.39,0.31l2.52,0.15l0.99,1.18l2.01,0.36l1.4,-0.64l0.69,1.18l1.78,0.33l1.84,2.38l2.24,0.19l0.4,-0.43l-0.21,-2.77l-0.62,-0.3l-0.48,0.33l-1.98,-1.18l0.72,-5.32l-0.51,-1.19l0.58,-1.31l3.68,-0.62l0.26,0.64l1.21,0.63l0.9,-0.22l2.16,0.67l1.33,0.71l1.07,1.02l0.56,1.89l-0.88,2.72l0.43,2.1l-0.73,0.88l-0.76,2.39l0.6,0.68l-6.61,1.85l-0.29,0.44l0.19,1.47l-1.69,0.36l-1.43,1.04l-0.38,0.89l-0.87,0.26l-3.48,3.75l-4.15,-0.54l-1.52,-1.01l-1.77,-0.14l-1.82,0.53l-3.04,-3.46l0.11,-7.69l4.82,0.03l0.39,-0.49l-0.18,-0.76l0.33,-0.84l-0.4,-1.37l0.24,-1.06Z',
          name: 'Zambia',
        },
        EH: {
          path: 'M384.42,359.7l0.26,-0.83l1.06,-1.32l0.8,-3.63l3.38,-2.88l0.69,-1.87l0.06,5.03l-1.98,0.21l-0.94,1.63l0.39,3.66l-3.71,-0.01ZM392.0,347.13l0.72,-1.91l1.77,-0.25l2.09,0.35l0.96,-0.65l1.27,-0.07l-0.0,2.65l-6.8,-0.12Z',
          name: 'W. Sahara',
        },
        EE: {
          path: 'M485.7,228.2l2.62,0.79l2.44,-0.11l0.18,0.41l-1.67,2.62l0.66,4.56l-0.85,1.18l-1.72,-0.01l-3.21,-2.27l-1.85,0.58l0.22,-2.14l-0.62,-0.38l-0.64,0.42l-1.26,-1.35l-0.18,-2.36l2.87,-1.24l3.02,-0.69Z',
          name: 'Estonia',
        },
        EG: {
          path: 'M492.06,333.38l1.47,0.44l2.95,-1.74l2.03,-0.22l1.52,0.32l0.6,1.27l0.7,0.04l0.41,-0.68l1.8,0.61l1.95,0.17l1.04,-0.54l1.43,4.34l-2.03,4.78l-1.66,-1.85l-1.76,-4.05l-0.65,-0.12l-0.35,0.67l1.04,3.03l3.44,7.26l1.77,3.16l2.04,2.76l-0.37,0.54l0.22,2.06l2.73,2.28l-28.43,0.0l0.0,-19.72l-0.73,-2.31l0.6,-1.66l-0.33,-1.32l0.69,-1.07l3.05,-0.04l4.82,1.62Z',
          name: 'Egypt',
        },
        ZA: {
          path: 'M467.15,505.21l-0.13,-2.11l-0.69,-1.7l0.71,-0.7l-0.12,-2.46l-4.57,-8.67l0.78,-0.92l0.59,0.47l0.69,1.37l2.83,0.75l1.5,-0.27l2.24,-1.46l0.18,-9.94l1.35,2.39l-0.21,1.57l0.61,1.24l0.41,0.2l1.79,-0.29l2.61,-2.16l0.69,-1.37l0.95,-0.5l2.19,1.08l2.04,0.14l1.78,-0.67l0.85,-2.2l1.38,-0.34l1.59,-2.85l2.15,-1.95l3.41,-1.92l1.99,0.46l1.02,-0.28l0.99,0.2l1.75,5.47l-0.37,3.39l-0.82,-0.24l-1.0,0.47l-0.87,1.75l-0.04,1.2l1.98,1.91l1.47,-0.3l0.7,-1.24l1.09,0.01l-0.77,3.89l-0.58,1.15l-2.2,1.88l-3.17,5.02l-2.8,3.01l-3.57,3.07l-2.53,1.12l-1.22,0.15l-0.51,0.75l-1.17,-0.34l-1.4,0.54l-2.58,-0.55l-1.62,0.35l-1.19,-0.11l-2.54,1.18l-2.1,0.47l-1.6,1.15l-0.84,0.05l-0.93,-0.95l-0.93,-0.16l-0.97,-1.21l-0.25,0.05ZM491.46,495.56l0.62,-0.98l1.48,-0.62l1.18,-2.31l-0.07,-0.48l-1.99,-1.77l-1.68,0.59l-1.42,1.19l-1.34,1.82l0.02,0.49l1.88,2.23l1.32,-0.17Z',
          name: 'South Africa',
        },
        EC: {
          path: 'M231.86,415.43l0.29,1.59l-0.69,1.45l-2.61,2.51l-3.13,1.11l-1.53,2.18l-0.49,1.68l-1.0,0.73l-1.02,-1.11l-1.78,-0.16l0.67,-1.15l-0.24,-0.86l1.25,-2.13l-0.54,-1.09l-0.67,-0.08l-0.72,0.87l-0.87,-0.64l0.35,-0.69l-0.36,-1.96l0.81,-0.51l0.45,-1.51l0.92,-1.57l-0.07,-0.97l2.65,-1.33l2.75,1.35l0.77,1.05l2.12,0.35l0.76,-0.32l1.96,1.21Z',
          name: 'Ecuador',
        },
        IT: {
          path: 'M451.58,282.14l3.5,1.08l-0.22,1.43l0.34,1.0l-1.55,-0.28l-2.22,1.64l0.13,1.69l-0.27,1.22l0.82,1.78l2.39,1.84l1.3,2.87l2.79,2.73l2.05,0.1l0.25,0.31l-0.43,0.41l0.09,0.64l4.05,2.19l2.2,2.0l-0.17,0.42l-1.16,-1.17l-2.18,-0.54l-0.45,0.21l-1.05,2.12l0.14,0.51l1.59,1.06l-0.2,1.15l-1.06,0.36l-1.25,2.57l-0.36,0.08l0.0,-0.41l1.01,-2.65l-1.73,-3.5l-1.12,-0.56l-0.67,-1.29l-1.72,-0.75l-1.01,-1.25l-2.01,-0.35l-4.11,-3.59l-1.63,-1.87l-1.03,-3.6l-3.56,-1.55l-1.3,0.58l-1.68,1.6l0.17,-0.9l-0.27,-0.45l-1.14,-0.37l-0.55,-2.31l0.78,-1.37l-0.66,-1.44l0.81,0.44l1.41,-0.27l1.08,-0.94l0.53,0.39l1.19,-0.11l0.75,-1.38l1.51,0.37l1.39,-0.65l0.34,-1.31l1.06,0.36l0.5,-0.22l0.21,-0.51l1.95,-0.5l0.42,0.96ZM459.21,311.54l-0.67,1.87l0.33,1.12l-0.32,0.99l-1.48,-0.91l-4.52,-1.83l0.21,-0.97l2.67,0.25l3.8,-0.53ZM443.92,301.94l1.19,1.86l-0.3,3.74l-1.07,-0.01l-0.75,0.79l-0.53,-0.48l-0.1,-3.76l-0.41,-1.41l1.07,0.0l0.9,-0.74Z',
          name: 'Italy',
        },
        VN: {
          path: 'M690.58,359.66l-2.72,1.89l-2.09,2.52l-0.63,1.98l4.31,6.55l2.32,1.68l1.44,1.97l1.11,4.65l-0.32,4.28l-1.93,1.55l-2.84,1.62l-2.11,2.17l-2.73,2.07l-0.59,-1.06l0.63,-1.54l-0.12,-0.47l-1.34,-1.05l1.51,-0.72l2.55,-0.18l0.3,-0.63l-0.82,-1.16l4.0,-2.09l0.31,-3.08l-0.57,-1.79l0.42,-2.69l-0.73,-1.99l-1.86,-1.79l-3.63,-5.38l-2.73,-1.5l0.37,-0.5l1.5,-0.65l0.21,-0.52l-0.97,-2.33l-0.37,-0.25l-2.83,-0.02l-2.25,-4.02l0.84,-0.42l4.39,-0.3l2.06,-1.35l1.15,0.91l1.88,0.41l-0.18,1.55l1.36,1.19l1.69,0.47Z',
          name: 'Vietnam',
        },
        SB: {
          path: 'M826.68,441.55l-0.6,0.09l-0.2,-0.34l0.37,0.15l0.44,0.09ZM824.18,437.32l-0.26,-0.31l-0.31,-0.91l0.03,0.0l0.54,1.22ZM823.04,439.28l-1.66,-0.22l-0.2,-0.53l1.16,0.28l0.7,0.47ZM819.26,434.58l1.17,0.66l0.03,0.04l-0.82,-0.45l-0.38,-0.25Z',
          name: 'Solomon Is.',
        },
        ET: {
          path: 'M516.04,377.54l1.1,0.85l1.63,-0.46l0.68,0.48l1.63,0.03l2.01,0.96l1.73,1.68l1.64,2.1l-1.52,2.06l0.16,1.73l0.39,0.38l2.05,0.01l-0.36,1.03l2.86,3.6l8.32,3.09l1.32,0.02l-6.33,6.76l-3.1,0.11l-2.36,1.77l-1.47,0.04l-0.86,0.79l-1.38,-0.0l-1.32,-0.81l-2.29,1.05l-0.76,0.98l-3.29,-0.41l-3.07,-2.07l-1.8,-0.07l-0.62,-0.6l0.0,-1.24l-0.28,-0.38l-1.15,-0.37l-1.4,-2.6l-1.19,-0.69l-0.47,-1.01l-1.27,-1.23l-1.16,-0.22l0.43,-0.73l1.45,-0.28l0.41,-0.95l-0.03,-2.22l0.68,-2.45l1.05,-0.63l1.43,-3.08l1.57,-1.38l1.02,-2.53l0.35,-1.9l2.52,0.47l0.44,-0.24l0.58,-1.44Z',
          name: 'Ethiopia',
        },
        SO: {
          path: 'M525.13,418.38l-1.13,-1.57l-0.03,-8.86l2.66,-3.38l1.67,-0.13l2.13,-1.69l3.41,-0.23l7.08,-7.57l2.91,-3.71l0.08,-4.85l2.98,-0.67l1.24,-0.87l0.45,-0.0l-0.2,3.03l-1.21,3.64l-2.73,6.0l-2.13,3.66l-5.03,6.17l-8.56,6.4l-2.78,3.08l-0.8,1.56Z',
          name: 'Somalia',
        },
        ZW: {
          path: 'M498.91,471.53l-1.1,-0.22l-0.92,0.29l-2.09,-0.46l-1.49,-1.14l-1.89,-0.44l-0.62,-1.44l-0.01,-0.86l-0.3,-0.38l-0.97,-0.26l-2.72,-2.8l-1.93,-3.41l3.83,0.46l3.74,-3.89l1.08,-0.44l0.26,-0.78l1.25,-0.91l1.41,-0.26l0.5,0.9l1.99,-0.05l1.72,1.19l1.11,0.18l1.05,0.68l0.01,3.05l-0.59,3.84l0.38,0.87l-0.23,1.26l-0.39,0.36l-0.64,1.86l-2.43,2.82Z',
          name: 'Zimbabwe',
        },
        ES: {
          path: 'M415.99,294.24l1.08,1.32l4.61,1.55l1.08,-0.64l2.58,1.41l2.72,-0.33l0.09,1.34l-2.15,2.02l-3.1,0.68l-0.31,0.31l-0.2,1.01l-1.54,1.87l-0.97,2.65l0.86,1.9l-1.34,1.4l-0.49,1.86l-1.88,0.7l-1.66,2.25l-5.35,-0.01l-1.81,1.17l-0.88,1.06l-0.86,-0.18l-0.79,-0.9l-0.68,-1.73l-2.37,-0.68l-0.12,-0.6l1.21,-2.0l-0.78,-1.19l0.62,-1.89l-0.8,-1.8l0.89,-0.51l0.09,-1.41l0.42,-0.63l0.03,-2.39l1.01,-0.78l0.12,-0.47l-1.04,-1.93l-1.46,-0.12l-0.63,0.42l-1.04,0.0l-0.53,-1.39l-0.55,-0.22l-1.31,0.73l0.07,-1.41l-0.87,-1.4l3.08,-2.16l2.98,0.6l3.32,-0.02l2.62,0.58l6.01,-0.06Z',
          name: 'Spain',
        },
        ER: {
          path: 'M520.38,375.96l3.42,2.46l3.5,3.81l0.85,0.55l-0.95,-0.01l-3.51,-3.92l-2.33,-1.16l-1.73,-0.07l-0.91,-0.51l-1.25,0.52l-1.34,-1.03l-0.62,0.17l-0.66,1.63l-2.34,-0.43l-0.18,-0.68l1.29,-5.37l0.62,-0.63l1.95,-0.54l0.87,-1.03l1.17,2.45l0.68,2.36l1.49,1.45Z',
          name: 'Eritrea',
        },
        ME: {
          path: 'M468.91,298.06l-1.24,-1.13l0.5,-2.11l0.88,-0.81l2.29,1.73l-0.52,0.71l-0.77,-0.3l-1.14,1.91Z',
          name: 'Montenegro',
        },
        MD: {
          path: 'M491.9,285.98l-0.28,-1.04l0.25,-1.54l-0.15,-1.8l-3.32,-5.2l1.4,-0.31l1.71,1.08l1.07,0.18l0.88,0.78l0.03,1.44l0.78,0.52l0.33,1.38l0.81,0.94l0.0,0.67l-1.14,-0.08l-0.7,-0.47l-0.52,0.29l-0.06,0.94l-1.08,2.21Z',
          name: 'Moldova',
        },
        MG: {
          path: 'M545.91,449.15l0.4,3.06l0.63,1.22l-0.21,1.04l-0.56,-0.81l-0.69,-0.01l-0.47,0.77l0.41,2.15l-0.18,0.89l-0.72,0.79l-0.15,2.18l-5.77,18.57l-3.92,1.7l-3.12,-1.54l-0.6,-1.26l-0.19,-2.48l-0.86,-2.12l-0.21,-1.83l0.39,-1.67l1.21,-0.76l0.01,-0.79l1.19,-2.08l0.23,-1.69l-1.06,-3.05l-0.19,-2.26l0.81,-1.36l0.32,-1.49l4.63,-1.23l3.44,-3.04l0.85,-1.42l-0.09,-0.71l0.78,-0.04l1.38,-1.79l0.13,-1.65l0.45,-0.62l1.16,1.7l0.59,1.62Z',
          name: 'Madagascar',
        },
        MA: {
          path: 'M378.77,359.44l0.06,-0.63l0.93,-0.75l0.82,-1.41l-0.09,-1.07l0.79,-1.77l1.31,-1.64l0.95,-0.61l0.66,-1.61l0.09,-1.52l0.81,-1.54l1.72,-1.11l1.55,-2.81l1.16,-1.0l2.44,-0.41l1.94,-1.91l1.31,-0.82l2.09,-2.4l-0.51,-3.84l1.25,-3.95l1.5,-1.88l4.46,-2.74l2.37,-4.82l1.43,0.01l1.7,1.31l2.31,-0.21l3.46,0.7l0.81,1.67l0.16,1.84l0.86,3.17l0.57,0.63l-0.27,0.69l-3.05,0.46l-1.26,1.11l-1.33,0.24l-0.33,0.37l-0.09,1.91l-2.69,1.06l-1.07,1.5l-1.89,0.72l-2.58,0.47l-4.04,2.12l-0.53,4.86l-1.16,0.07l-0.92,0.64l-1.96,-0.36l-2.42,0.56l-0.74,1.99l-0.86,0.41l-1.14,3.39l-3.53,3.11l-0.81,3.66l-0.96,1.14l-0.29,0.84l-4.94,0.19Z',
          name: 'Morocco',
        },
        UZ: {
          path: 'M598.64,298.24l-1.64,1.79l0.06,0.61l1.85,1.26l1.99,-0.71l2.27,1.34l-2.58,1.91l-2.57,-0.24l-0.2,-0.5l0.47,-1.39l-0.47,-0.52l-3.35,0.77l-2.1,3.89l-1.86,-0.14l-0.39,0.23l-0.65,1.43l0.21,0.53l1.65,0.69l0.47,2.05l-1.21,2.74l-1.54,-0.54l-1.11,-0.04l0.05,-1.53l-0.25,-0.38l-3.3,-1.35l-2.56,-1.53l-4.4,-3.69l-1.33,-3.48l-1.1,-0.68l-2.57,0.15l-0.7,-0.5l-0.46,-2.81l-3.37,-1.79l-0.46,0.06l-2.07,1.94l-2.09,1.14l-0.2,0.45l0.29,1.2l-1.92,0.03l-0.09,-11.97l5.98,-1.95l6.18,4.04l2.35,3.08l7.41,-0.61l2.72,2.28l-0.18,3.21l0.39,0.42l0.89,0.02l0.45,2.42l0.38,0.33l2.93,0.1l0.96,1.58l1.29,-0.25l1.05,-2.28l3.18,-2.25l1.24,-0.54Z',
          name: 'Uzbekistan',
        },
        MM: {
          path: 'M673.9,359.64l-1.97,1.62l-0.57,0.98l-1.4,0.62l-1.36,1.08l-1.99,0.36l-1.08,2.72l-0.91,0.41l-0.19,0.55l1.21,2.31l2.52,3.49l-0.79,1.95l-0.74,0.41l-0.17,0.52l0.65,1.39l1.61,1.98l0.25,2.61l0.9,2.15l-1.92,3.6l0.68,-2.27l-0.81,-1.75l0.19,-2.68l-1.05,-1.54l-1.24,-6.25l-1.12,-2.29l-0.61,-0.13l-4.33,3.06l-2.39,-0.66l0.77,-2.89l-0.52,-2.65l-1.92,-3.02l0.25,-0.78l-0.29,-0.51l-1.33,-0.31l-1.61,-1.97l-0.1,-1.35l0.82,-0.23l0.04,-1.7l1.03,-0.53l0.21,-0.44l-0.23,-0.99l0.54,-0.98l0.08,-2.3l1.45,0.46l0.48,-0.2l1.12,-2.26l0.16,-1.4l1.34,-2.25l-0.01,-1.58l2.89,-1.73l1.62,0.46l0.51,-0.43l-0.17,-1.48l0.65,-0.39l0.07,-1.08l0.77,-0.11l0.71,1.41l1.06,0.72l-0.03,4.05l-2.38,2.46l-0.3,3.26l0.47,0.43l2.27,-0.39l0.51,2.15l1.47,0.69l-0.61,1.87l0.19,0.47l2.97,1.52l1.64,-0.56l0.02,0.35Z',
          name: 'Myanmar',
        },
        ML: {
          path: 'M392.61,383.9l-0.19,-2.39l-0.99,-0.88l-0.44,-1.31l-0.09,-1.3l0.81,-0.59l0.35,-1.26l2.37,0.66l1.31,-0.48l0.86,0.15l0.66,-0.57l9.83,-0.04l0.38,-0.28l0.56,-1.82l-0.44,-0.66l-2.35,-22.51l3.26,-0.04l16.7,11.72l0.74,1.34l2.5,1.11l0.02,1.42l0.44,0.39l2.34,-0.22l0.01,5.49l-1.28,1.64l-0.26,1.51l-5.31,0.58l-1.08,0.93l-2.9,0.1l-0.87,-0.48l-1.38,0.37l-2.4,1.1l-0.6,0.88l-1.86,1.1l-0.43,0.71l-0.79,0.4l-1.44,-0.21l-0.81,0.84l-0.34,1.65l-1.91,2.04l-0.06,1.04l-0.67,1.23l0.13,1.17l-0.97,0.39l-0.23,-0.65l-0.52,-0.24l-1.35,0.4l-0.34,0.55l-2.69,-0.29l-0.37,-0.36l-0.02,-0.91l-0.65,-0.35l0.45,-0.65l-0.03,-0.52l-2.12,-2.46l-0.76,-0.01l-2.0,1.17l-0.78,-0.15l-0.8,-0.67l-1.21,0.23Z',
          name: 'Mali',
        },
        MN: {
          path: 'M676.61,267.85l3.78,1.95l5.69,-1.19l2.35,0.48l2.34,1.79l1.81,2.09l2.28,-0.04l3.11,0.62l2.49,-0.96l3.42,-0.7l3.51,-2.62l1.21,0.34l1.56,1.35l2.31,-0.25l-2.72,6.05l0.64,1.85l0.5,0.22l1.31,-0.44l2.36,0.55l2.04,-1.29l1.73,1.03l2.1,2.39l-0.15,0.72l-1.72,-0.34l-3.79,0.54l-1.88,1.14l-1.76,2.29l-3.71,1.35l-2.44,1.82l-3.81,-0.99l-0.44,0.19l-1.31,2.27l1.07,2.53l-1.56,1.04l-1.74,1.78l-2.78,1.14l-3.78,0.14l-4.05,1.18l-2.75,1.69l-1.16,-0.94l-2.93,0.0l-3.61,-2.0l-2.59,-0.55l-3.41,0.46l-5.11,-0.75l-2.62,0.07l-1.31,-1.82l-1.4,-3.4l-1.47,-0.37l-3.14,-2.22l-6.15,-1.06l-0.73,-1.26l0.89,-4.37l-1.73,-2.97l-3.7,-1.54l-1.96,-1.86l-0.53,-2.16l2.39,-0.63l4.75,-3.33l3.59,-1.75l2.18,1.16l2.44,0.05l1.83,1.83l2.46,0.14l3.58,0.97l0.4,-0.12l2.43,-2.72l0.07,-0.43l-0.93,-2.14l2.28,-3.66l2.59,1.52l4.94,1.41l0.44,2.74Z',
          name: 'Mongolia',
        },
        MK: {
          path: 'M472.81,299.6l0.49,-0.78l3.56,-0.8l1.01,0.87l0.14,1.71l-0.66,0.59l-1.14,-0.05l-1.14,0.75l-1.37,0.24l-0.79,-0.61l-0.3,-1.19l0.2,-0.73Z',
          name: 'Macedonia',
        },
        MW: {
          path: 'M505.5,439.25l0.85,1.96l0.15,2.88l-0.69,1.66l0.72,1.81l0.06,1.29l0.49,0.64l0.07,1.07l0.4,0.55l0.8,-0.23l0.55,0.62l0.7,-0.21l0.34,0.6l0.19,2.98l-1.04,0.63l-0.53,1.27l-1.11,-1.1l-0.16,-1.59l0.51,-1.33l-0.32,-1.32l-0.99,-0.65l-0.82,0.12l-2.36,-1.66l0.63,-1.99l0.82,-1.18l-0.46,-2.03l0.9,-2.88l-0.95,-2.53l0.97,0.19l0.29,0.41Z',
          name: 'Malawi',
        },
        MR: {
          path: 'M407.4,349.79l-2.62,0.03l-0.39,0.44l2.42,23.13l0.37,0.43l-0.39,1.27l-9.75,0.04l-0.56,0.54l-0.91,-0.11l-1.27,0.46l-1.61,-0.66l-0.98,0.03l-0.36,0.29l-0.38,1.37l-0.42,0.24l-2.93,-3.44l-2.96,-1.55l-1.62,-0.03l-1.27,0.55l-1.12,-0.2l-0.65,0.4l-0.08,-0.51l0.68,-1.31l0.31,-2.47l-0.57,-3.99l0.23,-1.25l-0.68,-1.53l-1.16,-1.05l0.25,-0.42l9.58,0.02l0.4,-0.45l-0.46,-3.79l0.47,-1.08l2.11,-0.22l0.36,-0.4l-0.08,-6.64l7.81,0.14l0.41,-0.4l0.01,-3.47l7.8,5.59Z',
          name: 'Mauritania',
        },
        UG: {
          path: 'M498.55,406.22l0.7,-0.46l1.65,0.5l1.96,-0.57l1.7,0.01l1.45,-0.98l0.91,1.33l1.33,3.95l-2.57,4.03l-1.46,-0.4l-2.54,0.91l-1.37,1.61l-0.01,0.81l-2.42,-0.01l-2.26,1.01l-0.17,-1.59l0.58,-1.04l0.14,-1.94l1.37,-2.28l1.78,-1.58l-0.17,-0.65l-0.72,-0.24l0.13,-2.43Z',
          name: 'Uganda',
        },
        MY: {
          path: 'M717.48,403.36l-1.39,0.65l-2.12,-0.41l-2.88,-0.0l-0.38,0.28l-0.84,2.75l-0.99,0.96l-1.21,3.29l-1.73,0.45l-2.45,-0.68l-1.39,0.31l-1.33,1.15l-1.59,-0.14l-1.41,0.44l-1.44,-1.19l-0.18,-0.73l1.34,0.53l1.93,-0.47l0.75,-2.23l4.02,-1.03l2.75,-3.21l0.82,0.94l0.64,-0.05l0.4,-0.65l0.96,0.06l0.42,-0.36l0.24,-2.69l1.81,-1.65l1.21,-1.87l0.63,-0.01l1.07,1.06l0.34,1.28l3.44,1.35l-0.06,0.35l-1.37,0.1l-0.35,0.54l0.32,0.88ZM673.68,399.48l0.17,1.1l0.47,0.33l1.65,-0.3l0.87,-0.94l1.61,1.52l0.98,1.57l-0.12,2.81l0.41,2.29l0.95,0.9l0.88,2.44l-1.27,0.12l-5.1,-3.68l-0.34,-1.29l-1.37,-1.59l-0.33,-1.97l-0.88,-1.4l0.25,-1.68l-0.46,-1.06l1.63,0.84Z',
          name: 'Malaysia',
        },
        MX: {
          path: 'M133.1,328.46l0.22,0.49l9.64,3.54l6.96,-0.02l0.4,-0.4l0.0,-0.81l3.76,0.0l3.55,3.11l1.4,2.99l1.51,1.09l2.08,0.86l0.48,-0.14l1.46,-2.1l1.72,-0.05l1.59,1.03l2.06,3.53l1.47,1.63l1.26,3.28l2.18,1.06l2.27,0.6l-1.19,3.88l-0.42,5.19l1.79,5.01l1.62,1.94l0.61,1.55l1.2,1.45l2.55,0.67l1.38,1.13l7.54,-1.93l1.86,-1.32l1.14,-4.4l4.1,-1.24l3.56,-0.11l0.32,0.31l-0.06,0.97l-1.26,1.49l-0.67,1.74l0.38,0.71l-0.73,2.32l-0.49,-0.3l-1.0,0.08l-1.0,1.41l-0.47,-0.11l-0.53,0.47l-4.26,-0.02l-0.4,0.4l-0.0,1.08l-1.1,0.26l0.1,0.44l1.82,1.46l0.56,0.94l-3.19,0.21l-1.21,2.12l0.24,0.73l-0.2,0.45l-2.24,-2.21l-1.45,-0.94l-2.22,-0.7l-1.52,0.23l-3.06,1.18l-10.55,-3.9l-2.86,-2.0l-3.78,-0.94l-1.08,-1.21l-2.62,-1.46l-1.18,-1.57l-0.39,-0.85l0.66,-0.64l-0.19,-0.55l0.53,-0.77l0.01,-0.93l-2.0,-3.91l-2.21,-2.71l-2.53,-2.16l-1.19,-1.68l-2.2,-1.21l-0.31,-0.45l0.34,-1.56l-0.21,-0.44l-1.23,-0.63l-1.36,-1.26l-0.59,-1.87l-1.53,-0.48l-2.44,-2.68l-0.15,-0.94l-1.33,-2.14l-0.84,-2.11l-0.15,-1.39l-1.81,-1.16l-0.98,0.05l-1.31,-0.74l-0.58,0.22l-0.4,1.19l0.71,3.95l3.51,4.09l0.28,0.83l0.53,0.26l0.41,1.51l1.33,1.8l1.58,1.46l0.8,2.49l1.43,2.51l0.13,1.37l0.37,0.36l1.03,0.08l1.68,2.38l-0.84,0.79l-0.66,-1.55l-1.68,-1.59l-2.91,-1.94l0.06,-1.89l-0.53,-1.73l-2.91,-2.11l-0.56,0.08l-1.95,-1.14l-0.92,-1.02l0.72,-0.08l0.93,-1.06l0.08,-1.82l-1.93,-2.04l-1.46,-0.81l-3.76,-8.06l4.87,-0.45Z',
          name: 'Mexico',
        },
        IL: {
          path: 'M507.77,331.27l0.39,-0.81l0.2,0.43l-0.34,1.09l0.52,0.43l0.68,-0.23l-0.86,3.84l-1.16,-3.52l0.6,-0.8l-0.03,-0.44ZM508.72,328.43l0.38,-1.13l0.64,0.0l0.52,-0.54l0.02,0.67l-0.52,1.01l-0.55,-0.25l-0.5,0.24Z',
          name: 'Israel',
        },
        FR: {
          path: 'M444.48,298.15l-0.65,2.02l-0.56,-0.34l-0.51,-1.98l0.42,-1.04l0.99,-0.8l0.31,2.13ZM429.62,268.54l1.78,1.88l1.48,-0.14l2.08,1.68l1.36,0.33l1.23,0.98l3.1,0.6l-1.08,2.26l-0.3,2.52l-0.41,0.38l-0.92,-0.28l-0.51,0.42l0.07,0.77l-1.82,2.19l-0.04,1.65l0.57,0.37l0.85,-0.41l0.62,1.14l-0.04,1.13l0.61,1.11l-0.78,1.22l0.65,2.72l1.29,0.62l-0.19,1.03l-2.02,1.73l-4.75,-0.9l-3.84,1.13l-0.52,2.09l-2.47,0.37l-2.7,-1.47l-1.18,0.64l-4.28,-1.44l-0.76,-1.02l1.21,-2.03l0.41,-7.31l-2.58,-3.82l-1.89,-1.93l-3.74,-1.44l-0.2,-2.16l2.82,-0.72l4.11,0.96l0.48,-0.46l-0.62,-3.38l1.98,1.12l5.83,-3.02l0.91,-3.28l1.57,-0.58l0.25,0.97l1.34,0.35l1.05,1.43ZM289.01,408.29l-0.81,0.8l-0.78,0.12l-0.5,-0.66l-0.56,-0.1l-0.91,0.6l-0.46,-0.22l1.09,-2.96l-0.96,-1.77l-0.17,-1.49l1.07,-1.77l2.32,0.75l2.51,2.01l0.3,0.74l-2.14,3.96Z',
          name: 'France',
        },
        XS: {
          path: 'M531.15,388.78l1.52,0.12l5.13,-0.96l5.3,-1.49l-0.01,4.43l-2.67,3.4l-1.85,0.01l-8.04,-2.95l-2.55,-3.19l1.12,-1.73l2.04,2.35Z',
          name: 'Somaliland',
        },
        FI: {
          path: 'M492.16,172.43l-0.28,5.17l3.67,4.26l-2.21,4.98l2.86,6.98l-1.64,5.01l2.21,4.51l-0.98,3.55l3.63,4.02l-0.84,2.48l-7.53,9.52l-4.5,0.42l-4.38,1.84l-3.74,0.97l-1.3,-2.46l-2.36,-1.68l0.53,-4.89l-1.2,-4.86l1.14,-3.04l2.23,-3.46l5.68,-6.22l1.8,-1.58l-0.4,-2.8l-3.4,-2.81l-0.79,-2.25l-0.16,-10.13l-7.02,-7.77l0.96,-1.19l2.47,3.3l3.5,-0.17l2.57,1.6l0.53,-0.09l2.46,-3.23l1.19,-5.07l3.49,-2.23l2.82,2.55l-1.01,4.77Z',
          name: 'Finland',
        },
        FJ: {
          path: 'M869.95,457.1l-1.21,0.42l-0.08,-0.24l2.98,-1.23l-0.15,0.44l-1.54,0.62ZM867.58,459.4l0.43,0.38l-0.27,0.91l-1.24,0.29l-1.04,-0.25l-0.14,-0.69l0.64,-0.59l0.92,0.26l0.7,-0.31Z',
          name: 'Fiji',
        },
        FK: {
          path: 'M274.37,564.69l1.48,1.33l-0.53,1.0l-2.96,1.07l-0.95,-1.2l-0.57,-0.05l-1.79,1.54l-0.79,-1.16l2.52,-2.03l1.9,0.9l0.46,-0.09l1.23,-1.32Z',
          name: 'Falkland Is.',
        },
        NI: {
          path: 'M202.32,382.47l0.82,-0.18l1.03,-1.02l-0.04,-0.89l0.68,-0.0l0.63,-0.54l0.97,0.23l1.53,-1.28l0.58,-1.0l1.17,0.35l2.41,-0.95l0.13,1.34l-0.81,1.96l0.1,2.77l-0.36,0.38l-0.11,1.76l-0.47,0.81l0.18,1.15l-1.73,-0.86l-0.71,0.27l-1.47,-0.6l-0.52,0.16l-4.02,-3.85Z',
          name: 'Nicaragua',
        },
        NL: {
          path: 'M430.16,264.22l0.76,-0.72l2.14,-5.88l3.19,-1.63l1.7,0.1l0.35,1.07l-0.6,3.64l-0.51,1.24l-1.24,0.0l-0.4,0.44l0.34,3.35l-2.18,-2.14l-0.43,-0.11l-2.22,0.8l-0.89,-0.15Z',
          name: 'Netherlands',
        },
        NO: {
          path: 'M491.42,157.32l7.17,5.11l-2.71,1.67l-0.13,0.55l2.55,4.24l-3.9,2.61l-1.31,0.42l0.79,-4.7l-3.21,-2.91l-0.48,-0.04l-4.06,2.73l-1.21,5.15l-2.11,2.72l-2.64,-1.54l-3.04,0.32l-2.65,-3.53l-0.63,-0.01l-1.41,1.75l-1.41,0.26l-0.33,0.36l-0.33,4.08l-4.27,-0.99l-0.48,0.32l-0.6,3.44l-2.07,-0.02l-0.38,0.27l-4.15,11.7l-3.88,8.48l0.84,2.18l-0.71,1.86l-2.2,-0.09l-0.4,0.28l-1.64,5.41l0.15,7.19l1.58,2.74l-0.8,5.79l-2.04,3.34l-0.83,2.09l-1.27,-2.26l-0.65,-0.07l-4.87,5.52l-3.05,1.02l-3.16,-2.22l-0.86,-5.06l-0.78,-11.7l2.19,-3.29l6.55,-4.59l5.02,-5.96l4.64,-8.4l6.0,-12.26l11.0,-13.83l5.32,-3.11l3.99,0.38l0.38,-0.19l3.69,-6.04l4.48,0.3l4.3,-1.47ZM484.42,59.58l4.68,4.94l-3.51,7.19l-6.97,1.55l-7.03,-2.18l-0.42,-3.6l-0.37,-0.35l-3.35,-0.23l-2.51,-6.12l7.16,-3.9l3.42,3.43l0.63,-0.09l2.33,-4.19l5.93,3.56ZM482.22,93.35l-4.99,4.27l-3.84,-2.35l1.56,-3.06l-1.38,-3.53l4.4,-2.11l0.89,4.13l3.36,2.65ZM466.32,69.71l8.02,9.81l-6.13,5.05l-1.37,8.88l-2.22,2.36l-1.15,9.08l-2.49,0.35l-5.08,-6.44l2.14,-3.9l-0.08,-0.49l-3.69,-3.4l-4.82,-10.44l-1.89,-10.23l6.16,-4.58l1.22,4.4l0.41,0.29l3.57,-0.19l0.37,-0.32l0.9,-4.57l3.14,-0.43l3.02,4.76Z',
          name: 'Norway',
        },
        NA: {
          path: 'M474.4,460.84l-1.11,0.05l-0.38,0.4l-0.07,9.11l-2.09,0.08l-0.38,0.4l-0.0,18.09l-1.98,1.29l-1.16,0.18l-2.43,-0.69l-0.48,-1.18l-0.99,-0.78l-0.55,0.05l-0.9,1.05l-1.52,-1.75l-0.94,-1.97l-1.99,-8.9l-0.06,-3.23l-0.33,-1.56l-2.3,-3.43l-1.91,-4.94l-1.96,-2.48l-0.12,-1.61l2.33,-0.8l1.43,0.07l1.82,1.15l10.23,-0.26l1.84,1.26l6.01,0.37ZM474.58,460.83l6.59,-1.65l1.91,0.41l-1.71,0.41l-1.31,0.85l-1.12,-0.95l-4.36,0.94Z',
          name: 'Namibia',
        },
        VU: {
          path: 'M839.03,452.86l0.23,1.16l-0.44,0.03l-0.2,-1.47l0.42,0.28Z',
          name: 'Vanuatu',
        },
        NC: {
          path: 'M838.79,471.67l-0.34,0.23l-2.9,-1.8l-3.27,-3.48l1.65,0.85l4.86,4.19Z',
          name: 'New Caledonia',
        },
        NE: {
          path: 'M454.74,355.83l1.33,1.41l0.49,0.07l1.26,-0.72l0.53,3.62l0.94,0.85l0.17,0.94l0.82,0.72l-0.45,0.98l-0.96,5.37l-0.13,3.28l-3.05,2.34l-1.22,3.61l1.02,1.25l-0.0,1.48l0.39,0.4l1.13,0.04l-0.1,0.49l-0.45,0.09l-0.35,0.68l-1.47,-2.44l-0.86,-0.29l-2.09,1.38l-1.73,-0.67l-1.45,-0.17l-0.85,0.35l-1.36,-0.07l-1.64,1.1l-1.06,0.05l-2.94,-1.29l-1.44,0.59l-1.01,-0.03l-0.97,-0.95l-2.7,-0.99l-2.69,0.31l-0.87,0.65l-0.46,1.62l-0.74,1.17l-0.12,1.55l-1.57,-1.1l-1.31,0.24l0.03,-0.82l-0.32,-0.41l-2.59,-0.52l-0.15,-1.17l-1.36,-1.62l-0.29,-1.01l0.13,-0.85l1.29,-0.08l1.08,-0.93l3.31,-0.22l2.22,-0.41l0.32,-0.34l0.2,-1.5l1.39,-1.91l-0.01,-5.78l3.37,-1.15l7.24,-5.24l8.41,-5.07l3.69,1.09Z',
          name: 'Niger',
        },
        NG: {
          path: 'M456.32,383.7l0.64,0.66l-0.28,1.06l-2.11,2.02l-2.03,5.2l-1.37,1.16l-1.15,3.19l-1.33,0.66l-1.46,-0.97l-1.21,0.16l-1.38,1.37l-0.91,0.24l-1.79,4.07l-2.33,0.81l-1.11,-0.07l-0.86,0.51l-1.71,-0.05l-1.19,-1.39l-0.89,-1.9l-1.77,-1.66l-3.95,-0.08l0.07,-5.23l0.42,-1.44l1.95,-2.32l-0.14,-0.91l0.43,-1.18l-0.53,-1.42l0.25,-2.95l0.72,-1.08l0.32,-1.35l0.46,-0.39l2.47,-0.28l2.34,0.89l1.15,1.03l1.28,0.04l1.22,-0.59l3.03,1.28l1.5,-0.14l1.36,-1.01l1.32,0.07l0.82,-0.35l3.45,0.81l1.82,-1.34l1.84,2.7l0.66,0.16Z',
          name: 'Nigeria',
        },
        NZ: {
          path: 'M857.8,512.11l1.85,3.38l0.45,0.2l0.3,-0.38l0.03,-1.36l0.38,0.29l0.56,2.51l2.02,1.03l1.81,0.29l1.59,-1.16l0.7,0.2l-1.16,4.01l-1.98,0.12l-0.73,1.27l0.21,1.25l-2.44,4.45l-1.47,1.02l-0.42,-0.65l-0.66,-0.3l1.25,-2.35l-0.81,-2.16l-2.64,-1.38l0.04,-0.7l1.82,-1.29l0.42,-2.46l-0.15,-2.29l-0.96,-2.0l-0.05,-0.75l-3.11,-3.94l-0.82,-1.69l1.57,1.56l1.76,0.72l0.66,2.55ZM853.83,527.42l0.57,1.38l0.61,0.17l1.4,-1.06l0.46,0.9l0.0,1.2l-2.48,3.93l-1.26,1.36l-0.06,0.47l0.6,1.08l-1.47,0.09l-2.32,1.54l-2.04,5.78l-3.02,2.49l-2.03,-0.07l-1.72,-1.2l-2.46,-0.23l-0.29,-0.92l1.25,-2.46l3.05,-3.36l1.62,-0.67l4.01,-3.18l1.56,-1.87l1.08,-2.44l1.01,-1.01l0.35,-1.73l1.23,-1.07l0.35,0.88Z',
          name: 'New Zealand',
        },
        NP: {
          path: 'M641.15,342.42l-0.0,3.36l-1.74,0.04l-4.8,-0.9l-1.59,-1.45l-3.36,-0.36l-7.66,-3.88l0.81,-2.23l2.33,-1.79l1.77,0.78l2.49,1.85l1.38,0.43l0.99,1.42l1.89,0.55l1.99,1.22l5.5,0.95Z',
          name: 'Nepal',
        },
        XK: {
          path: 'M472.78,298.18l-1.1,-1.47l0.98,-0.9l0.29,-0.94l2.0,1.84l-0.4,0.85l-1.77,0.62Z',
          name: 'Kosovo',
        },
        CI: {
          path: 'M407.4,389.11l0.86,0.42l0.56,0.9l1.13,0.54l1.19,-0.61l0.97,-0.08l1.42,0.54l0.6,3.25l-1.03,2.09l-0.65,2.85l1.06,2.33l-0.06,0.53l-2.54,-0.47l-1.66,0.03l-3.06,0.47l-4.11,1.61l0.32,-3.06l-1.18,-1.31l-1.32,-0.67l0.42,-0.86l-0.2,-1.4l0.5,-0.68l0.01,-1.59l0.84,-0.33l0.26,-0.5l-1.15,-3.02l0.12,-0.51l0.51,-0.25l0.66,0.31l1.93,0.02l0.67,-0.72l0.71,-0.14l0.25,0.7l0.57,0.22l1.4,-0.61Z',
          name: "C\u00f4te d'Ivoire",
        },
        CH: {
          path: 'M444.61,279.47l-0.29,1.12l0.16,0.5l1.13,0.67l1.03,0.12l-0.12,0.88l-0.79,0.44l-1.7,-0.42l-0.47,0.25l-0.46,1.23l-0.72,0.07l-0.3,-0.39l-0.58,-0.06l-1.31,1.14l-0.93,0.13l-0.87,-0.62l-0.82,-1.51l-0.52,-0.17l-0.61,0.29l0.02,-0.85l1.73,-1.95l0.07,-0.65l0.96,0.08l0.57,-0.53l1.97,0.02l0.67,-0.71l2.16,0.92Z',
          name: 'Switzerland',
        },
        CO: {
          path: 'M242.07,384.75l-1.7,0.59l-0.59,1.19l-1.7,1.7l-0.37,1.94l-0.67,1.44l0.31,0.57l1.03,0.14l0.25,0.91l0.57,0.65l-0.04,2.35l1.64,1.42l3.16,-0.24l1.26,0.28l1.67,2.06l0.41,0.13l4.09,-0.39l0.45,0.22l-0.92,1.95l-0.2,1.8l0.52,1.83l0.75,1.05l-1.12,1.1l0.07,0.63l0.84,0.51l0.74,1.3l-0.39,-0.45l-0.59,-0.01l-0.71,0.74l-4.71,-0.05l-0.4,0.41l0.03,1.57l0.33,0.39l1.11,0.2l-1.68,0.4l-0.29,0.38l-0.01,1.82l1.16,1.14l0.34,1.25l-1.05,7.05l-1.04,-0.87l1.26,-1.99l-0.13,-0.56l-2.18,-1.23l-1.38,0.2l-1.14,-0.38l-1.27,0.61l-1.55,-0.26l-1.38,-2.46l-1.23,-0.75l-0.85,-1.2l-1.67,-1.19l-0.86,0.13l-2.11,-1.32l-1.01,0.31l-1.8,-0.29l-0.52,-0.91l-3.09,-1.68l0.77,-0.52l-0.1,-1.12l0.41,-0.64l1.34,-0.32l2.0,-2.88l-0.11,-0.57l-0.67,-0.43l0.39,-1.38l-0.52,-2.11l0.49,-0.83l-0.4,-2.13l-0.97,-1.36l0.17,-0.67l0.86,-0.08l0.47,-0.75l-0.46,-1.63l1.41,-0.07l1.8,-1.7l0.93,-0.24l0.3,-0.38l0.45,-2.78l1.22,-1.01l1.44,-0.04l0.45,-0.5l1.91,0.12l2.93,-1.85l1.15,-1.15l0.91,0.47l-0.26,0.45Z',
          name: 'Colombia',
        },
        CN: {
          path: 'M740.22,270.81l4.55,1.5l2.81,2.58l0.98,3.43l0.38,0.29l3.8,0.0l2.34,-1.51l3.31,-0.89l-1.01,2.59l-1.01,1.46l-0.85,3.95l-1.53,3.16l-2.73,-0.57l-2.43,1.3l-0.19,0.43l0.65,2.95l-0.32,3.68l-0.94,0.07l-0.37,0.4l0.01,0.58l-0.89,-1.11l-0.67,0.07l-0.92,1.77l-3.72,1.4l-0.25,0.46l0.28,1.25l-1.5,-0.08l-1.08,-0.96l-0.59,0.06l-1.68,2.31l-2.7,1.74l-2.03,2.08l-3.39,0.92l-1.93,1.54l-1.22,0.4l0.42,-0.81l-0.43,-1.03l1.81,-2.01l0.02,-0.51l-1.32,-1.73l-0.51,-0.11l-2.25,1.21l-2.83,2.28l-1.5,2.02l-2.27,0.14l-1.56,1.64l-0.04,0.47l1.32,2.16l2.01,0.63l0.3,1.47l1.98,0.92l0.42,-0.05l2.6,-2.09l1.99,1.1l1.5,0.12l0.24,0.97l-3.39,0.94l-1.12,1.61l-2.5,1.64l-1.29,2.15l0.13,0.55l2.57,1.6l0.97,2.9l3.17,4.94l-0.03,1.8l-1.36,0.69l-0.19,0.5l0.6,1.55l1.41,0.95l-0.9,4.05l-1.43,0.4l-3.85,6.72l-2.28,3.23l-6.78,4.72l-2.73,0.3l-1.45,1.07l-0.61,-0.62l-0.56,-0.01l-1.36,1.29l-3.39,1.31l-2.61,0.41l-1.1,2.86l-0.81,0.09l-0.5,-1.47l0.5,-0.88l-0.25,-0.59l-3.36,-0.86l-1.3,0.41l-2.3,-0.64l-0.95,-0.87l0.34,-1.33l-0.3,-0.49l-2.19,-0.48l-1.13,-0.96l-0.48,-0.03l-2.06,1.4l-4.28,0.28l-2.76,1.08l-0.28,0.43l0.32,2.61l-0.59,-0.03l-0.19,-1.39l-0.56,-0.34l-1.67,0.72l-2.47,-1.26l0.63,-1.94l-0.25,-0.5l-1.37,-0.46l-0.55,-2.3l-0.46,-0.3l-2.13,0.37l0.24,-2.6l2.39,-2.48l0.03,-4.49l-1.19,-0.94l-0.79,-1.57l-0.41,-0.22l-1.4,0.2l-2.0,-0.32l0.48,-1.12l-1.17,-1.78l-0.56,-0.11l-1.62,1.1l-2.25,-0.6l-2.89,1.82l-2.25,2.08l-1.74,0.31l-1.17,-0.74l-3.32,-0.68l-1.48,0.83l-1.04,1.32l-0.12,-1.23l-0.54,-0.34l-1.44,0.56l-5.54,-0.9l-1.98,-1.22l-1.89,-0.56l-0.99,-1.42l-1.34,-0.39l-2.55,-1.88l-2.01,-0.89l-1.21,0.59l-5.57,-3.64l-0.54,-2.5l1.19,0.26l0.49,-0.37l0.08,-1.52l-0.98,-1.65l0.16,-2.6l-2.69,-3.58l-4.12,-1.33l-0.68,-2.18l-1.91,-1.6l-0.38,-0.78l-0.5,-3.27l-1.52,-0.73l-0.7,0.14l-0.49,-2.31l0.57,-0.59l-0.13,-0.89l2.06,-1.34l1.59,-0.59l2.55,0.42l0.43,-0.23l0.85,-1.9l2.99,-0.37l1.11,-1.41l4.04,-1.97l0.39,-0.97l-0.17,-1.67l1.48,-0.77l0.19,-0.49l-2.1,-5.65l4.54,-1.3l1.38,-0.84l1.88,-6.37l4.59,1.12l0.4,-0.13l1.49,-1.91l0.11,-3.42l2.01,-0.45l1.83,-2.43l0.45,-0.15l0.67,2.44l2.23,2.08l3.44,1.35l1.58,2.72l-0.93,4.08l0.95,1.84l6.54,1.28l2.95,2.14l1.48,0.4l1.07,3.0l1.52,2.13l3.06,0.09l5.13,0.76l3.38,-0.46l2.34,0.48l3.65,2.02l3.07,0.05l0.99,0.93l0.48,0.05l2.87,-1.78l3.94,-1.15l3.84,-0.16l3.06,-1.29l1.77,-1.81l1.72,-1.14l0.16,-0.47l-1.12,-2.36l1.05,-1.82l4.03,0.9l2.45,-1.85l3.76,-1.36l1.97,-2.46l1.63,-0.96l3.49,-0.47l1.91,0.4l0.47,-0.31l0.18,-1.65l-2.27,-2.59l-2.11,-1.27l-0.44,0.02l-1.78,1.27l-2.29,-0.54l-1.28,0.37l-0.43,-1.02l2.76,-6.16l3.03,1.25l3.53,-2.45l0.15,-1.96l2.18,-4.08l1.47,-1.55l-0.03,-2.26l-1.16,-1.03l1.66,-1.66l2.96,-0.72l3.21,-0.11l3.62,1.21l2.05,1.43l3.31,8.17l0.92,3.82ZM696.92,366.89l-1.87,1.1l-1.63,-0.65l-0.06,-1.84l1.03,-1.01l2.58,-0.7l1.15,0.05l0.31,0.56l-0.98,1.09l-0.53,1.4Z',
          name: 'China',
        },
        CM: {
          path: 'M457.92,387.33l1.06,1.92l-1.4,0.16l-1.05,-0.23l-0.45,0.23l-0.54,1.2l0.08,0.45l1.48,1.48l1.05,0.45l1.01,2.47l-1.52,3.0l-0.68,0.68l-0.13,3.69l2.38,3.84l1.09,0.8l0.24,2.48l-3.67,-1.14l-11.27,-0.13l0.23,-1.79l-0.98,-1.66l-1.19,-0.54l-0.44,-0.97l-0.6,-0.42l1.71,-4.28l0.75,-0.13l1.38,-1.37l0.65,-0.03l1.71,0.99l1.93,-1.12l1.14,-3.2l1.38,-1.17l2.0,-5.16l2.17,-2.15l0.3,-1.65l-0.86,-0.89l0.18,-0.37l0.8,1.32l0.07,3.24Z',
          name: 'Cameroon',
        },
        CL: {
          path: 'M246.67,568.71l-3.34,2.4l-0.55,3.89l-0.62,0.06l-2.66,-1.3l-2.82,-2.86l-3.06,-2.32l-0.71,-2.33l0.65,-2.52l-1.22,-2.56l-0.31,-6.43l1.02,-3.46l2.58,-2.79l-0.19,-0.66l-3.24,-0.91l2.11,-2.91l0.78,-5.35l2.3,1.02l0.56,-0.29l1.31,-7.14l-0.2,-0.42l-1.68,-0.9l-0.58,0.28l-0.7,3.81l-0.82,-0.25l1.58,-10.59l1.15,-2.43l-0.71,-3.1l-0.18,-3.15l1.02,-0.35l3.26,-9.88l1.07,-4.5l-0.56,-4.47l0.74,-2.47l-0.29,-3.45l1.46,-3.5l2.04,-17.19l-0.67,-7.94l1.04,-0.54l0.54,-0.92l0.79,1.16l0.32,1.82l1.25,1.19l-0.69,2.61l1.33,2.98l0.97,3.7l0.47,0.29l1.49,-0.31l0.11,0.25l-0.77,2.53l-2.57,1.28l-0.22,0.37l0.08,4.51l-0.47,0.8l0.58,1.25l-1.59,1.59l-1.68,2.74l-0.89,2.6l0.21,2.85l-1.49,2.9l1.12,5.38l0.64,0.64l-0.01,2.49l-1.39,2.89l0.02,2.59l-1.89,2.18l0.02,2.98l0.7,2.85l-1.44,1.23l-1.26,6.27l0.39,3.95l-0.98,0.94l0.58,3.94l1.04,1.3l-0.69,1.22l0.14,0.54l1.01,0.61l0.18,0.88l-1.04,0.92l0.26,2.03l-0.89,4.69l-1.31,3.11l0.25,2.01l-0.73,2.21l-1.97,1.93l0.28,4.31l0.88,1.43l1.6,0.0l-0.01,2.68l1.04,2.36l6.16,0.76ZM248.69,570.67l0.0,9.15l0.4,0.4l3.58,0.07l-0.53,1.14l-1.93,1.23l-2.45,-0.46l-1.9,-1.34l-2.54,-0.61l-5.59,-4.63l-2.57,-3.5l4.23,3.11l3.32,1.53l0.5,-0.14l1.29,-1.95l0.83,-2.85l2.04,-1.51l1.3,0.35Z',
          name: 'Chile',
        },
        XC: {
          path: 'M504.86,320.38l0.39,0.01l0.27,-0.07l-0.3,0.35l-0.36,-0.28Z',
          name: 'N. Cyprus',
        },
        CA: {
          path: 'M280.04,266.9l-1.66,3.44l0.11,0.49l0.5,-0.0l1.44,-1.15l1.05,0.52l-0.63,0.98l0.16,0.58l2.22,1.06l1.38,-0.83l1.97,0.93l-0.68,2.46l0.52,0.48l1.3,-0.48l0.99,3.78l-0.93,2.87l-0.77,0.09l-1.25,-0.52l0.49,-2.7l-0.87,-0.87l-0.52,0.06l-2.77,3.06l-0.43,-0.04l1.14,-1.12l-0.14,-0.66l-2.4,-0.9l-7.4,0.09l-0.2,-0.58l1.35,-1.14l0.02,-0.6l-0.8,-0.75l1.91,-2.12l2.57,-6.16l1.48,-2.16l1.98,-1.26l0.5,0.08l-1.6,3.09ZM68.32,168.48l4.07,1.51l3.89,3.35l2.78,0.73l0.42,-0.15l2.16,-2.88l2.84,-2.09l3.89,0.75l3.71,-3.14l3.71,-1.66l1.54,2.72l0.62,0.1l1.99,-1.93l0.48,-2.97l1.15,0.53l4.17,6.45l0.67,0.01l2.68,-3.95l0.27,4.33l0.54,0.35l3.08,-1.17l1.05,-2.04l2.63,0.36l3.83,3.0l5.86,2.58l3.48,1.19l2.44,-0.39l2.95,3.04l-3.23,3.06l0.16,0.67l4.53,1.42l6.92,-0.76l1.96,-1.04l2.47,3.65l0.64,0.03l2.72,-3.33l-0.01,-0.52l-2.34,-2.61l1.33,-1.93l2.87,-0.3l1.88,-0.64l1.8,1.47l2.48,3.63l0.41,0.17l2.63,-0.5l4.62,2.96l3.83,-1.03l3.59,0.16l0.42,-0.43l-0.27,-3.92l1.8,-0.96l3.49,2.08l-0.01,6.03l0.34,0.4l0.44,-0.28l1.5,-4.95l1.69,0.15l0.43,-0.33l1.13,-6.89l-2.74,-4.66l-2.86,-2.89l0.19,-8.09l2.75,-5.34l2.86,1.11l2.44,3.36l3.31,8.33l-2.12,3.42l0.22,0.59l4.38,1.37l-0.01,6.85l0.29,0.39l0.45,-0.18l3.02,-4.91l2.56,3.84l-0.68,5.11l2.42,4.42l0.7,0.0l2.61,-4.74l1.86,-5.93l0.15,-7.44l3.08,0.48l3.57,1.03l3.18,3.35l0.14,3.2l-1.81,3.53l1.71,3.82l-0.29,2.9l-4.72,4.27l-3.21,0.89l-2.43,-1.77l-0.62,0.23l-0.74,3.09l-2.4,5.08l-0.73,2.58l-2.76,3.73l-3.68,0.5l-2.07,2.63l-0.15,3.32l-2.86,0.78l-3.1,4.45l-2.74,5.98l-0.98,4.09l-0.14,5.74l0.31,0.4l3.44,0.75l2.25,7.78l0.48,0.26l3.37,-0.88l4.49,1.92l2.43,1.68l1.92,2.2l3.09,1.21l2.61,1.84l6.65,0.69l-0.36,3.49l0.8,4.33l1.81,4.63l3.81,3.97l0.51,0.05l2.08,-1.51l1.37,-4.39l-1.31,-6.63l-1.54,-2.05l3.69,-1.91l2.84,-3.1l1.49,-3.43l-0.24,-3.19l-1.7,-3.97l-2.92,-3.49l2.86,-5.19l-1.09,-4.55l-0.81,-7.95l1.39,-0.99l4.1,1.4l2.62,0.54l2.14,-1.31l5.09,4.62l1.07,2.2l4.09,0.36l-0.06,3.98l0.83,6.25l2.42,1.04l1.74,2.7l0.57,0.11l3.63,-2.66l2.51,-5.54l1.22,-1.73l7.63,15.44l-0.95,2.7l0.14,0.45l3.3,2.51l2.23,2.5l4.1,1.23l1.45,1.25l0.96,3.51l2.08,0.8l0.87,1.37l0.17,4.34l-3.4,2.77l-4.22,1.5l-3.06,3.15l-4.04,0.61l-5.35,-0.82l-6.4,0.25l-2.32,2.87l-3.25,1.78l-6.48,8.38l-0.03,0.47l0.45,0.17l2.33,-0.73l3.98,-4.83l5.12,-3.08l3.49,-0.36l1.77,1.49l-2.18,2.58l0.8,4.03l1.01,2.99l3.5,1.85l4.14,-0.52l2.14,-3.2l0.24,1.68l1.22,0.99l-2.64,2.0l-5.49,2.09l-2.54,1.45l-2.73,2.43l-1.38,-0.18l-0.08,-2.39l4.16,-2.8l0.16,-0.45l-0.39,-0.28l-4.01,0.12l-2.61,0.4l-1.4,-1.73l-0.12,-5.1l-1.11,-1.06l-1.83,0.44l-0.65,-0.76l-0.63,0.03l-1.91,2.77l-0.81,2.9l-0.81,1.48l-1.66,0.64l-0.47,0.87l-8.32,0.08l-1.21,0.71l-2.33,2.23l-0.72,-0.14l-1.36,1.08l-1.12,-0.54l-4.75,1.43l-0.9,1.32l0.21,0.59l1.7,0.22l0.05,0.22l-1.84,0.36l-1.85,0.9l-1.19,-0.29l-0.92,0.15l-2.95,2.0l-0.71,-0.11l0.32,-0.68l1.12,-1.78l1.72,-1.33l0.09,-2.6l1.16,-2.28l0.48,0.59l2.03,0.48l0.42,-0.16l0.82,-1.6l-2.66,-4.02l-2.29,-0.71l-5.63,-0.81l-0.4,-0.66l-0.86,0.2l0.27,-0.64l-0.21,-0.52l-0.72,-0.32l0.32,-1.06l-0.91,-1.28l0.34,-0.82l-0.29,-0.55l-2.6,-0.52l-0.76,-1.93l-0.95,-0.76l-1.67,-0.09l-2.67,-0.67l-1.13,1.4l-1.48,0.69l-0.85,1.24l-2.8,-0.89l-2.1,0.45l-2.38,-1.13l-4.23,-0.83l-0.58,-0.48l-0.42,-1.96l-0.4,-0.32l-0.85,0.02l-0.39,0.4l-0.01,1.07l-69.11,-0.01l-6.5,-5.37l-4.5,-1.66l-1.29,-3.28l0.34,-2.39l-0.2,-0.41l-3.03,-1.66l-0.52,-3.39l-2.92,-2.97l-0.05,-1.94l1.39,-2.23l-0.07,-2.8l-4.34,-3.13l-4.08,-8.55l-4.01,-4.22l-1.31,-2.51l-0.57,-0.15l-2.51,1.6l-2.18,2.42l-3.81,-5.1l-2.44,-1.39l-2.26,-0.18l0.03,-55.45ZM265.75,272.87l-0.72,0.04l-3.11,-1.15l-1.72,-1.35l3.19,0.89l2.36,1.57ZM249.33,12.09l6.65,1.61l5.26,2.56l4.43,5.22l-0.1,4.84l-5.98,7.79l-6.13,3.67l-2.26,3.84l0.35,0.6l4.74,-0.08l-5.52,9.28l-4.14,4.52l-4.23,11.87l-5.01,2.26l-1.69,2.82l-7.4,1.42l-0.32,0.34l0.22,0.41l3.02,1.48l-1.51,2.34l2.02,6.18l-2.26,4.04l-3.94,3.58l-1.16,4.49l-3.53,3.68l0.35,2.54l0.44,0.34l3.85,-0.39l0.04,2.09l-6.37,6.12l-6.3,-2.81l-7.5,1.6l-3.7,-1.27l-4.4,-0.52l-0.28,-4.64l4.41,-2.41l0.2,-0.41l-1.19,-8.1l1.06,-0.58l6.49,4.94l0.49,-0.0l0.12,-0.48l-3.41,-7.64l-3.92,-2.37l1.85,-4.46l4.51,-3.29l0.71,-4.65l-3.55,-5.6l-0.98,-6.84l6.22,0.58l1.88,1.51l0.57,-0.08l3.91,-5.41l-0.21,-0.62l-5.64,-1.76l-8.71,0.93l-4.24,-5.03l-2.06,-6.44l-2.92,-4.92l-0.52,-5.65l3.5,-3.22l2.94,-0.62l4.91,-2.99l3.67,-6.97l2.62,0.86l2.63,5.2l0.41,0.22l0.34,-0.32l1.88,-10.36l3.17,-3.13l4.37,-2.24l7.32,-0.83l1.2,2.03l0.52,0.16l7.1,-3.49l10.71,2.64ZM203.82,140.61l1.98,5.56l0.38,0.26l0.37,-0.27l2.27,-6.74l5.84,-3.34l4.06,8.5l-0.37,5.31l0.57,0.39l4.95,-2.38l2.28,-3.11l5.2,3.94l3.34,3.74l0.31,3.32l0.54,0.34l4.32,-1.65l2.44,4.64l6.13,3.12l2.09,2.87l2.25,6.4l-4.35,3.07l-0.01,0.65l5.9,4.44l3.95,1.47l3.53,5.87l3.81,0.57l-0.69,3.91l-4.11,6.58l-2.68,-2.22l-3.9,-5.85l-0.43,-0.17l-3.24,0.78l-0.3,0.35l-0.24,3.8l2.63,3.5l3.42,2.75l0.96,1.44l1.58,5.48l-0.73,3.38l-2.67,-1.26l-6.25,-4.45l-0.52,0.05l-0.04,0.52l6.1,8.03l0.24,1.1l-6.09,-1.92l-5.3,-3.12l-2.77,-2.46l0.72,-1.31l-0.1,-0.51l-7.38,-5.75l-0.64,0.33l0.03,1.33l-6.7,0.85l-1.79,-1.68l1.46,-3.85l4.49,-0.1l5.15,-0.77l0.31,-0.54l-0.79,-2.04l0.83,-2.91l3.22,-6.15l-0.67,-3.24l-1.07,-2.43l-3.84,-3.29l-4.67,-2.18l1.24,-1.37l0.05,-0.47l-2.65,-4.44l-2.33,-0.57l-1.88,-2.37l-0.65,0.04l-1.25,2.02l-4.3,0.88l-9.0,-1.6l-5.26,-2.14l-3.98,-1.1l-1.81,-2.3l2.43,-3.26l-0.32,-0.64l-3.2,-0.03l-0.75,-7.66l1.89,-7.38l2.46,-3.41l5.58,-2.04l-1.59,4.91ZM261.18,282.95l2.07,0.7l1.54,-0.05l-0.57,0.69l-0.66,0.17l-2.92,-1.41l-0.44,-0.86l0.38,-0.46l0.61,1.23ZM230.78,185.0l-2.28,0.26l-0.54,-2.72l0.98,-3.45l1.88,-0.76l1.65,1.57l0.03,2.61l-0.24,0.76l-1.47,1.73ZM229.41,141.37l0.16,1.75l-4.89,-0.38l-2.72,1.08l-0.48,-0.34l-2.65,-4.39l0.09,-2.82l0.87,-0.43l5.47,0.92l4.14,4.61ZM222.03,214.7l-0.78,2.22l-0.56,-0.23l-0.54,-1.3l0.87,-1.54l0.57,0.07l0.44,0.77ZM183.65,102.44l3.0,3.59l4.7,-0.02l1.97,3.24l-0.41,4.19l2.83,2.3l1.84,2.54l6.99,1.27l4.2,-2.19l4.96,-0.84l3.84,0.67l2.53,3.56l0.53,3.8l-1.43,2.32l-3.48,1.88l-3.25,-1.1l-7.15,1.44l-5.04,0.16l-3.95,-1.13l-6.43,-2.95l-0.83,-5.12l-0.3,-4.98l-2.56,-4.72l-5.31,-1.46l-2.69,-3.1l0.83,-3.99l4.63,0.64ZM207.36,195.03l0.42,2.4l0.63,0.26l0.99,-0.72l1.27,1.36l5.47,3.76l0.21,2.54l0.49,0.36l1.62,-0.39l1.33,1.4l-1.71,1.36l-3.54,-1.23l-1.33,-2.43l-0.66,-0.06l-2.46,2.99l-3.05,2.47l-0.7,-2.67l-0.45,-0.29l-2.39,0.38l1.64,-2.22l0.32,-4.55l0.78,-5.03l1.13,0.31ZM215.49,211.5l-2.69,2.74l-1.33,-0.09l-0.38,-1.01l1.61,-2.18l2.82,0.04l-0.02,0.5ZM202.66,70.17l2.91,4.33l-3.3,3.83l-4.54,9.4l-4.14,0.83l-4.93,-1.5l-2.57,-4.9l0.04,-4.53l1.93,-3.49l-0.36,-0.59l-4.35,0.1l-2.61,-4.34l-1.55,-6.33l1.71,-6.55l1.67,-4.57l2.41,-1.04l0.22,-0.48l-0.96,-3.26l5.05,-0.73l3.21,8.41l8.21,6.06l1.95,9.35ZM187.39,143.67l-2.74,6.11l-2.28,-0.24l-1.49,-6.99l0.04,-4.2l1.26,-3.63l2.29,-2.28l4.96,0.3l4.35,2.01l-3.51,7.33l-2.87,1.59ZM186.12,124.07l-1.2,3.26l-3.2,-0.62l-2.75,-2.26l1.22,-4.02l3.15,-2.36l1.93,3.09l0.86,2.91ZM185.64,96.93l-0.83,0.24l-4.33,-0.68l-0.51,-2.52l4.35,0.15l1.52,1.89l-0.2,0.91ZM180.62,90.66l-3.24,2.16l-1.76,-2.41l-1.05,-4.51l-0.18,-4.75l2.69,0.43l1.32,0.77l2.85,4.19l-0.63,4.11ZM180.98,172.19l-1.22,1.91l-3.04,-1.9l-2.16,0.64l-2.93,-2.72l1.98,-2.02l1.52,-2.75l3.72,3.03l2.13,3.8ZM169.77,135.22l2.97,1.73l4.08,-1.03l0.51,2.03l-2.26,4.02l0.07,0.48l3.66,3.51l-0.43,6.97l-3.8,2.82l-2.06,-0.56l-1.71,-2.96l-6.1,-6.18l0.04,-2.04l4.64,0.95l0.44,-0.57l-2.66,-5.4l2.61,-3.78ZM174.46,107.75l1.36,3.53l0.08,5.21l-1.09,7.07l-3.71,0.89l-2.35,-1.35l0.05,-5.54l-0.47,-0.4l-3.64,0.69l-0.14,-7.04l2.56,0.16l3.62,-3.51l3.32,0.59l0.42,-0.3ZM170.01,87.71l0.84,4.38l-3.36,-1.1l-4.3,-4.01l-4.91,-0.41l2.06,-3.18l-0.05,-0.5l-2.92,-2.99l-0.16,-4.33l4.31,1.6l6.62,4.67l1.87,5.86ZM134.6,141.21l-1.16,3.7l0.55,0.48l5.29,-2.43l3.29,4.01l0.64,-0.03l2.53,-3.85l1.89,2.29l2.03,7.94l0.37,0.3l0.4,-0.26l1.28,-3.56l-1.72,-8.28l1.76,-1.01l2.22,1.24l2.69,3.29l2.45,13.62l8.57,7.16l-0.23,2.66l-3.8,0.53l-0.29,0.6l1.51,2.57l-0.67,2.03l-4.14,-1.0l-4.49,-1.91l-3.03,0.47l-4.65,2.34l-10.43,1.63l-1.41,-3.17l-3.42,-1.92l-2.23,0.65l-2.72,-5.01l5.02,-1.82l3.63,0.3l3.27,-1.29l0.25,-0.38l-0.26,-0.37l-4.84,-1.75l-5.5,0.57l-3.28,-0.14l-1.06,-2.23l5.47,-2.91l0.2,-0.46l-0.4,-0.3l-3.77,0.11l-3.96,-1.88l1.97,-5.68l1.69,-3.21l6.41,-4.99l2.07,1.35ZM158.82,138.54l-1.83,4.71l-3.34,-5.15l0.6,-0.86l2.98,-0.32l1.59,1.62ZM149.59,111.85l0.99,3.73l0.63,0.21l2.09,-1.62l2.15,0.37l0.41,4.59l-1.42,4.36l-8.24,1.45l-6.38,4.09l-3.32,0.18l-0.26,-2.47l5.03,-4.13l0.12,-0.46l-0.41,-0.24l-11.2,1.15l-3.08,-1.54l3.28,-9.52l2.11,-2.66l6.67,3.38l4.39,5.99l4.63,0.92l0.44,-0.53l-3.52,-9.7l2.01,-3.46l2.07,1.01l0.81,4.89ZM145.71,84.15l-2.55,2.05l-3.61,-0.01l0.03,-1.26l2.32,-3.45l0.99,0.43l2.82,2.24ZM144.69,94.95l-4.27,3.06l-3.27,-3.31l1.81,-3.41l3.34,-1.13l3.11,1.67l-0.73,3.12ZM118.92,155.09l-5.99,3.39l-1.29,-3.14l-5.55,-4.03l2.72,-9.3l2.17,-5.73l-2.25,-5.4l7.82,-1.34l3.61,1.91l6.24,0.5l2.31,2.51l2.44,3.4l-2.87,2.01l-6.21,6.07l-3.1,5.73l-0.05,3.42ZM129.56,96.45l-0.31,7.96l-1.8,3.53l-2.35,0.59l-4.6,4.46l-3.74,1.48l-2.92,-1.93l4.07,-7.68l5.0,-7.12l3.62,0.15l3.02,-1.45ZM111.13,275.3l-0.71,0.3l-3.83,-1.6l-0.83,-1.38l-2.13,-1.28l-0.67,-1.21l-2.4,-0.65l-0.75,-2.19l3.73,1.32l2.25,0.41l2.0,3.05l2.52,1.64l0.8,1.62ZM87.8,253.38l0.9,0.35l1.87,-0.27l-0.67,4.25l1.83,2.97l-1.42,-1.69l-0.98,-1.97l-1.19,-1.23l-0.34,-2.41Z',
          name: 'Canada',
        },
        CG: {
          path: 'M466.72,406.37l-0.1,1.03l-1.25,2.97l-0.19,3.62l-0.46,1.78l-0.23,0.63l-1.61,1.19l-1.21,1.39l-1.09,2.43l0.04,2.09l-3.25,3.25l-0.5,-0.24l-0.5,-0.83l-1.36,-0.02l-0.98,0.89l-1.68,-0.99l-1.54,1.24l-1.52,-1.96l1.57,-1.14l0.11,-0.52l-0.77,-1.35l2.1,-0.66l0.39,-0.73l1.05,0.82l2.21,0.11l1.12,-1.37l0.37,-1.81l-0.27,-2.09l-1.13,-1.5l1.0,-2.69l-0.13,-0.45l-0.92,-0.58l-1.6,0.17l-0.51,-0.94l0.1,-0.61l2.75,0.09l3.97,1.24l0.51,-0.33l0.17,-1.28l1.24,-2.21l1.28,-1.14l2.76,0.49Z',
          name: 'Congo',
        },
        CF: {
          path: 'M461.16,408.1l-0.26,-1.19l-1.09,-0.77l-0.84,-1.18l-0.29,-1.0l-1.04,-1.15l0.08,-3.44l0.58,-0.49l1.16,-2.36l1.85,-0.17l0.61,-0.62l0.97,0.58l3.15,-0.97l2.48,-1.92l0.02,-0.96l2.82,0.02l2.36,-1.18l1.93,-2.86l1.16,-0.94l1.11,-0.31l0.27,0.87l1.34,1.48l-0.39,2.02l0.3,1.01l4.01,2.76l0.17,0.93l2.63,2.31l0.6,1.44l2.08,1.4l-3.84,-0.21l-1.94,0.88l-1.24,-0.49l-2.67,1.2l-1.29,-0.18l-0.51,0.37l-0.6,1.22l-3.35,-0.65l-1.57,-0.91l-2.42,-0.83l-1.45,0.91l-0.97,1.28l-0.26,1.56l-3.22,-0.43l-1.49,1.33l-0.94,1.62Z',
          name: 'Central African Rep.',
        },
        CD: {
          path: 'M487.01,402.27l2.34,-0.14l1.35,1.84l1.34,0.45l0.86,-0.39l1.21,0.12l1.07,-0.41l0.54,0.89l2.04,1.54l-0.14,2.72l0.7,0.54l-1.38,1.13l-1.53,2.54l-0.17,2.05l-0.59,1.08l-0.02,1.72l-0.72,0.84l-0.66,3.01l0.63,1.32l-0.44,4.26l0.64,1.47l-0.37,1.22l0.86,1.8l1.53,1.42l0.3,1.27l0.44,0.51l-4.08,0.75l-0.92,1.82l0.51,1.35l-0.74,5.46l0.17,0.38l2.45,1.47l0.54,-0.1l0.12,1.64l-1.28,-0.01l-1.85,-2.37l-1.94,-0.45l-0.48,-1.14l-0.56,-0.2l-1.41,0.74l-1.71,-0.3l-1.01,-1.19l-2.49,-0.2l-0.44,-0.77l-1.98,-0.21l-2.88,0.36l0.11,-2.42l-0.85,-1.13l-0.16,-1.36l0.32,-1.74l-0.47,-0.89l-0.04,-1.5l-0.4,-0.39l-2.53,0.02l0.1,-0.41l-0.39,-0.49l-1.28,0.01l-0.43,0.46l-1.62,0.32l-0.83,1.8l-1.09,-0.28l-2.4,0.52l-1.37,-1.91l-1.3,-3.31l-0.38,-0.27l-7.39,-0.03l-2.46,0.42l0.5,-0.45l0.37,-1.47l0.66,-0.38l0.92,0.08l0.73,-0.82l0.87,0.02l0.31,0.68l1.4,0.36l3.59,-3.63l0.01,-2.23l1.02,-2.29l2.69,-2.39l0.43,-0.99l0.49,-1.96l0.17,-3.51l1.25,-2.95l0.36,-3.15l0.86,-1.13l1.1,-0.67l3.57,1.73l3.65,0.73l0.46,-0.21l0.8,-1.46l1.24,0.19l2.61,-1.17l0.81,0.44l1.04,-0.03l0.59,-0.66l0.7,-0.16l1.81,0.25Z',
          name: 'Dem. Rep. Congo',
        },
        CZ: {
          path: 'M458.44,265.89l1.23,1.2l1.49,0.27l0.09,1.1l1.36,0.81l0.58,-0.21l0.25,-0.67l1.12,0.29l0.53,1.3l1.67,0.21l0.69,1.14l-1.4,1.19l-0.12,0.65l-0.55,0.55l-1.59,0.21l-0.56,0.65l-1.03,-0.52l-1.03,0.17l-2.15,-1.12l-1.05,0.4l-1.18,1.3l-1.53,-1.0l-2.59,-2.49l-0.57,-2.36l1.48,-0.7l0.99,-1.01l1.72,-0.74l0.54,-0.59l0.73,0.29l0.87,-0.32Z',
          name: 'Czech Rep.',
        },
        CY: {
          path: 'M504.35,321.02l0.49,0.34l-1.34,0.65l-0.91,-0.29l-0.26,-0.55l2.02,-0.14Z',
          name: 'Cyprus',
        },
        CR: {
          path: 'M211.34,387.89l0.48,1.0l1.61,1.62l-0.54,0.45l0.3,1.42l-0.25,1.2l-1.09,-0.6l-0.05,-1.25l-2.46,-1.43l-0.28,-0.77l-0.66,-0.45l-0.45,-0.0l-0.11,1.05l-1.32,-0.95l0.31,-1.31l-0.36,-0.6l0.31,-0.27l1.42,0.58l1.29,-0.14l0.56,0.56l0.74,0.17l0.55,-0.27Z',
          name: 'Costa Rica',
        },
        CU: {
          path: 'M221.21,356.57l1.27,1.05l2.18,-0.29l4.43,3.42l2.09,0.45l-0.1,0.41l0.36,0.49l1.75,0.1l1.44,0.97l-3.07,0.42l-4.17,-0.03l0.79,-0.7l-0.04,-0.63l-1.2,-0.76l-1.49,-0.16l-0.7,-0.62l-0.56,-1.44l-0.4,-0.25l-1.34,0.1l-2.2,-0.68l-0.89,-0.6l-3.18,-0.41l-0.28,-0.17l0.6,-0.76l-0.36,-0.29l-2.73,-0.05l-1.7,1.33l-0.91,0.03l-0.61,0.71l-1.03,0.22l1.14,-1.35l1.01,-0.54l3.69,-1.04l3.98,0.22l2.21,0.87Z',
          name: 'Cuba',
        },
        SZ: {
          path: 'M500.35,482.11l0.5,2.14l-0.39,0.94l-1.04,0.22l-1.23,-1.25l-0.02,-0.69l0.84,-1.65l1.34,0.28Z',
          name: 'Swaziland',
        },
        SY: {
          path: 'M510.98,327.85l0.08,-1.44l0.55,-1.47l1.28,-1.07l0.12,-0.44l-0.41,-1.19l-1.14,-0.38l-0.19,-1.91l0.53,-1.11l1.29,-1.31l0.19,-1.27l0.6,0.24l2.61,-0.82l1.36,0.56l2.06,-0.01l2.95,-1.17l3.29,-0.29l-0.72,1.1l-1.49,1.11l0.23,2.19l-0.89,3.46l-10.14,6.13l-2.17,-0.92Z',
          name: 'Syria',
        },
        KG: {
          path: 'M621.37,297.76l-3.91,1.98l-0.95,1.31l-3.03,0.37l-1.14,2.06l-2.35,-0.39l-2.01,0.7l-2.39,1.55l0.09,1.02l-0.42,0.44l-4.5,0.47l-3.01,-1.02l-2.38,0.19l0.12,-0.96l2.3,0.46l1.14,-0.97l1.99,0.21l3.21,-2.37l-0.03,-0.67l-2.97,-1.75l-1.95,0.72l-1.27,-0.86l1.77,-1.84l-0.12,-0.64l-0.4,-0.18l0.36,-0.95l1.35,-0.39l4.01,1.14l0.5,-0.31l0.35,-1.82l1.08,-0.54l3.4,1.37l1.14,-0.35l7.61,0.43l1.15,1.13l1.27,0.45Z',
          name: 'Kyrgyzstan',
        },
        KE: {
          path: 'M506.26,414.59l1.87,-2.56l0.93,-2.15l-1.38,-4.08l-1.06,-1.6l2.82,-2.75l0.79,0.26l0.12,1.41l0.86,0.83l1.9,0.11l3.28,2.13l3.57,0.44l1.05,-1.12l1.96,-0.9l0.82,0.69l1.16,0.09l-1.78,2.45l0.03,9.12l1.3,1.94l-1.37,0.78l-0.67,1.03l-1.08,0.46l-0.34,1.67l-0.81,1.07l-0.45,1.55l-0.68,0.56l-3.2,-2.23l-0.35,-1.58l-8.86,-4.98l0.14,-1.6l-0.57,-1.04Z',
          name: 'Kenya',
        },
        SS: {
          path: 'M481.71,393.21l1.07,-0.73l1.2,-3.2l1.36,-0.26l1.61,2.0l0.87,0.34l1.11,-0.41l1.5,0.07l0.57,0.53l2.49,0.0l0.44,-0.63l1.07,-0.4l0.45,-0.84l0.59,-0.33l1.9,1.34l1.6,-0.2l2.83,-3.35l-0.32,-2.23l1.6,-0.53l-0.24,1.62l0.3,1.84l1.34,1.18l0.2,1.88l0.35,0.41l0.02,1.54l-0.23,0.47l-1.42,0.25l-0.85,1.44l0.3,0.6l1.4,0.17l1.12,1.08l0.59,1.13l1.03,0.53l1.28,2.37l-4.42,3.99l-1.74,0.01l-1.89,0.55l-1.47,-0.52l-1.15,0.57l-2.96,-2.62l-1.3,0.49l-1.06,-0.15l-0.79,0.39l-0.82,-0.22l-1.8,-2.7l-1.91,-1.1l-0.66,-1.5l-2.62,-2.33l-0.18,-0.94l-2.37,-1.61Z',
          name: 'S. Sudan',
        },
        SR: {
          path: 'M283.12,400.08l2.1,0.53l-1.08,1.95l0.2,1.72l0.93,1.49l-0.59,2.04l-0.43,0.71l-1.12,-0.42l-1.32,0.22l-0.93,-0.2l-0.46,0.26l-0.25,0.73l0.33,0.7l-0.89,-0.13l-1.39,-1.98l-0.31,-1.34l-0.97,-0.31l-0.89,-1.47l0.35,-1.61l1.45,-0.82l0.33,-1.87l2.61,0.44l0.58,-0.47l1.75,-0.16Z',
          name: 'Suriname',
        },
        KH: {
          path: 'M689.52,379.15l0.5,1.47l-0.28,2.77l-4.0,1.87l-0.16,0.59l0.69,0.97l-2.06,0.17l-2.05,0.97l-1.82,-0.32l-0.9,-1.17l-1.23,-2.56l-0.55,-2.88l1.4,-1.87l3.01,-0.46l2.23,0.35l2.01,0.99l0.51,-0.14l0.95,-1.49l1.74,0.75Z',
          name: 'Cambodia',
        },
        SV: {
          path: 'M195.8,379.9l1.41,-1.21l2.24,1.46l0.98,-0.27l0.44,0.21l-0.27,1.07l-1.14,-0.03l-3.65,-1.23Z',
          name: 'El Salvador',
        },
        SK: {
          path: 'M476.87,273.43l-1.2,2.33l-2.74,-1.08l-1.05,0.4l-0.52,0.78l-3.44,0.85l-0.48,0.81l-1.74,0.38l-1.88,-1.17l-0.2,-1.03l0.4,-0.94l1.02,0.01l0.86,-0.39l1.74,-2.23l0.83,0.19l0.76,-0.39l1.06,1.14l0.49,0.08l1.33,-0.74l1.26,0.34l1.63,-0.49l1.87,1.16Z',
          name: 'Slovakia',
        },
        KR: {
          path: 'M737.47,312.73l1.03,-0.11l0.87,-1.28l2.69,-0.35l0.32,-0.3l1.75,3.04l0.59,1.94l0.02,3.41l-0.81,1.45l-2.22,0.59l-1.92,1.21l-1.79,0.21l-0.2,-1.21l0.44,-2.44l-0.97,-2.83l1.45,-0.41l0.23,-0.6l-1.48,-2.32Z',
          name: 'Korea',
        },
        SI: {
          path: 'M456.18,286.22l-0.51,-1.56l0.2,-1.29l1.68,0.23l1.44,-0.83l2.08,-0.09l0.62,-0.56l0.24,0.62l-1.66,0.8l-0.43,1.53l-0.67,0.28l-0.24,0.94l-1.2,-0.55l-0.54,0.09l-0.33,0.43l-0.67,-0.05Z',
          name: 'Slovenia',
        },
        KP: {
          path: 'M736.77,312.06l-0.91,-0.45l-0.89,0.68l-1.23,-0.97l0.49,-1.01l0.5,-0.32l0.58,-2.78l-0.45,-0.8l-1.38,-0.34l-0.75,-0.55l1.69,-1.74l2.72,-1.75l1.57,-2.11l1.1,0.86l2.17,0.12l0.41,-0.49l-0.32,-1.43l3.54,-1.33l0.93,-1.56l1.03,1.28l-1.46,1.26l-0.79,1.2l0.02,2.38l-1.08,0.61l-1.41,1.55l-1.7,0.58l-1.23,1.17l-0.16,2.14l2.12,1.67l-0.16,0.33l-2.59,0.32l-1.14,1.41l-1.21,0.08Z',
          name: 'Dem. Rep. Korea',
        },
        KW: {
          path: 'M540.8,336.41l0.38,0.92l-0.17,0.78l0.61,1.64l-0.95,0.04l-0.83,-1.35l-1.59,-0.2l1.34,-2.02l1.21,0.17Z',
          name: 'Kuwait',
        },
        SN: {
          path: 'M390.09,377.95l0.12,1.57l0.49,1.48l0.96,0.82l0.05,1.3l-1.26,-0.19l-0.75,0.33l-1.84,-0.62l-5.84,-0.13l-2.54,0.51l-0.22,-1.04l1.78,0.04l2.01,-0.92l1.03,0.48l1.09,0.05l1.29,-0.62l0.14,-0.58l-0.51,-0.74l-1.81,0.25l-1.13,-0.64l-0.79,0.04l-0.72,0.61l-2.31,0.06l-0.92,-1.79l-0.82,-0.65l0.64,-0.36l1.81,-3.15l0.65,-0.64l1.04,0.19l1.39,-0.56l1.19,-0.02l2.72,1.39l3.03,3.53Z',
          name: 'Senegal',
        },
        SL: {
          path: 'M394.46,393.98l-1.73,1.98l-0.58,1.34l-2.07,-1.06l-1.22,-1.26l-0.65,-2.4l1.16,-0.97l0.67,-1.18l1.21,-0.52l1.66,0.0l1.03,1.65l0.52,2.42Z',
          name: 'Sierra Leone',
        },
        KZ: {
          path: 'M552.75,298.52l0.51,-1.47l-0.48,-1.19l-2.96,-1.32l-1.07,-2.94l-1.37,-0.98l-0.03,-0.45l1.95,0.27l0.45,-0.38l0.09,-2.29l1.75,-0.47l2.09,0.51l0.49,-0.34l0.45,-3.5l-0.45,-2.38l-0.42,-0.32l-2.41,0.17l-2.39,-0.84l-2.87,1.59l-2.15,0.7l-0.86,-0.4l0.15,-1.86l-1.6,-2.47l-2.02,-0.09l-1.83,-2.19l1.33,-2.64l-0.61,-1.04l1.66,-3.54l2.17,1.91l0.66,-0.26l0.29,-2.7l4.94,-4.15l3.67,-0.1l8.38,4.33l2.97,-1.63l3.74,-0.08l3.1,1.99l0.56,-0.13l0.6,-0.97l3.28,0.16l0.4,-0.27l0.63,-1.89l-0.15,-0.46l-3.62,-2.47l1.99,-1.65l-0.2,-1.23l2.05,-0.92l0.17,-0.58l-1.66,-2.63l0.88,-1.1l9.22,-1.46l1.35,-1.1l6.17,-1.58l2.26,-1.78l4.05,0.85l0.74,4.22l0.54,0.3l2.46,-0.98l2.8,1.27l-0.18,2.03l0.44,0.43l2.58,-0.3l4.83,-3.09l0.03,0.36l3.16,3.23l5.57,10.31l0.69,0.03l1.11,-1.75l3.11,2.07l3.78,-0.93l1.13,0.59l1.15,2.17l1.83,0.89l1.0,1.55l0.4,0.18l2.95,-0.47l1.06,1.89l-1.65,2.2l-1.92,0.33l-0.33,0.38l-0.12,3.61l-1.14,1.37l-4.73,-1.15l-0.48,0.28l-1.76,6.36l-1.1,0.68l-4.91,1.4l-0.26,0.52l2.13,5.72l-1.4,0.73l-0.08,1.73l-0.87,-0.28l-1.43,-1.27l-7.9,-0.45l-0.92,0.34l-3.74,-1.37l-1.63,0.99l-0.31,1.59l-3.7,-1.05l-1.87,0.48l-0.76,1.57l-1.35,0.6l-3.3,2.34l-1.12,2.31l-0.42,0.01l-0.93,-1.56l-2.86,-0.1l-0.45,-2.43l-0.39,-0.33l-0.81,-0.02l0.02,-3.32l-3.0,-2.52l-4.58,0.18l-2.74,0.47l-2.34,-3.04l-6.74,-4.23l-6.45,2.1l-0.28,0.38l0.1,12.31l-0.69,0.09l-1.62,-2.42l-1.83,-1.07l-3.13,0.66l-0.68,0.6Z',
          name: 'Kazakhstan',
        },
        SA: {
          path: 'M537.53,338.97l2.0,0.25l0.91,1.39l1.49,-0.06l0.88,2.19l1.29,0.79l0.51,1.03l1.56,1.08l-0.1,1.98l0.32,0.93l1.57,2.56l0.76,0.55l0.71,-0.04l1.37,4.1l7.83,1.63l0.51,-0.29l0.77,1.29l-1.56,5.0l-7.29,2.58l-7.31,1.05l-2.34,1.19l-1.88,2.79l-0.76,0.28l-0.83,-0.79l-0.91,0.12l-2.88,-0.52l-3.5,0.25l-0.86,-0.57l-0.58,0.15l-0.66,1.29l0.16,1.12l-0.43,0.33l-0.93,-1.42l-0.33,-1.18l-1.23,-0.89l-1.27,-2.1l-0.78,-2.27l-1.73,-1.83l-1.14,-0.49l-1.54,-2.37l-0.2,-3.5l-1.44,-3.02l-1.27,-1.19l-1.33,-0.58l-1.31,-3.5l-0.77,-0.7l-0.97,-2.05l-2.8,-4.2l-1.07,-0.17l0.59,-2.85l2.75,0.31l1.08,-0.88l0.6,-0.99l1.74,-0.36l0.65,-1.08l0.72,-0.43l0.1,-0.6l-2.09,-2.45l4.42,-1.3l0.48,-0.39l2.75,0.73l3.66,2.01l7.03,5.8l4.88,0.32Z',
          name: 'Saudi Arabia',
        },
        SE: {
          path: 'M480.3,192.35l-4.15,1.76l-2.43,4.19l0.32,3.66l-3.86,4.45l-4.93,4.95l-1.79,7.79l1.78,3.64l2.29,2.71l-2.14,5.19l-2.69,1.39l-0.95,7.87l-1.3,3.9l-2.71,-0.39l-0.43,0.25l-1.32,3.3l-2.29,0.16l-0.75,-3.94l-2.09,-5.18l-1.86,-6.56l1.04,-2.66l2.12,-3.53l0.83,-6.02l-1.6,-2.83l-0.15,-7.02l1.52,-4.93l2.18,0.09l0.39,-0.26l0.87,-2.28l-0.85,-2.14l3.83,-8.36l4.06,-11.45l2.12,0.02l0.4,-0.33l0.59,-3.35l4.31,1.0l0.49,-0.36l0.34,-4.24l1.04,-0.19l6.98,7.72l0.07,9.8l0.74,2.18Z',
          name: 'Sweden',
        },
        SD: {
          path: 'M505.98,389.25l-0.34,-0.78l-1.17,-0.91l-0.27,-1.62l0.29,-1.82l-0.34,-0.46l-1.16,-0.18l-0.54,0.59l-1.23,0.11l-0.28,0.65l0.53,0.66l0.17,1.23l-2.44,3.01l-0.96,0.2l-2.39,-1.41l-0.95,0.52l-0.38,0.78l-1.11,0.41l-0.29,0.5l-1.94,0.0l-0.54,-0.52l-1.81,-0.09l-0.95,0.41l-2.45,-2.36l-2.07,0.54l-0.73,1.27l-0.6,2.11l-1.25,0.58l-0.75,-0.62l0.27,-2.67l-1.48,-1.78l-0.22,-1.49l-0.92,-0.97l-0.02,-1.3l-0.57,-1.17l-0.69,-0.16l0.7,-1.31l-0.18,-1.15l0.65,-0.63l0.03,-0.55l-0.36,-0.42l1.56,-3.02l1.91,0.16l0.43,-0.4l-0.1,-11.14l2.49,-0.01l0.4,-0.4l-0.0,-4.96l29.02,0.0l0.65,2.11l-0.49,0.67l0.36,2.75l0.93,3.22l2.12,1.59l-0.9,1.07l-1.72,0.4l-0.98,0.91l-1.42,5.73l0.24,1.16l-0.38,2.09l-0.97,2.4l-1.53,1.32l-1.32,2.93l-1.22,0.86l-0.37,1.34Z',
          name: 'Sudan',
        },
        DO: {
          path: 'M241.8,368.82l0.05,-0.67l-0.47,-0.75l0.43,-0.45l0.19,-1.02l-0.09,-1.57l1.66,0.01l1.99,0.64l0.33,0.69l1.29,0.19l0.33,0.77l0.99,0.09l0.81,0.64l-0.46,0.53l-1.13,-0.48l-1.87,-0.01l-1.27,0.6l-0.75,-0.56l-1.01,0.55l-0.79,1.43l-0.23,-0.62Z',
          name: 'Dominican Rep.',
        },
        DJ: {
          path: 'M528.43,386.01l-0.45,0.67l-0.58,-0.25l-1.51,0.13l-0.18,-1.02l1.45,-1.97l0.83,0.17l0.77,-0.44l0.2,1.01l-1.21,0.52l-0.06,0.7l0.73,0.48Z',
          name: 'Djibouti',
        },
        DK: {
          path: 'M452.3,246.5l-1.22,2.88l-2.11,-1.99l-0.26,-1.39l2.98,-1.2l0.61,1.7ZM447.78,242.9l-0.32,0.89l-0.89,-0.07l-1.8,3.21l0.54,2.1l-1.13,0.47l-1.58,-0.48l-0.91,-2.19l-0.07,-4.44l0.99,-2.3l2.0,-0.26l1.11,-1.38l1.3,-0.85l-0.05,1.54l-0.73,1.69l0.3,1.28l1.25,0.79Z',
          name: 'Denmark',
        },
        DE: {
          path: 'M453.15,278.66l-0.56,-0.42l-1.2,-0.11l-1.89,0.66l-2.12,-0.15l-0.57,0.71l-0.83,-0.67l-0.98,0.09l-2.56,-1.08l-0.49,0.15l-0.39,0.62l-1.46,-0.02l0.26,-2.16l1.24,-2.54l-0.28,-0.57l-3.51,-0.68l-0.95,-0.81l0.12,-1.49l-0.49,-1.0l0.27,-2.61l-0.38,-3.76l1.43,-0.25l0.63,-1.53l0.65,-3.87l-0.43,-1.44l0.31,-0.56l1.61,-0.18l0.34,0.68l0.67,0.07l1.7,-2.09l-0.57,-3.77l1.35,0.41l1.33,-0.45l0.28,1.46l2.27,0.9l-0.02,1.24l0.52,0.39l2.55,-0.8l1.33,-1.07l2.53,1.51l1.08,1.24l0.51,1.88l-0.61,1.39l0.88,1.43l0.58,2.06l-0.16,1.52l0.87,2.18l-0.54,0.2l-0.49,-0.34l-0.54,0.07l-0.57,0.68l-1.71,0.73l-1.01,1.02l-1.75,0.82l-0.2,0.5l0.84,2.98l2.45,2.3l-0.71,1.4l-1.0,0.83l0.33,2.27Z',
          name: 'Germany',
        },
        YE: {
          path: 'M528.26,376.46l0.26,-0.43l-0.22,-1.03l0.28,-0.61l-0.09,-0.91l0.92,-0.7l-0.08,-1.37l0.39,-0.76l1.01,0.48l3.33,-0.27l3.76,0.42l0.95,0.82l1.36,-0.59l1.74,-2.67l2.18,-1.11l6.86,-0.96l2.48,5.52l-1.64,0.77l-0.56,1.93l-6.23,2.19l-2.29,1.82l-1.93,0.05l-1.41,1.03l-4.24,0.75l-1.72,1.5l-3.28,0.19l-0.52,-1.19l0.02,-1.52l-1.34,-3.33Z',
          name: 'Yemen',
        },
        DZ: {
          path: 'M441.47,315.57l-0.34,1.19l0.39,2.88l-0.55,2.35l-1.58,1.92l0.36,2.53l1.92,1.66l0.17,0.85l1.43,1.1l1.85,7.66l0.13,1.23l-0.57,5.23l0.2,1.59l-0.88,1.03l-0.02,0.5l1.41,1.93l0.14,1.24l0.89,1.54l0.5,0.17l0.97,-0.42l1.72,1.11l0.83,1.29l-8.23,4.95l-7.23,5.24l-3.43,1.15l-2.3,0.21l-0.28,-1.63l-2.56,-1.12l-0.67,-1.28l-26.12,-18.48l0.01,-3.67l3.77,-1.98l2.44,-0.43l2.12,-0.8l1.08,-1.5l2.81,-1.11l0.34,-2.2l1.34,-0.31l1.04,-1.0l3.46,-0.73l0.36,-1.59l-0.58,-0.56l-0.83,-3.02l-0.18,-1.95l-0.8,-1.65l2.06,-1.44l2.62,-0.52l1.71,-1.32l2.31,-0.91l8.23,-0.8l1.51,0.41l2.27,-1.19l2.45,-0.02l0.91,0.65l1.38,-0.05Z',
          name: 'Algeria',
        },
        US: {
          path: 'M892.73,206.44l1.34,0.72l1.36,-0.5l1.85,1.36l2.21,0.69l-1.59,1.04l-2.57,-2.02l-2.38,0.18l-0.3,-0.25l0.09,-1.21ZM183.2,272.56l0.38,1.78l1.12,0.96l4.22,0.82l2.39,1.15l2.19,-0.43l2.01,0.64l-1.73,0.85l-3.49,3.04l-0.14,0.83l0.52,0.39l2.3,-0.7l1.8,1.17l5.17,-2.8l-0.37,0.89l0.24,0.53l1.35,0.45l1.71,1.35l4.7,-1.01l0.4,0.77l1.58,0.45l0.68,0.78l-1.42,0.21l-2.2,-0.37l-3.59,1.03l-2.72,3.73l0.35,0.91l0.62,-0.0l0.61,-0.75l-1.43,5.39l0.29,3.47l0.67,1.77l0.61,0.48l1.03,-0.07l0.75,-0.43l1.59,-2.19l0.13,-2.45l-0.82,-2.2l0.11,-1.33l1.2,-2.74l0.42,-0.36l0.48,0.84l0.4,-0.3l0.4,-1.6l0.59,-0.51l0.24,-0.94l1.66,0.56l1.67,1.25l-0.03,2.8l-1.28,1.3l0.02,1.21l0.87,0.37l1.67,-1.46l0.49,0.18l0.51,3.02l-2.51,4.23l0.17,0.59l1.54,0.69l1.51,0.19l1.93,-0.49l4.72,-2.41l2.16,-2.03l-0.08,-1.39l0.77,-0.26l3.91,0.4l2.14,-1.19l0.19,-0.39l-0.31,-1.71l2.31,-2.21l1.0,-0.57l8.31,-0.03l0.57,-0.94l1.9,-0.88l0.92,-1.72l0.75,-2.75l1.58,-2.29l0.94,0.69l1.44,-0.54l0.81,0.77l-0.0,4.78l1.98,3.01l-2.38,1.52l-5.36,2.37l-1.81,3.03l0.01,1.98l0.83,1.79l0.78,0.27l-6.43,1.12l-2.21,1.0l-0.21,0.48l0.45,0.28l3.52,-0.57l-2.73,0.77l-1.77,-0.26l-0.76,0.91l0.23,0.65l0.34,0.07l-0.43,1.87l-1.26,1.73l-1.46,-1.16l-0.49,-0.06l-0.18,0.46l0.52,1.74l0.61,0.64l0.03,0.92l-0.94,1.5l-1.22,-1.31l-0.28,-2.52l-0.35,-0.35l-0.42,0.27l-0.48,1.39l0.34,1.57l-0.97,-0.29l-0.48,0.22l0.16,0.5l1.54,0.91l0.1,2.78l0.78,0.52l0.53,3.76l-1.43,2.04l-2.47,0.86l-1.71,1.78l-1.31,0.27l-1.27,1.11l-0.43,1.05l-2.7,1.91l-2.64,3.21l-0.45,2.23l0.45,2.17l0.85,2.51l1.09,2.0l0.04,1.26l1.16,3.2l-0.18,2.82l-0.55,1.49l-0.47,0.22l-0.88,-0.24l-0.33,-1.01l-1.03,-0.79l-2.75,-5.4l0.46,-2.04l-0.76,-1.66l-1.95,-2.41l-1.47,-0.55l-2.38,1.23l-1.46,-1.42l-1.79,-0.75l-2.78,0.36l-2.27,-0.31l-2.03,0.23l-1.04,0.45l-0.18,0.57l0.39,0.67l0.19,1.47l-0.9,-0.23l-0.84,0.49l-1.57,-0.08l-2.08,-1.52l-2.08,0.34l-1.91,-0.65l-3.74,0.89l-2.39,2.17l-2.54,1.28l-1.45,1.47l-0.61,1.43l-0.02,1.98l0.38,1.9l-1.99,-0.55l-1.81,-0.8l-1.25,-3.25l-1.44,-1.57l-2.24,-3.73l-1.76,-1.15l-2.28,-0.01l-1.71,2.18l-1.74,-0.72l-1.16,-0.78l-1.52,-3.14l-3.94,-3.35l-4.34,-0.0l-0.4,0.4l-0.0,0.81l-6.5,0.02l-9.04,-3.34l-0.33,-0.75l-5.69,0.52l-0.43,-1.37l-1.62,-1.72l-1.14,-0.41l-0.55,-0.94l-1.27,-0.14l-1.02,-0.83l-2.22,-0.29l-0.43,-0.33l-0.36,-1.7l-2.4,-3.06l-2.02,-4.21l-0.05,-0.96l-2.93,-3.59l-0.33,-2.54l-1.3,-1.83l0.52,-2.65l-0.09,-2.87l-0.78,-2.59l0.96,-3.2l0.61,-6.46l-0.46,-4.91l-1.48,-4.8l0.09,-0.23l3.09,1.09l1.27,3.33l0.71,0.07l0.68,-1.24l-1.12,-5.71l68.79,-0.0l0.4,-0.4l0.13,-1.09ZM32.37,157.48l1.75,3.33l0.67,0.06l0.98,-1.29l3.62,0.39l-0.12,1.35l0.27,0.41l3.83,1.28l2.65,-0.7l5.14,2.3l4.86,0.72l1.87,0.93l3.47,-1.11l3.64,2.11l2.52,0.95l-0.03,56.12l0.38,0.4l2.37,0.14l2.29,1.31l3.91,5.31l0.63,0.04l2.4,-2.69l2.1,-1.34l1.18,2.24l3.95,4.14l4.1,8.6l4.22,2.91l0.06,2.46l-1.03,1.56l-1.12,-1.31l-2.06,-1.31l-0.68,-3.73l-3.26,-3.82l-1.32,-4.34l-0.33,-0.28l-6.34,-0.42l-2.8,-1.31l-5.26,-5.09l-6.77,-2.72l-3.55,0.39l-4.79,-2.25l-3.33,-2.21l-2.78,1.09l-0.25,0.43l0.46,3.15l-3.97,1.29l-2.26,1.69l-2.25,0.84l-0.29,-2.33l1.07,-4.71l2.51,-1.5l0.15,-0.53l-0.69,-1.3l-0.62,-0.11l-3.19,2.88l-1.77,3.43l-3.56,3.49l-0.04,0.53l1.65,2.14l-2.16,3.15l-5.1,3.33l-0.76,2.13l-3.78,2.28l-0.91,2.19l-2.68,1.74l-1.82,-0.27l-6.95,4.17l-3.92,1.13l2.36,-1.94l2.5,-1.4l2.58,-2.35l3.26,-0.66l1.2,-1.79l3.42,-2.69l2.56,-2.83l0.42,-3.52l1.25,-2.78l-0.09,-0.45l-0.46,-0.07l-2.63,1.33l-0.6,-0.62l-0.6,0.03l-1.02,1.31l-1.33,-1.98l-0.71,0.08l-0.3,0.77l-0.56,-1.45l-0.62,-0.17l-2.39,1.85l-1.03,-0.0l-0.18,-2.46l0.44,-1.74l-1.7,-2.14l-0.41,-0.11l-3.01,0.89l-1.94,-2.17l-1.61,-1.16l-0.11,-2.96l-1.78,-2.05l0.88,-2.78l2.01,-2.96l0.87,-2.7l1.66,-0.33l1.59,0.82l0.5,-0.12l1.86,-2.47l1.93,0.32l1.91,-1.75l-0.34,-2.97l-1.22,-1.04l1.59,-1.93l-0.33,-0.65l-1.69,0.11l-2.66,1.27l-0.72,1.08l-1.92,-1.11l-3.43,0.63l-3.41,-1.3l-1.05,-2.33l-2.87,-3.16l3.14,-2.29l5.47,-2.98l1.51,0.0l-0.29,2.67l0.42,0.44l5.29,-0.24l0.34,-0.59l-2.03,-3.88l-3.12,-2.51l-1.79,-3.25l-2.4,-2.83l-3.25,-2.04l1.19,-3.05l4.45,-0.33l3.16,-3.2l0.69,-3.62l2.43,-3.32l2.42,-0.86l4.6,-3.26l2.51,0.36l3.66,-3.91l3.4,1.47ZM37.56,239.39l-2.21,1.54l-0.94,-0.87l-0.32,-1.79l3.24,-2.14l1.37,0.26l0.77,1.05l-1.9,1.94ZM31.06,363.53l0.98,0.48l0.75,0.91l-1.77,1.1l-0.44,-1.57l0.48,-0.92ZM29.32,361.52l0.19,0.06l0.11,0.07l-0.18,0.04l-0.12,-0.16ZM25.2,359.55l0.2,0.24l-0.14,-0.02l-0.05,-0.23ZM5.91,226.07l-1.09,0.55l-2.4,-1.69l1.72,-0.6l1.6,0.37l0.17,1.37Z',
          name: 'United States',
        },
        UY: {
          path: 'M286.86,504.69l-0.94,1.64l-2.58,1.54l-1.67,-0.55l-1.42,0.28l-2.4,-1.28l-1.51,0.09l-1.28,-1.4l0.16,-1.65l0.56,-0.83l-0.02,-2.91l1.22,-5.04l1.18,-0.23l2.36,2.12l1.08,0.03l4.36,3.37l1.24,1.73l-0.98,1.58l0.62,1.52Z',
          name: 'Uruguay',
        },
        LB: {
          path: 'M510.37,325.96l-0.89,0.55l1.84,-3.86l0.6,0.08l0.24,0.7l-1.15,0.96l-0.64,1.57Z',
          name: 'Lebanon',
        },
        LA: {
          path: 'M689.54,378.29l-1.76,-0.75l-0.5,0.15l-0.94,1.48l-1.33,-0.65l0.62,-0.99l0.11,-2.2l-2.04,-2.45l-0.25,-2.69l-1.9,-2.14l-2.15,-0.31l-0.79,0.93l-1.12,0.06l-1.06,-0.4l-2.05,1.22l-0.04,-1.63l0.61,-2.74l-0.36,-0.49l-1.35,-0.1l-0.11,-1.26l-0.97,-0.9l0.33,-0.61l1.63,-1.34l0.39,0.36l1.33,0.07l0.42,-0.45l-0.34,-2.75l0.7,-0.21l1.28,1.86l1.11,2.41l0.36,0.23l2.82,0.02l0.72,1.72l-1.4,0.67l-0.72,0.95l0.13,0.59l2.91,1.54l3.61,5.34l1.88,1.81l0.57,1.65l-0.35,1.99Z',
          name: 'Lao PDR',
        },
        TW: {
          path: 'M724.01,356.0l-0.73,1.52l-0.9,-1.56l-0.26,-1.81l1.38,-2.53l1.73,-1.8l0.64,0.46l-1.86,5.73Z',
          name: 'Taiwan',
        },
        TT: {
          path: 'M266.64,389.17l0.28,-1.17l1.13,-0.22l-0.06,1.21l-1.35,0.18Z',
          name: 'Trinidad and Tobago',
        },
        TR: {
          path: 'M513.19,301.28l3.65,1.31l3.06,-0.48l2.09,0.29l3.13,-1.74l2.44,-0.15l2.19,1.49l0.35,0.95l-0.23,1.5l0.24,0.43l2.34,1.31l-1.23,0.67l-0.2,0.43l0.75,3.55l-0.42,1.23l1.16,2.15l-0.57,0.25l-0.9,-0.73l-2.91,-0.41l-1.25,0.5l-4.23,0.45l-2.81,1.15l-1.9,0.01l-1.54,-0.57l-2.56,0.81l-0.66,-0.49l-0.64,0.29l-0.12,1.59l-0.89,0.9l-0.49,-0.75l0.8,-1.4l-0.41,-0.19l-1.43,0.25l-2.0,-0.69l-2.04,1.79l-3.49,0.32l-2.14,-1.66l-2.7,-0.1l-0.87,1.34l-1.36,0.29l-2.28,-1.56l-2.71,-0.02l-1.37,-2.89l-1.7,-1.68l1.09,-2.23l-0.08,-0.46l-1.31,-1.28l2.41,-2.71l3.68,-0.13l0.36,-0.25l0.94,-2.24l4.48,0.41l3.23,-2.2l2.8,-0.91l3.98,-0.07l4.28,2.31ZM488.78,302.77l-1.7,1.44l-0.51,-0.99l1.37,-2.91l-0.78,-0.93l1.78,-0.74l1.78,0.37l0.45,1.31l1.81,0.89l-0.14,0.26l-2.76,0.17l-1.31,1.13Z',
          name: 'Turkey',
        },
        LK: {
          path: 'M624.16,398.87l-1.82,0.48l-0.99,-1.67l-0.42,-3.47l0.95,-3.45l1.21,0.98l2.26,4.21l-0.34,2.34l-0.85,0.58Z',
          name: 'Sri Lanka',
        },
        LV: {
          path: 'M489.13,238.44l0.98,0.86l0.21,2.15l0.72,2.39l-3.68,2.17l-2.21,-1.98l-1.3,-0.34l-0.27,-0.73l-0.45,-0.25l-2.41,0.44l-4.15,-0.29l-2.48,1.13l0.07,-2.68l1.15,-2.72l1.91,-1.29l2.14,3.3l2.01,-0.09l0.38,-0.35l0.45,-3.34l1.74,-0.68l3.03,2.19l2.16,0.1Z',
          name: 'Latvia',
        },
        LT: {
          path: 'M486.92,246.68l0.19,1.58l-2.02,1.5l-0.54,2.27l-2.48,1.47l-2.05,-0.02l-0.5,-1.08l-1.3,-0.59l-0.07,-2.33l-1.21,-0.74l-2.38,-0.69l-0.45,-3.18l2.51,-1.21l4.09,0.28l2.23,-0.39l0.52,0.88l1.23,0.27l2.22,1.99Z',
          name: 'Lithuania',
        },
        LU: {
          path: 'M436.07,271.5l-0.48,-0.1l0.29,-1.66l0.29,0.51l-0.1,1.25Z',
          name: 'Luxembourg',
        },
        LR: {
          path: 'M399.36,395.85l0.18,1.54l-0.49,1.0l0.08,0.47l2.47,1.8l-0.33,2.81l-2.65,-1.13l-5.78,-4.62l0.58,-1.32l2.1,-2.34l0.86,-0.22l0.77,1.14l-0.14,0.86l0.59,0.87l1.0,0.14l0.76,-0.99Z',
          name: 'Liberia',
        },
        LS: {
          path: 'M491.05,494.85l-0.48,0.15l-1.5,-1.78l1.12,-1.53l2.18,-1.51l1.52,1.34l-0.99,1.94l-1.23,0.4l-0.62,0.98Z',
          name: 'Lesotho',
        },
        TH: {
          path: 'M670.27,385.68l-1.41,3.9l0.15,2.01l0.38,0.36l1.38,0.07l0.9,2.05l0.55,2.34l1.4,1.45l1.61,0.38l0.96,0.97l-0.5,0.64l-1.1,0.2l-0.34,-1.18l-2.04,-1.1l-0.63,0.23l-0.63,-0.62l-0.48,-1.3l-2.55,-2.64l-0.73,0.41l0.95,-3.91l2.16,-4.25ZM670.67,384.59l-0.92,-2.2l-0.26,-2.64l-2.14,-3.1l0.72,-0.5l0.89,-2.62l-2.62,-3.66l-0.99,-1.9l0.88,-0.52l1.05,-2.63l1.74,-0.19l2.59,-1.63l0.76,0.58l0.13,1.42l0.37,0.36l1.23,0.09l-0.52,2.34l0.05,2.46l0.6,0.33l2.43,-1.45l0.77,0.4l1.47,-0.08l0.71,-0.89l1.48,0.14l1.71,1.92l0.25,2.69l1.92,2.15l-0.1,1.92l-0.61,0.87l-2.22,-0.33l-3.5,0.65l-1.6,2.14l0.36,2.6l-1.51,-0.79l-1.85,-0.01l0.28,-1.54l-0.4,-0.47l-2.21,0.02l-0.4,0.37l-0.19,2.77l-0.34,0.94Z',
          name: 'Thailand',
        },
        TF: {
          path: 'M596.66,558.28l-3.18,0.21l-0.05,-1.59l0.4,-1.7l1.28,0.9l2.08,0.42l-0.53,1.76Z',
          name: 'Fr. S. Antarctic Lands',
        },
        TG: {
          path: 'M422.7,387.47l-0.1,1.24l1.53,1.53l0.08,1.1l0.5,0.65l-0.11,5.64l0.49,1.47l-1.31,0.35l-1.02,-2.13l-0.18,-1.13l0.53,-2.2l-0.63,-1.16l-0.22,-3.7l-1.01,-1.41l0.07,-0.29l1.37,0.03Z',
          name: 'Togo',
        },
        TD: {
          path: 'M480.25,365.02l0.12,9.75l-2.1,0.05l-1.14,1.91l-0.69,1.65l0.34,0.73l-0.66,0.92l0.24,0.9l-0.86,1.97l0.45,0.5l0.59,-0.1l0.34,0.65l0.03,1.39l0.9,1.06l-1.45,0.43l-1.27,1.03l-1.83,2.78l-2.16,1.08l-2.31,-0.15l-0.86,0.25l-0.26,0.49l0.17,0.62l-2.11,1.69l-2.85,0.87l-1.09,-0.57l-0.73,0.67l-1.12,0.1l-1.1,-3.13l-1.25,-0.64l-1.22,-1.23l0.3,-0.65l3.01,0.04l0.35,-0.6l-1.3,-2.21l-0.08,-3.33l-0.97,-1.68l0.22,-1.06l-0.38,-0.48l-1.22,-0.04l0.0,-1.27l-0.98,-1.08l0.97,-3.05l3.25,-2.68l0.13,-3.38l0.95,-5.29l0.52,-1.1l-0.1,-0.47l-0.91,-0.8l-0.19,-0.98l-0.8,-0.6l-0.55,-3.77l2.11,-1.24l19.56,10.1Z',
          name: 'Chad',
        },
        LY: {
          path: 'M483.49,331.4l-0.77,1.19l0.3,1.46l-0.6,1.92l0.73,2.26l0.0,25.02l-2.48,0.01l-0.41,0.87l-19.41,-10.02l-4.41,2.35l-1.37,-1.37l-3.82,-1.13l-1.14,-1.71l-1.98,-1.28l-1.22,0.33l-0.67,-1.15l-0.16,-1.3l-1.29,-1.77l0.88,-1.24l-0.07,-4.54l0.43,-2.38l-0.86,-3.65l1.13,-0.8l0.22,-1.23l-0.21,-1.1l3.49,-2.78l0.28,-2.06l2.44,0.85l1.18,-0.22l1.97,0.47l3.14,1.26l1.37,2.7l5.71,1.77l2.64,1.43l1.62,-0.76l1.29,-1.41l-0.45,-2.46l0.67,-1.22l1.67,-1.29l1.56,-0.37l3.13,0.56l1.09,1.36l3.98,0.83l0.38,0.6Z',
          name: 'Libya',
        },
        AE: {
          path: 'M550.76,353.19l1.89,-0.42l3.84,0.02l4.77,-4.92l0.19,0.38l0.26,1.67l-0.82,0.01l-0.39,0.35l-0.08,2.12l-0.82,0.64l-0.01,1.0l-0.67,1.03l-0.39,1.45l-7.07,-1.29l-0.71,-2.04Z',
          name: 'United Arab Emirates',
        },
        VE: {
          path: 'M240.68,386.52l0.53,0.75l-0.02,1.07l-1.07,1.78l0.95,2.01l0.42,0.23l1.4,-0.44l0.56,-1.84l-0.77,-1.17l-0.1,-1.49l2.83,-0.94l0.26,-0.49l-0.28,-0.97l0.3,-0.28l0.66,1.32l1.96,0.26l1.4,1.23l0.08,0.69l0.39,0.35l4.81,-0.23l1.49,1.12l1.92,0.31l1.67,-0.84l0.22,-0.61l3.44,-0.14l-0.18,0.56l0.86,1.2l2.19,0.35l1.68,1.1l0.37,1.87l0.41,0.32l1.56,0.17l-1.66,1.36l-0.22,0.92l0.66,0.98l-1.67,0.54l-0.3,0.4l0.04,0.99l-0.56,0.57l-0.01,0.55l1.85,2.27l-0.66,0.69l-4.47,1.29l-0.72,0.54l-3.69,-0.9l-0.71,0.27l-0.02,0.7l0.91,0.53l-0.08,1.55l0.35,1.58l0.35,0.31l1.66,0.17l-1.3,0.52l-0.48,1.13l-2.68,0.91l-0.6,0.77l-1.57,0.13l-1.17,-1.13l-0.8,-2.52l-1.25,-1.26l1.02,-1.23l-1.29,-2.95l0.18,-1.62l1.0,-2.21l-0.2,-0.49l-1.14,-0.47l-4.02,0.36l-1.82,-2.11l-1.57,-0.33l-2.99,0.23l-1.06,-0.98l0.25,-1.24l-0.2,-1.02l-0.59,-0.69l-0.29,-1.06l-1.08,-0.39l0.78,-2.81l1.9,-2.12Z',
          name: 'Venezuela',
        },
        AF: {
          path: 'M600.86,316.06l-1.73,1.47l0.72,3.0l-1.1,1.13l-0.02,1.35l-0.49,0.78l-2.15,-0.09l-0.37,0.58l0.8,1.63l-1.4,0.74l-1.06,1.8l0.07,1.81l-0.66,0.56l-0.91,-0.22l-1.91,0.38l-0.48,0.81l-1.88,0.14l-1.49,1.9l-0.08,2.2l-2.91,1.07l-1.64,-0.24l-0.72,0.58l-1.41,-0.31l-2.4,0.41l-3.54,-1.24l1.98,-2.49l-0.21,-1.88l-0.3,-0.34l-1.63,-0.42l-0.19,-1.69l-0.76,-2.19l0.96,-1.48l-0.18,-0.59l-0.75,-0.31l1.48,-5.22l2.12,0.97l2.14,-0.38l0.74,-1.45l1.77,-0.42l1.54,-1.0l0.62,-2.51l1.88,-0.54l0.48,-0.87l0.93,0.61l2.13,0.12l2.55,1.01l1.96,-0.89l0.64,0.46l0.58,-0.13l0.69,-1.23l1.58,-0.09l0.47,-0.64l0.24,-1.17l0.79,-0.81l0.81,0.43l-0.19,0.66l0.71,0.58l-0.09,2.61l1.28,1.05ZM601.25,315.96l1.86,-0.88l1.42,-1.28l3.93,0.22l0.11,0.23l-2.26,0.81l-5.06,0.9Z',
          name: 'Afghanistan',
        },
        IQ: {
          path: 'M530.81,314.51l0.79,0.72l1.26,-0.3l1.46,3.35l1.63,1.01l0.15,1.38l-1.23,1.13l-0.53,2.67l1.73,2.85l3.12,1.72l1.16,2.02l-0.38,1.98l0.39,0.48l0.41,-0.0l0.02,1.16l0.79,1.02l-2.51,-0.11l-1.71,2.58l-4.3,-0.21l-7.02,-5.78l-3.73,-2.06l-2.89,-0.78l-0.86,-3.1l5.46,-3.23l0.95,-3.7l-0.2,-2.14l1.28,-0.77l1.22,-1.86l0.86,-0.39l2.67,0.37Z',
          name: 'Iraq',
        },
        IS: {
          path: 'M384.17,190.14l-0.45,3.88l2.67,3.88l-3.04,4.17l-9.15,4.83l-9.47,-2.42l1.99,-2.05l-0.1,-0.63l-4.53,-2.38l3.43,-0.89l0.3,-0.41l-0.11,-1.75l-0.3,-0.36l-4.81,-1.29l1.43,-3.39l3.37,-0.82l3.74,4.02l0.56,0.03l3.59,-3.17l2.9,1.61l0.45,-0.04l3.95,-3.21l3.58,0.38Z',
          name: 'Iceland',
        },
        IR: {
          path: 'M533.43,314.24l-1.29,-2.38l0.43,-1.06l-0.72,-3.4l1.03,-0.56l0.32,0.9l1.26,1.49l2.06,0.57l1.12,-0.18l2.89,-2.33l0.6,-0.15l0.42,0.54l-0.74,1.37l0.06,0.46l1.56,1.68l0.66,0.05l0.67,1.99l2.55,0.89l1.88,1.61l3.7,0.53l3.91,-0.83l0.47,-0.8l2.17,-0.66l1.65,-1.68l1.49,0.08l1.19,-0.57l1.57,0.26l2.84,1.62l1.88,0.32l2.77,2.69l1.78,0.2l0.18,2.19l-1.69,5.93l0.23,0.49l0.64,0.26l-0.85,1.58l0.81,2.33l0.19,1.83l0.3,0.35l1.63,0.43l0.16,1.43l-2.16,2.5l-0.01,0.51l2.21,3.19l2.35,1.3l0.06,2.26l1.24,0.74l0.12,0.75l-3.31,1.33l-1.08,3.14l-9.68,-1.74l-0.99,-3.18l-1.43,-0.75l-2.18,0.48l-2.47,1.31l-2.82,-0.86l-2.46,-2.11l-2.41,-0.84l-3.42,-6.37l-0.49,-0.2l-1.17,0.41l-1.43,-0.86l-0.51,0.09l-0.64,0.77l-0.97,-1.07l-0.02,-1.4l-0.71,-0.39l0.27,-1.92l-1.29,-2.25l-3.13,-1.73l-1.59,-2.62l0.51,-2.08l1.3,-1.32l-0.19,-1.79l-1.73,-1.17l-1.57,-3.6Z',
          name: 'Iran',
        },
        AM: {
          path: 'M537.0,308.96l-0.27,0.03l-1.24,-2.34l-0.92,0.01l-0.62,-0.73l-0.69,-0.08l-0.96,-0.89l-1.58,-0.69l0.2,-1.3l-0.28,-0.9l2.73,-0.41l1.13,1.15l-0.21,1.0l1.06,0.9l-0.5,0.74l0.08,0.53l2.05,1.37l0.04,1.62Z',
          name: 'Armenia',
        },
        AL: {
          path: 'M470.32,297.19l0.73,0.03l0.93,0.99l0.13,0.95l-0.3,1.27l0.36,1.43l1.02,0.9l-1.82,3.2l-0.18,-0.65l-1.26,-1.0l-0.19,-1.36l0.53,-3.17l-0.55,-1.64l0.61,-0.94Z',
          name: 'Albania',
        },
        AO: {
          path: 'M461.55,429.93l1.26,3.16l1.94,2.36l2.47,-0.54l1.25,0.32l0.44,-0.18l0.93,-1.92l1.31,-0.08l0.41,-0.44l0.47,-0.0l-0.1,0.41l0.39,0.49l2.65,-0.02l0.03,1.2l0.48,1.02l-0.34,1.52l0.18,1.56l0.83,1.04l-0.13,2.87l0.54,0.39l3.96,-0.41l-0.1,1.81l0.39,1.06l-0.24,1.45l-4.7,-0.03l-0.4,0.39l-0.12,8.23l2.93,3.55l-3.84,0.9l-5.89,-0.36l-1.88,-1.27l-10.47,0.23l-1.3,-1.03l-1.85,-0.16l-2.4,0.78l-0.15,-1.08l0.33,-2.2l1.0,-3.5l1.35,-3.24l2.24,-2.82l0.33,-2.07l-0.13,-1.54l-0.8,-1.08l-1.21,-2.88l0.87,-1.62l-1.27,-4.13l-1.17,-1.53l2.47,-0.63l7.03,0.03ZM451.71,428.77l-0.47,-1.26l1.25,-1.11l0.32,0.3l-0.99,1.03l-0.12,1.04Z',
          name: 'Angola',
        },
        AR: {
          path: 'M258.05,471.85l1.38,1.83l0.68,-0.08l0.87,-1.93l2.39,0.09l4.94,4.92l2.17,0.51l2.99,1.99l2.47,1.04l0.26,0.88l-2.38,4.1l0.23,0.58l5.39,1.21l2.13,-0.46l2.46,-2.25l0.49,-2.47l0.76,-0.32l0.98,1.25l-0.04,1.9l-3.67,2.62l-2.85,2.79l-3.42,4.08l-1.3,5.37l0.01,2.9l-0.54,0.77l-0.36,3.52l3.15,2.82l-0.31,1.9l1.54,1.59l-0.1,1.23l-2.3,3.86l-3.55,1.64l-4.91,0.65l-2.7,-0.32l-0.43,0.5l0.5,1.83l-0.49,2.34l0.4,1.59l-1.21,0.94l-2.34,0.42l-2.29,-1.15l-1.41,0.93l0.41,3.97l1.69,1.02l1.41,-0.77l0.39,0.92l-2.08,0.99l-2.01,2.14l-0.47,3.69l-0.49,1.57l-2.34,0.12l-2.08,2.01l-0.63,3.07l2.46,2.67l2.21,0.74l-0.73,2.83l-2.84,2.04l-1.73,4.57l-2.18,1.47l-1.15,1.98l0.77,4.43l1.16,1.7l-2.44,-0.66l-5.82,-0.52l-0.91,-2.06l0.05,-2.9l-0.46,-0.4l-1.41,0.21l-0.69,-1.12l-0.2,-3.82l1.89,-1.73l0.79,-2.4l-0.26,-1.97l1.31,-3.13l0.91,-4.79l-0.23,-1.96l1.06,-0.95l-0.27,-1.32l-1.01,-0.76l0.63,-1.12l-0.05,-0.46l-1.05,-1.22l-0.53,-3.58l0.97,-0.92l-0.42,-4.02l1.21,-6.04l1.53,-1.49l-0.75,-3.06l-0.01,-2.68l1.79,-1.91l0.05,-2.76l1.43,-3.06l0.01,-2.77l-0.69,-0.77l-1.09,-4.84l1.48,-2.87l-0.19,-2.93l0.85,-2.48l1.59,-2.58l1.73,-1.72l0.05,-0.51l-0.61,-0.89l0.45,-0.89l-0.07,-4.37l2.71,-1.48l0.86,-2.84l-0.22,-0.73l1.77,-2.07l2.9,0.58ZM256.68,580.89l-1.95,0.18l-1.42,-1.53l-3.82,-0.12l-0.0,-7.37l1.57,3.7l3.26,2.57l3.18,1.01l-0.81,1.56Z',
          name: 'Argentina',
        },
        AU: {
          path: 'M705.79,484.09l0.27,0.04l0.18,-0.47l-0.49,-1.51l0.92,1.16l0.45,0.15l0.28,-0.39l-0.09,-1.61l-1.99,-3.77l1.09,-3.43l-0.24,-1.62l0.34,-0.64l0.38,1.08l0.43,-0.19l0.99,-1.75l1.91,-0.85l1.29,-1.18l1.81,-0.93l0.95,-0.17l0.93,0.27l1.92,-0.97l1.46,-0.29l1.03,-0.82l1.44,0.04l2.78,-0.86l1.36,-1.18l0.71,-1.48l1.41,-1.28l0.3,-2.63l1.27,-1.61l0.78,1.67l0.54,0.19l1.07,-0.52l0.15,-0.59l-0.73,-1.02l0.45,-0.73l0.78,0.4l0.58,-0.3l0.28,-1.84l1.87,-2.17l1.12,-0.39l0.28,-0.58l0.62,0.17l0.5,-0.36l0.03,-0.38l1.87,-0.58l1.65,1.06l1.35,1.49l3.4,0.39l0.44,-0.54l-0.46,-1.24l1.05,-1.82l1.04,-0.62l0.14,-0.55l-0.25,-0.41l0.88,-1.19l1.31,-0.78l1.31,0.27l2.1,-0.48l0.31,-0.4l-0.05,-1.31l-0.92,-0.78l1.48,0.56l1.41,1.08l2.11,0.65l0.81,-0.21l1.4,0.71l1.69,-0.67l0.8,0.19l0.64,-0.33l0.71,0.78l-1.33,1.96l-0.71,0.07l-0.35,0.51l0.24,0.87l-1.52,2.38l0.12,1.06l2.15,1.66l1.97,0.86l3.04,2.4l1.97,0.66l0.54,0.89l2.72,0.87l1.84,-1.12l2.07,-6.05l-0.43,-3.63l0.3,-1.75l0.47,-0.87l-0.32,-0.69l1.09,-3.31l0.46,-0.47l0.4,0.71l0.17,1.52l0.65,0.53l0.15,1.04l0.85,1.22l0.12,2.41l0.9,2.03l0.57,0.18l1.3,-0.79l1.69,1.73l-0.2,1.09l0.53,2.23l0.39,1.32l0.68,0.49l0.6,1.99l-0.2,1.51l0.81,1.79l2.87,1.56l3.14,2.21l-0.12,0.78l1.38,1.62l0.95,2.84l0.58,0.22l0.71,-0.42l0.8,0.92l0.61,0.01l0.46,2.48l4.82,4.87l0.66,2.1l-0.07,3.44l1.15,2.31l-0.13,2.37l-1.1,3.88l0.04,1.73l-0.48,2.02l-1.05,2.56l-1.9,1.57l-1.73,3.77l-2.38,6.57l-0.24,3.08l-1.15,0.88l-2.86,0.16l-2.31,1.3l-2.5,2.46l-1.81,-1.24l-1.29,-0.49l0.31,-1.32l-0.55,-0.46l-1.5,0.69l-2.01,2.12l-7.1,-2.39l-1.49,-1.79l-1.13,-4.06l-1.45,-1.37l-1.84,-0.28l0.58,-1.28l-0.61,-2.26l-0.73,-0.1l-1.14,1.96l-0.94,0.24l0.6,-0.77l0.44,-1.84l0.99,-1.67l-0.2,-2.22l-0.28,-0.35l-0.43,0.13l-2.0,2.51l-1.51,1.0l-0.93,2.15l-1.35,-0.87l-0.01,-1.63l-1.57,-2.18l-1.11,-0.96l0.27,-0.39l-0.13,-0.58l-3.21,-1.8l-1.84,-0.13l-2.55,-1.44l-4.58,0.3l-6.02,2.02l-2.54,-0.14l-2.62,1.5l-2.13,0.67l-1.49,2.78l-3.48,0.33l-2.3,-0.54l-3.48,0.46l-1.6,1.58l-0.81,-0.03l-2.36,1.75l-3.24,-0.11l-3.72,-2.38l0.04,-1.18l1.19,-0.49l0.48,-0.93l0.21,-3.17l-0.28,-1.75l-1.34,-3.02l-0.39,-1.56l0.06,-1.8l-0.96,-1.79l-0.17,-1.0l-1.02,-1.04l-0.29,-2.09l-1.15,-1.85ZM784.91,527.24l2.67,1.14l3.23,-1.06l1.08,0.16l0.16,3.5l-0.85,1.25l-0.18,1.86l-0.27,-0.29l-0.62,0.04l-1.56,2.15l-1.66,-0.2l-1.41,-2.68l-0.37,-2.29l-1.4,-2.82l0.04,-0.96l1.14,0.2Z',
          name: 'Australia',
        },
        AT: {
          path: 'M462.92,275.34l0.01,2.75l-1.06,0.01l-0.34,0.61l0.39,0.64l-1.07,2.55l-2.0,0.08l-1.34,0.81l-5.27,-1.14l-0.48,-1.1l-0.47,-0.23l-2.47,0.64l-0.42,0.58l-2.45,-0.51l-0.75,-0.44l0.44,-1.16l1.11,0.9l0.63,-0.17l0.25,-0.69l1.91,0.14l1.87,-0.66l0.97,0.09l0.68,0.66l0.65,-0.15l0.25,-0.83l-0.31,-2.16l0.82,-0.52l0.68,-1.35l1.49,0.98l0.52,-0.07l1.34,-1.47l0.61,-0.2l1.79,1.07l1.3,-0.12l0.74,0.46Z',
          name: 'Austria',
        },
        IN: {
          path: 'M623.36,335.51l-1.27,1.12l-0.97,2.68l0.21,0.5l8.04,4.05l3.43,0.39l1.57,1.44l4.92,0.91l2.18,-0.04l0.38,-0.3l0.29,-1.28l-0.32,-1.72l0.15,-0.92l0.82,-0.32l0.44,2.59l2.28,1.07l1.78,-0.4l4.14,0.1l0.38,-0.36l0.18,-1.73l-0.53,-0.69l1.4,-0.31l2.25,-2.09l2.69,-1.7l1.92,0.64l1.8,-1.03l0.8,1.22l-0.69,0.98l0.26,0.63l2.42,0.38l0.09,0.52l-0.83,0.77l0.13,1.14l-1.53,-0.3l-3.24,1.94l-0.12,1.84l-1.32,2.23l-0.17,1.44l-0.93,1.89l-1.63,-0.52l-0.52,0.37l-0.09,2.72l-0.56,1.13l0.2,0.85l-0.53,0.28l-1.18,-3.85l-1.08,-0.27l-0.38,0.31l-0.24,1.03l-0.66,-0.68l0.55,-1.12l1.21,-0.35l1.15,-2.33l-0.23,-0.56l-1.58,-0.49l-4.33,-0.29l-0.19,-1.63l-0.35,-0.35l-1.11,-0.13l-1.91,-1.16l-0.57,0.17l-0.88,1.89l0.11,0.48l1.38,1.12l-1.11,0.73l-0.69,1.14l0.18,0.55l1.24,0.59l-0.32,1.59l0.85,2.01l0.36,2.08l-0.22,0.62l-4.58,0.54l-0.33,0.42l0.13,1.86l-1.18,1.39l-3.65,1.85l-2.79,3.1l-4.32,3.33l-0.18,1.29l-4.65,1.82l-0.77,2.19l0.64,5.37l-1.06,2.51l-0.01,3.97l-1.24,0.28l-1.14,1.94l0.39,0.85l-1.69,0.53l-1.04,1.84l-0.65,0.47l-2.06,-2.06l-2.1,-6.05l-2.2,-3.67l-1.05,-4.8l-2.29,-3.61l-1.76,-8.34l0.01,-3.18l-0.49,-2.59l-0.55,-0.29l-3.53,1.56l-1.52,-0.28l-2.87,-2.86l0.86,-0.7l0.08,-0.54l-0.74,-1.06l-2.68,-2.13l1.26,-1.38l5.33,0.01l0.39,-0.48l-0.5,-2.37l-1.42,-1.51l-0.27,-2.01l-1.44,-1.26l2.33,-2.5l3.05,0.07l2.62,-2.99l1.6,-2.96l2.4,-2.88l0.06,-2.16l1.98,-1.58l-0.01,-0.64l-1.93,-1.4l-0.82,-1.91l-0.81,-2.4l0.91,-0.97l3.58,0.7l2.93,-0.45l2.32,-2.35l2.31,3.07l-0.24,2.31l0.99,1.68l-0.05,0.92l-1.34,-0.3l-0.48,0.47l0.7,3.26l2.61,2.09l3.02,1.77Z',
          name: 'India',
        },
        TZ: {
          path: 'M495.56,426.32l2.8,-3.13l-0.02,-0.82l-0.64,-1.3l0.68,-0.52l0.14,-1.47l-0.76,-1.25l0.31,-0.11l2.26,0.03l-0.51,2.76l0.76,1.3l0.5,0.12l1.05,-0.53l1.19,-0.12l0.61,0.24l1.43,-0.62l0.1,-0.67l-0.71,-0.62l1.57,-1.7l8.65,4.86l0.32,1.53l3.34,2.33l-1.05,2.81l0.13,1.61l1.63,1.12l-0.6,1.77l-0.01,2.33l1.89,4.05l0.57,0.44l-1.47,1.09l-2.61,0.95l-1.43,-0.04l-1.06,0.77l-2.29,0.36l-2.87,-0.69l-0.83,0.07l-0.64,-0.75l-0.31,-2.8l-1.32,-1.36l-3.25,-0.77l-3.96,-1.59l-1.18,-2.42l-0.32,-1.75l-1.76,-1.49l0.42,-1.05l-0.44,-0.89l0.08,-0.96l-0.46,-0.58l0.06,-0.56Z',
          name: 'Tanzania',
        },
        AZ: {
          path: 'M539.27,301.57l1.33,0.36l0.44,-0.21l0.4,-0.78l1.11,-1.01l2.3,3.71l1.5,0.55l-1.32,0.17l-0.34,0.33l-0.81,3.49l-0.98,1.01l0.05,1.26l-1.28,-1.27l0.73,-1.34l-0.78,-1.39l-1.51,0.17l-2.32,1.87l-0.04,-1.43l-2.05,-1.48l0.5,-0.74l-0.07,-0.53l-1.07,-0.91l0.33,-0.54l-0.14,-0.55l-1.17,-1.02l1.91,0.73l1.71,0.07l0.37,-0.88l-1.01,-1.48l0.2,-0.14l0.4,0.06l1.63,1.92ZM533.76,306.94l0.63,0.52l0.69,-0.0l0.63,1.35l-0.71,-0.18l-1.25,-1.69Z',
          name: 'Azerbaijan',
        },
        IE: {
          path: 'M405.07,254.34l0.37,2.67l-1.78,3.47l-4.21,2.28l-2.89,-0.5l1.83,-4.09l-1.24,-4.04l4.62,-4.68l0.33,1.5l-0.5,2.21l0.41,0.49l1.45,-0.06l1.61,0.75Z',
          name: 'Ireland',
        },
        ID: {
          path: 'M756.47,417.79l0.69,4.01l2.79,1.78l0.51,-0.1l2.04,-2.59l2.71,-1.43l2.05,-0.0l3.9,1.73l2.46,0.45l0.08,15.16l-1.75,-1.55l-2.54,-0.51l-0.88,0.72l-2.32,0.06l0.69,-1.33l1.45,-0.64l0.23,-0.46l-0.65,-2.74l-1.24,-2.22l-5.04,-2.3l-2.09,-0.23l-3.68,-2.27l-0.55,0.13l-0.65,1.07l-0.52,0.12l-0.55,-1.89l-1.21,-0.78l1.84,-0.62l1.72,0.05l0.39,-0.52l-0.21,-0.66l-0.38,-0.28l-3.45,-0.0l-1.13,-1.48l-2.1,-0.43l-0.52,-0.61l2.69,-0.48l1.28,-0.78l3.66,0.94l0.3,0.71ZM757.91,430.25l-0.62,0.82l-0.1,-0.8l0.59,-1.12l0.13,1.1ZM747.38,422.88l0.34,0.72l-1.22,-0.57l-4.68,-0.1l0.27,-0.62l2.78,-0.09l2.52,0.67ZM741.05,415.14l-0.67,-2.88l0.64,-2.01l0.41,0.86l1.21,0.18l0.16,0.7l-0.1,1.68l-0.84,-0.16l-0.46,0.3l-0.34,1.34ZM739.05,423.4l-0.5,0.45l-1.34,-0.36l-0.17,-0.37l1.73,-0.08l0.27,0.36ZM721.45,414.41l-0.19,1.97l2.24,2.23l0.54,0.02l1.27,-1.07l2.75,-0.5l-0.9,1.21l-2.11,0.93l-0.16,0.6l2.22,3.01l-0.3,1.07l1.36,1.75l-2.26,0.85l-0.28,-0.31l0.12,-1.19l-1.64,-1.34l0.17,-2.24l-0.56,-0.39l-1.67,0.76l-0.23,0.39l0.3,6.18l-1.1,0.25l-0.69,-0.47l0.64,-2.21l-0.39,-2.42l-0.39,-0.34l-0.8,-0.01l-0.58,-1.29l0.98,-1.6l0.35,-1.96l1.32,-3.87ZM728.59,426.17l0.38,0.5l-0.02,1.28l-0.88,0.49l-0.53,-0.48l1.04,-1.79ZM729.04,416.88l0.27,-0.05l-0.02,0.13l-0.24,-0.08ZM721.68,413.95l0.16,-0.32l1.89,-1.65l1.83,0.68l3.16,0.35l2.94,-0.1l2.39,-1.66l-1.73,2.13l-1.66,0.43l-2.41,-0.48l-4.17,0.13l-2.39,0.51ZM730.55,440.42l1.11,-1.94l2.02,-0.82l0.08,0.62l-1.45,1.68l-1.77,0.46ZM728.12,435.8l-0.1,0.38l-3.46,0.66l-2.91,-0.27l-0.0,-0.25l1.54,-0.41l1.66,0.73l1.67,-0.19l1.61,-0.65ZM722.9,440.18l-0.64,0.03l-2.26,-1.21l1.12,-0.24l1.78,1.42ZM716.26,435.69l0.88,0.51l1.28,-0.17l0.2,0.35l-4.65,0.73l0.4,-0.67l1.15,-0.02l0.75,-0.74ZM711.66,423.74l-0.38,-0.16l-2.54,1.01l-1.12,-1.44l-1.69,-0.13l-1.16,-0.75l-3.04,0.77l-1.1,-1.15l-3.31,-0.11l-0.35,-3.05l-1.35,-0.95l-1.11,-1.98l-0.33,-2.06l0.27,-2.14l0.9,-1.01l0.37,1.15l2.09,1.49l1.53,-0.48l1.82,0.08l1.38,-1.19l1.0,-0.18l2.28,0.67l2.26,-0.53l1.52,-3.64l1.01,-0.99l0.78,-2.57l4.1,0.31l-1.11,1.77l0.02,0.46l1.7,2.2l-0.23,1.39l2.07,1.71l-2.33,0.42l-0.88,1.9l0.1,2.05l-2.4,1.9l-0.06,2.45l-0.7,2.79ZM692.58,431.94l0.35,0.26l4.8,0.25l0.78,-0.97l4.17,1.09l1.13,1.69l3.69,0.45l2.14,1.05l-1.8,0.61l-2.77,-1.0l-4.8,-0.12l-5.24,-1.42l-1.84,-0.25l-1.11,0.3l-4.26,-0.97l-0.7,-1.14l-1.59,-0.13l1.18,-1.66l2.74,0.13l2.87,1.13l0.26,0.69ZM685.53,429.08l-2.22,0.04l-2.06,-2.04l-3.15,-2.01l-2.93,-3.52l-3.11,-5.33l-2.2,-2.12l-1.64,-4.06l-2.32,-1.69l-1.27,-2.07l-1.96,-1.5l-2.51,-2.65l-0.11,-0.66l4.81,0.53l2.15,2.38l3.31,2.74l2.35,2.66l2.7,0.17l1.95,1.59l1.54,2.17l1.59,0.95l-0.84,1.71l0.15,0.52l1.44,0.87l0.79,0.1l0.4,1.58l0.87,1.4l1.96,0.39l1.0,1.31l-0.6,3.01l-0.09,3.51Z',
          name: 'Indonesia',
        },
        UA: {
          path: 'M493.77,283.66l1.85,0.21l0.66,-0.27l0.1,-0.68l-0.25,-0.87l-0.8,-0.85l-0.34,-1.43l-0.87,-0.71l0.01,-1.37l-1.13,-1.01l-1.16,-0.23l-2.07,-1.18l-1.66,0.37l-0.67,0.55l-0.9,-0.0l-0.86,0.91l-1.69,0.33l-0.76,0.47l-1.18,-0.82l-3.05,-0.42l-0.9,0.48l-0.22,-0.62l-1.16,-0.85l0.86,-1.88l0.25,0.1l0.53,-0.51l-0.57,-1.53l2.08,-2.96l1.38,-0.69l0.26,-1.34l-1.09,-3.02l0.9,-0.18l1.27,-1.02l1.78,-0.08l2.45,0.31l2.87,0.98l1.87,0.08l0.85,0.53l1.06,-0.47l0.78,0.77l2.17,-0.18l0.91,0.35l0.54,-0.34l0.15,-1.9l0.58,-0.67l2.82,-0.06l0.87,-0.86l3.0,-0.22l1.29,1.86l-0.53,0.89l0.21,1.25l0.36,0.33l1.78,0.17l0.93,2.49l3.18,1.38l1.95,-0.52l1.69,1.77l1.39,-0.04l3.36,1.15l0.02,0.75l-0.97,1.91l0.49,2.26l-0.28,0.89l-2.37,0.33l-1.29,1.04l-0.21,1.6l-1.85,0.32l-1.58,1.12l-2.41,0.24l-2.16,1.36l-0.19,0.36l0.32,2.54l1.49,0.93l1.92,-0.16l-0.18,0.47l-2.65,0.61l-3.21,1.92l-0.89,-0.46l0.44,-1.33l-0.24,-0.5l-2.27,-0.86l2.41,-1.32l0.12,-0.62l-0.93,-0.95l-3.62,-0.85l-0.14,-1.08l-0.47,-0.34l-2.32,0.45l-2.91,4.52l-1.19,-0.45l-0.98,0.48l-0.36,-0.21l1.35,-2.93Z',
          name: 'Ukraine',
        },
        QA: {
          path: 'M549.32,350.8l-0.76,-0.24l-0.14,-1.72l0.84,-1.35l0.47,0.54l0.04,1.41l-0.45,1.36Z',
          name: 'Qatar',
        },
        MZ: {
          path: 'M508.58,448.77l-0.34,-2.6l0.51,-2.07l3.55,0.64l2.51,-0.38l1.02,-0.76l1.49,0.01l2.74,-0.99l1.66,-1.21l0.51,9.32l0.41,1.25l-0.68,1.69l-0.93,1.74l-1.5,1.52l-5.16,2.32l-2.78,2.78l-1.02,0.54l-1.71,1.84l-0.98,0.59l-0.35,2.45l1.16,1.99l0.49,2.24l0.43,0.31l-0.06,2.14l-0.39,1.21l0.5,0.73l-0.25,0.78l-0.92,0.86l-5.13,2.47l-1.22,1.39l0.21,1.17l0.59,0.4l-0.11,0.78l-1.22,-0.02l-0.73,-3.1l0.42,-3.19l-1.78,-5.56l2.49,-2.89l0.69,-1.93l0.44,-0.43l0.28,-1.57l-0.39,-0.94l0.59,-3.72l-0.01,-3.32l-1.48,-1.17l-1.2,-0.23l-1.74,-1.18l-1.92,0.0l-0.3,-2.12l7.06,-1.98l1.28,1.1l0.89,-0.1l0.67,0.45l0.1,0.75l-0.51,1.3l0.19,1.83l1.75,1.86l0.65,-0.13l0.71,-1.68l1.17,-0.86l-0.26,-3.51l-1.05,-1.87l-1.04,-0.95Z',
          name: 'Mozambique',
        },
      },
      height: 583.0802520919394,
      projection: { type: 'merc', centralMeridian: 11.5 },
      width: 900.0,
    })

    !(function () {
      'use strict'
      function o() {
        var o = window,
          t = document
        if (
          !(
            'scrollBehavior' in t.documentElement.style &&
            !0 !== o.__forceSmoothScrollPolyfill__
          )
        ) {
          var l,
            e = o.HTMLElement || o.Element,
            r = 468,
            i = {
              scroll: o.scroll || o.scrollTo,
              scrollBy: o.scrollBy,
              elementScroll: e.prototype.scroll || n,
              scrollIntoView: e.prototype.scrollIntoView,
            },
            s =
              o.performance && o.performance.now
                ? o.performance.now.bind(o.performance)
                : Date.now,
            c =
              ((l = o.navigator.userAgent),
              new RegExp(['MSIE ', 'Trident/', 'Edge/'].join('|')).test(l)
                ? 1
                : 0)
          ;(o.scroll = o.scrollTo =
            function () {
              void 0 !== arguments[0] &&
                (!0 !== f(arguments[0])
                  ? h.call(
                      o,
                      t.body,
                      void 0 !== arguments[0].left
                        ? ~~arguments[0].left
                        : o.scrollX || o.pageXOffset,
                      void 0 !== arguments[0].top
                        ? ~~arguments[0].top
                        : o.scrollY || o.pageYOffset
                    )
                  : i.scroll.call(
                      o,
                      void 0 !== arguments[0].left
                        ? arguments[0].left
                        : 'object' != typeof arguments[0]
                        ? arguments[0]
                        : o.scrollX || o.pageXOffset,
                      void 0 !== arguments[0].top
                        ? arguments[0].top
                        : void 0 !== arguments[1]
                        ? arguments[1]
                        : o.scrollY || o.pageYOffset
                    ))
            }),
            (o.scrollBy = function () {
              void 0 !== arguments[0] &&
                (f(arguments[0])
                  ? i.scrollBy.call(
                      o,
                      void 0 !== arguments[0].left
                        ? arguments[0].left
                        : 'object' != typeof arguments[0]
                        ? arguments[0]
                        : 0,
                      void 0 !== arguments[0].top
                        ? arguments[0].top
                        : void 0 !== arguments[1]
                        ? arguments[1]
                        : 0
                    )
                  : h.call(
                      o,
                      t.body,
                      ~~arguments[0].left + (o.scrollX || o.pageXOffset),
                      ~~arguments[0].top + (o.scrollY || o.pageYOffset)
                    ))
            }),
            (e.prototype.scroll = e.prototype.scrollTo =
              function () {
                if (void 0 !== arguments[0])
                  if (!0 !== f(arguments[0])) {
                    var o = arguments[0].left,
                      t = arguments[0].top
                    h.call(
                      this,
                      this,
                      void 0 === o ? this.scrollLeft : ~~o,
                      void 0 === t ? this.scrollTop : ~~t
                    )
                  } else {
                    if (
                      'number' == typeof arguments[0] &&
                      void 0 === arguments[1]
                    )
                      throw new SyntaxError('Value could not be converted')
                    i.elementScroll.call(
                      this,
                      void 0 !== arguments[0].left
                        ? ~~arguments[0].left
                        : 'object' != typeof arguments[0]
                        ? ~~arguments[0]
                        : this.scrollLeft,
                      void 0 !== arguments[0].top
                        ? ~~arguments[0].top
                        : void 0 !== arguments[1]
                        ? ~~arguments[1]
                        : this.scrollTop
                    )
                  }
              }),
            (e.prototype.scrollBy = function () {
              void 0 !== arguments[0] &&
                (!0 !== f(arguments[0])
                  ? this.scroll({
                      left: ~~arguments[0].left + this.scrollLeft,
                      top: ~~arguments[0].top + this.scrollTop,
                      behavior: arguments[0].behavior,
                    })
                  : i.elementScroll.call(
                      this,
                      void 0 !== arguments[0].left
                        ? ~~arguments[0].left + this.scrollLeft
                        : ~~arguments[0] + this.scrollLeft,
                      void 0 !== arguments[0].top
                        ? ~~arguments[0].top + this.scrollTop
                        : ~~arguments[1] + this.scrollTop
                    ))
            }),
            (e.prototype.scrollIntoView = function () {
              if (!0 !== f(arguments[0])) {
                var l = (function (o) {
                    for (
                      ;
                      o !== t.body &&
                      !1 ===
                        ((e = p((l = o), 'Y') && a(l, 'Y')),
                        (r = p(l, 'X') && a(l, 'X')),
                        e || r);

                    )
                      o = o.parentNode || o.host
                    var l, e, r
                    return o
                  })(this),
                  e = l.getBoundingClientRect(),
                  r = this.getBoundingClientRect()
                l !== t.body
                  ? (h.call(
                      this,
                      l,
                      l.scrollLeft + r.left - e.left,
                      l.scrollTop + r.top - e.top
                    ),
                    'fixed' !== o.getComputedStyle(l).position &&
                      o.scrollBy({
                        left: e.left,
                        top: e.top,
                        behavior: 'smooth',
                      }))
                  : o.scrollBy({
                      left: r.left,
                      top: r.top,
                      behavior: 'smooth',
                    })
              } else
                i.scrollIntoView.call(
                  this,
                  void 0 === arguments[0] || arguments[0]
                )
            })
        }
        function n(o, t) {
          ;(this.scrollLeft = o), (this.scrollTop = t)
        }
        function f(o) {
          if (
            null === o ||
            'object' != typeof o ||
            void 0 === o.behavior ||
            'auto' === o.behavior ||
            'instant' === o.behavior
          )
            return !0
          if ('object' == typeof o && 'smooth' === o.behavior) return !1
          throw new TypeError(
            'behavior member of ScrollOptions ' +
              o.behavior +
              ' is not a valid value for enumeration ScrollBehavior.'
          )
        }
        function p(o, t) {
          return 'Y' === t
            ? o.clientHeight + c < o.scrollHeight
            : 'X' === t
            ? o.clientWidth + c < o.scrollWidth
            : void 0
        }
        function a(t, l) {
          var e = o.getComputedStyle(t, null)['overflow' + l]
          return 'auto' === e || 'scroll' === e
        }
        function d(t) {
          var l,
            e,
            i,
            c,
            n = (s() - t.startTime) / r
          ;(c = n = n > 1 ? 1 : n),
            (l = 0.5 * (1 - Math.cos(Math.PI * c))),
            (e = t.startX + (t.x - t.startX) * l),
            (i = t.startY + (t.y - t.startY) * l),
            t.method.call(t.scrollable, e, i),
            (e === t.x && i === t.y) || o.requestAnimationFrame(d.bind(o, t))
        }
        function h(l, e, r) {
          var c,
            f,
            p,
            a,
            h = s()
          l === t.body
            ? ((c = o),
              (f = o.scrollX || o.pageXOffset),
              (p = o.scrollY || o.pageYOffset),
              (a = i.scroll))
            : ((c = l), (f = l.scrollLeft), (p = l.scrollTop), (a = n)),
            d({
              scrollable: c,
              method: a,
              startTime: h,
              startX: f,
              startY: p,
              x: e,
              y: r,
            })
        }
      }
      'object' == typeof exports && 'undefined' != typeof module
        ? (module.exports = {
            polyfill: o,
          })
        : o()
    })()

    ;(function () {
      /* ========= sidebar toggle ======== */
      const sidebarNavWrapper = document.querySelector('.sidebar-nav-wrapper')
      const mainWrapper = document.querySelector('.main-wrapper')
      const menuToggleButton = document.querySelector('#menu-toggle')
      const menuToggleButtonIcon = document.querySelector('#menu-toggle i')
      const overlay = document.querySelector('.overlay')

      menuToggleButton.addEventListener('click', () => {
        sidebarNavWrapper.classList.toggle('active')
        overlay.classList.add('active')
        mainWrapper.classList.toggle('active')

        if (document.body.clientWidth > 1200) {
          if (menuToggleButtonIcon.classList.contains('lni-chevron-left')) {
            menuToggleButtonIcon.classList.remove('lni-chevron-left')
            menuToggleButtonIcon.classList.add('lni-menu')
          } else {
            menuToggleButtonIcon.classList.remove('lni-menu')
            menuToggleButtonIcon.classList.add('lni-chevron-left')
          }
        } else {
          if (menuToggleButtonIcon.classList.contains('lni-chevron-left')) {
            menuToggleButtonIcon.classList.remove('lni-chevron-left')
            menuToggleButtonIcon.classList.add('lni-menu')
          }
        }
      })
      overlay.addEventListener('click', () => {
        sidebarNavWrapper.classList.remove('active')
        overlay.classList.remove('active')
        mainWrapper.classList.remove('active')
      })
    })()

    //========= Road Map
    tns({
      container: '.road-map-slider',
      items: 1,
      slideBy: 'page',
      autoplay: false,
      mouseDrag: true,
      gutter: 0,
      nav: true,
      controls: false,
      responsive: {
        0: {
          items: 2,
        },
        540: {
          items: 3,
        },
        768: {
          items: 4,
        },
        992: {
          items: 4,
        },
        1170: {
          items: 6,
        },
      },
    })

    //========= testimonial
    tns({
      container: '.testimonial-slider',
      items: 3,
      slideBy: 'page',
      autoplay: false,
      mouseDrag: true,
      gutter: 0,
      nav: true,
      controls: false,
      responsive: {
        0: {
          items: 1,
        },
        540: {
          items: 1,
        },
        768: {
          items: 2,
        },
        992: {
          items: 2,
        },
        1170: {
          items: 3,
        },
      },
    })

    //====== counter up
    var cu = new counterUp({
      start: 0,
      duration: 2000,
      intvalues: true,
      interval: 100,
      append: ' ',
    })
    cu.start()

    //========= glightbox
    GLightbox({
      href: 'https://www.youtube.com/watch?v=r44RKWyfcFw&fbclid=IwAR21beSJORalzmzokxDRcGfkZA1AtRTE__l5N4r09HcGS5Y6vOluyouM9EM',
      type: 'video',
      source: 'youtube', //vimeo, youtube or local
      width: 900,
      autoplayVideos: true,
    })

    // ======== jvectormap activation
    var markers = [
      { name: 'Egypt', coords: [26.8206, 30.8025] },
      { name: 'Russia', coords: [61.524, 105.3188] },
      { name: 'Canada', coords: [56.1304, -106.3468] },
      { name: 'Greenland', coords: [71.7069, -42.6043] },
      { name: 'Brazil', coords: [-14.235, -51.9253] },
    ]

    var jvm = new jsVectorMap({
      map: 'world_merc',
      selector: '#map',
      zoomButtons: true,

      regionStyle: {
        initial: {
          fill: '#d1d5db',
        },
      },

      labels: {
        markers: {
          render: (marker) => marker.name,
        },
      },

      markersSelectable: true,
      selectedMarkers: markers.map((marker, index) => {
        var name = marker.name

        if (name === 'Russia' || name === 'Brazil') {
          return index
        }
      }),
      markers: markers,
      markerStyle: {
        initial: { fill: '#4A6CF7' },
        selected: { fill: '#ff5050' },
      },
      markerLabelStyle: {
        initial: {
          fontWeight: 400,
          fontSize: 14,
        },
      },
    })
    // ====== calendar activation
    document.addEventListener('DOMContentLoaded', function () {
      var calendarMiniEl = document.getElementById('calendar-mini')
      var calendarMini = new FullCalendar.Calendar(calendarMiniEl, {
        initialView: 'dayGridMonth',
        headerToolbar: {
          end: 'today prev,next',
        },
      })
      calendarMini.render()
    })

    // =========== chart one start
    const ctx1 = document.getElementById('Chart1').getContext('2d')
    const chart1 = new Chart(ctx1, {
      // The type of chart we want to create
      type: 'line', // also try bar or other graph types

      // The data for our dataset
      data: {
        labels: [
          'Jan',
          'Fab',
          'Mar',
          'Apr',
          'May',
          'Jun',
          'Jul',
          'Aug',
          'Sep',
          'Oct',
          'Nov',
          'Dec',
        ],
        // Information about the dataset
        datasets: [
          {
            label: '',
            backgroundColor: 'transparent',
            borderColor: '#4A6CF7',
            data: [600, 800, 750, 880, 940, 880, 900, 770, 920, 890, 976, 1100],
            pointBackgroundColor: 'transparent',
            pointHoverBackgroundColor: '#4A6CF7',
            pointBorderColor: 'transparent',
            pointHoverBorderColor: '#fff',
            pointHoverBorderWidth: 5,
            pointBorderWidth: 5,
            pointRadius: 8,
            pointHoverRadius: 8,
          },
        ],
      },

      // Configuration options
      defaultFontFamily: 'Inter',
      options: {
        tooltips: {
          callbacks: {
            labelColor: function (tooltipItem, chart) {
              return {
                backgroundColor: '#ffffff',
              }
            },
          },
          intersect: false,
          backgroundColor: '#f9f9f9',
          titleFontFamily: 'Inter',
          titleFontColor: '#8F92A1',
          titleFontColor: '#8F92A1',
          titleFontSize: 12,
          bodyFontFamily: 'Inter',
          bodyFontColor: '#171717',
          bodyFontStyle: 'bold',
          bodyFontSize: 16,
          multiKeyBackground: 'transparent',
          displayColors: false,
          xPadding: 30,
          yPadding: 10,
          bodyAlign: 'center',
          titleAlign: 'center',
        },

        title: {
          display: false,
        },
        legend: {
          display: false,
        },

        scales: {
          yAxes: [
            {
              gridLines: {
                display: false,
                drawTicks: false,
                drawBorder: false,
              },
              ticks: {
                padding: 35,
                max: 1200,
                min: 500,
              },
            },
          ],
          xAxes: [
            {
              gridLines: {
                drawBorder: false,
                color: 'rgba(143, 146, 161, .1)',
                zeroLineColor: 'rgba(143, 146, 161, .1)',
              },
              ticks: {
                padding: 20,
              },
            },
          ],
        },
      },
    })

    // =========== chart one end

    // =========== chart two start
    const ctx2 = document.getElementById('Chart2').getContext('2d')
    const chart2 = new Chart(ctx2, {
      // The type of chart we want to create
      type: 'bar', // also try bar or other graph types
      // The data for our dataset
      data: {
        labels: [
          'Jan',
          'Fab',
          'Mar',
          'Apr',
          'May',
          'Jun',
          'Jul',
          'Aug',
          'Sep',
          'Oct',
          'Nov',
          'Dec',
        ],
        // Information about the dataset
        datasets: [
          {
            label: '',
            backgroundColor: '#4A6CF7',
            barThickness: 6,
            maxBarThickness: 8,
            data: [
              600, 700, 1000, 700, 650, 800, 690, 740, 720, 1120, 876, 900,
            ],
          },
        ],
      },
      // Configuration options
      options: {
        borderColor: '#F3F6F8',
        borderWidth: 15,
        backgroundColor: '#F3F6F8',
        tooltips: {
          callbacks: {
            labelColor: function (tooltipItem, chart) {
              return {
                backgroundColor: 'rgba(104, 110, 255, .0)',
              }
            },
          },
          backgroundColor: '#F3F6F8',
          titleFontColor: '#8F92A1',
          titleFontSize: 12,
          bodyFontColor: '#171717',
          bodyFontStyle: 'bold',
          bodyFontSize: 16,
          multiKeyBackground: 'transparent',
          displayColors: false,
          xPadding: 30,
          yPadding: 10,
          bodyAlign: 'center',
          titleAlign: 'center',
        },

        title: {
          display: false,
        },
        legend: {
          display: false,
        },

        scales: {
          yAxes: [
            {
              gridLines: {
                display: false,
                drawTicks: false,
                drawBorder: false,
              },
              ticks: {
                padding: 35,
                max: 1200,
                min: 0,
              },
            },
          ],
          xAxes: [
            {
              gridLines: {
                display: false,
                drawBorder: false,
                color: 'rgba(143, 146, 161, .1)',
                zeroLineColor: 'rgba(143, 146, 161, .1)',
              },
              ticks: {
                padding: 20,
              },
            },
          ],
        },
      },
    })
    // =========== chart two end

    // =========== chart three start
    const ctx3 = document.getElementById('Chart3').getContext('2d')
    const chart3 = new Chart(ctx3, {
      // The type of chart we want to create
      type: 'line', // also try bar or other graph types

      // The data for our dataset
      data: {
        labels: [
          'Jan',
          'Fab',
          'Mar',
          'Apr',
          'May',
          'Jun',
          'Jul',
          'Aug',
          'Sep',
          'Oct',
          'Nov',
          'Dec',
        ],
        // Information about the dataset
        datasets: [
          {
            label: 'Revenue',
            backgroundColor: 'transparent',
            borderColor: '#4a6cf7',
            data: [80, 120, 110, 100, 130, 150, 115, 145, 140, 130, 160, 210],
            pointBackgroundColor: 'transparent',
            pointHoverBackgroundColor: '#4a6cf7',
            pointBorderColor: 'transparent',
            pointHoverBorderColor: '#fff',
            pointHoverBorderWidth: 3,
            pointBorderWidth: 5,
            pointRadius: 5,
            pointHoverRadius: 8,
          },
          {
            label: 'Profit',
            backgroundColor: 'transparent',
            borderColor: '#9b51e0',
            data: [120, 160, 150, 140, 165, 210, 135, 155, 170, 140, 130, 200],
            pointBackgroundColor: 'transparent',
            pointHoverBackgroundColor: '#9b51e0',
            pointBorderColor: 'transparent',
            pointHoverBorderColor: '#fff',
            pointHoverBorderWidth: 3,
            pointBorderWidth: 5,
            pointRadius: 5,
            pointHoverRadius: 8,
          },
          {
            label: 'Order',
            backgroundColor: 'transparent',
            borderColor: '#f2994a',
            data: [180, 110, 140, 135, 100, 90, 145, 115, 100, 110, 115, 150],
            pointBackgroundColor: 'transparent',
            pointHoverBackgroundColor: '#f2994a',
            pointBorderColor: 'transparent',
            pointHoverBorderColor: '#fff',
            pointHoverBorderWidth: 3,
            pointBorderWidth: 5,
            pointRadius: 5,
            pointHoverRadius: 8,
          },
        ],
      },

      // Configuration options
      options: {
        tooltips: {
          intersect: false,
          backgroundColor: '#fbfbfb',
          titleFontColor: '#8F92A1',
          titleFontSize: 16,
          titleFontFamily: 'Inter',
          titleFontStyle: '400',
          bodyFontFamily: 'Inter',
          bodyFontColor: '#171717',
          bodyFontSize: 16,
          multiKeyBackground: 'transparent',
          displayColors: false,
          xPadding: 30,
          yPadding: 15,
          borderColor: 'rgba(143, 146, 161, .1)',
          borderWidth: 1,
          title: false,
        },

        title: {
          display: false,
        },

        layout: {
          padding: {
            top: 0,
          },
        },

        legend: false,

        scales: {
          yAxes: [
            {
              gridLines: {
                display: false,
                drawTicks: false,
                drawBorder: false,
              },
              ticks: {
                padding: 35,
                max: 300,
                min: 50,
              },
            },
          ],
          xAxes: [
            {
              gridLines: {
                drawBorder: false,
                color: 'rgba(143, 146, 161, .1)',
                zeroLineColor: 'rgba(143, 146, 161, .1)',
              },
              ticks: {
                padding: 20,
              },
            },
          ],
        },
      },
    })
    // =========== chart three end

    // ================== chart four start
    const ctx4 = document.getElementById('Chart4').getContext('2d')
    const chart4 = new Chart(ctx4, {
      // The type of chart we want to create
      type: 'bar', // also try bar or other graph types
      // The data for our dataset
      data: {
        labels: ['Jan', 'Fab', 'Mar', 'Apr', 'May', 'Jun'],
        // Information about the dataset
        datasets: [
          {
            label: '',
            backgroundColor: '#4A6CF7',
            barThickness: 'flex',
            maxBarThickness: 8,
            data: [600, 700, 1000, 700, 650, 800],
          },
          {
            label: '',
            backgroundColor: '#d50100',
            barThickness: 'flex',
            maxBarThickness: 8,
            data: [690, 740, 720, 1120, 876, 900],
          },
        ],
      },
      // Configuration options
      options: {
        borderColor: '#F3F6F8',
        borderWidth: 15,
        backgroundColor: '#F3F6F8',
        tooltips: {
          callbacks: {
            labelColor: function (tooltipItem, chart) {
              return {
                backgroundColor: 'rgba(104, 110, 255, .0)',
              }
            },
          },
          backgroundColor: '#F3F6F8',
          titleFontColor: '#8F92A1',
          titleFontSize: 12,
          bodyFontColor: '#171717',
          bodyFontStyle: 'bold',
          bodyFontSize: 16,
          multiKeyBackground: 'transparent',
          displayColors: false,
          xPadding: 30,
          yPadding: 10,
          bodyAlign: 'center',
          titleAlign: 'center',
        },

        title: {
          display: false,
        },
        legend: {
          display: false,
        },

        scales: {
          yAxes: [
            {
              gridLines: {
                display: false,
                drawTicks: false,
                drawBorder: false,
              },
              ticks: {
                padding: 35,
                max: 1200,
                min: 0,
              },
            },
          ],
          xAxes: [
            {
              gridLines: {
                display: false,
                drawBorder: false,
                color: 'rgba(143, 146, 161, .1)',
                zeroLineColor: 'rgba(143, 146, 161, .1)',
              },
              ticks: {
                padding: 20,
              },
            },
          ],
        },
      },
    })
    // =========== chart four end
  }

  render() {
    return (
      <div>
        <div className="preloader">
          <div className="preloader-inner">
            <div className="preloader-icon">
              <span />
              <span />
            </div>
          </div>
        </div>
        <section className="hero-area">
          <img
            className="hero-shape"
            src={HeroHeroShapeImg}
            alt="HeroHeroShapeImg"
          />
          <div className="container">
            <div className="row align-items-center">
              <div className="col-lg-5 col-md-12 col-12">
                <div className="hero-content">
                  <ReactWOW
                    animation="fadeInUp"
                    delay=".2s"
                    duration="undefined"
                  >
                    <h4 className>
                      Bienvenue dans notre outil de gestion de projets
                    </h4>
                  </ReactWOW>
                  <ReactWOW
                    animation="fadeInUp"
                    delay=".4s"
                    duration="undefined"
                  >
                    <h1 className>
                      Nous allons faire de grandes choses <br />
                      <span>
                        <img
                          className="text-shape"
                          src={HeroTextShapeImg}
                          alt="HeroTextShapeImg"
                        />
                        Ensemble.
                      </span>
                    </h1>
                  </ReactWOW>
                  <ReactWOW
                    animation="fadeInUp"
                    delay=".6s"
                    duration="undefined"
                  >
                    <p className>
                      Travailler seul ou en équipe, organiser votre temps et vos
                      tâches
                      <br /> le tout en temps réel.
                    </p>
                  </ReactWOW>
                  <ReactWOW
                    animation="fadeInUp"
                    delay=".8s"
                    duration="undefined"
                  >
                    <div className="button">
                      <Link className="btn " to="signup">
                        Je m'inscris
                      </Link>
                    </div>
                  </ReactWOW>
                  <ReactWOW
                    animation="fadeInUp"
                    delay=".8s"
                    duration="undefined"
                  >
                    <div className="button">
                      <Link className="btn " to="signin">
                        Je me connecte
                      </Link>
                    </div>
                  </ReactWOW>
                </div>
              </div>
              <div className="col-lg-7 col-12">
                <div className="hero-image">
                  <img
                    className="main-image"
                    src={LogoLogoWhiteImg}
                    alt="LogoLogoWhiteImg"
                  />
                </div>
              </div>
            </div>
          </div>
        </section>
        <div className="feature section">
          <div className="container">
            <section className="table-components">
              <div className="container-fluid">
                <div className="title-wrapper pt-30">
                  <div className="row align-items-center">
                    <div className="col-md-6">
                      <div className="title mb-30">
                        <h2>Project</h2>
                      </div>
                    </div>
                    <div className="col-md-6">
                      <div className="breadcrumb-wrapper mb-30">
                        <nav aria-label="breadcrumb">
                          <ol className="breadcrumb">
                            <li className="breadcrumb-item">
                              <Link to="dashboard">Dashboard</Link>
                            </li>
                            <li
                              className="breadcrumb-item active"
                              aria-current="page"
                            >
                              Project
                            </li>
                          </ol>
                        </nav>
                      </div>
                    </div>
                  </div>
                </div>
                <div className="row">
                  <div className="col-lg-12">
                    <div className="card-style mb-30">
                      <h6 className="mb-10">Project Table</h6>
                      <div className="table-wrapper table-responsive">
                        <table className="table">
                          <thead>
                            <tr>
                              <th>
                                <h6>#</h6>
                              </th>
                              <th>
                                <h6>Manager</h6>
                              </th>
                              <th>
                                <h6>Email</h6>
                              </th>
                              <th>
                                <h6>Project</h6>
                              </th>
                              <th>
                                <h6>Status</h6>
                              </th>
                              <th>
                                <h6>Action</h6>
                              </th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr>
                              <td>
                                <div className="employee-image">
                                  <img
                                    src={LeadLead_1Img}
                                    alt="LeadLead_1Img"
                                  />
                                </div>
                              </td>
                              <td className="min-width">
                                <p>Esther Howard</p>
                              </td>
                              <td className="min-width">
                                <p>
                                  <a href="#0">yourmail@gmail.com</a>
                                </p>
                              </td>
                              <td className="min-width">
                                <p>Admin Dashboard Design</p>
                              </td>
                              <td className="min-width">
                                <span className="status-btn active-btn">
                                  Active
                                </span>
                              </td>
                              <td>
                                <div className="action">
                                  <button className="text-danger">
                                    <i className="lni lni-trash-can" />
                                  </button>
                                </div>
                              </td>
                            </tr>
                            <tr>
                              <td>
                                <div className="employee-image">
                                  <img
                                    src={LeadLead_2Img}
                                    alt="LeadLead_2Img"
                                  />
                                </div>
                              </td>
                              <td className="min-width">
                                <p>D. Jonathon</p>
                              </td>
                              <td className="min-width">
                                <p>
                                  <a href="#0">yourmail@gmail.com</a>
                                </p>
                              </td>
                              <td className="min-width">
                                <p>React Dashboard</p>
                              </td>
                              <td className="min-width">
                                <span className="status-btn active-btn">
                                  Active
                                </span>
                              </td>
                              <td>
                                <div className="action">
                                  <button className="text-danger">
                                    <i className="lni lni-trash-can" />
                                  </button>
                                </div>
                              </td>
                            </tr>
                            <tr>
                              <td>
                                <div className="employee-image">
                                  <img
                                    src={LeadLead_3Img}
                                    alt="LeadLead_3Img"
                                  />
                                </div>
                              </td>
                              <td>
                                <p>John Doe</p>
                              </td>
                              <td>
                                <p>
                                  <a href="#0">yourmail@gmail.com</a>
                                </p>
                              </td>
                              <td>
                                <p>Bootstrap Template</p>
                              </td>
                              <td>
                                <span className="status-btn success-btn">
                                  Done
                                </span>
                              </td>
                              <td>
                                <div className="action">
                                  <button className="text-danger">
                                    <i className="lni lni-trash-can" />
                                  </button>
                                </div>
                              </td>
                            </tr>
                            <tr>
                              <td>
                                <div className="employee-image">
                                  <img
                                    src={LeadLead_4Img}
                                    alt="LeadLead_4Img"
                                  />
                                </div>
                              </td>
                              <td>
                                <p>Rayhan Jamil</p>
                              </td>
                              <td>
                                <p>
                                  <a href="#0">yourmail@gmail.com</a>
                                </p>
                              </td>
                              <td>
                                <p>Css Grid Template</p>
                              </td>
                              <td>
                                <span className="status-btn info-btn">
                                  Pending
                                </span>
                              </td>
                              <td>
                                <div className="action">
                                  <button className="text-danger">
                                    <i className="lni lni-trash-can" />
                                  </button>
                                </div>
                              </td>
                            </tr>
                            <tr>
                              <td>
                                <div className="employee-image">
                                  <img
                                    src={LeadLead_5Img}
                                    alt="LeadLead_5Img"
                                  />
                                </div>
                              </td>
                              <td>
                                <p>Esther Howard</p>
                              </td>
                              <td>
                                <p>
                                  <a href="#0">yourmail@gmail.com</a>
                                </p>
                              </td>
                              <td>
                                <p>Admin Dashboard Design</p>
                              </td>
                              <td>
                                <span className="status-btn close-btn">
                                  Close
                                </span>
                              </td>
                              <td>
                                <div className="action">
                                  <button className="text-danger">
                                    <i className="lni lni-trash-can" />
                                  </button>
                                </div>
                              </td>
                            </tr>
                            <tr>
                              <td>
                                <div className="employee-image">
                                  <img
                                    src={LeadLead_6Img}
                                    alt="LeadLead_6Img"
                                  />
                                </div>
                              </td>
                              <td>
                                <p>Anee Doe</p>
                              </td>
                              <td>
                                <p>
                                  <a href="#0">yourmail@gmail.com</a>
                                </p>
                              </td>
                              <td>
                                <p>Space Template Update</p>
                              </td>
                              <td>
                                <span className="status-btn active-btn">
                                  Active
                                </span>
                              </td>
                              <td>
                                <div className="action">
                                  <button className="text-danger">
                                    <i className="lni lni-trash-can" />
                                  </button>
                                </div>
                              </td>
                            </tr>
                          </tbody>
                        </table>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </section>
            <section className="table-components">
              <div className="container-fluid">
                <div className="title-wrapper pt-30">
                  <div className="row align-items-center">
                    <div className="col-md-6">
                      <div className="title mb-30">
                        <h2>Human Ressources</h2>
                      </div>
                    </div>
                    <div className="col-md-6">
                      <div className="breadcrumb-wrapper mb-30">
                        <nav aria-label="breadcrumb">
                          <ol className="breadcrumb">
                            <li className="breadcrumb-item">
                              <Link to="dashboard">Dashboard</Link>
                            </li>
                            <li
                              className="breadcrumb-item active"
                              aria-current="page"
                            >
                              Human Ressources
                            </li>
                          </ol>
                        </nav>
                      </div>
                    </div>
                  </div>
                </div>
                <div className="row">
                  <div className="col-lg-12">
                    <div className="card-style mb-30">
                      <h6 className="mb-10">Human Ressources Table</h6>
                      <div className="table-wrapper table-responsive">
                        <div className="card-style mb-30">
                          <div className="table-wrapper table-responsive"></div>
                        </div>
                        <table className="table"></table>
                        <table className="table">
                          <thead>
                            <tr>
                              <th>
                                <h6>Lead</h6>
                              </th>
                              <th>
                                <h6>Email</h6>
                              </th>
                              <th>
                                <h6>Phone No</h6>
                              </th>
                              <th>
                                <h6>Company</h6>
                              </th>
                              <th>
                                <h6>Action</h6>
                              </th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr>
                              <td className="min-width">
                                <div className="lead">
                                  <div className="lead-image">
                                    <img
                                      src={LeadLead_1Img}
                                      alt="LeadLead_1Img"
                                    />
                                  </div>
                                  <div className="lead-text">
                                    <p>Courtney Henry</p>
                                  </div>
                                </div>
                              </td>
                              <td className="min-width">
                                <p>
                                  <a href="#0">yourmail@gmail.com</a>
                                </p>
                              </td>
                              <td className="min-width">
                                <p>(303)555 3343523</p>
                              </td>
                              <td className="min-width">
                                <p>UIdeck digital agency</p>
                              </td>
                              <td>
                                <div className="action">
                                  <button className="text-danger">
                                    <i className="lni lni-trash-can" />
                                  </button>
                                </div>
                              </td>
                            </tr>
                            <tr>
                              <td className="min-width">
                                <div className="lead">
                                  <div className="lead-image">
                                    <img
                                      src={LeadLead_2Img}
                                      alt="LeadLead_2Img"
                                    />
                                  </div>
                                  <div className="lead-text">
                                    <p>JOhn Doe</p>
                                  </div>
                                </div>
                              </td>
                              <td className="min-width">
                                <p>
                                  <a href="#0">yourmail@gmail.com</a>
                                </p>
                              </td>
                              <td className="min-width">
                                <p>(303)555 3343523</p>
                              </td>
                              <td className="min-width">
                                <p>Graygrids digital agency</p>
                              </td>
                              <td>
                                <div className="action">
                                  <button className="text-danger">
                                    <i className="lni lni-trash-can" />
                                  </button>
                                </div>
                              </td>
                            </tr>
                            <tr>
                              <td className="min-width">
                                <div className="lead">
                                  <div className="lead-image">
                                    <img
                                      src={LeadLead_3Img}
                                      alt="LeadLead_3Img"
                                    />
                                  </div>
                                  <div className="lead-text">
                                    <p>David Smith</p>
                                  </div>
                                </div>
                              </td>
                              <td className="min-width">
                                <p>
                                  <a href="#0">yourmail@gmail.com</a>
                                </p>
                              </td>
                              <td className="min-width">
                                <p>(303)555 3343523</p>
                              </td>
                              <td className="min-width">
                                <p>Abc agency</p>
                              </td>
                              <td>
                                <div className="action">
                                  <button className="text-danger">
                                    <i className="lni lni-trash-can" />
                                  </button>
                                </div>
                              </td>
                            </tr>
                            <tr>
                              <td className="min-width">
                                <div className="lead">
                                  <div className="lead-image">
                                    <img
                                      src={LeadLead_4Img}
                                      alt="LeadLead_4Img"
                                    />
                                  </div>
                                  <div className="lead-text">
                                    <p>Jonathon</p>
                                  </div>
                                </div>
                              </td>
                              <td className="min-width">
                                <p>
                                  <a href="#0">yourmail@gmail.com</a>
                                </p>
                              </td>
                              <td className="min-width">
                                <p>(303)555 3343523</p>
                              </td>
                              <td className="min-width">
                                <p>Creative IT Agency</p>
                              </td>
                              <td>
                                <div className="action">
                                  <button className="text-danger">
                                    <i className="lni lni-trash-can" />
                                  </button>
                                </div>
                              </td>
                            </tr>
                            <tr>
                              <td>
                                <div className="lead">
                                  <div className="lead-image">
                                    <img
                                      src={LeadLead_5Img}
                                      alt="LeadLead_5Img"
                                    />
                                  </div>
                                  <div className="lead-text">
                                    <p>Anna Lee</p>
                                  </div>
                                </div>
                              </td>
                              <td>
                                <p>
                                  <a href="#0">yourmail@gmail.com</a>
                                </p>
                              </td>
                              <td>
                                <p>(303)555 3343523</p>
                              </td>
                              <td>
                                <p>Halal It agency</p>
                              </td>
                              <td>
                                <div className="action">
                                  <button className="text-danger">
                                    <i className="lni lni-trash-can" />
                                  </button>
                                </div>
                              </td>
                            </tr>
                            <tr>
                              <td>
                                <div className="lead">
                                  <div className="lead-image">
                                    <img
                                      src={LeadLead_6Img}
                                      alt="LeadLead_6Img"
                                    />
                                  </div>
                                  <div className="lead-text">
                                    <p>Gray Simon</p>
                                  </div>
                                </div>
                              </td>
                              <td>
                                <p>
                                  <a href="#0">yourmail@gmail.com</a>
                                </p>
                              </td>
                              <td>
                                <p>(303)555 3343523</p>
                              </td>
                              <td>
                                <p>DesignCourse</p>
                              </td>
                              <td>
                                <div className="action">
                                  <button className="text-danger">
                                    <i className="lni lni-trash-can" />
                                  </button>
                                </div>
                              </td>
                            </tr>
                          </tbody>
                        </table>
                      </div>
                    </div>
                  </div>
                </div>
                <section className="faq section">
                  <div className="container">
                    <div className="row">
                      <div className="col-12">
                        <div className="section-title">
                          <ReactWOW
                            animation="zoomIn"
                            delay=".2s"
                            duration="undefined"
                          >
                            <h3 className>Faq</h3>
                          </ReactWOW>
                          <ReactWOW
                            animation="fadeInUp"
                            delay=".4s"
                            duration="undefined"
                          >
                            <h2 className>frequently asked questions</h2>
                          </ReactWOW>
                          <ReactWOW
                            animation="fadeInUp"
                            delay=".6s"
                            duration="undefined"
                          >
                            <p className>
                              There are many variations of passages of Lorem
                              Ipsum available, but the majority have suffered
                              alteration in some form.
                            </p>
                          </ReactWOW>
                        </div>
                      </div>
                    </div>
                    <div className="row">
                      <div className="col-lg-6 col-md-12 col-12">
                        <div className="accordion" id="accordionExample">
                          <div className="accordion-item">
                            <h2 className="accordion-header" id="heading1">
                              <button
                                className="accordion-button collapsed"
                                type="button"
                                data-bs-toggle="collapse"
                                data-bs-target="#collapse1"
                                aria-expanded="false"
                                aria-controls="collapse1"
                              >
                                <span className="title">
                                  How can I participate in the ICO Token sale?
                                </span>
                                <i className="lni lni-plus" />
                              </button>
                            </h2>
                            <div
                              id="collapse1"
                              className="accordion-collapse collapse"
                              aria-labelledby="heading1"
                              data-bs-parent="#accordionExample"
                            >
                              <div className="accordion-body">
                                <p>
                                  Lorem ipsum dolor sit amet, consectetur
                                  adipiscing elit. Aliquam consectetur sit amet
                                  ante nec vulputate. Nulla aliquam, justo
                                  auctor consequat tincidunt, arcu erat mattis
                                  lorem.
                                </p>
                                <p>
                                  Lorem ipsum dolor sit amet, consectetur
                                  adipiscing elit. Aliquam consectetur sit amet
                                  ante nec vulputate.
                                </p>
                              </div>
                            </div>
                          </div>
                          <div className="accordion-item">
                            <h2 className="accordion-header" id="heading2">
                              <button
                                className="accordion-button collapsed"
                                type="button"
                                data-bs-toggle="collapse"
                                data-bs-target="#collapse2"
                                aria-expanded="false"
                                aria-controls="collapse2"
                              >
                                <span className="title">
                                  What cryptocurrencies can I use to purchase?
                                </span>
                                <i className="lni lni-plus" />
                              </button>
                            </h2>
                            <div
                              id="collapse2"
                              className="accordion-collapse collapse"
                              aria-labelledby="heading2"
                              data-bs-parent="#accordionExample"
                            >
                              <div className="accordion-body">
                                <p>
                                  Anim pariatur cliche reprehenderit, enim
                                  eiusmod high life accusamus terry richardson
                                  ad squid. 3 wolf moon officia aute. non
                                  cupidatat skateboard dolor brunch. Foosd truck
                                  quinoa nesciunt laborum eiusmod. Brunch 3 wolf
                                  moon tempor, sunt alqua put a bird on it squid
                                  single-origin coffee nulla assumenda
                                  shoreditch et. Nihil anim ke ffiyeh helvetica,
                                  craft beer labore wes anderson cred nesciunt
                                  sapiente ea proident.
                                </p>
                              </div>
                            </div>
                          </div>
                          <div className="accordion-item">
                            <h2 className="accordion-header" id="heading3">
                              <button
                                className="accordion-button collapsed"
                                type="button"
                                data-bs-toggle="collapse"
                                data-bs-target="#collapse3"
                                aria-expanded="false"
                                aria-controls="collapse3"
                              >
                                <span className="title">
                                  Do I need an account to place an order?
                                </span>
                                <i className="lni lni-plus" />
                              </button>
                            </h2>
                            <div
                              id="collapse3"
                              className="accordion-collapse collapse"
                              aria-labelledby="heading3"
                              data-bs-parent="#accordionExample"
                            >
                              <div className="accordion-body">
                                <p>
                                  Lorem ipsum dolor sit amet, consectetur
                                  adipisicing elit. Voluptas expedita,
                                  repellendus est nemo cum quibusdam optio,
                                  voluptate hic a tempora facere, nihil non
                                  itaque alias similique quas quam odit
                                  consequatur.
                                </p>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div className="col-lg-6 col-md-12 col-12 xs-margin">
                        <div className="accordion" id="accordionExample2">
                          <div className="accordion-item">
                            <h2 className="accordion-header" id="heading11">
                              <button
                                className="accordion-button collapsed"
                                type="button"
                                data-bs-toggle="collapse"
                                data-bs-target="#collapse11"
                                aria-expanded="false"
                                aria-controls="collapse11"
                              >
                                <span className="title">
                                  How can i purchase bitcoin?
                                </span>
                                <i className="lni lni-plus" />
                              </button>
                            </h2>
                            <div
                              id="collapse11"
                              className="accordion-collapse collapse"
                              aria-labelledby="heading11"
                              data-bs-parent="#accordionExample2"
                            >
                              <div className="accordion-body">
                                <p>
                                  Lorem ipsum dolor sit amet, consectetur
                                  adipiscing elit. Aliquam consectetur sit amet
                                  ante nec vulputate. Nulla aliquam, justo
                                  auctor consequat tincidunt, arcu erat mattis
                                  lorem.
                                </p>
                                <p>
                                  Lorem ipsum dolor sit amet, consectetur
                                  adipiscing elit. Aliquam consectetur sit amet
                                  ante nec vulputate.
                                </p>
                              </div>
                            </div>
                          </div>
                          <div className="accordion-item">
                            <h2 className="accordion-header" id="heading22">
                              <button
                                className="accordion-button collapsed"
                                type="button"
                                data-bs-toggle="collapse"
                                data-bs-target="#collapse22"
                                aria-expanded="false"
                                aria-controls="collapse22"
                              >
                                <span className="title">
                                  What is ICO Crypto?
                                </span>
                                <i className="lni lni-plus" />
                              </button>
                            </h2>
                            <div
                              id="collapse22"
                              className="accordion-collapse collapse"
                              aria-labelledby="heading22"
                              data-bs-parent="#accordionExample2"
                            >
                              <div className="accordion-body">
                                <p>
                                  Anim pariatur cliche reprehenderit, enim
                                  eiusmod high life accusamus terry richardson
                                  ad squid. 3 wolf moon officia aute. non
                                  cupidatat skateboard dolor brunch. Foosd truck
                                  quinoa nesciunt laborum eiusmod. Brunch 3 wolf
                                  moon tempor, sunt alqua put a bird on it squid
                                  single-origin coffee nulla assumenda
                                  shoreditch et. Nihil anim ke ffiyeh helvetica,
                                  craft beer labore wes anderson cred nesciunt
                                  sapiente ea proident.
                                </p>
                              </div>
                            </div>
                          </div>
                          <div className="accordion-item">
                            <h2 className="accordion-header" id="heading33">
                              <button
                                className="accordion-button collapsed"
                                type="button"
                                data-bs-toggle="collapse"
                                data-bs-target="#collapse33"
                                aria-expanded="false"
                                aria-controls="collapse33"
                              >
                                <span className="title">
                                  How do I benefit from the ICO Token?
                                </span>
                                <i className="lni lni-plus" />
                              </button>
                            </h2>
                            <div
                              id="collapse33"
                              className="accordion-collapse collapse"
                              aria-labelledby="heading33"
                              data-bs-parent="#accordionExample2"
                            >
                              <div className="accordion-body">
                                <p>
                                  Lorem ipsum dolor sit amet, consectetur
                                  adipisicing elit. Voluptas expedita,
                                  repellendus est nemo cum quibusdam optio,
                                  voluptate hic a tempora facere, nihil non
                                  itaque alias similique quas quam odit
                                  consequatur.
                                </p>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </section>
                <a href="#" className="scroll-top">
                  <i className="lni lni-chevron-up" />
                </a>
              </div>
            </section>
          </div>
        </div>
      </div>
    )
  }
}
